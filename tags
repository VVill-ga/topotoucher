!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/deck/Classes/Graphics/TopoToucher/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
A	glm/gtx/simd_vec4.hpp	/^		A = 3,$/;"	e	enum:glm::comp
ANGFACT	main.cpp	/^const float ANGFACT = 1.f;$/;"	v	typeref:typename:const float
APIENTRY	glew.h	/^#    define APIENTRY /;"	d
APIENTRY	glew.h	/^#    define APIENTRY$/;"	d
APIENTRY	glew.h	/^#define APIENTRY$/;"	d
AXES_WIDTH	main.cpp	/^const GLfloat AXES_WIDTH   = 3.;$/;"	v	typeref:typename:const GLfloat
ActiveButton	main.cpp	/^int		ActiveButton;			\/\/ current button that is down$/;"	v	typeref:typename:int
AddTimeValue	keytime.cpp	/^Keytimes::AddTimeValue( float _time, float _value )$/;"	f	class:Keytimes	typeref:typename:void
Animate	main.cpp	/^Animate( )$/;"	f	typeref:typename:void
Array3	main.cpp	/^Array3( float a, float b, float c )$/;"	f	typeref:typename:float *
AttributeLocs	glslprogram.h	/^	std::map<char *, int>	AttributeLocs;$/;"	m	class:GLSLProgram	typeref:typename:std::map<char *,int>
Axes	main.cpp	/^Axes( float length )$/;"	f	typeref:typename:void
AxesList	main.cpp	/^GLuint	AxesList;				\/\/ list to hold the axes$/;"	v	typeref:typename:GLuint
AxesOn	main.cpp	/^int		AxesOn;					\/\/ != 0 means to draw the axes$/;"	v	typeref:typename:int
B	glm/gtx/simd_vec4.hpp	/^		B = 2,$/;"	e	enum:glm::comp
BACKCOLOR	main.cpp	/^const GLfloat BACKCOLOR[ ] = { 0., 0., 0., 1. };$/;"	v	typeref:typename:const GLfloat[]
BASEFRAC	main.cpp	/^const float BASEFRAC = 1.10f;$/;"	v	typeref:typename:const float
BI_RGB	bmptotexture.cpp	/^#define BI_RGB	/;"	d	file:
BI_RLE4	bmptotexture.cpp	/^#define BI_RLE4	/;"	d	file:
BI_RLE8	bmptotexture.cpp	/^#define BI_RLE8	/;"	d	file:
BLUE	main.cpp	/^	BLUE,$/;"	e	enum:Colors	file:
BMP_MAGIC_NUMBER	bmptotexture.cpp	/^#define BMP_MAGIC_NUMBER	/;"	d	file:
BmpToTexture	bmptotexture.cpp	/^BmpToTexture( char *filename, int *width, int *height )$/;"	f	typeref:typename:unsigned char *
ButtonVals	main.cpp	/^enum ButtonVals$/;"	g	file:
CALLBACK	glew.h	/^#    define CALLBACK /;"	d
CALLBACK	glew.h	/^#    define CALLBACK$/;"	d
CHECK_GL_ERRORS	glslprogram.cpp	/^#define CHECK_GL_ERRORS$/;"	d	file:
CYAN	main.cpp	/^	CYAN,$/;"	e	enum:Colors	file:
CanDoFragmentShaders	glslprogram.h	/^	bool	CanDoFragmentShaders;$/;"	m	class:GLSLProgram	typeref:typename:bool
CanDoVertexShaders	glslprogram.h	/^	bool	CanDoVertexShaders;$/;"	m	class:GLSLProgram	typeref:typename:bool
CheckGlErrors	glslprogram.cpp	/^CheckGlErrors( const char* caller )$/;"	f	typeref:typename:void
ColorNames	main.cpp	/^char * ColorNames[ ] =$/;"	v	typeref:typename:char * []
Colors	main.cpp	/^const GLfloat Colors[ ][3] = $/;"	v	typeref:typename:const GLfloat[][3]
Colors	main.cpp	/^enum Colors$/;"	g	file:
Create	glslprogram.cpp	/^GLSLProgram::Create( char *file0, char *file1, char *file2, char *file3, char * file4, char *fil/;"	f	class:GLSLProgram	typeref:typename:bool
CreateHelper	glslprogram.cpp	/^GLSLProgram::CreateHelper( char *file0, ... )$/;"	f	class:GLSLProgram	typeref:typename:bool
Cross	main.cpp	/^Cross(float v1[3], float v2[3], float vout[3])$/;"	f	typeref:typename:void
CurrentProgram	glslprogram.cpp	/^int GLSLProgram::CurrentProgram = 0;$/;"	m	class:GLSLProgram	typeref:typename:int
CurrentProgram	glslprogram.h	/^	static int		CurrentProgram;$/;"	m	class:GLSLProgram	typeref:typename:int
Data	glm/gtx/simd_mat4.hpp	/^		fvec4SIMD Data[4];$/;"	v	namespace:glm::detail	typeref:typename:fvec4SIMD[4]
Data	glm/gtx/simd_quat.hpp	/^			__m128 Data;$/;"	m	union:glm::detail::__anondb998e73010a	typeref:typename:__m128
Data	glm/gtx/simd_quat.hpp	/^		__m128 Data;$/;"	v	namespace:glm::detail	typeref:typename:__m128
Data	glm/gtx/simd_vec4.hpp	/^			__m128 Data;$/;"	m	union:glm::detail::__anona9631bca010a	typeref:typename:__m128
Data	glm/gtx/simd_vec4.hpp	/^		__m128 Data;$/;"	v	namespace:glm::detail	typeref:typename:__m128
DebugOn	main.cpp	/^int		DebugOn;				\/\/ != 0 means to print debugging info$/;"	v	typeref:typename:int
DisableVertexAttribArray	glslprogram.cpp	/^GLSLProgram::DisableVertexAttribArray( const char *name )$/;"	f	class:GLSLProgram	typeref:typename:void
Display	main.cpp	/^Display( )$/;"	f	typeref:typename:void
DoAxesMenu	main.cpp	/^DoAxesMenu( int id )$/;"	f	typeref:typename:void
DoColorMenu	main.cpp	/^DoColorMenu( int id )$/;"	f	typeref:typename:void
DoDebugMenu	main.cpp	/^DoDebugMenu( int id )$/;"	f	typeref:typename:void
DoMainMenu	main.cpp	/^DoMainMenu( int id )$/;"	f	typeref:typename:void
DoProjectMenu	main.cpp	/^DoProjectMenu( int id )$/;"	f	typeref:typename:void
DoRasterString	main.cpp	/^DoRasterString( float x, float y, float z, char *s )$/;"	f	typeref:typename:void
DoStrokeString	main.cpp	/^DoStrokeString( float x, float y, float z, float ht, char *s )$/;"	f	typeref:typename:void
Dot	main.cpp	/^Dot(float v1[3], float v2[3])$/;"	f	typeref:typename:float
ESCAPE	main.cpp	/^const int ESCAPE = 0x1b;$/;"	v	typeref:typename:const int
ElapsedSeconds	main.cpp	/^ElapsedSeconds( )$/;"	f	typeref:typename:float
EnableVertexAttribArray	glslprogram.cpp	/^GLSLProgram::EnableVertexAttribArray( const char *name )$/;"	f	class:GLSLProgram	typeref:typename:void
FGUNUSED	freeglut_std.h	/^#define FGUNUSED /;"	d
FGUNUSED	freeglut_std.h	/^#define FGUNUSED$/;"	d
FREEGLUT	freeglut_std.h	/^#define  FREEGLUT /;"	d
FREEGLUT_LIB_PRAGMAS	freeglut_std.h	/^#           define FREEGLUT_LIB_PRAGMAS /;"	d
FREEGLUT_VERSION_2_0	freeglut_std.h	/^#define  FREEGLUT_VERSION_2_0 /;"	d
F_2_PI	main.cpp	/^#define F_2_PI	/;"	d	file:
F_PI	main.cpp	/^#define F_PI	/;"	d	file:
F_PI_2	main.cpp	/^#define F_PI_2	/;"	d	file:
Ffile	glslprogram.h	/^	char *			Ffile;$/;"	m	class:GLSLProgram	typeref:typename:char *
FileHeader	bmptotexture.cpp	/^} FileHeader;$/;"	v	typeref:struct:bmfh
Freeze	main.cpp	/^bool	Freeze;$/;"	v	typeref:typename:bool
Fshader	glslprogram.h	/^	unsigned int		Fshader;$/;"	m	class:GLSLProgram	typeref:typename:unsigned int
G	glm/gtx/simd_vec4.hpp	/^		G = 1,$/;"	e	enum:glm::comp
GLAPI	glew.h	/^#    define GLAPI /;"	d
GLAPI	glew.h	/^#define GLAPI /;"	d
GLAPIENTRY	glew.h	/^#      define GLAPIENTRY /;"	d
GLAPIENTRY	glew.h	/^#    define GLAPIENTRY /;"	d
GLAPIENTRY	glew.h	/^#define GLAPIENTRY$/;"	d
GLDEBUGPROC	glew.h	/^typedef void (GLAPIENTRY *GLDEBUGPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	glew.h	/^typedef void (GLAPIENTRY *GLDEBUGPROCAMD)(GLuint id, GLenum category, GLenum severity, GLsizei l/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	glew.h	/^typedef void (GLAPIENTRY *GLDEBUGPROCARB)(GLenum source, GLenum type, GLuint id, GLenum severity/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLEWAPI	glew.h	/^#    define GLEWAPI /;"	d
GLEWAPI	glew.h	/^#   define GLEWAPI /;"	d
GLEWAPI	glew.h	/^#  define GLEWAPI /;"	d
GLEWAPIENTRY	glew.h	/^#      define GLEWAPIENTRY /;"	d
GLEWAPIENTRY	glew.h	/^#    define GLEWAPIENTRY /;"	d
GLEWAPIENTRY	glew.h	/^#define GLEWAPIENTRY$/;"	d
GLEWContext	glew.h	/^typedef struct GLEWContextStruct GLEWContext;$/;"	t	struct:GLEWContextStruct	typeref:struct:GLEWContextStruct
GLEWContextStruct	glew.h	/^struct GLEWContextStruct$/;"	s
GLEWContextStruct	glew.h	/^struct GLEWContextStruct$/;"	s	struct:GLEWContextStruct
GLEW_3DFX_multisample	glew.h	/^#define GLEW_3DFX_multisample GLEW_GET_VAR(__GLEW_3DFX_multisample)/;"	d
GLEW_3DFX_tbuffer	glew.h	/^#define GLEW_3DFX_tbuffer GLEW_GET_VAR(__GLEW_3DFX_tbuffer)/;"	d
GLEW_3DFX_texture_compression_FXT1	glew.h	/^#define GLEW_3DFX_texture_compression_FXT1 GLEW_GET_VAR(__GLEW_3DFX_texture_compression_FXT1)/;"	d
GLEW_AMD_blend_minmax_factor	glew.h	/^#define GLEW_AMD_blend_minmax_factor GLEW_GET_VAR(__GLEW_AMD_blend_minmax_factor)/;"	d
GLEW_AMD_conservative_depth	glew.h	/^#define GLEW_AMD_conservative_depth GLEW_GET_VAR(__GLEW_AMD_conservative_depth)/;"	d
GLEW_AMD_debug_output	glew.h	/^#define GLEW_AMD_debug_output GLEW_GET_VAR(__GLEW_AMD_debug_output)/;"	d
GLEW_AMD_depth_clamp_separate	glew.h	/^#define GLEW_AMD_depth_clamp_separate GLEW_GET_VAR(__GLEW_AMD_depth_clamp_separate)/;"	d
GLEW_AMD_draw_buffers_blend	glew.h	/^#define GLEW_AMD_draw_buffers_blend GLEW_GET_VAR(__GLEW_AMD_draw_buffers_blend)/;"	d
GLEW_AMD_gcn_shader	glew.h	/^#define GLEW_AMD_gcn_shader GLEW_GET_VAR(__GLEW_AMD_gcn_shader)/;"	d
GLEW_AMD_gpu_shader_int64	glew.h	/^#define GLEW_AMD_gpu_shader_int64 GLEW_GET_VAR(__GLEW_AMD_gpu_shader_int64)/;"	d
GLEW_AMD_interleaved_elements	glew.h	/^#define GLEW_AMD_interleaved_elements GLEW_GET_VAR(__GLEW_AMD_interleaved_elements)/;"	d
GLEW_AMD_multi_draw_indirect	glew.h	/^#define GLEW_AMD_multi_draw_indirect GLEW_GET_VAR(__GLEW_AMD_multi_draw_indirect)/;"	d
GLEW_AMD_name_gen_delete	glew.h	/^#define GLEW_AMD_name_gen_delete GLEW_GET_VAR(__GLEW_AMD_name_gen_delete)/;"	d
GLEW_AMD_occlusion_query_event	glew.h	/^#define GLEW_AMD_occlusion_query_event GLEW_GET_VAR(__GLEW_AMD_occlusion_query_event)/;"	d
GLEW_AMD_performance_monitor	glew.h	/^#define GLEW_AMD_performance_monitor GLEW_GET_VAR(__GLEW_AMD_performance_monitor)/;"	d
GLEW_AMD_pinned_memory	glew.h	/^#define GLEW_AMD_pinned_memory GLEW_GET_VAR(__GLEW_AMD_pinned_memory)/;"	d
GLEW_AMD_query_buffer_object	glew.h	/^#define GLEW_AMD_query_buffer_object GLEW_GET_VAR(__GLEW_AMD_query_buffer_object)/;"	d
GLEW_AMD_sample_positions	glew.h	/^#define GLEW_AMD_sample_positions GLEW_GET_VAR(__GLEW_AMD_sample_positions)/;"	d
GLEW_AMD_seamless_cubemap_per_texture	glew.h	/^#define GLEW_AMD_seamless_cubemap_per_texture GLEW_GET_VAR(__GLEW_AMD_seamless_cubemap_per_textu/;"	d
GLEW_AMD_shader_atomic_counter_ops	glew.h	/^#define GLEW_AMD_shader_atomic_counter_ops GLEW_GET_VAR(__GLEW_AMD_shader_atomic_counter_ops)/;"	d
GLEW_AMD_shader_stencil_export	glew.h	/^#define GLEW_AMD_shader_stencil_export GLEW_GET_VAR(__GLEW_AMD_shader_stencil_export)/;"	d
GLEW_AMD_shader_stencil_value_export	glew.h	/^#define GLEW_AMD_shader_stencil_value_export GLEW_GET_VAR(__GLEW_AMD_shader_stencil_value_export/;"	d
GLEW_AMD_shader_trinary_minmax	glew.h	/^#define GLEW_AMD_shader_trinary_minmax GLEW_GET_VAR(__GLEW_AMD_shader_trinary_minmax)/;"	d
GLEW_AMD_sparse_texture	glew.h	/^#define GLEW_AMD_sparse_texture GLEW_GET_VAR(__GLEW_AMD_sparse_texture)/;"	d
GLEW_AMD_stencil_operation_extended	glew.h	/^#define GLEW_AMD_stencil_operation_extended GLEW_GET_VAR(__GLEW_AMD_stencil_operation_extended)/;"	d
GLEW_AMD_texture_texture4	glew.h	/^#define GLEW_AMD_texture_texture4 GLEW_GET_VAR(__GLEW_AMD_texture_texture4)/;"	d
GLEW_AMD_transform_feedback3_lines_triangles	glew.h	/^#define GLEW_AMD_transform_feedback3_lines_triangles GLEW_GET_VAR(__GLEW_AMD_transform_feedback3/;"	d
GLEW_AMD_transform_feedback4	glew.h	/^#define GLEW_AMD_transform_feedback4 GLEW_GET_VAR(__GLEW_AMD_transform_feedback4)/;"	d
GLEW_AMD_vertex_shader_layer	glew.h	/^#define GLEW_AMD_vertex_shader_layer GLEW_GET_VAR(__GLEW_AMD_vertex_shader_layer)/;"	d
GLEW_AMD_vertex_shader_tessellator	glew.h	/^#define GLEW_AMD_vertex_shader_tessellator GLEW_GET_VAR(__GLEW_AMD_vertex_shader_tessellator)/;"	d
GLEW_AMD_vertex_shader_viewport_index	glew.h	/^#define GLEW_AMD_vertex_shader_viewport_index GLEW_GET_VAR(__GLEW_AMD_vertex_shader_viewport_ind/;"	d
GLEW_ANGLE_depth_texture	glew.h	/^#define GLEW_ANGLE_depth_texture GLEW_GET_VAR(__GLEW_ANGLE_depth_texture)/;"	d
GLEW_ANGLE_framebuffer_blit	glew.h	/^#define GLEW_ANGLE_framebuffer_blit GLEW_GET_VAR(__GLEW_ANGLE_framebuffer_blit)/;"	d
GLEW_ANGLE_framebuffer_multisample	glew.h	/^#define GLEW_ANGLE_framebuffer_multisample GLEW_GET_VAR(__GLEW_ANGLE_framebuffer_multisample)/;"	d
GLEW_ANGLE_instanced_arrays	glew.h	/^#define GLEW_ANGLE_instanced_arrays GLEW_GET_VAR(__GLEW_ANGLE_instanced_arrays)/;"	d
GLEW_ANGLE_pack_reverse_row_order	glew.h	/^#define GLEW_ANGLE_pack_reverse_row_order GLEW_GET_VAR(__GLEW_ANGLE_pack_reverse_row_order)/;"	d
GLEW_ANGLE_program_binary	glew.h	/^#define GLEW_ANGLE_program_binary GLEW_GET_VAR(__GLEW_ANGLE_program_binary)/;"	d
GLEW_ANGLE_texture_compression_dxt1	glew.h	/^#define GLEW_ANGLE_texture_compression_dxt1 GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt1)/;"	d
GLEW_ANGLE_texture_compression_dxt3	glew.h	/^#define GLEW_ANGLE_texture_compression_dxt3 GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt3)/;"	d
GLEW_ANGLE_texture_compression_dxt5	glew.h	/^#define GLEW_ANGLE_texture_compression_dxt5 GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt5)/;"	d
GLEW_ANGLE_texture_usage	glew.h	/^#define GLEW_ANGLE_texture_usage GLEW_GET_VAR(__GLEW_ANGLE_texture_usage)/;"	d
GLEW_ANGLE_timer_query	glew.h	/^#define GLEW_ANGLE_timer_query GLEW_GET_VAR(__GLEW_ANGLE_timer_query)/;"	d
GLEW_ANGLE_translated_shader_source	glew.h	/^#define GLEW_ANGLE_translated_shader_source GLEW_GET_VAR(__GLEW_ANGLE_translated_shader_source)/;"	d
GLEW_APIENTRY_DEFINED	glew.h	/^#define GLEW_APIENTRY_DEFINED$/;"	d
GLEW_APPLE_aux_depth_stencil	glew.h	/^#define GLEW_APPLE_aux_depth_stencil GLEW_GET_VAR(__GLEW_APPLE_aux_depth_stencil)/;"	d
GLEW_APPLE_client_storage	glew.h	/^#define GLEW_APPLE_client_storage GLEW_GET_VAR(__GLEW_APPLE_client_storage)/;"	d
GLEW_APPLE_element_array	glew.h	/^#define GLEW_APPLE_element_array GLEW_GET_VAR(__GLEW_APPLE_element_array)/;"	d
GLEW_APPLE_fence	glew.h	/^#define GLEW_APPLE_fence GLEW_GET_VAR(__GLEW_APPLE_fence)/;"	d
GLEW_APPLE_float_pixels	glew.h	/^#define GLEW_APPLE_float_pixels GLEW_GET_VAR(__GLEW_APPLE_float_pixels)/;"	d
GLEW_APPLE_flush_buffer_range	glew.h	/^#define GLEW_APPLE_flush_buffer_range GLEW_GET_VAR(__GLEW_APPLE_flush_buffer_range)/;"	d
GLEW_APPLE_object_purgeable	glew.h	/^#define GLEW_APPLE_object_purgeable GLEW_GET_VAR(__GLEW_APPLE_object_purgeable)/;"	d
GLEW_APPLE_pixel_buffer	glew.h	/^#define GLEW_APPLE_pixel_buffer GLEW_GET_VAR(__GLEW_APPLE_pixel_buffer)/;"	d
GLEW_APPLE_rgb_422	glew.h	/^#define GLEW_APPLE_rgb_422 GLEW_GET_VAR(__GLEW_APPLE_rgb_422)/;"	d
GLEW_APPLE_row_bytes	glew.h	/^#define GLEW_APPLE_row_bytes GLEW_GET_VAR(__GLEW_APPLE_row_bytes)/;"	d
GLEW_APPLE_specular_vector	glew.h	/^#define GLEW_APPLE_specular_vector GLEW_GET_VAR(__GLEW_APPLE_specular_vector)/;"	d
GLEW_APPLE_texture_range	glew.h	/^#define GLEW_APPLE_texture_range GLEW_GET_VAR(__GLEW_APPLE_texture_range)/;"	d
GLEW_APPLE_transform_hint	glew.h	/^#define GLEW_APPLE_transform_hint GLEW_GET_VAR(__GLEW_APPLE_transform_hint)/;"	d
GLEW_APPLE_vertex_array_object	glew.h	/^#define GLEW_APPLE_vertex_array_object GLEW_GET_VAR(__GLEW_APPLE_vertex_array_object)/;"	d
GLEW_APPLE_vertex_array_range	glew.h	/^#define GLEW_APPLE_vertex_array_range GLEW_GET_VAR(__GLEW_APPLE_vertex_array_range)/;"	d
GLEW_APPLE_vertex_program_evaluators	glew.h	/^#define GLEW_APPLE_vertex_program_evaluators GLEW_GET_VAR(__GLEW_APPLE_vertex_program_evaluators/;"	d
GLEW_APPLE_ycbcr_422	glew.h	/^#define GLEW_APPLE_ycbcr_422 GLEW_GET_VAR(__GLEW_APPLE_ycbcr_422)/;"	d
GLEW_ARB_ES2_compatibility	glew.h	/^#define GLEW_ARB_ES2_compatibility GLEW_GET_VAR(__GLEW_ARB_ES2_compatibility)/;"	d
GLEW_ARB_ES3_1_compatibility	glew.h	/^#define GLEW_ARB_ES3_1_compatibility GLEW_GET_VAR(__GLEW_ARB_ES3_1_compatibility)/;"	d
GLEW_ARB_ES3_compatibility	glew.h	/^#define GLEW_ARB_ES3_compatibility GLEW_GET_VAR(__GLEW_ARB_ES3_compatibility)/;"	d
GLEW_ARB_arrays_of_arrays	glew.h	/^#define GLEW_ARB_arrays_of_arrays GLEW_GET_VAR(__GLEW_ARB_arrays_of_arrays)/;"	d
GLEW_ARB_base_instance	glew.h	/^#define GLEW_ARB_base_instance GLEW_GET_VAR(__GLEW_ARB_base_instance)/;"	d
GLEW_ARB_bindless_texture	glew.h	/^#define GLEW_ARB_bindless_texture GLEW_GET_VAR(__GLEW_ARB_bindless_texture)/;"	d
GLEW_ARB_blend_func_extended	glew.h	/^#define GLEW_ARB_blend_func_extended GLEW_GET_VAR(__GLEW_ARB_blend_func_extended)/;"	d
GLEW_ARB_buffer_storage	glew.h	/^#define GLEW_ARB_buffer_storage GLEW_GET_VAR(__GLEW_ARB_buffer_storage)/;"	d
GLEW_ARB_cl_event	glew.h	/^#define GLEW_ARB_cl_event GLEW_GET_VAR(__GLEW_ARB_cl_event)/;"	d
GLEW_ARB_clear_buffer_object	glew.h	/^#define GLEW_ARB_clear_buffer_object GLEW_GET_VAR(__GLEW_ARB_clear_buffer_object)/;"	d
GLEW_ARB_clear_texture	glew.h	/^#define GLEW_ARB_clear_texture GLEW_GET_VAR(__GLEW_ARB_clear_texture)/;"	d
GLEW_ARB_clip_control	glew.h	/^#define GLEW_ARB_clip_control GLEW_GET_VAR(__GLEW_ARB_clip_control)/;"	d
GLEW_ARB_color_buffer_float	glew.h	/^#define GLEW_ARB_color_buffer_float GLEW_GET_VAR(__GLEW_ARB_color_buffer_float)/;"	d
GLEW_ARB_compatibility	glew.h	/^#define GLEW_ARB_compatibility GLEW_GET_VAR(__GLEW_ARB_compatibility)/;"	d
GLEW_ARB_compressed_texture_pixel_storage	glew.h	/^#define GLEW_ARB_compressed_texture_pixel_storage GLEW_GET_VAR(__GLEW_ARB_compressed_texture_pix/;"	d
GLEW_ARB_compute_shader	glew.h	/^#define GLEW_ARB_compute_shader GLEW_GET_VAR(__GLEW_ARB_compute_shader)/;"	d
GLEW_ARB_compute_variable_group_size	glew.h	/^#define GLEW_ARB_compute_variable_group_size GLEW_GET_VAR(__GLEW_ARB_compute_variable_group_size/;"	d
GLEW_ARB_conditional_render_inverted	glew.h	/^#define GLEW_ARB_conditional_render_inverted GLEW_GET_VAR(__GLEW_ARB_conditional_render_inverted/;"	d
GLEW_ARB_conservative_depth	glew.h	/^#define GLEW_ARB_conservative_depth GLEW_GET_VAR(__GLEW_ARB_conservative_depth)/;"	d
GLEW_ARB_copy_buffer	glew.h	/^#define GLEW_ARB_copy_buffer GLEW_GET_VAR(__GLEW_ARB_copy_buffer)/;"	d
GLEW_ARB_copy_image	glew.h	/^#define GLEW_ARB_copy_image GLEW_GET_VAR(__GLEW_ARB_copy_image)/;"	d
GLEW_ARB_cull_distance	glew.h	/^#define GLEW_ARB_cull_distance GLEW_GET_VAR(__GLEW_ARB_cull_distance)/;"	d
GLEW_ARB_debug_output	glew.h	/^#define GLEW_ARB_debug_output GLEW_GET_VAR(__GLEW_ARB_debug_output)/;"	d
GLEW_ARB_depth_buffer_float	glew.h	/^#define GLEW_ARB_depth_buffer_float GLEW_GET_VAR(__GLEW_ARB_depth_buffer_float)/;"	d
GLEW_ARB_depth_clamp	glew.h	/^#define GLEW_ARB_depth_clamp GLEW_GET_VAR(__GLEW_ARB_depth_clamp)/;"	d
GLEW_ARB_depth_texture	glew.h	/^#define GLEW_ARB_depth_texture GLEW_GET_VAR(__GLEW_ARB_depth_texture)/;"	d
GLEW_ARB_derivative_control	glew.h	/^#define GLEW_ARB_derivative_control GLEW_GET_VAR(__GLEW_ARB_derivative_control)/;"	d
GLEW_ARB_direct_state_access	glew.h	/^#define GLEW_ARB_direct_state_access GLEW_GET_VAR(__GLEW_ARB_direct_state_access)/;"	d
GLEW_ARB_draw_buffers	glew.h	/^#define GLEW_ARB_draw_buffers GLEW_GET_VAR(__GLEW_ARB_draw_buffers)/;"	d
GLEW_ARB_draw_buffers_blend	glew.h	/^#define GLEW_ARB_draw_buffers_blend GLEW_GET_VAR(__GLEW_ARB_draw_buffers_blend)/;"	d
GLEW_ARB_draw_elements_base_vertex	glew.h	/^#define GLEW_ARB_draw_elements_base_vertex GLEW_GET_VAR(__GLEW_ARB_draw_elements_base_vertex)/;"	d
GLEW_ARB_draw_indirect	glew.h	/^#define GLEW_ARB_draw_indirect GLEW_GET_VAR(__GLEW_ARB_draw_indirect)/;"	d
GLEW_ARB_draw_instanced	glew.h	/^#define GLEW_ARB_draw_instanced GLEW_GET_VAR(__GLEW_ARB_draw_instanced)/;"	d
GLEW_ARB_enhanced_layouts	glew.h	/^#define GLEW_ARB_enhanced_layouts GLEW_GET_VAR(__GLEW_ARB_enhanced_layouts)/;"	d
GLEW_ARB_explicit_attrib_location	glew.h	/^#define GLEW_ARB_explicit_attrib_location GLEW_GET_VAR(__GLEW_ARB_explicit_attrib_location)/;"	d
GLEW_ARB_explicit_uniform_location	glew.h	/^#define GLEW_ARB_explicit_uniform_location GLEW_GET_VAR(__GLEW_ARB_explicit_uniform_location)/;"	d
GLEW_ARB_fragment_coord_conventions	glew.h	/^#define GLEW_ARB_fragment_coord_conventions GLEW_GET_VAR(__GLEW_ARB_fragment_coord_conventions)/;"	d
GLEW_ARB_fragment_layer_viewport	glew.h	/^#define GLEW_ARB_fragment_layer_viewport GLEW_GET_VAR(__GLEW_ARB_fragment_layer_viewport)/;"	d
GLEW_ARB_fragment_program	glew.h	/^#define GLEW_ARB_fragment_program GLEW_GET_VAR(__GLEW_ARB_fragment_program)/;"	d
GLEW_ARB_fragment_program_shadow	glew.h	/^#define GLEW_ARB_fragment_program_shadow GLEW_GET_VAR(__GLEW_ARB_fragment_program_shadow)/;"	d
GLEW_ARB_fragment_shader	glew.h	/^#define GLEW_ARB_fragment_shader GLEW_GET_VAR(__GLEW_ARB_fragment_shader)/;"	d
GLEW_ARB_framebuffer_no_attachments	glew.h	/^#define GLEW_ARB_framebuffer_no_attachments GLEW_GET_VAR(__GLEW_ARB_framebuffer_no_attachments)/;"	d
GLEW_ARB_framebuffer_object	glew.h	/^#define GLEW_ARB_framebuffer_object GLEW_GET_VAR(__GLEW_ARB_framebuffer_object)/;"	d
GLEW_ARB_framebuffer_sRGB	glew.h	/^#define GLEW_ARB_framebuffer_sRGB GLEW_GET_VAR(__GLEW_ARB_framebuffer_sRGB)/;"	d
GLEW_ARB_geometry_shader4	glew.h	/^#define GLEW_ARB_geometry_shader4 GLEW_GET_VAR(__GLEW_ARB_geometry_shader4)/;"	d
GLEW_ARB_get_program_binary	glew.h	/^#define GLEW_ARB_get_program_binary GLEW_GET_VAR(__GLEW_ARB_get_program_binary)/;"	d
GLEW_ARB_get_texture_sub_image	glew.h	/^#define GLEW_ARB_get_texture_sub_image GLEW_GET_VAR(__GLEW_ARB_get_texture_sub_image)/;"	d
GLEW_ARB_gpu_shader5	glew.h	/^#define GLEW_ARB_gpu_shader5 GLEW_GET_VAR(__GLEW_ARB_gpu_shader5)/;"	d
GLEW_ARB_gpu_shader_fp64	glew.h	/^#define GLEW_ARB_gpu_shader_fp64 GLEW_GET_VAR(__GLEW_ARB_gpu_shader_fp64)/;"	d
GLEW_ARB_half_float_pixel	glew.h	/^#define GLEW_ARB_half_float_pixel GLEW_GET_VAR(__GLEW_ARB_half_float_pixel)/;"	d
GLEW_ARB_half_float_vertex	glew.h	/^#define GLEW_ARB_half_float_vertex GLEW_GET_VAR(__GLEW_ARB_half_float_vertex)/;"	d
GLEW_ARB_imaging	glew.h	/^#define GLEW_ARB_imaging GLEW_GET_VAR(__GLEW_ARB_imaging)/;"	d
GLEW_ARB_indirect_parameters	glew.h	/^#define GLEW_ARB_indirect_parameters GLEW_GET_VAR(__GLEW_ARB_indirect_parameters)/;"	d
GLEW_ARB_instanced_arrays	glew.h	/^#define GLEW_ARB_instanced_arrays GLEW_GET_VAR(__GLEW_ARB_instanced_arrays)/;"	d
GLEW_ARB_internalformat_query	glew.h	/^#define GLEW_ARB_internalformat_query GLEW_GET_VAR(__GLEW_ARB_internalformat_query)/;"	d
GLEW_ARB_internalformat_query2	glew.h	/^#define GLEW_ARB_internalformat_query2 GLEW_GET_VAR(__GLEW_ARB_internalformat_query2)/;"	d
GLEW_ARB_invalidate_subdata	glew.h	/^#define GLEW_ARB_invalidate_subdata GLEW_GET_VAR(__GLEW_ARB_invalidate_subdata)/;"	d
GLEW_ARB_map_buffer_alignment	glew.h	/^#define GLEW_ARB_map_buffer_alignment GLEW_GET_VAR(__GLEW_ARB_map_buffer_alignment)/;"	d
GLEW_ARB_map_buffer_range	glew.h	/^#define GLEW_ARB_map_buffer_range GLEW_GET_VAR(__GLEW_ARB_map_buffer_range)/;"	d
GLEW_ARB_matrix_palette	glew.h	/^#define GLEW_ARB_matrix_palette GLEW_GET_VAR(__GLEW_ARB_matrix_palette)/;"	d
GLEW_ARB_multi_bind	glew.h	/^#define GLEW_ARB_multi_bind GLEW_GET_VAR(__GLEW_ARB_multi_bind)/;"	d
GLEW_ARB_multi_draw_indirect	glew.h	/^#define GLEW_ARB_multi_draw_indirect GLEW_GET_VAR(__GLEW_ARB_multi_draw_indirect)/;"	d
GLEW_ARB_multisample	glew.h	/^#define GLEW_ARB_multisample GLEW_GET_VAR(__GLEW_ARB_multisample)/;"	d
GLEW_ARB_multitexture	glew.h	/^#define GLEW_ARB_multitexture GLEW_GET_VAR(__GLEW_ARB_multitexture)/;"	d
GLEW_ARB_occlusion_query	glew.h	/^#define GLEW_ARB_occlusion_query GLEW_GET_VAR(__GLEW_ARB_occlusion_query)/;"	d
GLEW_ARB_occlusion_query2	glew.h	/^#define GLEW_ARB_occlusion_query2 GLEW_GET_VAR(__GLEW_ARB_occlusion_query2)/;"	d
GLEW_ARB_pipeline_statistics_query	glew.h	/^#define GLEW_ARB_pipeline_statistics_query GLEW_GET_VAR(__GLEW_ARB_pipeline_statistics_query)/;"	d
GLEW_ARB_pixel_buffer_object	glew.h	/^#define GLEW_ARB_pixel_buffer_object GLEW_GET_VAR(__GLEW_ARB_pixel_buffer_object)/;"	d
GLEW_ARB_point_parameters	glew.h	/^#define GLEW_ARB_point_parameters GLEW_GET_VAR(__GLEW_ARB_point_parameters)/;"	d
GLEW_ARB_point_sprite	glew.h	/^#define GLEW_ARB_point_sprite GLEW_GET_VAR(__GLEW_ARB_point_sprite)/;"	d
GLEW_ARB_program_interface_query	glew.h	/^#define GLEW_ARB_program_interface_query GLEW_GET_VAR(__GLEW_ARB_program_interface_query)/;"	d
GLEW_ARB_provoking_vertex	glew.h	/^#define GLEW_ARB_provoking_vertex GLEW_GET_VAR(__GLEW_ARB_provoking_vertex)/;"	d
GLEW_ARB_query_buffer_object	glew.h	/^#define GLEW_ARB_query_buffer_object GLEW_GET_VAR(__GLEW_ARB_query_buffer_object)/;"	d
GLEW_ARB_robust_buffer_access_behavior	glew.h	/^#define GLEW_ARB_robust_buffer_access_behavior GLEW_GET_VAR(__GLEW_ARB_robust_buffer_access_beha/;"	d
GLEW_ARB_robustness	glew.h	/^#define GLEW_ARB_robustness GLEW_GET_VAR(__GLEW_ARB_robustness)/;"	d
GLEW_ARB_robustness_application_isolation	glew.h	/^#define GLEW_ARB_robustness_application_isolation GLEW_GET_VAR(__GLEW_ARB_robustness_application/;"	d
GLEW_ARB_robustness_share_group_isolation	glew.h	/^#define GLEW_ARB_robustness_share_group_isolation GLEW_GET_VAR(__GLEW_ARB_robustness_share_group/;"	d
GLEW_ARB_sample_shading	glew.h	/^#define GLEW_ARB_sample_shading GLEW_GET_VAR(__GLEW_ARB_sample_shading)/;"	d
GLEW_ARB_sampler_objects	glew.h	/^#define GLEW_ARB_sampler_objects GLEW_GET_VAR(__GLEW_ARB_sampler_objects)/;"	d
GLEW_ARB_seamless_cube_map	glew.h	/^#define GLEW_ARB_seamless_cube_map GLEW_GET_VAR(__GLEW_ARB_seamless_cube_map)/;"	d
GLEW_ARB_seamless_cubemap_per_texture	glew.h	/^#define GLEW_ARB_seamless_cubemap_per_texture GLEW_GET_VAR(__GLEW_ARB_seamless_cubemap_per_textu/;"	d
GLEW_ARB_separate_shader_objects	glew.h	/^#define GLEW_ARB_separate_shader_objects GLEW_GET_VAR(__GLEW_ARB_separate_shader_objects)/;"	d
GLEW_ARB_shader_atomic_counters	glew.h	/^#define GLEW_ARB_shader_atomic_counters GLEW_GET_VAR(__GLEW_ARB_shader_atomic_counters)/;"	d
GLEW_ARB_shader_bit_encoding	glew.h	/^#define GLEW_ARB_shader_bit_encoding GLEW_GET_VAR(__GLEW_ARB_shader_bit_encoding)/;"	d
GLEW_ARB_shader_draw_parameters	glew.h	/^#define GLEW_ARB_shader_draw_parameters GLEW_GET_VAR(__GLEW_ARB_shader_draw_parameters)/;"	d
GLEW_ARB_shader_group_vote	glew.h	/^#define GLEW_ARB_shader_group_vote GLEW_GET_VAR(__GLEW_ARB_shader_group_vote)/;"	d
GLEW_ARB_shader_image_load_store	glew.h	/^#define GLEW_ARB_shader_image_load_store GLEW_GET_VAR(__GLEW_ARB_shader_image_load_store)/;"	d
GLEW_ARB_shader_image_size	glew.h	/^#define GLEW_ARB_shader_image_size GLEW_GET_VAR(__GLEW_ARB_shader_image_size)/;"	d
GLEW_ARB_shader_objects	glew.h	/^#define GLEW_ARB_shader_objects GLEW_GET_VAR(__GLEW_ARB_shader_objects)/;"	d
GLEW_ARB_shader_precision	glew.h	/^#define GLEW_ARB_shader_precision GLEW_GET_VAR(__GLEW_ARB_shader_precision)/;"	d
GLEW_ARB_shader_stencil_export	glew.h	/^#define GLEW_ARB_shader_stencil_export GLEW_GET_VAR(__GLEW_ARB_shader_stencil_export)/;"	d
GLEW_ARB_shader_storage_buffer_object	glew.h	/^#define GLEW_ARB_shader_storage_buffer_object GLEW_GET_VAR(__GLEW_ARB_shader_storage_buffer_obje/;"	d
GLEW_ARB_shader_subroutine	glew.h	/^#define GLEW_ARB_shader_subroutine GLEW_GET_VAR(__GLEW_ARB_shader_subroutine)/;"	d
GLEW_ARB_shader_texture_image_samples	glew.h	/^#define GLEW_ARB_shader_texture_image_samples GLEW_GET_VAR(__GLEW_ARB_shader_texture_image_sampl/;"	d
GLEW_ARB_shader_texture_lod	glew.h	/^#define GLEW_ARB_shader_texture_lod GLEW_GET_VAR(__GLEW_ARB_shader_texture_lod)/;"	d
GLEW_ARB_shading_language_100	glew.h	/^#define GLEW_ARB_shading_language_100 GLEW_GET_VAR(__GLEW_ARB_shading_language_100)/;"	d
GLEW_ARB_shading_language_420pack	glew.h	/^#define GLEW_ARB_shading_language_420pack GLEW_GET_VAR(__GLEW_ARB_shading_language_420pack)/;"	d
GLEW_ARB_shading_language_include	glew.h	/^#define GLEW_ARB_shading_language_include GLEW_GET_VAR(__GLEW_ARB_shading_language_include)/;"	d
GLEW_ARB_shading_language_packing	glew.h	/^#define GLEW_ARB_shading_language_packing GLEW_GET_VAR(__GLEW_ARB_shading_language_packing)/;"	d
GLEW_ARB_shadow	glew.h	/^#define GLEW_ARB_shadow GLEW_GET_VAR(__GLEW_ARB_shadow)/;"	d
GLEW_ARB_shadow_ambient	glew.h	/^#define GLEW_ARB_shadow_ambient GLEW_GET_VAR(__GLEW_ARB_shadow_ambient)/;"	d
GLEW_ARB_sparse_buffer	glew.h	/^#define GLEW_ARB_sparse_buffer GLEW_GET_VAR(__GLEW_ARB_sparse_buffer)/;"	d
GLEW_ARB_sparse_texture	glew.h	/^#define GLEW_ARB_sparse_texture GLEW_GET_VAR(__GLEW_ARB_sparse_texture)/;"	d
GLEW_ARB_stencil_texturing	glew.h	/^#define GLEW_ARB_stencil_texturing GLEW_GET_VAR(__GLEW_ARB_stencil_texturing)/;"	d
GLEW_ARB_sync	glew.h	/^#define GLEW_ARB_sync GLEW_GET_VAR(__GLEW_ARB_sync)/;"	d
GLEW_ARB_tessellation_shader	glew.h	/^#define GLEW_ARB_tessellation_shader GLEW_GET_VAR(__GLEW_ARB_tessellation_shader)/;"	d
GLEW_ARB_texture_barrier	glew.h	/^#define GLEW_ARB_texture_barrier GLEW_GET_VAR(__GLEW_ARB_texture_barrier)/;"	d
GLEW_ARB_texture_border_clamp	glew.h	/^#define GLEW_ARB_texture_border_clamp GLEW_GET_VAR(__GLEW_ARB_texture_border_clamp)/;"	d
GLEW_ARB_texture_buffer_object	glew.h	/^#define GLEW_ARB_texture_buffer_object GLEW_GET_VAR(__GLEW_ARB_texture_buffer_object)/;"	d
GLEW_ARB_texture_buffer_object_rgb32	glew.h	/^#define GLEW_ARB_texture_buffer_object_rgb32 GLEW_GET_VAR(__GLEW_ARB_texture_buffer_object_rgb32/;"	d
GLEW_ARB_texture_buffer_range	glew.h	/^#define GLEW_ARB_texture_buffer_range GLEW_GET_VAR(__GLEW_ARB_texture_buffer_range)/;"	d
GLEW_ARB_texture_compression	glew.h	/^#define GLEW_ARB_texture_compression GLEW_GET_VAR(__GLEW_ARB_texture_compression)/;"	d
GLEW_ARB_texture_compression_bptc	glew.h	/^#define GLEW_ARB_texture_compression_bptc GLEW_GET_VAR(__GLEW_ARB_texture_compression_bptc)/;"	d
GLEW_ARB_texture_compression_rgtc	glew.h	/^#define GLEW_ARB_texture_compression_rgtc GLEW_GET_VAR(__GLEW_ARB_texture_compression_rgtc)/;"	d
GLEW_ARB_texture_cube_map	glew.h	/^#define GLEW_ARB_texture_cube_map GLEW_GET_VAR(__GLEW_ARB_texture_cube_map)/;"	d
GLEW_ARB_texture_cube_map_array	glew.h	/^#define GLEW_ARB_texture_cube_map_array GLEW_GET_VAR(__GLEW_ARB_texture_cube_map_array)/;"	d
GLEW_ARB_texture_env_add	glew.h	/^#define GLEW_ARB_texture_env_add GLEW_GET_VAR(__GLEW_ARB_texture_env_add)/;"	d
GLEW_ARB_texture_env_combine	glew.h	/^#define GLEW_ARB_texture_env_combine GLEW_GET_VAR(__GLEW_ARB_texture_env_combine)/;"	d
GLEW_ARB_texture_env_crossbar	glew.h	/^#define GLEW_ARB_texture_env_crossbar GLEW_GET_VAR(__GLEW_ARB_texture_env_crossbar)/;"	d
GLEW_ARB_texture_env_dot3	glew.h	/^#define GLEW_ARB_texture_env_dot3 GLEW_GET_VAR(__GLEW_ARB_texture_env_dot3)/;"	d
GLEW_ARB_texture_float	glew.h	/^#define GLEW_ARB_texture_float GLEW_GET_VAR(__GLEW_ARB_texture_float)/;"	d
GLEW_ARB_texture_gather	glew.h	/^#define GLEW_ARB_texture_gather GLEW_GET_VAR(__GLEW_ARB_texture_gather)/;"	d
GLEW_ARB_texture_mirror_clamp_to_edge	glew.h	/^#define GLEW_ARB_texture_mirror_clamp_to_edge GLEW_GET_VAR(__GLEW_ARB_texture_mirror_clamp_to_ed/;"	d
GLEW_ARB_texture_mirrored_repeat	glew.h	/^#define GLEW_ARB_texture_mirrored_repeat GLEW_GET_VAR(__GLEW_ARB_texture_mirrored_repeat)/;"	d
GLEW_ARB_texture_multisample	glew.h	/^#define GLEW_ARB_texture_multisample GLEW_GET_VAR(__GLEW_ARB_texture_multisample)/;"	d
GLEW_ARB_texture_non_power_of_two	glew.h	/^#define GLEW_ARB_texture_non_power_of_two GLEW_GET_VAR(__GLEW_ARB_texture_non_power_of_two)/;"	d
GLEW_ARB_texture_query_levels	glew.h	/^#define GLEW_ARB_texture_query_levels GLEW_GET_VAR(__GLEW_ARB_texture_query_levels)/;"	d
GLEW_ARB_texture_query_lod	glew.h	/^#define GLEW_ARB_texture_query_lod GLEW_GET_VAR(__GLEW_ARB_texture_query_lod)/;"	d
GLEW_ARB_texture_rectangle	glew.h	/^#define GLEW_ARB_texture_rectangle GLEW_GET_VAR(__GLEW_ARB_texture_rectangle)/;"	d
GLEW_ARB_texture_rg	glew.h	/^#define GLEW_ARB_texture_rg GLEW_GET_VAR(__GLEW_ARB_texture_rg)/;"	d
GLEW_ARB_texture_rgb10_a2ui	glew.h	/^#define GLEW_ARB_texture_rgb10_a2ui GLEW_GET_VAR(__GLEW_ARB_texture_rgb10_a2ui)/;"	d
GLEW_ARB_texture_stencil8	glew.h	/^#define GLEW_ARB_texture_stencil8 GLEW_GET_VAR(__GLEW_ARB_texture_stencil8)/;"	d
GLEW_ARB_texture_storage	glew.h	/^#define GLEW_ARB_texture_storage GLEW_GET_VAR(__GLEW_ARB_texture_storage)/;"	d
GLEW_ARB_texture_storage_multisample	glew.h	/^#define GLEW_ARB_texture_storage_multisample GLEW_GET_VAR(__GLEW_ARB_texture_storage_multisample/;"	d
GLEW_ARB_texture_swizzle	glew.h	/^#define GLEW_ARB_texture_swizzle GLEW_GET_VAR(__GLEW_ARB_texture_swizzle)/;"	d
GLEW_ARB_texture_view	glew.h	/^#define GLEW_ARB_texture_view GLEW_GET_VAR(__GLEW_ARB_texture_view)/;"	d
GLEW_ARB_timer_query	glew.h	/^#define GLEW_ARB_timer_query GLEW_GET_VAR(__GLEW_ARB_timer_query)/;"	d
GLEW_ARB_transform_feedback2	glew.h	/^#define GLEW_ARB_transform_feedback2 GLEW_GET_VAR(__GLEW_ARB_transform_feedback2)/;"	d
GLEW_ARB_transform_feedback3	glew.h	/^#define GLEW_ARB_transform_feedback3 GLEW_GET_VAR(__GLEW_ARB_transform_feedback3)/;"	d
GLEW_ARB_transform_feedback_instanced	glew.h	/^#define GLEW_ARB_transform_feedback_instanced GLEW_GET_VAR(__GLEW_ARB_transform_feedback_instanc/;"	d
GLEW_ARB_transform_feedback_overflow_query	glew.h	/^#define GLEW_ARB_transform_feedback_overflow_query GLEW_GET_VAR(__GLEW_ARB_transform_feedback_ov/;"	d
GLEW_ARB_transpose_matrix	glew.h	/^#define GLEW_ARB_transpose_matrix GLEW_GET_VAR(__GLEW_ARB_transpose_matrix)/;"	d
GLEW_ARB_uniform_buffer_object	glew.h	/^#define GLEW_ARB_uniform_buffer_object GLEW_GET_VAR(__GLEW_ARB_uniform_buffer_object)/;"	d
GLEW_ARB_vertex_array_bgra	glew.h	/^#define GLEW_ARB_vertex_array_bgra GLEW_GET_VAR(__GLEW_ARB_vertex_array_bgra)/;"	d
GLEW_ARB_vertex_array_object	glew.h	/^#define GLEW_ARB_vertex_array_object GLEW_GET_VAR(__GLEW_ARB_vertex_array_object)/;"	d
GLEW_ARB_vertex_attrib_64bit	glew.h	/^#define GLEW_ARB_vertex_attrib_64bit GLEW_GET_VAR(__GLEW_ARB_vertex_attrib_64bit)/;"	d
GLEW_ARB_vertex_attrib_binding	glew.h	/^#define GLEW_ARB_vertex_attrib_binding GLEW_GET_VAR(__GLEW_ARB_vertex_attrib_binding)/;"	d
GLEW_ARB_vertex_blend	glew.h	/^#define GLEW_ARB_vertex_blend GLEW_GET_VAR(__GLEW_ARB_vertex_blend)/;"	d
GLEW_ARB_vertex_buffer_object	glew.h	/^#define GLEW_ARB_vertex_buffer_object GLEW_GET_VAR(__GLEW_ARB_vertex_buffer_object)/;"	d
GLEW_ARB_vertex_program	glew.h	/^#define GLEW_ARB_vertex_program GLEW_GET_VAR(__GLEW_ARB_vertex_program)/;"	d
GLEW_ARB_vertex_shader	glew.h	/^#define GLEW_ARB_vertex_shader GLEW_GET_VAR(__GLEW_ARB_vertex_shader)/;"	d
GLEW_ARB_vertex_type_10f_11f_11f_rev	glew.h	/^#define GLEW_ARB_vertex_type_10f_11f_11f_rev GLEW_GET_VAR(__GLEW_ARB_vertex_type_10f_11f_11f_rev/;"	d
GLEW_ARB_vertex_type_2_10_10_10_rev	glew.h	/^#define GLEW_ARB_vertex_type_2_10_10_10_rev GLEW_GET_VAR(__GLEW_ARB_vertex_type_2_10_10_10_rev)/;"	d
GLEW_ARB_viewport_array	glew.h	/^#define GLEW_ARB_viewport_array GLEW_GET_VAR(__GLEW_ARB_viewport_array)/;"	d
GLEW_ARB_window_pos	glew.h	/^#define GLEW_ARB_window_pos GLEW_GET_VAR(__GLEW_ARB_window_pos)/;"	d
GLEW_ATIX_point_sprites	glew.h	/^#define GLEW_ATIX_point_sprites GLEW_GET_VAR(__GLEW_ATIX_point_sprites)/;"	d
GLEW_ATIX_texture_env_combine3	glew.h	/^#define GLEW_ATIX_texture_env_combine3 GLEW_GET_VAR(__GLEW_ATIX_texture_env_combine3)/;"	d
GLEW_ATIX_texture_env_route	glew.h	/^#define GLEW_ATIX_texture_env_route GLEW_GET_VAR(__GLEW_ATIX_texture_env_route)/;"	d
GLEW_ATIX_vertex_shader_output_point_size	glew.h	/^#define GLEW_ATIX_vertex_shader_output_point_size GLEW_GET_VAR(__GLEW_ATIX_vertex_shader_output_/;"	d
GLEW_ATI_draw_buffers	glew.h	/^#define GLEW_ATI_draw_buffers GLEW_GET_VAR(__GLEW_ATI_draw_buffers)/;"	d
GLEW_ATI_element_array	glew.h	/^#define GLEW_ATI_element_array GLEW_GET_VAR(__GLEW_ATI_element_array)/;"	d
GLEW_ATI_envmap_bumpmap	glew.h	/^#define GLEW_ATI_envmap_bumpmap GLEW_GET_VAR(__GLEW_ATI_envmap_bumpmap)/;"	d
GLEW_ATI_fragment_shader	glew.h	/^#define GLEW_ATI_fragment_shader GLEW_GET_VAR(__GLEW_ATI_fragment_shader)/;"	d
GLEW_ATI_map_object_buffer	glew.h	/^#define GLEW_ATI_map_object_buffer GLEW_GET_VAR(__GLEW_ATI_map_object_buffer)/;"	d
GLEW_ATI_meminfo	glew.h	/^#define GLEW_ATI_meminfo GLEW_GET_VAR(__GLEW_ATI_meminfo)/;"	d
GLEW_ATI_pn_triangles	glew.h	/^#define GLEW_ATI_pn_triangles GLEW_GET_VAR(__GLEW_ATI_pn_triangles)/;"	d
GLEW_ATI_separate_stencil	glew.h	/^#define GLEW_ATI_separate_stencil GLEW_GET_VAR(__GLEW_ATI_separate_stencil)/;"	d
GLEW_ATI_shader_texture_lod	glew.h	/^#define GLEW_ATI_shader_texture_lod GLEW_GET_VAR(__GLEW_ATI_shader_texture_lod)/;"	d
GLEW_ATI_text_fragment_shader	glew.h	/^#define GLEW_ATI_text_fragment_shader GLEW_GET_VAR(__GLEW_ATI_text_fragment_shader)/;"	d
GLEW_ATI_texture_compression_3dc	glew.h	/^#define GLEW_ATI_texture_compression_3dc GLEW_GET_VAR(__GLEW_ATI_texture_compression_3dc)/;"	d
GLEW_ATI_texture_env_combine3	glew.h	/^#define GLEW_ATI_texture_env_combine3 GLEW_GET_VAR(__GLEW_ATI_texture_env_combine3)/;"	d
GLEW_ATI_texture_float	glew.h	/^#define GLEW_ATI_texture_float GLEW_GET_VAR(__GLEW_ATI_texture_float)/;"	d
GLEW_ATI_texture_mirror_once	glew.h	/^#define GLEW_ATI_texture_mirror_once GLEW_GET_VAR(__GLEW_ATI_texture_mirror_once)/;"	d
GLEW_ATI_vertex_array_object	glew.h	/^#define GLEW_ATI_vertex_array_object GLEW_GET_VAR(__GLEW_ATI_vertex_array_object)/;"	d
GLEW_ATI_vertex_attrib_array_object	glew.h	/^#define GLEW_ATI_vertex_attrib_array_object GLEW_GET_VAR(__GLEW_ATI_vertex_attrib_array_object)/;"	d
GLEW_ATI_vertex_streams	glew.h	/^#define GLEW_ATI_vertex_streams GLEW_GET_VAR(__GLEW_ATI_vertex_streams)/;"	d
GLEW_CALLBACK_DEFINED	glew.h	/^#define GLEW_CALLBACK_DEFINED$/;"	d
GLEW_ERROR_GLX_VERSION_11_ONLY	glew.h	/^#define GLEW_ERROR_GLX_VERSION_11_ONLY /;"	d
GLEW_ERROR_GL_VERSION_10_ONLY	glew.h	/^#define GLEW_ERROR_GL_VERSION_10_ONLY /;"	d
GLEW_ERROR_NO_GL_VERSION	glew.h	/^#define GLEW_ERROR_NO_GL_VERSION /;"	d
GLEW_EXT_422_pixels	glew.h	/^#define GLEW_EXT_422_pixels GLEW_GET_VAR(__GLEW_EXT_422_pixels)/;"	d
GLEW_EXT_Cg_shader	glew.h	/^#define GLEW_EXT_Cg_shader GLEW_GET_VAR(__GLEW_EXT_Cg_shader)/;"	d
GLEW_EXT_abgr	glew.h	/^#define GLEW_EXT_abgr GLEW_GET_VAR(__GLEW_EXT_abgr)/;"	d
GLEW_EXT_bgra	glew.h	/^#define GLEW_EXT_bgra GLEW_GET_VAR(__GLEW_EXT_bgra)/;"	d
GLEW_EXT_bindable_uniform	glew.h	/^#define GLEW_EXT_bindable_uniform GLEW_GET_VAR(__GLEW_EXT_bindable_uniform)/;"	d
GLEW_EXT_blend_color	glew.h	/^#define GLEW_EXT_blend_color GLEW_GET_VAR(__GLEW_EXT_blend_color)/;"	d
GLEW_EXT_blend_equation_separate	glew.h	/^#define GLEW_EXT_blend_equation_separate GLEW_GET_VAR(__GLEW_EXT_blend_equation_separate)/;"	d
GLEW_EXT_blend_func_separate	glew.h	/^#define GLEW_EXT_blend_func_separate GLEW_GET_VAR(__GLEW_EXT_blend_func_separate)/;"	d
GLEW_EXT_blend_logic_op	glew.h	/^#define GLEW_EXT_blend_logic_op GLEW_GET_VAR(__GLEW_EXT_blend_logic_op)/;"	d
GLEW_EXT_blend_minmax	glew.h	/^#define GLEW_EXT_blend_minmax GLEW_GET_VAR(__GLEW_EXT_blend_minmax)/;"	d
GLEW_EXT_blend_subtract	glew.h	/^#define GLEW_EXT_blend_subtract GLEW_GET_VAR(__GLEW_EXT_blend_subtract)/;"	d
GLEW_EXT_clip_volume_hint	glew.h	/^#define GLEW_EXT_clip_volume_hint GLEW_GET_VAR(__GLEW_EXT_clip_volume_hint)/;"	d
GLEW_EXT_cmyka	glew.h	/^#define GLEW_EXT_cmyka GLEW_GET_VAR(__GLEW_EXT_cmyka)/;"	d
GLEW_EXT_color_subtable	glew.h	/^#define GLEW_EXT_color_subtable GLEW_GET_VAR(__GLEW_EXT_color_subtable)/;"	d
GLEW_EXT_compiled_vertex_array	glew.h	/^#define GLEW_EXT_compiled_vertex_array GLEW_GET_VAR(__GLEW_EXT_compiled_vertex_array)/;"	d
GLEW_EXT_convolution	glew.h	/^#define GLEW_EXT_convolution GLEW_GET_VAR(__GLEW_EXT_convolution)/;"	d
GLEW_EXT_coordinate_frame	glew.h	/^#define GLEW_EXT_coordinate_frame GLEW_GET_VAR(__GLEW_EXT_coordinate_frame)/;"	d
GLEW_EXT_copy_texture	glew.h	/^#define GLEW_EXT_copy_texture GLEW_GET_VAR(__GLEW_EXT_copy_texture)/;"	d
GLEW_EXT_cull_vertex	glew.h	/^#define GLEW_EXT_cull_vertex GLEW_GET_VAR(__GLEW_EXT_cull_vertex)/;"	d
GLEW_EXT_debug_label	glew.h	/^#define GLEW_EXT_debug_label GLEW_GET_VAR(__GLEW_EXT_debug_label)/;"	d
GLEW_EXT_debug_marker	glew.h	/^#define GLEW_EXT_debug_marker GLEW_GET_VAR(__GLEW_EXT_debug_marker)/;"	d
GLEW_EXT_depth_bounds_test	glew.h	/^#define GLEW_EXT_depth_bounds_test GLEW_GET_VAR(__GLEW_EXT_depth_bounds_test)/;"	d
GLEW_EXT_direct_state_access	glew.h	/^#define GLEW_EXT_direct_state_access GLEW_GET_VAR(__GLEW_EXT_direct_state_access)/;"	d
GLEW_EXT_draw_buffers2	glew.h	/^#define GLEW_EXT_draw_buffers2 GLEW_GET_VAR(__GLEW_EXT_draw_buffers2)/;"	d
GLEW_EXT_draw_instanced	glew.h	/^#define GLEW_EXT_draw_instanced GLEW_GET_VAR(__GLEW_EXT_draw_instanced)/;"	d
GLEW_EXT_draw_range_elements	glew.h	/^#define GLEW_EXT_draw_range_elements GLEW_GET_VAR(__GLEW_EXT_draw_range_elements)/;"	d
GLEW_EXT_fog_coord	glew.h	/^#define GLEW_EXT_fog_coord GLEW_GET_VAR(__GLEW_EXT_fog_coord)/;"	d
GLEW_EXT_fragment_lighting	glew.h	/^#define GLEW_EXT_fragment_lighting GLEW_GET_VAR(__GLEW_EXT_fragment_lighting)/;"	d
GLEW_EXT_framebuffer_blit	glew.h	/^#define GLEW_EXT_framebuffer_blit GLEW_GET_VAR(__GLEW_EXT_framebuffer_blit)/;"	d
GLEW_EXT_framebuffer_multisample	glew.h	/^#define GLEW_EXT_framebuffer_multisample GLEW_GET_VAR(__GLEW_EXT_framebuffer_multisample)/;"	d
GLEW_EXT_framebuffer_multisample_blit_scaled	glew.h	/^#define GLEW_EXT_framebuffer_multisample_blit_scaled GLEW_GET_VAR(__GLEW_EXT_framebuffer_multisa/;"	d
GLEW_EXT_framebuffer_object	glew.h	/^#define GLEW_EXT_framebuffer_object GLEW_GET_VAR(__GLEW_EXT_framebuffer_object)/;"	d
GLEW_EXT_framebuffer_sRGB	glew.h	/^#define GLEW_EXT_framebuffer_sRGB GLEW_GET_VAR(__GLEW_EXT_framebuffer_sRGB)/;"	d
GLEW_EXT_geometry_shader4	glew.h	/^#define GLEW_EXT_geometry_shader4 GLEW_GET_VAR(__GLEW_EXT_geometry_shader4)/;"	d
GLEW_EXT_gpu_program_parameters	glew.h	/^#define GLEW_EXT_gpu_program_parameters GLEW_GET_VAR(__GLEW_EXT_gpu_program_parameters)/;"	d
GLEW_EXT_gpu_shader4	glew.h	/^#define GLEW_EXT_gpu_shader4 GLEW_GET_VAR(__GLEW_EXT_gpu_shader4)/;"	d
GLEW_EXT_histogram	glew.h	/^#define GLEW_EXT_histogram GLEW_GET_VAR(__GLEW_EXT_histogram)/;"	d
GLEW_EXT_index_array_formats	glew.h	/^#define GLEW_EXT_index_array_formats GLEW_GET_VAR(__GLEW_EXT_index_array_formats)/;"	d
GLEW_EXT_index_func	glew.h	/^#define GLEW_EXT_index_func GLEW_GET_VAR(__GLEW_EXT_index_func)/;"	d
GLEW_EXT_index_material	glew.h	/^#define GLEW_EXT_index_material GLEW_GET_VAR(__GLEW_EXT_index_material)/;"	d
GLEW_EXT_index_texture	glew.h	/^#define GLEW_EXT_index_texture GLEW_GET_VAR(__GLEW_EXT_index_texture)/;"	d
GLEW_EXT_light_texture	glew.h	/^#define GLEW_EXT_light_texture GLEW_GET_VAR(__GLEW_EXT_light_texture)/;"	d
GLEW_EXT_misc_attribute	glew.h	/^#define GLEW_EXT_misc_attribute GLEW_GET_VAR(__GLEW_EXT_misc_attribute)/;"	d
GLEW_EXT_multi_draw_arrays	glew.h	/^#define GLEW_EXT_multi_draw_arrays GLEW_GET_VAR(__GLEW_EXT_multi_draw_arrays)/;"	d
GLEW_EXT_multisample	glew.h	/^#define GLEW_EXT_multisample GLEW_GET_VAR(__GLEW_EXT_multisample)/;"	d
GLEW_EXT_packed_depth_stencil	glew.h	/^#define GLEW_EXT_packed_depth_stencil GLEW_GET_VAR(__GLEW_EXT_packed_depth_stencil)/;"	d
GLEW_EXT_packed_float	glew.h	/^#define GLEW_EXT_packed_float GLEW_GET_VAR(__GLEW_EXT_packed_float)/;"	d
GLEW_EXT_packed_pixels	glew.h	/^#define GLEW_EXT_packed_pixels GLEW_GET_VAR(__GLEW_EXT_packed_pixels)/;"	d
GLEW_EXT_paletted_texture	glew.h	/^#define GLEW_EXT_paletted_texture GLEW_GET_VAR(__GLEW_EXT_paletted_texture)/;"	d
GLEW_EXT_pixel_buffer_object	glew.h	/^#define GLEW_EXT_pixel_buffer_object GLEW_GET_VAR(__GLEW_EXT_pixel_buffer_object)/;"	d
GLEW_EXT_pixel_transform	glew.h	/^#define GLEW_EXT_pixel_transform GLEW_GET_VAR(__GLEW_EXT_pixel_transform)/;"	d
GLEW_EXT_pixel_transform_color_table	glew.h	/^#define GLEW_EXT_pixel_transform_color_table GLEW_GET_VAR(__GLEW_EXT_pixel_transform_color_table/;"	d
GLEW_EXT_point_parameters	glew.h	/^#define GLEW_EXT_point_parameters GLEW_GET_VAR(__GLEW_EXT_point_parameters)/;"	d
GLEW_EXT_polygon_offset	glew.h	/^#define GLEW_EXT_polygon_offset GLEW_GET_VAR(__GLEW_EXT_polygon_offset)/;"	d
GLEW_EXT_provoking_vertex	glew.h	/^#define GLEW_EXT_provoking_vertex GLEW_GET_VAR(__GLEW_EXT_provoking_vertex)/;"	d
GLEW_EXT_rescale_normal	glew.h	/^#define GLEW_EXT_rescale_normal GLEW_GET_VAR(__GLEW_EXT_rescale_normal)/;"	d
GLEW_EXT_scene_marker	glew.h	/^#define GLEW_EXT_scene_marker GLEW_GET_VAR(__GLEW_EXT_scene_marker)/;"	d
GLEW_EXT_secondary_color	glew.h	/^#define GLEW_EXT_secondary_color GLEW_GET_VAR(__GLEW_EXT_secondary_color)/;"	d
GLEW_EXT_separate_shader_objects	glew.h	/^#define GLEW_EXT_separate_shader_objects GLEW_GET_VAR(__GLEW_EXT_separate_shader_objects)/;"	d
GLEW_EXT_separate_specular_color	glew.h	/^#define GLEW_EXT_separate_specular_color GLEW_GET_VAR(__GLEW_EXT_separate_specular_color)/;"	d
GLEW_EXT_shader_image_load_formatted	glew.h	/^#define GLEW_EXT_shader_image_load_formatted GLEW_GET_VAR(__GLEW_EXT_shader_image_load_formatted/;"	d
GLEW_EXT_shader_image_load_store	glew.h	/^#define GLEW_EXT_shader_image_load_store GLEW_GET_VAR(__GLEW_EXT_shader_image_load_store)/;"	d
GLEW_EXT_shader_integer_mix	glew.h	/^#define GLEW_EXT_shader_integer_mix GLEW_GET_VAR(__GLEW_EXT_shader_integer_mix)/;"	d
GLEW_EXT_shadow_funcs	glew.h	/^#define GLEW_EXT_shadow_funcs GLEW_GET_VAR(__GLEW_EXT_shadow_funcs)/;"	d
GLEW_EXT_shared_texture_palette	glew.h	/^#define GLEW_EXT_shared_texture_palette GLEW_GET_VAR(__GLEW_EXT_shared_texture_palette)/;"	d
GLEW_EXT_stencil_clear_tag	glew.h	/^#define GLEW_EXT_stencil_clear_tag GLEW_GET_VAR(__GLEW_EXT_stencil_clear_tag)/;"	d
GLEW_EXT_stencil_two_side	glew.h	/^#define GLEW_EXT_stencil_two_side GLEW_GET_VAR(__GLEW_EXT_stencil_two_side)/;"	d
GLEW_EXT_stencil_wrap	glew.h	/^#define GLEW_EXT_stencil_wrap GLEW_GET_VAR(__GLEW_EXT_stencil_wrap)/;"	d
GLEW_EXT_subtexture	glew.h	/^#define GLEW_EXT_subtexture GLEW_GET_VAR(__GLEW_EXT_subtexture)/;"	d
GLEW_EXT_texture	glew.h	/^#define GLEW_EXT_texture GLEW_GET_VAR(__GLEW_EXT_texture)/;"	d
GLEW_EXT_texture3D	glew.h	/^#define GLEW_EXT_texture3D GLEW_GET_VAR(__GLEW_EXT_texture3D)/;"	d
GLEW_EXT_texture_array	glew.h	/^#define GLEW_EXT_texture_array GLEW_GET_VAR(__GLEW_EXT_texture_array)/;"	d
GLEW_EXT_texture_buffer_object	glew.h	/^#define GLEW_EXT_texture_buffer_object GLEW_GET_VAR(__GLEW_EXT_texture_buffer_object)/;"	d
GLEW_EXT_texture_compression_dxt1	glew.h	/^#define GLEW_EXT_texture_compression_dxt1 GLEW_GET_VAR(__GLEW_EXT_texture_compression_dxt1)/;"	d
GLEW_EXT_texture_compression_latc	glew.h	/^#define GLEW_EXT_texture_compression_latc GLEW_GET_VAR(__GLEW_EXT_texture_compression_latc)/;"	d
GLEW_EXT_texture_compression_rgtc	glew.h	/^#define GLEW_EXT_texture_compression_rgtc GLEW_GET_VAR(__GLEW_EXT_texture_compression_rgtc)/;"	d
GLEW_EXT_texture_compression_s3tc	glew.h	/^#define GLEW_EXT_texture_compression_s3tc GLEW_GET_VAR(__GLEW_EXT_texture_compression_s3tc)/;"	d
GLEW_EXT_texture_cube_map	glew.h	/^#define GLEW_EXT_texture_cube_map GLEW_GET_VAR(__GLEW_EXT_texture_cube_map)/;"	d
GLEW_EXT_texture_edge_clamp	glew.h	/^#define GLEW_EXT_texture_edge_clamp GLEW_GET_VAR(__GLEW_EXT_texture_edge_clamp)/;"	d
GLEW_EXT_texture_env	glew.h	/^#define GLEW_EXT_texture_env GLEW_GET_VAR(__GLEW_EXT_texture_env)/;"	d
GLEW_EXT_texture_env_add	glew.h	/^#define GLEW_EXT_texture_env_add GLEW_GET_VAR(__GLEW_EXT_texture_env_add)/;"	d
GLEW_EXT_texture_env_combine	glew.h	/^#define GLEW_EXT_texture_env_combine GLEW_GET_VAR(__GLEW_EXT_texture_env_combine)/;"	d
GLEW_EXT_texture_env_dot3	glew.h	/^#define GLEW_EXT_texture_env_dot3 GLEW_GET_VAR(__GLEW_EXT_texture_env_dot3)/;"	d
GLEW_EXT_texture_filter_anisotropic	glew.h	/^#define GLEW_EXT_texture_filter_anisotropic GLEW_GET_VAR(__GLEW_EXT_texture_filter_anisotropic)/;"	d
GLEW_EXT_texture_integer	glew.h	/^#define GLEW_EXT_texture_integer GLEW_GET_VAR(__GLEW_EXT_texture_integer)/;"	d
GLEW_EXT_texture_lod_bias	glew.h	/^#define GLEW_EXT_texture_lod_bias GLEW_GET_VAR(__GLEW_EXT_texture_lod_bias)/;"	d
GLEW_EXT_texture_mirror_clamp	glew.h	/^#define GLEW_EXT_texture_mirror_clamp GLEW_GET_VAR(__GLEW_EXT_texture_mirror_clamp)/;"	d
GLEW_EXT_texture_object	glew.h	/^#define GLEW_EXT_texture_object GLEW_GET_VAR(__GLEW_EXT_texture_object)/;"	d
GLEW_EXT_texture_perturb_normal	glew.h	/^#define GLEW_EXT_texture_perturb_normal GLEW_GET_VAR(__GLEW_EXT_texture_perturb_normal)/;"	d
GLEW_EXT_texture_rectangle	glew.h	/^#define GLEW_EXT_texture_rectangle GLEW_GET_VAR(__GLEW_EXT_texture_rectangle)/;"	d
GLEW_EXT_texture_sRGB	glew.h	/^#define GLEW_EXT_texture_sRGB GLEW_GET_VAR(__GLEW_EXT_texture_sRGB)/;"	d
GLEW_EXT_texture_sRGB_decode	glew.h	/^#define GLEW_EXT_texture_sRGB_decode GLEW_GET_VAR(__GLEW_EXT_texture_sRGB_decode)/;"	d
GLEW_EXT_texture_shared_exponent	glew.h	/^#define GLEW_EXT_texture_shared_exponent GLEW_GET_VAR(__GLEW_EXT_texture_shared_exponent)/;"	d
GLEW_EXT_texture_snorm	glew.h	/^#define GLEW_EXT_texture_snorm GLEW_GET_VAR(__GLEW_EXT_texture_snorm)/;"	d
GLEW_EXT_texture_swizzle	glew.h	/^#define GLEW_EXT_texture_swizzle GLEW_GET_VAR(__GLEW_EXT_texture_swizzle)/;"	d
GLEW_EXT_timer_query	glew.h	/^#define GLEW_EXT_timer_query GLEW_GET_VAR(__GLEW_EXT_timer_query)/;"	d
GLEW_EXT_transform_feedback	glew.h	/^#define GLEW_EXT_transform_feedback GLEW_GET_VAR(__GLEW_EXT_transform_feedback)/;"	d
GLEW_EXT_vertex_array	glew.h	/^#define GLEW_EXT_vertex_array GLEW_GET_VAR(__GLEW_EXT_vertex_array)/;"	d
GLEW_EXT_vertex_array_bgra	glew.h	/^#define GLEW_EXT_vertex_array_bgra GLEW_GET_VAR(__GLEW_EXT_vertex_array_bgra)/;"	d
GLEW_EXT_vertex_attrib_64bit	glew.h	/^#define GLEW_EXT_vertex_attrib_64bit GLEW_GET_VAR(__GLEW_EXT_vertex_attrib_64bit)/;"	d
GLEW_EXT_vertex_shader	glew.h	/^#define GLEW_EXT_vertex_shader GLEW_GET_VAR(__GLEW_EXT_vertex_shader)/;"	d
GLEW_EXT_vertex_weighting	glew.h	/^#define GLEW_EXT_vertex_weighting GLEW_GET_VAR(__GLEW_EXT_vertex_weighting)/;"	d
GLEW_EXT_x11_sync_object	glew.h	/^#define GLEW_EXT_x11_sync_object GLEW_GET_VAR(__GLEW_EXT_x11_sync_object)/;"	d
GLEW_FUN_EXPORT	glew.h	/^#define GLEW_FUN_EXPORT /;"	d
GLEW_FUN_EXPORT	glew.h	/^#define GLEW_FUN_EXPORT$/;"	d
GLEW_GET_FUN	glew.h	/^#  define GLEW_GET_FUN(/;"	d
GLEW_GET_FUN	glew.h	/^#define GLEW_GET_FUN(/;"	d
GLEW_GET_VAR	glew.h	/^#define GLEW_GET_VAR(/;"	d
GLEW_GREMEDY_frame_terminator	glew.h	/^#define GLEW_GREMEDY_frame_terminator GLEW_GET_VAR(__GLEW_GREMEDY_frame_terminator)/;"	d
GLEW_GREMEDY_string_marker	glew.h	/^#define GLEW_GREMEDY_string_marker GLEW_GET_VAR(__GLEW_GREMEDY_string_marker)/;"	d
GLEW_HP_convolution_border_modes	glew.h	/^#define GLEW_HP_convolution_border_modes GLEW_GET_VAR(__GLEW_HP_convolution_border_modes)/;"	d
GLEW_HP_image_transform	glew.h	/^#define GLEW_HP_image_transform GLEW_GET_VAR(__GLEW_HP_image_transform)/;"	d
GLEW_HP_occlusion_test	glew.h	/^#define GLEW_HP_occlusion_test GLEW_GET_VAR(__GLEW_HP_occlusion_test)/;"	d
GLEW_HP_texture_lighting	glew.h	/^#define GLEW_HP_texture_lighting GLEW_GET_VAR(__GLEW_HP_texture_lighting)/;"	d
GLEW_IBM_cull_vertex	glew.h	/^#define GLEW_IBM_cull_vertex GLEW_GET_VAR(__GLEW_IBM_cull_vertex)/;"	d
GLEW_IBM_multimode_draw_arrays	glew.h	/^#define GLEW_IBM_multimode_draw_arrays GLEW_GET_VAR(__GLEW_IBM_multimode_draw_arrays)/;"	d
GLEW_IBM_rasterpos_clip	glew.h	/^#define GLEW_IBM_rasterpos_clip GLEW_GET_VAR(__GLEW_IBM_rasterpos_clip)/;"	d
GLEW_IBM_static_data	glew.h	/^#define GLEW_IBM_static_data GLEW_GET_VAR(__GLEW_IBM_static_data)/;"	d
GLEW_IBM_texture_mirrored_repeat	glew.h	/^#define GLEW_IBM_texture_mirrored_repeat GLEW_GET_VAR(__GLEW_IBM_texture_mirrored_repeat)/;"	d
GLEW_IBM_vertex_array_lists	glew.h	/^#define GLEW_IBM_vertex_array_lists GLEW_GET_VAR(__GLEW_IBM_vertex_array_lists)/;"	d
GLEW_INGR_color_clamp	glew.h	/^#define GLEW_INGR_color_clamp GLEW_GET_VAR(__GLEW_INGR_color_clamp)/;"	d
GLEW_INGR_interlace_read	glew.h	/^#define GLEW_INGR_interlace_read GLEW_GET_VAR(__GLEW_INGR_interlace_read)/;"	d
GLEW_INTEL_fragment_shader_ordering	glew.h	/^#define GLEW_INTEL_fragment_shader_ordering GLEW_GET_VAR(__GLEW_INTEL_fragment_shader_ordering)/;"	d
GLEW_INTEL_map_texture	glew.h	/^#define GLEW_INTEL_map_texture GLEW_GET_VAR(__GLEW_INTEL_map_texture)/;"	d
GLEW_INTEL_parallel_arrays	glew.h	/^#define GLEW_INTEL_parallel_arrays GLEW_GET_VAR(__GLEW_INTEL_parallel_arrays)/;"	d
GLEW_INTEL_performance_query	glew.h	/^#define GLEW_INTEL_performance_query GLEW_GET_VAR(__GLEW_INTEL_performance_query)/;"	d
GLEW_INTEL_texture_scissor	glew.h	/^#define GLEW_INTEL_texture_scissor GLEW_GET_VAR(__GLEW_INTEL_texture_scissor)/;"	d
GLEW_KHR_blend_equation_advanced	glew.h	/^#define GLEW_KHR_blend_equation_advanced GLEW_GET_VAR(__GLEW_KHR_blend_equation_advanced)/;"	d
GLEW_KHR_blend_equation_advanced_coherent	glew.h	/^#define GLEW_KHR_blend_equation_advanced_coherent GLEW_GET_VAR(__GLEW_KHR_blend_equation_advance/;"	d
GLEW_KHR_context_flush_control	glew.h	/^#define GLEW_KHR_context_flush_control GLEW_GET_VAR(__GLEW_KHR_context_flush_control)/;"	d
GLEW_KHR_debug	glew.h	/^#define GLEW_KHR_debug GLEW_GET_VAR(__GLEW_KHR_debug)/;"	d
GLEW_KHR_robust_buffer_access_behavior	glew.h	/^#define GLEW_KHR_robust_buffer_access_behavior GLEW_GET_VAR(__GLEW_KHR_robust_buffer_access_beha/;"	d
GLEW_KHR_robustness	glew.h	/^#define GLEW_KHR_robustness GLEW_GET_VAR(__GLEW_KHR_robustness)/;"	d
GLEW_KHR_texture_compression_astc_hdr	glew.h	/^#define GLEW_KHR_texture_compression_astc_hdr GLEW_GET_VAR(__GLEW_KHR_texture_compression_astc_h/;"	d
GLEW_KHR_texture_compression_astc_ldr	glew.h	/^#define GLEW_KHR_texture_compression_astc_ldr GLEW_GET_VAR(__GLEW_KHR_texture_compression_astc_l/;"	d
GLEW_KTX_buffer_region	glew.h	/^#define GLEW_KTX_buffer_region GLEW_GET_VAR(__GLEW_KTX_buffer_region)/;"	d
GLEW_MESAX_texture_stack	glew.h	/^#define GLEW_MESAX_texture_stack GLEW_GET_VAR(__GLEW_MESAX_texture_stack)/;"	d
GLEW_MESA_pack_invert	glew.h	/^#define GLEW_MESA_pack_invert GLEW_GET_VAR(__GLEW_MESA_pack_invert)/;"	d
GLEW_MESA_resize_buffers	glew.h	/^#define GLEW_MESA_resize_buffers GLEW_GET_VAR(__GLEW_MESA_resize_buffers)/;"	d
GLEW_MESA_window_pos	glew.h	/^#define GLEW_MESA_window_pos GLEW_GET_VAR(__GLEW_MESA_window_pos)/;"	d
GLEW_MESA_ycbcr_texture	glew.h	/^#define GLEW_MESA_ycbcr_texture GLEW_GET_VAR(__GLEW_MESA_ycbcr_texture)/;"	d
GLEW_NO_ERROR	glew.h	/^#define GLEW_NO_ERROR /;"	d
GLEW_NO_GLU	glew.h	/^#      define GLEW_NO_GLU$/;"	d
GLEW_NVX_conditional_render	glew.h	/^#define GLEW_NVX_conditional_render GLEW_GET_VAR(__GLEW_NVX_conditional_render)/;"	d
GLEW_NVX_gpu_memory_info	glew.h	/^#define GLEW_NVX_gpu_memory_info GLEW_GET_VAR(__GLEW_NVX_gpu_memory_info)/;"	d
GLEW_NV_bindless_multi_draw_indirect	glew.h	/^#define GLEW_NV_bindless_multi_draw_indirect GLEW_GET_VAR(__GLEW_NV_bindless_multi_draw_indirect/;"	d
GLEW_NV_bindless_multi_draw_indirect_count	glew.h	/^#define GLEW_NV_bindless_multi_draw_indirect_count GLEW_GET_VAR(__GLEW_NV_bindless_multi_draw_in/;"	d
GLEW_NV_bindless_texture	glew.h	/^#define GLEW_NV_bindless_texture GLEW_GET_VAR(__GLEW_NV_bindless_texture)/;"	d
GLEW_NV_blend_equation_advanced	glew.h	/^#define GLEW_NV_blend_equation_advanced GLEW_GET_VAR(__GLEW_NV_blend_equation_advanced)/;"	d
GLEW_NV_blend_equation_advanced_coherent	glew.h	/^#define GLEW_NV_blend_equation_advanced_coherent GLEW_GET_VAR(__GLEW_NV_blend_equation_advanced_/;"	d
GLEW_NV_blend_square	glew.h	/^#define GLEW_NV_blend_square GLEW_GET_VAR(__GLEW_NV_blend_square)/;"	d
GLEW_NV_compute_program5	glew.h	/^#define GLEW_NV_compute_program5 GLEW_GET_VAR(__GLEW_NV_compute_program5)/;"	d
GLEW_NV_conditional_render	glew.h	/^#define GLEW_NV_conditional_render GLEW_GET_VAR(__GLEW_NV_conditional_render)/;"	d
GLEW_NV_copy_depth_to_color	glew.h	/^#define GLEW_NV_copy_depth_to_color GLEW_GET_VAR(__GLEW_NV_copy_depth_to_color)/;"	d
GLEW_NV_copy_image	glew.h	/^#define GLEW_NV_copy_image GLEW_GET_VAR(__GLEW_NV_copy_image)/;"	d
GLEW_NV_deep_texture3D	glew.h	/^#define GLEW_NV_deep_texture3D GLEW_GET_VAR(__GLEW_NV_deep_texture3D)/;"	d
GLEW_NV_depth_buffer_float	glew.h	/^#define GLEW_NV_depth_buffer_float GLEW_GET_VAR(__GLEW_NV_depth_buffer_float)/;"	d
GLEW_NV_depth_clamp	glew.h	/^#define GLEW_NV_depth_clamp GLEW_GET_VAR(__GLEW_NV_depth_clamp)/;"	d
GLEW_NV_depth_range_unclamped	glew.h	/^#define GLEW_NV_depth_range_unclamped GLEW_GET_VAR(__GLEW_NV_depth_range_unclamped)/;"	d
GLEW_NV_draw_texture	glew.h	/^#define GLEW_NV_draw_texture GLEW_GET_VAR(__GLEW_NV_draw_texture)/;"	d
GLEW_NV_evaluators	glew.h	/^#define GLEW_NV_evaluators GLEW_GET_VAR(__GLEW_NV_evaluators)/;"	d
GLEW_NV_explicit_multisample	glew.h	/^#define GLEW_NV_explicit_multisample GLEW_GET_VAR(__GLEW_NV_explicit_multisample)/;"	d
GLEW_NV_fence	glew.h	/^#define GLEW_NV_fence GLEW_GET_VAR(__GLEW_NV_fence)/;"	d
GLEW_NV_float_buffer	glew.h	/^#define GLEW_NV_float_buffer GLEW_GET_VAR(__GLEW_NV_float_buffer)/;"	d
GLEW_NV_fog_distance	glew.h	/^#define GLEW_NV_fog_distance GLEW_GET_VAR(__GLEW_NV_fog_distance)/;"	d
GLEW_NV_fragment_program	glew.h	/^#define GLEW_NV_fragment_program GLEW_GET_VAR(__GLEW_NV_fragment_program)/;"	d
GLEW_NV_fragment_program2	glew.h	/^#define GLEW_NV_fragment_program2 GLEW_GET_VAR(__GLEW_NV_fragment_program2)/;"	d
GLEW_NV_fragment_program4	glew.h	/^#define GLEW_NV_fragment_program4 GLEW_GET_VAR(__GLEW_NV_fragment_program4)/;"	d
GLEW_NV_fragment_program_option	glew.h	/^#define GLEW_NV_fragment_program_option GLEW_GET_VAR(__GLEW_NV_fragment_program_option)/;"	d
GLEW_NV_framebuffer_multisample_coverage	glew.h	/^#define GLEW_NV_framebuffer_multisample_coverage GLEW_GET_VAR(__GLEW_NV_framebuffer_multisample_/;"	d
GLEW_NV_geometry_program4	glew.h	/^#define GLEW_NV_geometry_program4 GLEW_GET_VAR(__GLEW_NV_geometry_program4)/;"	d
GLEW_NV_geometry_shader4	glew.h	/^#define GLEW_NV_geometry_shader4 GLEW_GET_VAR(__GLEW_NV_geometry_shader4)/;"	d
GLEW_NV_gpu_program4	glew.h	/^#define GLEW_NV_gpu_program4 GLEW_GET_VAR(__GLEW_NV_gpu_program4)/;"	d
GLEW_NV_gpu_program5	glew.h	/^#define GLEW_NV_gpu_program5 GLEW_GET_VAR(__GLEW_NV_gpu_program5)/;"	d
GLEW_NV_gpu_program5_mem_extended	glew.h	/^#define GLEW_NV_gpu_program5_mem_extended GLEW_GET_VAR(__GLEW_NV_gpu_program5_mem_extended)/;"	d
GLEW_NV_gpu_program_fp64	glew.h	/^#define GLEW_NV_gpu_program_fp64 GLEW_GET_VAR(__GLEW_NV_gpu_program_fp64)/;"	d
GLEW_NV_gpu_shader5	glew.h	/^#define GLEW_NV_gpu_shader5 GLEW_GET_VAR(__GLEW_NV_gpu_shader5)/;"	d
GLEW_NV_half_float	glew.h	/^#define GLEW_NV_half_float GLEW_GET_VAR(__GLEW_NV_half_float)/;"	d
GLEW_NV_light_max_exponent	glew.h	/^#define GLEW_NV_light_max_exponent GLEW_GET_VAR(__GLEW_NV_light_max_exponent)/;"	d
GLEW_NV_multisample_coverage	glew.h	/^#define GLEW_NV_multisample_coverage GLEW_GET_VAR(__GLEW_NV_multisample_coverage)/;"	d
GLEW_NV_multisample_filter_hint	glew.h	/^#define GLEW_NV_multisample_filter_hint GLEW_GET_VAR(__GLEW_NV_multisample_filter_hint)/;"	d
GLEW_NV_occlusion_query	glew.h	/^#define GLEW_NV_occlusion_query GLEW_GET_VAR(__GLEW_NV_occlusion_query)/;"	d
GLEW_NV_packed_depth_stencil	glew.h	/^#define GLEW_NV_packed_depth_stencil GLEW_GET_VAR(__GLEW_NV_packed_depth_stencil)/;"	d
GLEW_NV_parameter_buffer_object	glew.h	/^#define GLEW_NV_parameter_buffer_object GLEW_GET_VAR(__GLEW_NV_parameter_buffer_object)/;"	d
GLEW_NV_parameter_buffer_object2	glew.h	/^#define GLEW_NV_parameter_buffer_object2 GLEW_GET_VAR(__GLEW_NV_parameter_buffer_object2)/;"	d
GLEW_NV_path_rendering	glew.h	/^#define GLEW_NV_path_rendering GLEW_GET_VAR(__GLEW_NV_path_rendering)/;"	d
GLEW_NV_pixel_data_range	glew.h	/^#define GLEW_NV_pixel_data_range GLEW_GET_VAR(__GLEW_NV_pixel_data_range)/;"	d
GLEW_NV_point_sprite	glew.h	/^#define GLEW_NV_point_sprite GLEW_GET_VAR(__GLEW_NV_point_sprite)/;"	d
GLEW_NV_present_video	glew.h	/^#define GLEW_NV_present_video GLEW_GET_VAR(__GLEW_NV_present_video)/;"	d
GLEW_NV_primitive_restart	glew.h	/^#define GLEW_NV_primitive_restart GLEW_GET_VAR(__GLEW_NV_primitive_restart)/;"	d
GLEW_NV_register_combiners	glew.h	/^#define GLEW_NV_register_combiners GLEW_GET_VAR(__GLEW_NV_register_combiners)/;"	d
GLEW_NV_register_combiners2	glew.h	/^#define GLEW_NV_register_combiners2 GLEW_GET_VAR(__GLEW_NV_register_combiners2)/;"	d
GLEW_NV_shader_atomic_counters	glew.h	/^#define GLEW_NV_shader_atomic_counters GLEW_GET_VAR(__GLEW_NV_shader_atomic_counters)/;"	d
GLEW_NV_shader_atomic_float	glew.h	/^#define GLEW_NV_shader_atomic_float GLEW_GET_VAR(__GLEW_NV_shader_atomic_float)/;"	d
GLEW_NV_shader_atomic_int64	glew.h	/^#define GLEW_NV_shader_atomic_int64 GLEW_GET_VAR(__GLEW_NV_shader_atomic_int64)/;"	d
GLEW_NV_shader_buffer_load	glew.h	/^#define GLEW_NV_shader_buffer_load GLEW_GET_VAR(__GLEW_NV_shader_buffer_load)/;"	d
GLEW_NV_shader_storage_buffer_object	glew.h	/^#define GLEW_NV_shader_storage_buffer_object GLEW_GET_VAR(__GLEW_NV_shader_storage_buffer_object/;"	d
GLEW_NV_shader_thread_group	glew.h	/^#define GLEW_NV_shader_thread_group GLEW_GET_VAR(__GLEW_NV_shader_thread_group)/;"	d
GLEW_NV_shader_thread_shuffle	glew.h	/^#define GLEW_NV_shader_thread_shuffle GLEW_GET_VAR(__GLEW_NV_shader_thread_shuffle)/;"	d
GLEW_NV_tessellation_program5	glew.h	/^#define GLEW_NV_tessellation_program5 GLEW_GET_VAR(__GLEW_NV_tessellation_program5)/;"	d
GLEW_NV_texgen_emboss	glew.h	/^#define GLEW_NV_texgen_emboss GLEW_GET_VAR(__GLEW_NV_texgen_emboss)/;"	d
GLEW_NV_texgen_reflection	glew.h	/^#define GLEW_NV_texgen_reflection GLEW_GET_VAR(__GLEW_NV_texgen_reflection)/;"	d
GLEW_NV_texture_barrier	glew.h	/^#define GLEW_NV_texture_barrier GLEW_GET_VAR(__GLEW_NV_texture_barrier)/;"	d
GLEW_NV_texture_compression_vtc	glew.h	/^#define GLEW_NV_texture_compression_vtc GLEW_GET_VAR(__GLEW_NV_texture_compression_vtc)/;"	d
GLEW_NV_texture_env_combine4	glew.h	/^#define GLEW_NV_texture_env_combine4 GLEW_GET_VAR(__GLEW_NV_texture_env_combine4)/;"	d
GLEW_NV_texture_expand_normal	glew.h	/^#define GLEW_NV_texture_expand_normal GLEW_GET_VAR(__GLEW_NV_texture_expand_normal)/;"	d
GLEW_NV_texture_multisample	glew.h	/^#define GLEW_NV_texture_multisample GLEW_GET_VAR(__GLEW_NV_texture_multisample)/;"	d
GLEW_NV_texture_rectangle	glew.h	/^#define GLEW_NV_texture_rectangle GLEW_GET_VAR(__GLEW_NV_texture_rectangle)/;"	d
GLEW_NV_texture_shader	glew.h	/^#define GLEW_NV_texture_shader GLEW_GET_VAR(__GLEW_NV_texture_shader)/;"	d
GLEW_NV_texture_shader2	glew.h	/^#define GLEW_NV_texture_shader2 GLEW_GET_VAR(__GLEW_NV_texture_shader2)/;"	d
GLEW_NV_texture_shader3	glew.h	/^#define GLEW_NV_texture_shader3 GLEW_GET_VAR(__GLEW_NV_texture_shader3)/;"	d
GLEW_NV_transform_feedback	glew.h	/^#define GLEW_NV_transform_feedback GLEW_GET_VAR(__GLEW_NV_transform_feedback)/;"	d
GLEW_NV_transform_feedback2	glew.h	/^#define GLEW_NV_transform_feedback2 GLEW_GET_VAR(__GLEW_NV_transform_feedback2)/;"	d
GLEW_NV_vdpau_interop	glew.h	/^#define GLEW_NV_vdpau_interop GLEW_GET_VAR(__GLEW_NV_vdpau_interop)/;"	d
GLEW_NV_vertex_array_range	glew.h	/^#define GLEW_NV_vertex_array_range GLEW_GET_VAR(__GLEW_NV_vertex_array_range)/;"	d
GLEW_NV_vertex_array_range2	glew.h	/^#define GLEW_NV_vertex_array_range2 GLEW_GET_VAR(__GLEW_NV_vertex_array_range2)/;"	d
GLEW_NV_vertex_attrib_integer_64bit	glew.h	/^#define GLEW_NV_vertex_attrib_integer_64bit GLEW_GET_VAR(__GLEW_NV_vertex_attrib_integer_64bit)/;"	d
GLEW_NV_vertex_buffer_unified_memory	glew.h	/^#define GLEW_NV_vertex_buffer_unified_memory GLEW_GET_VAR(__GLEW_NV_vertex_buffer_unified_memory/;"	d
GLEW_NV_vertex_program	glew.h	/^#define GLEW_NV_vertex_program GLEW_GET_VAR(__GLEW_NV_vertex_program)/;"	d
GLEW_NV_vertex_program1_1	glew.h	/^#define GLEW_NV_vertex_program1_1 GLEW_GET_VAR(__GLEW_NV_vertex_program1_1)/;"	d
GLEW_NV_vertex_program2	glew.h	/^#define GLEW_NV_vertex_program2 GLEW_GET_VAR(__GLEW_NV_vertex_program2)/;"	d
GLEW_NV_vertex_program2_option	glew.h	/^#define GLEW_NV_vertex_program2_option GLEW_GET_VAR(__GLEW_NV_vertex_program2_option)/;"	d
GLEW_NV_vertex_program3	glew.h	/^#define GLEW_NV_vertex_program3 GLEW_GET_VAR(__GLEW_NV_vertex_program3)/;"	d
GLEW_NV_vertex_program4	glew.h	/^#define GLEW_NV_vertex_program4 GLEW_GET_VAR(__GLEW_NV_vertex_program4)/;"	d
GLEW_NV_video_capture	glew.h	/^#define GLEW_NV_video_capture GLEW_GET_VAR(__GLEW_NV_video_capture)/;"	d
GLEW_OES_byte_coordinates	glew.h	/^#define GLEW_OES_byte_coordinates GLEW_GET_VAR(__GLEW_OES_byte_coordinates)/;"	d
GLEW_OES_compressed_paletted_texture	glew.h	/^#define GLEW_OES_compressed_paletted_texture GLEW_GET_VAR(__GLEW_OES_compressed_paletted_texture/;"	d
GLEW_OES_read_format	glew.h	/^#define GLEW_OES_read_format GLEW_GET_VAR(__GLEW_OES_read_format)/;"	d
GLEW_OES_single_precision	glew.h	/^#define GLEW_OES_single_precision GLEW_GET_VAR(__GLEW_OES_single_precision)/;"	d
GLEW_OK	glew.h	/^#define GLEW_OK /;"	d
GLEW_OML_interlace	glew.h	/^#define GLEW_OML_interlace GLEW_GET_VAR(__GLEW_OML_interlace)/;"	d
GLEW_OML_resample	glew.h	/^#define GLEW_OML_resample GLEW_GET_VAR(__GLEW_OML_resample)/;"	d
GLEW_OML_subsample	glew.h	/^#define GLEW_OML_subsample GLEW_GET_VAR(__GLEW_OML_subsample)/;"	d
GLEW_PGI_misc_hints	glew.h	/^#define GLEW_PGI_misc_hints GLEW_GET_VAR(__GLEW_PGI_misc_hints)/;"	d
GLEW_PGI_vertex_hints	glew.h	/^#define GLEW_PGI_vertex_hints GLEW_GET_VAR(__GLEW_PGI_vertex_hints)/;"	d
GLEW_REGAL_ES1_0_compatibility	glew.h	/^#define GLEW_REGAL_ES1_0_compatibility GLEW_GET_VAR(__GLEW_REGAL_ES1_0_compatibility)/;"	d
GLEW_REGAL_ES1_1_compatibility	glew.h	/^#define GLEW_REGAL_ES1_1_compatibility GLEW_GET_VAR(__GLEW_REGAL_ES1_1_compatibility)/;"	d
GLEW_REGAL_enable	glew.h	/^#define GLEW_REGAL_enable GLEW_GET_VAR(__GLEW_REGAL_enable)/;"	d
GLEW_REGAL_error_string	glew.h	/^#define GLEW_REGAL_error_string GLEW_GET_VAR(__GLEW_REGAL_error_string)/;"	d
GLEW_REGAL_extension_query	glew.h	/^#define GLEW_REGAL_extension_query GLEW_GET_VAR(__GLEW_REGAL_extension_query)/;"	d
GLEW_REGAL_log	glew.h	/^#define GLEW_REGAL_log GLEW_GET_VAR(__GLEW_REGAL_log)/;"	d
GLEW_REGAL_proc_address	glew.h	/^#define GLEW_REGAL_proc_address GLEW_GET_VAR(__GLEW_REGAL_proc_address)/;"	d
GLEW_REND_screen_coordinates	glew.h	/^#define GLEW_REND_screen_coordinates GLEW_GET_VAR(__GLEW_REND_screen_coordinates)/;"	d
GLEW_S3_s3tc	glew.h	/^#define GLEW_S3_s3tc GLEW_GET_VAR(__GLEW_S3_s3tc)/;"	d
GLEW_SGIS_color_range	glew.h	/^#define GLEW_SGIS_color_range GLEW_GET_VAR(__GLEW_SGIS_color_range)/;"	d
GLEW_SGIS_detail_texture	glew.h	/^#define GLEW_SGIS_detail_texture GLEW_GET_VAR(__GLEW_SGIS_detail_texture)/;"	d
GLEW_SGIS_fog_function	glew.h	/^#define GLEW_SGIS_fog_function GLEW_GET_VAR(__GLEW_SGIS_fog_function)/;"	d
GLEW_SGIS_generate_mipmap	glew.h	/^#define GLEW_SGIS_generate_mipmap GLEW_GET_VAR(__GLEW_SGIS_generate_mipmap)/;"	d
GLEW_SGIS_multisample	glew.h	/^#define GLEW_SGIS_multisample GLEW_GET_VAR(__GLEW_SGIS_multisample)/;"	d
GLEW_SGIS_pixel_texture	glew.h	/^#define GLEW_SGIS_pixel_texture GLEW_GET_VAR(__GLEW_SGIS_pixel_texture)/;"	d
GLEW_SGIS_point_line_texgen	glew.h	/^#define GLEW_SGIS_point_line_texgen GLEW_GET_VAR(__GLEW_SGIS_point_line_texgen)/;"	d
GLEW_SGIS_sharpen_texture	glew.h	/^#define GLEW_SGIS_sharpen_texture GLEW_GET_VAR(__GLEW_SGIS_sharpen_texture)/;"	d
GLEW_SGIS_texture4D	glew.h	/^#define GLEW_SGIS_texture4D GLEW_GET_VAR(__GLEW_SGIS_texture4D)/;"	d
GLEW_SGIS_texture_border_clamp	glew.h	/^#define GLEW_SGIS_texture_border_clamp GLEW_GET_VAR(__GLEW_SGIS_texture_border_clamp)/;"	d
GLEW_SGIS_texture_edge_clamp	glew.h	/^#define GLEW_SGIS_texture_edge_clamp GLEW_GET_VAR(__GLEW_SGIS_texture_edge_clamp)/;"	d
GLEW_SGIS_texture_filter4	glew.h	/^#define GLEW_SGIS_texture_filter4 GLEW_GET_VAR(__GLEW_SGIS_texture_filter4)/;"	d
GLEW_SGIS_texture_lod	glew.h	/^#define GLEW_SGIS_texture_lod GLEW_GET_VAR(__GLEW_SGIS_texture_lod)/;"	d
GLEW_SGIS_texture_select	glew.h	/^#define GLEW_SGIS_texture_select GLEW_GET_VAR(__GLEW_SGIS_texture_select)/;"	d
GLEW_SGIX_async	glew.h	/^#define GLEW_SGIX_async GLEW_GET_VAR(__GLEW_SGIX_async)/;"	d
GLEW_SGIX_async_histogram	glew.h	/^#define GLEW_SGIX_async_histogram GLEW_GET_VAR(__GLEW_SGIX_async_histogram)/;"	d
GLEW_SGIX_async_pixel	glew.h	/^#define GLEW_SGIX_async_pixel GLEW_GET_VAR(__GLEW_SGIX_async_pixel)/;"	d
GLEW_SGIX_blend_alpha_minmax	glew.h	/^#define GLEW_SGIX_blend_alpha_minmax GLEW_GET_VAR(__GLEW_SGIX_blend_alpha_minmax)/;"	d
GLEW_SGIX_clipmap	glew.h	/^#define GLEW_SGIX_clipmap GLEW_GET_VAR(__GLEW_SGIX_clipmap)/;"	d
GLEW_SGIX_convolution_accuracy	glew.h	/^#define GLEW_SGIX_convolution_accuracy GLEW_GET_VAR(__GLEW_SGIX_convolution_accuracy)/;"	d
GLEW_SGIX_depth_texture	glew.h	/^#define GLEW_SGIX_depth_texture GLEW_GET_VAR(__GLEW_SGIX_depth_texture)/;"	d
GLEW_SGIX_flush_raster	glew.h	/^#define GLEW_SGIX_flush_raster GLEW_GET_VAR(__GLEW_SGIX_flush_raster)/;"	d
GLEW_SGIX_fog_offset	glew.h	/^#define GLEW_SGIX_fog_offset GLEW_GET_VAR(__GLEW_SGIX_fog_offset)/;"	d
GLEW_SGIX_fog_texture	glew.h	/^#define GLEW_SGIX_fog_texture GLEW_GET_VAR(__GLEW_SGIX_fog_texture)/;"	d
GLEW_SGIX_fragment_specular_lighting	glew.h	/^#define GLEW_SGIX_fragment_specular_lighting GLEW_GET_VAR(__GLEW_SGIX_fragment_specular_lighting/;"	d
GLEW_SGIX_framezoom	glew.h	/^#define GLEW_SGIX_framezoom GLEW_GET_VAR(__GLEW_SGIX_framezoom)/;"	d
GLEW_SGIX_interlace	glew.h	/^#define GLEW_SGIX_interlace GLEW_GET_VAR(__GLEW_SGIX_interlace)/;"	d
GLEW_SGIX_ir_instrument1	glew.h	/^#define GLEW_SGIX_ir_instrument1 GLEW_GET_VAR(__GLEW_SGIX_ir_instrument1)/;"	d
GLEW_SGIX_list_priority	glew.h	/^#define GLEW_SGIX_list_priority GLEW_GET_VAR(__GLEW_SGIX_list_priority)/;"	d
GLEW_SGIX_pixel_texture	glew.h	/^#define GLEW_SGIX_pixel_texture GLEW_GET_VAR(__GLEW_SGIX_pixel_texture)/;"	d
GLEW_SGIX_pixel_texture_bits	glew.h	/^#define GLEW_SGIX_pixel_texture_bits GLEW_GET_VAR(__GLEW_SGIX_pixel_texture_bits)/;"	d
GLEW_SGIX_reference_plane	glew.h	/^#define GLEW_SGIX_reference_plane GLEW_GET_VAR(__GLEW_SGIX_reference_plane)/;"	d
GLEW_SGIX_resample	glew.h	/^#define GLEW_SGIX_resample GLEW_GET_VAR(__GLEW_SGIX_resample)/;"	d
GLEW_SGIX_shadow	glew.h	/^#define GLEW_SGIX_shadow GLEW_GET_VAR(__GLEW_SGIX_shadow)/;"	d
GLEW_SGIX_shadow_ambient	glew.h	/^#define GLEW_SGIX_shadow_ambient GLEW_GET_VAR(__GLEW_SGIX_shadow_ambient)/;"	d
GLEW_SGIX_sprite	glew.h	/^#define GLEW_SGIX_sprite GLEW_GET_VAR(__GLEW_SGIX_sprite)/;"	d
GLEW_SGIX_tag_sample_buffer	glew.h	/^#define GLEW_SGIX_tag_sample_buffer GLEW_GET_VAR(__GLEW_SGIX_tag_sample_buffer)/;"	d
GLEW_SGIX_texture_add_env	glew.h	/^#define GLEW_SGIX_texture_add_env GLEW_GET_VAR(__GLEW_SGIX_texture_add_env)/;"	d
GLEW_SGIX_texture_coordinate_clamp	glew.h	/^#define GLEW_SGIX_texture_coordinate_clamp GLEW_GET_VAR(__GLEW_SGIX_texture_coordinate_clamp)/;"	d
GLEW_SGIX_texture_lod_bias	glew.h	/^#define GLEW_SGIX_texture_lod_bias GLEW_GET_VAR(__GLEW_SGIX_texture_lod_bias)/;"	d
GLEW_SGIX_texture_multi_buffer	glew.h	/^#define GLEW_SGIX_texture_multi_buffer GLEW_GET_VAR(__GLEW_SGIX_texture_multi_buffer)/;"	d
GLEW_SGIX_texture_range	glew.h	/^#define GLEW_SGIX_texture_range GLEW_GET_VAR(__GLEW_SGIX_texture_range)/;"	d
GLEW_SGIX_texture_scale_bias	glew.h	/^#define GLEW_SGIX_texture_scale_bias GLEW_GET_VAR(__GLEW_SGIX_texture_scale_bias)/;"	d
GLEW_SGIX_vertex_preclip	glew.h	/^#define GLEW_SGIX_vertex_preclip GLEW_GET_VAR(__GLEW_SGIX_vertex_preclip)/;"	d
GLEW_SGIX_vertex_preclip_hint	glew.h	/^#define GLEW_SGIX_vertex_preclip_hint GLEW_GET_VAR(__GLEW_SGIX_vertex_preclip_hint)/;"	d
GLEW_SGIX_ycrcb	glew.h	/^#define GLEW_SGIX_ycrcb GLEW_GET_VAR(__GLEW_SGIX_ycrcb)/;"	d
GLEW_SGI_color_matrix	glew.h	/^#define GLEW_SGI_color_matrix GLEW_GET_VAR(__GLEW_SGI_color_matrix)/;"	d
GLEW_SGI_color_table	glew.h	/^#define GLEW_SGI_color_table GLEW_GET_VAR(__GLEW_SGI_color_table)/;"	d
GLEW_SGI_texture_color_table	glew.h	/^#define GLEW_SGI_texture_color_table GLEW_GET_VAR(__GLEW_SGI_texture_color_table)/;"	d
GLEW_SUNX_constant_data	glew.h	/^#define GLEW_SUNX_constant_data GLEW_GET_VAR(__GLEW_SUNX_constant_data)/;"	d
GLEW_SUN_convolution_border_modes	glew.h	/^#define GLEW_SUN_convolution_border_modes GLEW_GET_VAR(__GLEW_SUN_convolution_border_modes)/;"	d
GLEW_SUN_global_alpha	glew.h	/^#define GLEW_SUN_global_alpha GLEW_GET_VAR(__GLEW_SUN_global_alpha)/;"	d
GLEW_SUN_mesh_array	glew.h	/^#define GLEW_SUN_mesh_array GLEW_GET_VAR(__GLEW_SUN_mesh_array)/;"	d
GLEW_SUN_read_video_pixels	glew.h	/^#define GLEW_SUN_read_video_pixels GLEW_GET_VAR(__GLEW_SUN_read_video_pixels)/;"	d
GLEW_SUN_slice_accum	glew.h	/^#define GLEW_SUN_slice_accum GLEW_GET_VAR(__GLEW_SUN_slice_accum)/;"	d
GLEW_SUN_triangle_list	glew.h	/^#define GLEW_SUN_triangle_list GLEW_GET_VAR(__GLEW_SUN_triangle_list)/;"	d
GLEW_SUN_vertex	glew.h	/^#define GLEW_SUN_vertex GLEW_GET_VAR(__GLEW_SUN_vertex)/;"	d
GLEW_VAR_EXPORT	glew.h	/^#define GLEW_VAR_EXPORT /;"	d
GLEW_VAR_EXPORT	glew.h	/^#define GLEW_VAR_EXPORT$/;"	d
GLEW_VERSION	glew.h	/^#define GLEW_VERSION /;"	d
GLEW_VERSION_1_1	glew.h	/^#define GLEW_VERSION_1_1 GLEW_GET_VAR(__GLEW_VERSION_1_1)/;"	d
GLEW_VERSION_1_2	glew.h	/^#define GLEW_VERSION_1_2 GLEW_GET_VAR(__GLEW_VERSION_1_2)/;"	d
GLEW_VERSION_1_2_1	glew.h	/^#define GLEW_VERSION_1_2_1 GLEW_GET_VAR(__GLEW_VERSION_1_2_1)/;"	d
GLEW_VERSION_1_3	glew.h	/^#define GLEW_VERSION_1_3 GLEW_GET_VAR(__GLEW_VERSION_1_3)/;"	d
GLEW_VERSION_1_4	glew.h	/^#define GLEW_VERSION_1_4 GLEW_GET_VAR(__GLEW_VERSION_1_4)/;"	d
GLEW_VERSION_1_5	glew.h	/^#define GLEW_VERSION_1_5 GLEW_GET_VAR(__GLEW_VERSION_1_5)/;"	d
GLEW_VERSION_2_0	glew.h	/^#define GLEW_VERSION_2_0 GLEW_GET_VAR(__GLEW_VERSION_2_0)/;"	d
GLEW_VERSION_2_1	glew.h	/^#define GLEW_VERSION_2_1 GLEW_GET_VAR(__GLEW_VERSION_2_1)/;"	d
GLEW_VERSION_3_0	glew.h	/^#define GLEW_VERSION_3_0 GLEW_GET_VAR(__GLEW_VERSION_3_0)/;"	d
GLEW_VERSION_3_1	glew.h	/^#define GLEW_VERSION_3_1 GLEW_GET_VAR(__GLEW_VERSION_3_1)/;"	d
GLEW_VERSION_3_2	glew.h	/^#define GLEW_VERSION_3_2 GLEW_GET_VAR(__GLEW_VERSION_3_2)/;"	d
GLEW_VERSION_3_3	glew.h	/^#define GLEW_VERSION_3_3 GLEW_GET_VAR(__GLEW_VERSION_3_3)/;"	d
GLEW_VERSION_4_0	glew.h	/^#define GLEW_VERSION_4_0 GLEW_GET_VAR(__GLEW_VERSION_4_0)/;"	d
GLEW_VERSION_4_1	glew.h	/^#define GLEW_VERSION_4_1 GLEW_GET_VAR(__GLEW_VERSION_4_1)/;"	d
GLEW_VERSION_4_2	glew.h	/^#define GLEW_VERSION_4_2 GLEW_GET_VAR(__GLEW_VERSION_4_2)/;"	d
GLEW_VERSION_4_3	glew.h	/^#define GLEW_VERSION_4_3 GLEW_GET_VAR(__GLEW_VERSION_4_3)/;"	d
GLEW_VERSION_4_4	glew.h	/^#define GLEW_VERSION_4_4 GLEW_GET_VAR(__GLEW_VERSION_4_4)/;"	d
GLEW_VERSION_4_5	glew.h	/^#define GLEW_VERSION_4_5 GLEW_GET_VAR(__GLEW_VERSION_4_5)/;"	d
GLEW_VERSION_MAJOR	glew.h	/^#define GLEW_VERSION_MAJOR /;"	d
GLEW_VERSION_MICRO	glew.h	/^#define GLEW_VERSION_MICRO /;"	d
GLEW_VERSION_MINOR	glew.h	/^#define GLEW_VERSION_MINOR /;"	d
GLEW_WINGDIAPI_DEFINED	glew.h	/^#define GLEW_WINGDIAPI_DEFINED$/;"	d
GLEW_WIN_phong_shading	glew.h	/^#define GLEW_WIN_phong_shading GLEW_GET_VAR(__GLEW_WIN_phong_shading)/;"	d
GLEW_WIN_specular_fog	glew.h	/^#define GLEW_WIN_specular_fog GLEW_GET_VAR(__GLEW_WIN_specular_fog)/;"	d
GLEW_WIN_swap_hint	glew.h	/^#define GLEW_WIN_swap_hint GLEW_GET_VAR(__GLEW_WIN_swap_hint)/;"	d
GLLOGPROCREGAL	glew.h	/^typedef void (APIENTRY *GLLOGPROCREGAL)(GLenum stream, GLsizei length, const GLchar *message, vo/;"	t	typeref:typename:void (APIENTRY *)(GLenum stream,GLsizei length,const GLchar * message,void * context)
GLM_ALIGN	glm/detail/setup.hpp	/^#	define GLM_ALIGN$/;"	d
GLM_ALIGN	glm/detail/setup.hpp	/^#	define GLM_ALIGN(/;"	d
GLM_ALIGNED_STRUCT	glm/detail/setup.hpp	/^#	define GLM_ALIGNED_STRUCT(/;"	d
GLM_ALIGNED_TYPEDEF	glm/detail/setup.hpp	/^#	define GLM_ALIGNED_TYPEDEF(/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH (GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH (GLM_ARCH_AVX | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH (GLM_ARCH_AVX | GLM_ARCH_SSE4 | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH (GLM_ARCH_AVX2 | GLM_ARCH_AVX | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH (GLM_ARCH_AVX2 | GLM_ARCH_AVX | GLM_ARCH_SSE4 | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH (GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH (GLM_ARCH_SSE4 | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#		define GLM_ARCH GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#	define GLM_ARCH (GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#	define GLM_ARCH (GLM_ARCH_AVX | GLM_ARCH_SSE4 | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#	define GLM_ARCH (GLM_ARCH_AVX2 | GLM_ARCH_AVX | GLM_ARCH_SSE4 | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#	define GLM_ARCH (GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#	define GLM_ARCH (GLM_ARCH_SSE4 | GLM_ARCH_SSE3 | GLM_ARCH_/;"	d
GLM_ARCH	glm/detail/setup.hpp	/^#	define GLM_ARCH GLM_ARCH_/;"	d
GLM_ARCH_ARM	glm/detail/setup.hpp	/^#define GLM_ARCH_ARM	/;"	d
GLM_ARCH_AVX	glm/detail/setup.hpp	/^#define GLM_ARCH_AVX	/;"	d
GLM_ARCH_AVX2	glm/detail/setup.hpp	/^#define GLM_ARCH_AVX2	/;"	d
GLM_ARCH_PURE	glm/detail/setup.hpp	/^#define GLM_ARCH_PURE	/;"	d
GLM_ARCH_SSE2	glm/detail/setup.hpp	/^#define GLM_ARCH_SSE2	/;"	d
GLM_ARCH_SSE3	glm/detail/setup.hpp	/^#define GLM_ARCH_SSE3	/;"	d
GLM_ARCH_SSE4	glm/detail/setup.hpp	/^#define GLM_ARCH_SSE4	/;"	d
GLM_ARCH_X86	glm/detail/setup.hpp	/^#define GLM_ARCH_X86	/;"	d
GLM_COMPILER	glm/detail/setup.hpp	/^#			define GLM_COMPILER GLM_COMPILER_/;"	d
GLM_COMPILER	glm/detail/setup.hpp	/^#		define GLM_COMPILER (GLM_COMPILER_/;"	d
GLM_COMPILER	glm/detail/setup.hpp	/^#		define GLM_COMPILER GLM_COMPILER_/;"	d
GLM_COMPILER	glm/detail/setup.hpp	/^#	define GLM_COMPILER GLM_COMPILER_/;"	d
GLM_COMPILER_APPLE_CLANG	glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG	/;"	d
GLM_COMPILER_APPLE_CLANG40	glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG40	/;"	d
GLM_COMPILER_APPLE_CLANG41	glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG41	/;"	d
GLM_COMPILER_APPLE_CLANG42	glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG42	/;"	d
GLM_COMPILER_APPLE_CLANG50	glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG50	/;"	d
GLM_COMPILER_APPLE_CLANG51	glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG51	/;"	d
GLM_COMPILER_APPLE_CLANG60	glm/detail/setup.hpp	/^#define GLM_COMPILER_APPLE_CLANG60	/;"	d
GLM_COMPILER_CUDA	glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA	/;"	d
GLM_COMPILER_CUDA40	glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA40	/;"	d
GLM_COMPILER_CUDA41	glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA41	/;"	d
GLM_COMPILER_CUDA42	glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA42	/;"	d
GLM_COMPILER_CUDA50	glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA50	/;"	d
GLM_COMPILER_CUDA60	glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA60	/;"	d
GLM_COMPILER_CUDA65	glm/detail/setup.hpp	/^#define GLM_COMPILER_CUDA65	/;"	d
GLM_COMPILER_GCC	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC	/;"	d
GLM_COMPILER_GCC44	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC44	/;"	d
GLM_COMPILER_GCC45	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC45	/;"	d
GLM_COMPILER_GCC46	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC46	/;"	d
GLM_COMPILER_GCC47	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC47	/;"	d
GLM_COMPILER_GCC48	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC48	/;"	d
GLM_COMPILER_GCC49	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC49	/;"	d
GLM_COMPILER_GCC50	glm/detail/setup.hpp	/^#define GLM_COMPILER_GCC50	/;"	d
GLM_COMPILER_INTEL	glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL	/;"	d
GLM_COMPILER_INTEL12	glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL12	/;"	d
GLM_COMPILER_INTEL12_1	glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL12_1	/;"	d
GLM_COMPILER_INTEL13	glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL13	/;"	d
GLM_COMPILER_INTEL14	glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL14	/;"	d
GLM_COMPILER_INTEL15	glm/detail/setup.hpp	/^#define GLM_COMPILER_INTEL15	/;"	d
GLM_COMPILER_LLVM	glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM	/;"	d
GLM_COMPILER_LLVM32	glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM32	/;"	d
GLM_COMPILER_LLVM33	glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM33	/;"	d
GLM_COMPILER_LLVM34	glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM34	/;"	d
GLM_COMPILER_LLVM35	glm/detail/setup.hpp	/^#define GLM_COMPILER_LLVM35	/;"	d
GLM_COMPILER_UNKNOWN	glm/detail/setup.hpp	/^#define GLM_COMPILER_UNKNOWN	/;"	d
GLM_COMPILER_VC	glm/detail/setup.hpp	/^#define GLM_COMPILER_VC	/;"	d
GLM_COMPILER_VC2010	glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2010	/;"	d
GLM_COMPILER_VC2012	glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2012	/;"	d
GLM_COMPILER_VC2013	glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2013	/;"	d
GLM_COMPILER_VC2015	glm/detail/setup.hpp	/^#define GLM_COMPILER_VC2015	/;"	d
GLM_CONSTEXPR	glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR /;"	d
GLM_CONSTEXPR	glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR$/;"	d
GLM_COUNTOF	glm/detail/setup.hpp	/^#	define GLM_COUNTOF(/;"	d
GLM_CUDA_FUNC_DECL	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DECL /;"	d
GLM_CUDA_FUNC_DECL	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DECL$/;"	d
GLM_CUDA_FUNC_DEF	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DEF /;"	d
GLM_CUDA_FUNC_DEF	glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DEF$/;"	d
GLM_CXX11_ACCESS_CONTROL_SFINAE	glm/detail/_features.hpp	/^#		define GLM_CXX11_ACCESS_CONTROL_SFINAE$/;"	d
GLM_CXX11_ALIAS_TEMPLATE	glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIAS_TEMPLATE$/;"	d
GLM_CXX11_ALIGNAS	glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIGNAS$/;"	d
GLM_CXX11_ATTRIBUTES	glm/detail/_features.hpp	/^#		define GLM_CXX11_ATTRIBUTES$/;"	d
GLM_CXX11_AUTO_TYPE	glm/detail/_features.hpp	/^#		define GLM_CXX11_AUTO_TYPE$/;"	d
GLM_CXX11_CONSTEXPR	glm/detail/_features.hpp	/^#		define GLM_CXX11_CONSTEXPR$/;"	d
GLM_CXX11_DECLTYPE	glm/detail/_features.hpp	/^#		define GLM_CXX11_DECLTYPE$/;"	d
GLM_CXX11_DEFAULTED_FUNCTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULTED_FUNCTIONS$/;"	d
GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS$/;"	d
GLM_CXX11_DELEGATING_CONSTRUCTORS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DELEGATING_CONSTRUCTORS$/;"	d
GLM_CXX11_DELETED_FUNCTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_DELETED_FUNCTIONS$/;"	d
GLM_CXX11_EXPLICIT_CONVERSIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_EXPLICIT_CONVERSIONS$/;"	d
GLM_CXX11_GENERALIZED_INITIALIZERS	glm/detail/_features.hpp	/^#		define GLM_CXX11_GENERALIZED_INITIALIZERS$/;"	d
GLM_CXX11_IMPLICIT_MOVES	glm/detail/_features.hpp	/^#		define GLM_CXX11_IMPLICIT_MOVES$/;"	d
GLM_CXX11_INHERITING_CONSTRUCTORS	glm/detail/_features.hpp	/^#		define GLM_CXX11_INHERITING_CONSTRUCTORS$/;"	d
GLM_CXX11_INLINE_NAMESPACES	glm/detail/_features.hpp	/^#		define GLM_CXX11_INLINE_NAMESPACES$/;"	d
GLM_CXX11_LAMBDAS	glm/detail/_features.hpp	/^#		define GLM_CXX11_LAMBDAS$/;"	d
GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS	glm/detail/_features.hpp	/^#		define GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS$/;"	d
GLM_CXX11_NOEXCEPT	glm/detail/_features.hpp	/^#		define GLM_CXX11_NOEXCEPT$/;"	d
GLM_CXX11_NONSTATIC_MEMBER_INIT	glm/detail/_features.hpp	/^#		define GLM_CXX11_NONSTATIC_MEMBER_INIT$/;"	d
GLM_CXX11_NULLPTR	glm/detail/_features.hpp	/^#		define GLM_CXX11_NULLPTR$/;"	d
GLM_CXX11_OVERRIDE_CONTROL	glm/detail/_features.hpp	/^#		define GLM_CXX11_OVERRIDE_CONTROL$/;"	d
GLM_CXX11_RANGE_FOR	glm/detail/_features.hpp	/^#		define GLM_CXX11_RANGE_FOR$/;"	d
GLM_CXX11_RAW_STRING_LITERALS	glm/detail/_features.hpp	/^#		define GLM_CXX11_RAW_STRING_LITERALS$/;"	d
GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS$/;"	d
GLM_CXX11_RVALUE_REFERENCES	glm/detail/_features.hpp	/^#		define GLM_CXX11_RVALUE_REFERENCES$/;"	d
GLM_CXX11_STATIC_ASSERT	glm/detail/_features.hpp	/^#		define GLM_CXX11_STATIC_ASSERT$/;"	d
GLM_CXX11_STRONG_ENUMS	glm/detail/_features.hpp	/^#		define GLM_CXX11_STRONG_ENUMS$/;"	d
GLM_CXX11_TRAILING_RETURN	glm/detail/_features.hpp	/^#		define GLM_CXX11_TRAILING_RETURN$/;"	d
GLM_CXX11_UNICODE_LITERALS	glm/detail/_features.hpp	/^#		define GLM_CXX11_UNICODE_LITERALS$/;"	d
GLM_CXX11_UNRESTRICTED_UNIONS	glm/detail/_features.hpp	/^#		define GLM_CXX11_UNRESTRICTED_UNIONS$/;"	d
GLM_CXX11_USER_LITERALS	glm/detail/_features.hpp	/^#		define GLM_CXX11_USER_LITERALS$/;"	d
GLM_CXX11_VARIADIC_TEMPLATES	glm/detail/_features.hpp	/^#		define GLM_CXX11_VARIADIC_TEMPLATES$/;"	d
GLM_CXX98_EXCEPTIONS	glm/detail/_features.hpp	/^#		define GLM_CXX98_EXCEPTIONS$/;"	d
GLM_CXX98_RTTI	glm/detail/_features.hpp	/^#		define GLM_CXX98_RTTI$/;"	d
GLM_DEPRECATED	glm/detail/setup.hpp	/^#	define GLM_DEPRECATED /;"	d
GLM_DEPRECATED	glm/detail/setup.hpp	/^#	define GLM_DEPRECATED$/;"	d
GLM_EXTRACT_WORDS	glm/gtc/ulp.inl	/^#define GLM_EXTRACT_WORDS(/;"	d	file:
GLM_FORCE_PURE	glm/detail/setup.hpp	/^#			define GLM_FORCE_PURE$/;"	d
GLM_FUNC_DECL	glm/detail/setup.hpp	/^#define GLM_FUNC_DECL /;"	d
GLM_FUNC_QUALIFIER	glm/detail/setup.hpp	/^#define GLM_FUNC_QUALIFIER /;"	d
GLM_GET_FLOAT_WORD	glm/gtc/ulp.inl	/^#define GLM_GET_FLOAT_WORD(/;"	d	file:
GLM_HAS_ANONYMOUS_UNION	glm/detail/setup.hpp	/^#define GLM_HAS_ANONYMOUS_UNION /;"	d
GLM_HAS_ASSIGNABLE	glm/detail/setup.hpp	/^#	define GLM_HAS_ASSIGNABLE /;"	d
GLM_HAS_BITSCAN_WINDOWS	glm/detail/setup.hpp	/^#	define GLM_HAS_BITSCAN_WINDOWS /;"	d
GLM_HAS_CONSTEXPR	glm/detail/setup.hpp	/^#	define GLM_HAS_CONSTEXPR /;"	d
GLM_HAS_CONSTEXPR_PARTIAL	glm/detail/setup.hpp	/^#	define GLM_HAS_CONSTEXPR_PARTIAL /;"	d
GLM_HAS_CXX11_STL	glm/detail/setup.hpp	/^#	define GLM_HAS_CXX11_STL /;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	glm/detail/setup.hpp	/^#	define GLM_HAS_DEFAULTED_FUNCTIONS /;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	glm/detail/setup.hpp	/^#	define GLM_HAS_EXPLICIT_CONVERSION_OPERATORS /;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	glm/detail/setup.hpp	/^#	define GLM_HAS_EXTENDED_INTEGER_TYPE /;"	d
GLM_HAS_INITIALIZER_LISTS	glm/detail/setup.hpp	/^#	define GLM_HAS_INITIALIZER_LISTS /;"	d
GLM_HAS_MAKE_SIGNED	glm/detail/setup.hpp	/^#	define GLM_HAS_MAKE_SIGNED /;"	d
GLM_HAS_OPENMP	glm/detail/setup.hpp	/^#			define GLM_HAS_OPENMP /;"	d
GLM_HAS_RANGE_FOR	glm/detail/setup.hpp	/^#	define GLM_HAS_RANGE_FOR /;"	d
GLM_HAS_RVALUE_REFERENCES	glm/detail/setup.hpp	/^#	define GLM_HAS_RVALUE_REFERENCES /;"	d
GLM_HAS_STATIC_ASSERT	glm/detail/setup.hpp	/^#	define GLM_HAS_STATIC_ASSERT /;"	d
GLM_HAS_TEMPLATE_ALIASES	glm/detail/setup.hpp	/^#	define GLM_HAS_TEMPLATE_ALIASES /;"	d
GLM_HAS_TRIVIAL_QUERIES	glm/detail/setup.hpp	/^#define GLM_HAS_TRIVIAL_QUERIES /;"	d
GLM_HAS_UNRESTRICTED_UNIONS	glm/detail/setup.hpp	/^#	define GLM_HAS_UNRESTRICTED_UNIONS /;"	d
GLM_IMPLEMENT_SCAL_MULT	glm/gtx/scalar_multiplication.hpp	/^#define GLM_IMPLEMENT_SCAL_MULT(/;"	d
GLM_INLINE	glm/detail/setup.hpp	/^#		define GLM_INLINE /;"	d
GLM_INLINE	glm/detail/setup.hpp	/^#	define GLM_INLINE /;"	d
GLM_INSERT_WORDS	glm/gtc/ulp.inl	/^#define GLM_INSERT_WORDS(/;"	d	file:
GLM_LANG	glm/detail/setup.hpp	/^#				define GLM_LANG (GLM_LANG_CXX | GLM_LANG_/;"	d
GLM_LANG	glm/detail/setup.hpp	/^#				define GLM_LANG (GLM_LANG_CXX0X | GLM_LANG_/;"	d
GLM_LANG	glm/detail/setup.hpp	/^#				define GLM_LANG (GLM_LANG_CXX11 | GLM_LANG_/;"	d
GLM_LANG	glm/detail/setup.hpp	/^#				define GLM_LANG (GLM_LANG_CXX14 | GLM_LANG_/;"	d
GLM_LANG	glm/detail/setup.hpp	/^#				define GLM_LANG (GLM_LANG_CXX98 | GLM_LANG_/;"	d
GLM_LANG	glm/detail/setup.hpp	/^#				define GLM_LANG GLM_LANG_/;"	d
GLM_LANG	glm/detail/setup.hpp	/^#			define GLM_LANG GLM_LANG_/;"	d
GLM_LANG	glm/detail/setup.hpp	/^#	define GLM_LANG GLM_LANG_/;"	d
GLM_LANG_CXX03	glm/detail/setup.hpp	/^#define GLM_LANG_CXX03			(GLM_LANG_CXX98 | GLM_LANG_CXX03_/;"	d
GLM_LANG_CXX03_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX03_FLAG	/;"	d
GLM_LANG_CXX0X	glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X			(GLM_LANG_CXX03 | GLM_LANG_CXX0X_/;"	d
GLM_LANG_CXX0X_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X_FLAG	/;"	d
GLM_LANG_CXX11	glm/detail/setup.hpp	/^#define GLM_LANG_CXX11			(GLM_LANG_CXX0X | GLM_LANG_CXX11_/;"	d
GLM_LANG_CXX11_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX11_FLAG	/;"	d
GLM_LANG_CXX14	glm/detail/setup.hpp	/^#define GLM_LANG_CXX14			(GLM_LANG_CXX1Y | GLM_LANG_CXX14_/;"	d
GLM_LANG_CXX14_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX14_FLAG	/;"	d
GLM_LANG_CXX1Y	glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Y			(GLM_LANG_CXX11 | GLM_LANG_CXX1Y_/;"	d
GLM_LANG_CXX1Y_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Y_FLAG	/;"	d
GLM_LANG_CXX1Z	glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Z			(GLM_LANG_CXX14 | GLM_LANG_CXX1Z_/;"	d
GLM_LANG_CXX1Z_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX1Z_FLAG	/;"	d
GLM_LANG_CXX98	glm/detail/setup.hpp	/^#define GLM_LANG_CXX98			GLM_LANG_CXX98_/;"	d
GLM_LANG_CXX98_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXX98_FLAG	/;"	d
GLM_LANG_CXXGNU	glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU			GLM_LANG_CXXGNU_/;"	d
GLM_LANG_CXXGNU_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU_FLAG	/;"	d
GLM_LANG_CXXMS	glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS			GLM_LANG_CXXMS_/;"	d
GLM_LANG_CXXMS_FLAG	glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS_FLAG	/;"	d
GLM_MESSAGES	glm/detail/dummy.cpp	/^#define GLM_MESSAGES$/;"	d	file:
GLM_MESSAGE_ARCH_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_ARCH_DISPLAYED$/;"	d
GLM_MESSAGE_COMPILER_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_COMPILER_DISPLAYED$/;"	d
GLM_MESSAGE_CORE_INCLUDED_DISPLAYED	glm/glm.hpp	/^#	define GLM_MESSAGE_CORE_INCLUDED_DISPLAYED$/;"	d
GLM_MESSAGE_EXT_INCLUDED_DISPLAYED	glm/ext.hpp	/^#	define GLM_MESSAGE_EXT_INCLUDED_DISPLAYED$/;"	d
GLM_MESSAGE_FORCE_SIZE_T_LENGTH	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_FORCE_SIZE_T_LENGTH$/;"	d
GLM_MESSAGE_LANG_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_LANG_DISPLAYED$/;"	d
GLM_MESSAGE_MODEL_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_MODEL_DISPLAYED$/;"	d
GLM_MESSAGE_PLATFORM_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_PLATFORM_DISPLAYED$/;"	d
GLM_MESSAGE_SWIZZLE_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_SWIZZLE_DISPLAYED$/;"	d
GLM_MESSAGE_VERSION_DISPLAYED	glm/detail/setup.hpp	/^#	define GLM_MESSAGE_VERSION_DISPLAYED$/;"	d
GLM_MODEL	glm/detail/setup.hpp	/^#		define GLM_MODEL	GLM_MODEL_/;"	d
GLM_MODEL	glm/detail/setup.hpp	/^#	define GLM_MODEL	GLM_MODEL_/;"	d
GLM_MODEL_32	glm/detail/setup.hpp	/^#define GLM_MODEL_32	/;"	d
GLM_MODEL_64	glm/detail/setup.hpp	/^#define GLM_MODEL_64	/;"	d
GLM_MUTABLE	glm/detail/_swizzle_func.hpp	/^#define GLM_MUTABLE$/;"	d
GLM_NEVER_INLINE	glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE /;"	d
GLM_NEVER_INLINE	glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE$/;"	d
GLM_NEVER_INLINE	glm/detail/setup.hpp	/^#	define GLM_NEVER_INLINE$/;"	d
GLM_NOT_BUGGY_VC32BITS	glm/detail/type_vec4.hpp	/^#	define GLM_NOT_BUGGY_VC32BITS /;"	d
GLM_PLATFORM	glm/detail/setup.hpp	/^#	define GLM_PLATFORM GLM_PLATFORM_/;"	d
GLM_PLATFORM_ANDROID	glm/detail/setup.hpp	/^#define GLM_PLATFORM_ANDROID	/;"	d
GLM_PLATFORM_APPLE	glm/detail/setup.hpp	/^#define GLM_PLATFORM_APPLE	/;"	d
GLM_PLATFORM_CHROME_NACL	glm/detail/setup.hpp	/^#define GLM_PLATFORM_CHROME_NACL	/;"	d
GLM_PLATFORM_LINUX	glm/detail/setup.hpp	/^#define GLM_PLATFORM_LINUX	/;"	d
GLM_PLATFORM_QNXNTO	glm/detail/setup.hpp	/^#define GLM_PLATFORM_QNXNTO	/;"	d
GLM_PLATFORM_UNIX	glm/detail/setup.hpp	/^#define GLM_PLATFORM_UNIX	/;"	d
GLM_PLATFORM_UNKNOWN	glm/detail/setup.hpp	/^#define GLM_PLATFORM_UNKNOWN	/;"	d
GLM_PLATFORM_WINCE	glm/detail/setup.hpp	/^#define GLM_PLATFORM_WINCE	/;"	d
GLM_PLATFORM_WINDOWS	glm/detail/setup.hpp	/^#define GLM_PLATFORM_WINDOWS	/;"	d
GLM_RESTRICT	glm/detail/setup.hpp	/^#	define GLM_RESTRICT /;"	d
GLM_RESTRICT	glm/detail/setup.hpp	/^#	define GLM_RESTRICT$/;"	d
GLM_RESTRICT_VAR	glm/detail/setup.hpp	/^#	define GLM_RESTRICT_VAR /;"	d
GLM_RESTRICT_VAR	glm/detail/setup.hpp	/^#	define GLM_RESTRICT_VAR$/;"	d
GLM_SET_FLOAT_WORD	glm/gtc/ulp.inl	/^#define GLM_SET_FLOAT_WORD(/;"	d	file:
GLM_STATIC_ASSERT	glm/detail/setup.hpp	/^#	define GLM_STATIC_ASSERT(/;"	d
GLM_STATIC_ASSERT_NULL	glm/detail/setup.hpp	/^#	define GLM_STATIC_ASSERT_NULL$/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC2	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP	glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP(/;"	d
GLM_TEMPLATE_GENTYPE	glm/detail/dummy.cpp	/^#define GLM_TEMPLATE_GENTYPE /;"	d	file:
GLM_VAR_USED	glm/detail/setup.hpp	/^#	define GLM_VAR_USED /;"	d
GLM_VAR_USED	glm/detail/setup.hpp	/^#	define GLM_VAR_USED$/;"	d
GLM_VERSION	glm/detail/setup.hpp	/^#define GLM_VERSION	/;"	d
GLM_VERSION_MAJOR	glm/detail/setup.hpp	/^#define GLM_VERSION_MAJOR	/;"	d
GLM_VERSION_MINOR	glm/detail/setup.hpp	/^#define GLM_VERSION_MINOR	/;"	d
GLM_VERSION_PATCH	glm/detail/setup.hpp	/^#define GLM_VERSION_PATCH	/;"	d
GLM_VERSION_REVISION	glm/detail/setup.hpp	/^#define GLM_VERSION_REVISION	/;"	d
GLSLPROGRAM_CPP	glslprogram.h	/^#define GLSLPROGRAM_CPP$/;"	d
GLSLProgram	glslprogram.cpp	/^GLSLProgram::GLSLProgram( )$/;"	f	class:GLSLProgram
GLSLProgram	glslprogram.h	/^class GLSLProgram$/;"	c
GLUIFALSE	main.cpp	/^const int GLUIFALSE = false;$/;"	v	typeref:typename:const int
GLUITITLE	main.cpp	/^const char *GLUITITLE   = "User Interface Window";$/;"	v	typeref:typename:const char *
GLUITRUE	main.cpp	/^const int GLUITRUE  = true;$/;"	v	typeref:typename:const int
GLUT_ACCUM	freeglut_std.h	/^#define  GLUT_ACCUM /;"	d
GLUT_ACTION_CONTINUE_EXECUTION	freeglut_ext.h	/^#define GLUT_ACTION_CONTINUE_EXECUTION /;"	d
GLUT_ACTION_EXIT	freeglut_ext.h	/^#define GLUT_ACTION_EXIT /;"	d
GLUT_ACTION_GLUTMAINLOOP_RETURNS	freeglut_ext.h	/^#define GLUT_ACTION_GLUTMAINLOOP_RETURNS /;"	d
GLUT_ACTION_ON_WINDOW_CLOSE	freeglut_ext.h	/^#define  GLUT_ACTION_ON_WINDOW_CLOSE /;"	d
GLUT_ACTIVE_ALT	freeglut_std.h	/^#define  GLUT_ACTIVE_ALT /;"	d
GLUT_ACTIVE_CTRL	freeglut_std.h	/^#define  GLUT_ACTIVE_CTRL /;"	d
GLUT_ACTIVE_SHIFT	freeglut_std.h	/^#define  GLUT_ACTIVE_SHIFT /;"	d
GLUT_ALLOW_DIRECT_CONTEXT	freeglut_ext.h	/^#define GLUT_ALLOW_DIRECT_CONTEXT /;"	d
GLUT_ALPHA	freeglut_std.h	/^#define  GLUT_ALPHA /;"	d
GLUT_API_VERSION	freeglut_std.h	/^#define  GLUT_API_VERSION /;"	d
GLUT_APPSTATUS_PAUSE	freeglut_ext.h	/^#define GLUT_APPSTATUS_PAUSE /;"	d
GLUT_APPSTATUS_RESUME	freeglut_ext.h	/^#define GLUT_APPSTATUS_RESUME /;"	d
GLUT_AUX	freeglut_ext.h	/^#define  GLUT_AUX /;"	d
GLUT_AUX1	freeglut_ext.h	/^#define  GLUT_AUX1 /;"	d
GLUT_AUX2	freeglut_ext.h	/^#define  GLUT_AUX2 /;"	d
GLUT_AUX3	freeglut_ext.h	/^#define  GLUT_AUX3 /;"	d
GLUT_AUX4	freeglut_ext.h	/^#define  GLUT_AUX4 /;"	d
GLUT_BITMAP_8_BY_13	freeglut_std.h	/^#   define  GLUT_BITMAP_8_BY_13 /;"	d
GLUT_BITMAP_9_BY_15	freeglut_std.h	/^#   define  GLUT_BITMAP_9_BY_15 /;"	d
GLUT_BITMAP_HELVETICA_10	freeglut_std.h	/^#   define  GLUT_BITMAP_HELVETICA_10 /;"	d
GLUT_BITMAP_HELVETICA_12	freeglut_std.h	/^#   define  GLUT_BITMAP_HELVETICA_12 /;"	d
GLUT_BITMAP_HELVETICA_18	freeglut_std.h	/^#   define  GLUT_BITMAP_HELVETICA_18 /;"	d
GLUT_BITMAP_TIMES_ROMAN_10	freeglut_std.h	/^#   define  GLUT_BITMAP_TIMES_ROMAN_10 /;"	d
GLUT_BITMAP_TIMES_ROMAN_24	freeglut_std.h	/^#   define  GLUT_BITMAP_TIMES_ROMAN_24 /;"	d
GLUT_BLUE	freeglut_std.h	/^#define  GLUT_BLUE /;"	d
GLUT_BORDERLESS	freeglut_ext.h	/^#define  GLUT_BORDERLESS /;"	d
GLUT_CAPTIONLESS	freeglut_ext.h	/^#define  GLUT_CAPTIONLESS /;"	d
GLUT_COMPATIBILITY_PROFILE	freeglut_ext.h	/^#define	GLUT_COMPATIBILITY_PROFILE /;"	d
GLUT_CORE_PROFILE	freeglut_ext.h	/^#define GLUT_CORE_PROFILE /;"	d
GLUT_CREATE_NEW_CONTEXT	freeglut_ext.h	/^#define GLUT_CREATE_NEW_CONTEXT /;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	freeglut_std.h	/^#define  GLUT_CURSOR_BOTTOM_LEFT_CORNER /;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	freeglut_std.h	/^#define  GLUT_CURSOR_BOTTOM_RIGHT_CORNER /;"	d
GLUT_CURSOR_BOTTOM_SIDE	freeglut_std.h	/^#define  GLUT_CURSOR_BOTTOM_SIDE /;"	d
GLUT_CURSOR_CROSSHAIR	freeglut_std.h	/^#define  GLUT_CURSOR_CROSSHAIR /;"	d
GLUT_CURSOR_CYCLE	freeglut_std.h	/^#define  GLUT_CURSOR_CYCLE /;"	d
GLUT_CURSOR_DESTROY	freeglut_std.h	/^#define  GLUT_CURSOR_DESTROY /;"	d
GLUT_CURSOR_FULL_CROSSHAIR	freeglut_std.h	/^#define  GLUT_CURSOR_FULL_CROSSHAIR /;"	d
GLUT_CURSOR_HELP	freeglut_std.h	/^#define  GLUT_CURSOR_HELP /;"	d
GLUT_CURSOR_INFO	freeglut_std.h	/^#define  GLUT_CURSOR_INFO /;"	d
GLUT_CURSOR_INHERIT	freeglut_std.h	/^#define  GLUT_CURSOR_INHERIT /;"	d
GLUT_CURSOR_LEFT_ARROW	freeglut_std.h	/^#define  GLUT_CURSOR_LEFT_ARROW /;"	d
GLUT_CURSOR_LEFT_RIGHT	freeglut_std.h	/^#define  GLUT_CURSOR_LEFT_RIGHT /;"	d
GLUT_CURSOR_LEFT_SIDE	freeglut_std.h	/^#define  GLUT_CURSOR_LEFT_SIDE /;"	d
GLUT_CURSOR_NONE	freeglut_std.h	/^#define  GLUT_CURSOR_NONE /;"	d
GLUT_CURSOR_RIGHT_ARROW	freeglut_std.h	/^#define  GLUT_CURSOR_RIGHT_ARROW /;"	d
GLUT_CURSOR_RIGHT_SIDE	freeglut_std.h	/^#define  GLUT_CURSOR_RIGHT_SIDE /;"	d
GLUT_CURSOR_SPRAY	freeglut_std.h	/^#define  GLUT_CURSOR_SPRAY /;"	d
GLUT_CURSOR_TEXT	freeglut_std.h	/^#define  GLUT_CURSOR_TEXT /;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	freeglut_std.h	/^#define  GLUT_CURSOR_TOP_LEFT_CORNER /;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	freeglut_std.h	/^#define  GLUT_CURSOR_TOP_RIGHT_CORNER /;"	d
GLUT_CURSOR_TOP_SIDE	freeglut_std.h	/^#define  GLUT_CURSOR_TOP_SIDE /;"	d
GLUT_CURSOR_UP_DOWN	freeglut_std.h	/^#define  GLUT_CURSOR_UP_DOWN /;"	d
GLUT_CURSOR_WAIT	freeglut_std.h	/^#define  GLUT_CURSOR_WAIT /;"	d
GLUT_DEBUG	freeglut_ext.h	/^#define  GLUT_DEBUG /;"	d
GLUT_DEPTH	freeglut_std.h	/^#define  GLUT_DEPTH /;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	freeglut_std.h	/^#define  GLUT_DEVICE_IGNORE_KEY_REPEAT /;"	d
GLUT_DEVICE_KEY_REPEAT	freeglut_std.h	/^#define  GLUT_DEVICE_KEY_REPEAT /;"	d
GLUT_DIRECT_RENDERING	freeglut_ext.h	/^#define  GLUT_DIRECT_RENDERING /;"	d
GLUT_DISPLAY_MODE_POSSIBLE	freeglut_std.h	/^#define  GLUT_DISPLAY_MODE_POSSIBLE /;"	d
GLUT_DOUBLE	freeglut_std.h	/^#define  GLUT_DOUBLE /;"	d
GLUT_DOWN	freeglut_std.h	/^#define  GLUT_DOWN /;"	d
GLUT_ELAPSED_TIME	freeglut_std.h	/^#define  GLUT_ELAPSED_TIME /;"	d
GLUT_ENTERED	freeglut_std.h	/^#define  GLUT_ENTERED /;"	d
GLUT_FORCE_DIRECT_CONTEXT	freeglut_ext.h	/^#define GLUT_FORCE_DIRECT_CONTEXT /;"	d
GLUT_FORCE_INDIRECT_CONTEXT	freeglut_ext.h	/^#define GLUT_FORCE_INDIRECT_CONTEXT /;"	d
GLUT_FORWARD_COMPATIBLE	freeglut_ext.h	/^#define  GLUT_FORWARD_COMPATIBLE /;"	d
GLUT_FULLY_COVERED	freeglut_std.h	/^#define  GLUT_FULLY_COVERED /;"	d
GLUT_FULLY_RETAINED	freeglut_std.h	/^#define  GLUT_FULLY_RETAINED /;"	d
GLUT_FULL_SCREEN	freeglut_ext.h	/^#define  GLUT_FULL_SCREEN /;"	d
GLUT_GAME_MODE_ACTIVE	freeglut_std.h	/^#define  GLUT_GAME_MODE_ACTIVE /;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	freeglut_std.h	/^#define  GLUT_GAME_MODE_DISPLAY_CHANGED /;"	d
GLUT_GAME_MODE_HEIGHT	freeglut_std.h	/^#define  GLUT_GAME_MODE_HEIGHT /;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	freeglut_std.h	/^#define  GLUT_GAME_MODE_PIXEL_DEPTH /;"	d
GLUT_GAME_MODE_POSSIBLE	freeglut_std.h	/^#define  GLUT_GAME_MODE_POSSIBLE /;"	d
GLUT_GAME_MODE_REFRESH_RATE	freeglut_std.h	/^#define  GLUT_GAME_MODE_REFRESH_RATE /;"	d
GLUT_GAME_MODE_WIDTH	freeglut_std.h	/^#define  GLUT_GAME_MODE_WIDTH /;"	d
GLUT_GEOMETRY_VISUALIZE_NORMALS	freeglut_ext.h	/^#define  GLUT_GEOMETRY_VISUALIZE_NORMALS /;"	d
GLUT_GREEN	freeglut_std.h	/^#define  GLUT_GREEN /;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	freeglut_std.h	/^#define  GLUT_HAS_DIAL_AND_BUTTON_BOX /;"	d
GLUT_HAS_JOYSTICK	freeglut_std.h	/^#define  GLUT_HAS_JOYSTICK /;"	d
GLUT_HAS_KEYBOARD	freeglut_std.h	/^#define  GLUT_HAS_KEYBOARD /;"	d
GLUT_HAS_MOUSE	freeglut_std.h	/^#define  GLUT_HAS_MOUSE /;"	d
GLUT_HAS_MULTI	freeglut_ext.h	/^#define GLUT_HAS_MULTI /;"	d
GLUT_HAS_OVERLAY	freeglut_std.h	/^#define  GLUT_HAS_OVERLAY /;"	d
GLUT_HAS_SPACEBALL	freeglut_std.h	/^#define  GLUT_HAS_SPACEBALL /;"	d
GLUT_HAS_TABLET	freeglut_std.h	/^#define  GLUT_HAS_TABLET /;"	d
GLUT_HIDDEN	freeglut_std.h	/^#define  GLUT_HIDDEN /;"	d
GLUT_INDEX	freeglut_std.h	/^#define  GLUT_INDEX /;"	d
GLUT_INIT_DISPLAY_MODE	freeglut_std.h	/^#define  GLUT_INIT_DISPLAY_MODE /;"	d
GLUT_INIT_FLAGS	freeglut_ext.h	/^#define  GLUT_INIT_FLAGS /;"	d
GLUT_INIT_MAJOR_VERSION	freeglut_ext.h	/^#define  GLUT_INIT_MAJOR_VERSION /;"	d
GLUT_INIT_MINOR_VERSION	freeglut_ext.h	/^#define  GLUT_INIT_MINOR_VERSION /;"	d
GLUT_INIT_PROFILE	freeglut_ext.h	/^#define  GLUT_INIT_PROFILE /;"	d
GLUT_INIT_STATE	freeglut_ext.h	/^#define  GLUT_INIT_STATE /;"	d
GLUT_INIT_WINDOW_HEIGHT	freeglut_std.h	/^#define  GLUT_INIT_WINDOW_HEIGHT /;"	d
GLUT_INIT_WINDOW_WIDTH	freeglut_std.h	/^#define  GLUT_INIT_WINDOW_WIDTH /;"	d
GLUT_INIT_WINDOW_X	freeglut_std.h	/^#define  GLUT_INIT_WINDOW_X /;"	d
GLUT_INIT_WINDOW_Y	freeglut_std.h	/^#define  GLUT_INIT_WINDOW_Y /;"	d
GLUT_JOYSTICK_AXES	freeglut_std.h	/^#define  GLUT_JOYSTICK_AXES /;"	d
GLUT_JOYSTICK_BUTTONS	freeglut_std.h	/^#define  GLUT_JOYSTICK_BUTTONS /;"	d
GLUT_JOYSTICK_BUTTON_A	freeglut_std.h	/^#define  GLUT_JOYSTICK_BUTTON_A /;"	d
GLUT_JOYSTICK_BUTTON_B	freeglut_std.h	/^#define  GLUT_JOYSTICK_BUTTON_B /;"	d
GLUT_JOYSTICK_BUTTON_C	freeglut_std.h	/^#define  GLUT_JOYSTICK_BUTTON_C /;"	d
GLUT_JOYSTICK_BUTTON_D	freeglut_std.h	/^#define  GLUT_JOYSTICK_BUTTON_D /;"	d
GLUT_JOYSTICK_POLL_RATE	freeglut_std.h	/^#define  GLUT_JOYSTICK_POLL_RATE /;"	d
GLUT_KEY_ALT_L	freeglut_ext.h	/^#define GLUT_KEY_ALT_L /;"	d
GLUT_KEY_ALT_R	freeglut_ext.h	/^#define GLUT_KEY_ALT_R /;"	d
GLUT_KEY_BEGIN	freeglut_ext.h	/^#define GLUT_KEY_BEGIN /;"	d
GLUT_KEY_CTRL_L	freeglut_ext.h	/^#define GLUT_KEY_CTRL_L /;"	d
GLUT_KEY_CTRL_R	freeglut_ext.h	/^#define GLUT_KEY_CTRL_R /;"	d
GLUT_KEY_DELETE	freeglut_ext.h	/^#define GLUT_KEY_DELETE /;"	d
GLUT_KEY_DOWN	freeglut_std.h	/^#define  GLUT_KEY_DOWN /;"	d
GLUT_KEY_END	freeglut_std.h	/^#define  GLUT_KEY_END /;"	d
GLUT_KEY_F1	freeglut_std.h	/^#define  GLUT_KEY_F1 /;"	d
GLUT_KEY_F10	freeglut_std.h	/^#define  GLUT_KEY_F10 /;"	d
GLUT_KEY_F11	freeglut_std.h	/^#define  GLUT_KEY_F11 /;"	d
GLUT_KEY_F12	freeglut_std.h	/^#define  GLUT_KEY_F12 /;"	d
GLUT_KEY_F2	freeglut_std.h	/^#define  GLUT_KEY_F2 /;"	d
GLUT_KEY_F3	freeglut_std.h	/^#define  GLUT_KEY_F3 /;"	d
GLUT_KEY_F4	freeglut_std.h	/^#define  GLUT_KEY_F4 /;"	d
GLUT_KEY_F5	freeglut_std.h	/^#define  GLUT_KEY_F5 /;"	d
GLUT_KEY_F6	freeglut_std.h	/^#define  GLUT_KEY_F6 /;"	d
GLUT_KEY_F7	freeglut_std.h	/^#define  GLUT_KEY_F7 /;"	d
GLUT_KEY_F8	freeglut_std.h	/^#define  GLUT_KEY_F8 /;"	d
GLUT_KEY_F9	freeglut_std.h	/^#define  GLUT_KEY_F9 /;"	d
GLUT_KEY_HOME	freeglut_std.h	/^#define  GLUT_KEY_HOME /;"	d
GLUT_KEY_INSERT	freeglut_std.h	/^#define  GLUT_KEY_INSERT /;"	d
GLUT_KEY_LEFT	freeglut_std.h	/^#define  GLUT_KEY_LEFT /;"	d
GLUT_KEY_NUM_LOCK	freeglut_ext.h	/^#define GLUT_KEY_NUM_LOCK /;"	d
GLUT_KEY_PAGE_DOWN	freeglut_std.h	/^#define  GLUT_KEY_PAGE_DOWN /;"	d
GLUT_KEY_PAGE_UP	freeglut_std.h	/^#define  GLUT_KEY_PAGE_UP /;"	d
GLUT_KEY_REPEAT_DEFAULT	freeglut_std.h	/^#define  GLUT_KEY_REPEAT_DEFAULT /;"	d
GLUT_KEY_REPEAT_OFF	freeglut_std.h	/^#define  GLUT_KEY_REPEAT_OFF /;"	d
GLUT_KEY_REPEAT_ON	freeglut_std.h	/^#define  GLUT_KEY_REPEAT_ON /;"	d
GLUT_KEY_RIGHT	freeglut_std.h	/^#define  GLUT_KEY_RIGHT /;"	d
GLUT_KEY_SHIFT_L	freeglut_ext.h	/^#define GLUT_KEY_SHIFT_L /;"	d
GLUT_KEY_SHIFT_R	freeglut_ext.h	/^#define GLUT_KEY_SHIFT_R /;"	d
GLUT_KEY_UP	freeglut_std.h	/^#define  GLUT_KEY_UP /;"	d
GLUT_LAYER_IN_USE	freeglut_std.h	/^#define  GLUT_LAYER_IN_USE /;"	d
GLUT_LEFT	freeglut_std.h	/^#define  GLUT_LEFT /;"	d
GLUT_LEFT_BUTTON	freeglut_std.h	/^#define  GLUT_LEFT_BUTTON /;"	d
GLUT_LUMINANCE	freeglut_std.h	/^#define  GLUT_LUMINANCE /;"	d
GLUT_MENU_IN_USE	freeglut_std.h	/^#define  GLUT_MENU_IN_USE /;"	d
GLUT_MENU_NOT_IN_USE	freeglut_std.h	/^#define  GLUT_MENU_NOT_IN_USE /;"	d
GLUT_MENU_NUM_ITEMS	freeglut_std.h	/^#define  GLUT_MENU_NUM_ITEMS /;"	d
GLUT_MIDDLE_BUTTON	freeglut_std.h	/^#define  GLUT_MIDDLE_BUTTON /;"	d
GLUT_MULTISAMPLE	freeglut_std.h	/^#define  GLUT_MULTISAMPLE /;"	d
GLUT_NORMAL	freeglut_std.h	/^#define  GLUT_NORMAL /;"	d
GLUT_NORMAL_DAMAGED	freeglut_std.h	/^#define  GLUT_NORMAL_DAMAGED /;"	d
GLUT_NOT_VISIBLE	freeglut_std.h	/^#define  GLUT_NOT_VISIBLE /;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	freeglut_std.h	/^#define  GLUT_NUM_BUTTON_BOX_BUTTONS /;"	d
GLUT_NUM_DIALS	freeglut_std.h	/^#define  GLUT_NUM_DIALS /;"	d
GLUT_NUM_MOUSE_BUTTONS	freeglut_std.h	/^#define  GLUT_NUM_MOUSE_BUTTONS /;"	d
GLUT_NUM_SPACEBALL_BUTTONS	freeglut_std.h	/^#define  GLUT_NUM_SPACEBALL_BUTTONS /;"	d
GLUT_NUM_TABLET_BUTTONS	freeglut_std.h	/^#define  GLUT_NUM_TABLET_BUTTONS /;"	d
GLUT_OVERLAY	freeglut_std.h	/^#define  GLUT_OVERLAY /;"	d
GLUT_OVERLAY_DAMAGED	freeglut_std.h	/^#define  GLUT_OVERLAY_DAMAGED /;"	d
GLUT_OVERLAY_POSSIBLE	freeglut_std.h	/^#define  GLUT_OVERLAY_POSSIBLE /;"	d
GLUT_OWNS_JOYSTICK	freeglut_std.h	/^#define  GLUT_OWNS_JOYSTICK /;"	d
GLUT_PARTIALLY_RETAINED	freeglut_std.h	/^#define  GLUT_PARTIALLY_RETAINED /;"	d
GLUT_RED	freeglut_std.h	/^#define  GLUT_RED /;"	d
GLUT_RENDERING_CONTEXT	freeglut_ext.h	/^#define  GLUT_RENDERING_CONTEXT /;"	d
GLUT_RGB	freeglut_std.h	/^#define  GLUT_RGB /;"	d
GLUT_RGBA	freeglut_std.h	/^#define  GLUT_RGBA /;"	d
GLUT_RIGHT_BUTTON	freeglut_std.h	/^#define  GLUT_RIGHT_BUTTON /;"	d
GLUT_SCREEN_HEIGHT	freeglut_std.h	/^#define  GLUT_SCREEN_HEIGHT /;"	d
GLUT_SCREEN_HEIGHT_MM	freeglut_std.h	/^#define  GLUT_SCREEN_HEIGHT_MM /;"	d
GLUT_SCREEN_WIDTH	freeglut_std.h	/^#define  GLUT_SCREEN_WIDTH /;"	d
GLUT_SCREEN_WIDTH_MM	freeglut_std.h	/^#define  GLUT_SCREEN_WIDTH_MM /;"	d
GLUT_SINGLE	freeglut_std.h	/^#define  GLUT_SINGLE /;"	d
GLUT_SKIP_STALE_MOTION_EVENTS	freeglut_ext.h	/^#define  GLUT_SKIP_STALE_MOTION_EVENTS /;"	d
GLUT_SRGB	freeglut_ext.h	/^#define  GLUT_SRGB /;"	d
GLUT_STENCIL	freeglut_std.h	/^#define  GLUT_STENCIL /;"	d
GLUT_STEREO	freeglut_std.h	/^#define  GLUT_STEREO /;"	d
GLUT_STROKE_FONT_DRAW_JOIN_DOTS	freeglut_ext.h	/^#define  GLUT_STROKE_FONT_DRAW_JOIN_DOTS /;"	d
GLUT_STROKE_MONO_ROMAN	freeglut_std.h	/^#   define  GLUT_STROKE_MONO_ROMAN /;"	d
GLUT_STROKE_ROMAN	freeglut_std.h	/^#   define  GLUT_STROKE_ROMAN /;"	d
GLUT_TRANSPARENT_INDEX	freeglut_std.h	/^#define  GLUT_TRANSPARENT_INDEX /;"	d
GLUT_TRY_DIRECT_CONTEXT	freeglut_ext.h	/^#define GLUT_TRY_DIRECT_CONTEXT /;"	d
GLUT_UP	freeglut_std.h	/^#define  GLUT_UP /;"	d
GLUT_USE_CURRENT_CONTEXT	freeglut_ext.h	/^#define GLUT_USE_CURRENT_CONTEXT /;"	d
GLUT_VERSION	freeglut_ext.h	/^#define  GLUT_VERSION /;"	d
GLUT_VIDEO_RESIZE_HEIGHT	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_HEIGHT /;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_HEIGHT_DELTA /;"	d
GLUT_VIDEO_RESIZE_IN_USE	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_IN_USE /;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_POSSIBLE /;"	d
GLUT_VIDEO_RESIZE_WIDTH	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_WIDTH /;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_WIDTH_DELTA /;"	d
GLUT_VIDEO_RESIZE_X	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_X /;"	d
GLUT_VIDEO_RESIZE_X_DELTA	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_X_DELTA /;"	d
GLUT_VIDEO_RESIZE_Y	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_Y /;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	freeglut_std.h	/^#define  GLUT_VIDEO_RESIZE_Y_DELTA /;"	d
GLUT_VISIBLE	freeglut_std.h	/^#define  GLUT_VISIBLE /;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_ACCUM_ALPHA_SIZE /;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_ACCUM_BLUE_SIZE /;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_ACCUM_GREEN_SIZE /;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_ACCUM_RED_SIZE /;"	d
GLUT_WINDOW_ALPHA_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_ALPHA_SIZE /;"	d
GLUT_WINDOW_BLUE_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_BLUE_SIZE /;"	d
GLUT_WINDOW_BORDER_HEIGHT	freeglut_ext.h	/^#define  GLUT_WINDOW_BORDER_HEIGHT /;"	d
GLUT_WINDOW_BORDER_WIDTH	freeglut_ext.h	/^#define  GLUT_WINDOW_BORDER_WIDTH /;"	d
GLUT_WINDOW_BUFFER_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_BUFFER_SIZE /;"	d
GLUT_WINDOW_COLORMAP_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_COLORMAP_SIZE /;"	d
GLUT_WINDOW_CURSOR	freeglut_std.h	/^#define  GLUT_WINDOW_CURSOR /;"	d
GLUT_WINDOW_DEPTH_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_DEPTH_SIZE /;"	d
GLUT_WINDOW_DOUBLEBUFFER	freeglut_std.h	/^#define  GLUT_WINDOW_DOUBLEBUFFER /;"	d
GLUT_WINDOW_FORMAT_ID	freeglut_std.h	/^#define  GLUT_WINDOW_FORMAT_ID /;"	d
GLUT_WINDOW_GREEN_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_GREEN_SIZE /;"	d
GLUT_WINDOW_HEADER_HEIGHT	freeglut_ext.h	/^#define  GLUT_WINDOW_HEADER_HEIGHT /;"	d
GLUT_WINDOW_HEIGHT	freeglut_std.h	/^#define  GLUT_WINDOW_HEIGHT /;"	d
GLUT_WINDOW_NUM_CHILDREN	freeglut_std.h	/^#define  GLUT_WINDOW_NUM_CHILDREN /;"	d
GLUT_WINDOW_NUM_SAMPLES	freeglut_std.h	/^#define  GLUT_WINDOW_NUM_SAMPLES /;"	d
GLUT_WINDOW_PARENT	freeglut_std.h	/^#define  GLUT_WINDOW_PARENT /;"	d
GLUT_WINDOW_RED_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_RED_SIZE /;"	d
GLUT_WINDOW_RGBA	freeglut_std.h	/^#define  GLUT_WINDOW_RGBA /;"	d
GLUT_WINDOW_STENCIL_SIZE	freeglut_std.h	/^#define  GLUT_WINDOW_STENCIL_SIZE /;"	d
GLUT_WINDOW_STEREO	freeglut_std.h	/^#define  GLUT_WINDOW_STEREO /;"	d
GLUT_WINDOW_WIDTH	freeglut_std.h	/^#define  GLUT_WINDOW_WIDTH /;"	d
GLUT_WINDOW_X	freeglut_std.h	/^#define  GLUT_WINDOW_X /;"	d
GLUT_WINDOW_Y	freeglut_std.h	/^#define  GLUT_WINDOW_Y /;"	d
GLUT_XLIB_IMPLEMENTATION	freeglut_std.h	/^#define  GLUT_XLIB_IMPLEMENTATION /;"	d
GLUTproc	freeglut_ext.h	/^typedef void (*GLUTproc)();$/;"	t	typeref:typename:void (*)()
GL_1PASS_EXT	glew.h	/^#define GL_1PASS_EXT /;"	d
GL_1PASS_SGIS	glew.h	/^#define GL_1PASS_SGIS /;"	d
GL_2D	glew.h	/^#define GL_2D /;"	d
GL_2PASS_0_EXT	glew.h	/^#define GL_2PASS_0_EXT /;"	d
GL_2PASS_0_SGIS	glew.h	/^#define GL_2PASS_0_SGIS /;"	d
GL_2PASS_1_EXT	glew.h	/^#define GL_2PASS_1_EXT /;"	d
GL_2PASS_1_SGIS	glew.h	/^#define GL_2PASS_1_SGIS /;"	d
GL_2X_BIT_ATI	glew.h	/^#define GL_2X_BIT_ATI /;"	d
GL_2_BYTES	glew.h	/^#define GL_2_BYTES /;"	d
GL_3D	glew.h	/^#define GL_3D /;"	d
GL_3DFX_multisample	glew.h	/^#define GL_3DFX_multisample /;"	d
GL_3DFX_tbuffer	glew.h	/^#define GL_3DFX_tbuffer /;"	d
GL_3DFX_texture_compression_FXT1	glew.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	d
GL_3D_COLOR	glew.h	/^#define GL_3D_COLOR /;"	d
GL_3D_COLOR_TEXTURE	glew.h	/^#define GL_3D_COLOR_TEXTURE /;"	d
GL_3_BYTES	glew.h	/^#define GL_3_BYTES /;"	d
GL_422_AVERAGE_EXT	glew.h	/^#define GL_422_AVERAGE_EXT /;"	d
GL_422_EXT	glew.h	/^#define GL_422_EXT /;"	d
GL_422_REV_AVERAGE_EXT	glew.h	/^#define GL_422_REV_AVERAGE_EXT /;"	d
GL_422_REV_EXT	glew.h	/^#define GL_422_REV_EXT /;"	d
GL_4D_COLOR_TEXTURE	glew.h	/^#define GL_4D_COLOR_TEXTURE /;"	d
GL_4PASS_0_EXT	glew.h	/^#define GL_4PASS_0_EXT /;"	d
GL_4PASS_0_SGIS	glew.h	/^#define GL_4PASS_0_SGIS /;"	d
GL_4PASS_1_EXT	glew.h	/^#define GL_4PASS_1_EXT /;"	d
GL_4PASS_1_SGIS	glew.h	/^#define GL_4PASS_1_SGIS /;"	d
GL_4PASS_2_EXT	glew.h	/^#define GL_4PASS_2_EXT /;"	d
GL_4PASS_2_SGIS	glew.h	/^#define GL_4PASS_2_SGIS /;"	d
GL_4PASS_3_EXT	glew.h	/^#define GL_4PASS_3_EXT /;"	d
GL_4PASS_3_SGIS	glew.h	/^#define GL_4PASS_3_SGIS /;"	d
GL_4X_BIT_ATI	glew.h	/^#define GL_4X_BIT_ATI /;"	d
GL_4_BYTES	glew.h	/^#define GL_4_BYTES /;"	d
GL_8X_BIT_ATI	glew.h	/^#define GL_8X_BIT_ATI /;"	d
GL_ABGR_EXT	glew.h	/^#define GL_ABGR_EXT /;"	d
GL_ACCUM	glew.h	/^#define GL_ACCUM /;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	glew.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	d
GL_ACCUM_ALPHA_BITS	glew.h	/^#define GL_ACCUM_ALPHA_BITS /;"	d
GL_ACCUM_BLUE_BITS	glew.h	/^#define GL_ACCUM_BLUE_BITS /;"	d
GL_ACCUM_BUFFER_BIT	glew.h	/^#define GL_ACCUM_BUFFER_BIT /;"	d
GL_ACCUM_CLEAR_VALUE	glew.h	/^#define GL_ACCUM_CLEAR_VALUE /;"	d
GL_ACCUM_GREEN_BITS	glew.h	/^#define GL_ACCUM_GREEN_BITS /;"	d
GL_ACCUM_RED_BITS	glew.h	/^#define GL_ACCUM_RED_BITS /;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	glew.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	glew.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	glew.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM_EXT	glew.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_RESOURCES	glew.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_STENCIL_FACE_EXT	glew.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	d
GL_ACTIVE_SUBROUTINES	glew.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	glew.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	glew.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	glew.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	glew.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	glew.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE_ARB	glew.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	d
GL_ACTIVE_UNIFORMS	glew.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	glew.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	glew.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	glew.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	glew.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ACTIVE_VARYINGS_NV	glew.h	/^#define GL_ACTIVE_VARYINGS_NV /;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	glew.h	/^#define GL_ACTIVE_VARYING_MAX_LENGTH_NV /;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	glew.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	d
GL_ADD	glew.h	/^#define GL_ADD /;"	d
GL_ADD_ATI	glew.h	/^#define GL_ADD_ATI /;"	d
GL_ADD_SIGNED	glew.h	/^#define GL_ADD_SIGNED /;"	d
GL_ADD_SIGNED_ARB	glew.h	/^#define GL_ADD_SIGNED_ARB /;"	d
GL_ADD_SIGNED_EXT	glew.h	/^#define GL_ADD_SIGNED_EXT /;"	d
GL_ADJACENT_PAIRS_NV	glew.h	/^#define GL_ADJACENT_PAIRS_NV /;"	d
GL_AFFINE_2D_NV	glew.h	/^#define GL_AFFINE_2D_NV /;"	d
GL_AFFINE_3D_NV	glew.h	/^#define GL_AFFINE_3D_NV /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	glew.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	glew.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	glew.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	glew.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	glew.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	glew.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	d
GL_ALL_ATTRIB_BITS	glew.h	/^#define GL_ALL_ATTRIB_BITS /;"	d
GL_ALL_BARRIER_BITS	glew.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_BARRIER_BITS_EXT	glew.h	/^#define GL_ALL_BARRIER_BITS_EXT /;"	d
GL_ALL_COMPLETED_NV	glew.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALL_SHADER_BITS	glew.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALL_STATIC_DATA_IBM	glew.h	/^#define GL_ALL_STATIC_DATA_IBM /;"	d
GL_ALPHA	glew.h	/^#define GL_ALPHA /;"	d
GL_ALPHA12	glew.h	/^#define GL_ALPHA12 /;"	d
GL_ALPHA12_EXT	glew.h	/^#define GL_ALPHA12_EXT /;"	d
GL_ALPHA16	glew.h	/^#define GL_ALPHA16 /;"	d
GL_ALPHA16F_ARB	glew.h	/^#define GL_ALPHA16F_ARB /;"	d
GL_ALPHA16I_EXT	glew.h	/^#define GL_ALPHA16I_EXT /;"	d
GL_ALPHA16UI_EXT	glew.h	/^#define GL_ALPHA16UI_EXT /;"	d
GL_ALPHA16_EXT	glew.h	/^#define GL_ALPHA16_EXT /;"	d
GL_ALPHA16_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_ALPHA16_EXTENDED_RANGE_SGIX /;"	d
GL_ALPHA16_SIGNED_SGIX	glew.h	/^#define GL_ALPHA16_SIGNED_SGIX /;"	d
GL_ALPHA16_SNORM	glew.h	/^#define GL_ALPHA16_SNORM /;"	d
GL_ALPHA32F_ARB	glew.h	/^#define GL_ALPHA32F_ARB /;"	d
GL_ALPHA32I_EXT	glew.h	/^#define GL_ALPHA32I_EXT /;"	d
GL_ALPHA32UI_EXT	glew.h	/^#define GL_ALPHA32UI_EXT /;"	d
GL_ALPHA4	glew.h	/^#define GL_ALPHA4 /;"	d
GL_ALPHA4_EXT	glew.h	/^#define GL_ALPHA4_EXT /;"	d
GL_ALPHA8	glew.h	/^#define GL_ALPHA8 /;"	d
GL_ALPHA8I_EXT	glew.h	/^#define GL_ALPHA8I_EXT /;"	d
GL_ALPHA8UI_EXT	glew.h	/^#define GL_ALPHA8UI_EXT /;"	d
GL_ALPHA8_EXT	glew.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA8_SNORM	glew.h	/^#define GL_ALPHA8_SNORM /;"	d
GL_ALPHA_BIAS	glew.h	/^#define GL_ALPHA_BIAS /;"	d
GL_ALPHA_BITS	glew.h	/^#define GL_ALPHA_BITS /;"	d
GL_ALPHA_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_ALPHA_EXTENDED_RANGE_SGIX /;"	d
GL_ALPHA_FLOAT16_APPLE	glew.h	/^#define GL_ALPHA_FLOAT16_APPLE /;"	d
GL_ALPHA_FLOAT16_ATI	glew.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	d
GL_ALPHA_FLOAT32_APPLE	glew.h	/^#define GL_ALPHA_FLOAT32_APPLE /;"	d
GL_ALPHA_FLOAT32_ATI	glew.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	d
GL_ALPHA_INTEGER	glew.h	/^#define GL_ALPHA_INTEGER /;"	d
GL_ALPHA_INTEGER_EXT	glew.h	/^#define GL_ALPHA_INTEGER_EXT /;"	d
GL_ALPHA_MAX_CLAMP_INGR	glew.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	d
GL_ALPHA_MAX_SGIX	glew.h	/^#define GL_ALPHA_MAX_SGIX /;"	d
GL_ALPHA_MIN_CLAMP_INGR	glew.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	d
GL_ALPHA_MIN_SGIX	glew.h	/^#define GL_ALPHA_MIN_SGIX /;"	d
GL_ALPHA_SCALE	glew.h	/^#define GL_ALPHA_SCALE /;"	d
GL_ALPHA_SIGNED_SGIX	glew.h	/^#define GL_ALPHA_SIGNED_SGIX /;"	d
GL_ALPHA_SNORM	glew.h	/^#define GL_ALPHA_SNORM /;"	d
GL_ALPHA_TEST	glew.h	/^#define GL_ALPHA_TEST /;"	d
GL_ALPHA_TEST_FUNC	glew.h	/^#define GL_ALPHA_TEST_FUNC /;"	d
GL_ALPHA_TEST_REF	glew.h	/^#define GL_ALPHA_TEST_REF /;"	d
GL_ALREADY_SIGNALED	glew.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS	glew.h	/^#define GL_ALWAYS /;"	d
GL_ALWAYS_FAST_HINT_PGI	glew.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	d
GL_ALWAYS_SOFT_HINT_PGI	glew.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	d
GL_AMBIENT	glew.h	/^#define GL_AMBIENT /;"	d
GL_AMBIENT_AND_DIFFUSE	glew.h	/^#define GL_AMBIENT_AND_DIFFUSE /;"	d
GL_AMD_blend_minmax_factor	glew.h	/^#define GL_AMD_blend_minmax_factor /;"	d
GL_AMD_conservative_depth	glew.h	/^#define GL_AMD_conservative_depth /;"	d
GL_AMD_debug_output	glew.h	/^#define GL_AMD_debug_output /;"	d
GL_AMD_depth_clamp_separate	glew.h	/^#define GL_AMD_depth_clamp_separate /;"	d
GL_AMD_draw_buffers_blend	glew.h	/^#define GL_AMD_draw_buffers_blend /;"	d
GL_AMD_gcn_shader	glew.h	/^#define GL_AMD_gcn_shader /;"	d
GL_AMD_gpu_shader_int64	glew.h	/^#define GL_AMD_gpu_shader_int64 /;"	d
GL_AMD_interleaved_elements	glew.h	/^#define GL_AMD_interleaved_elements /;"	d
GL_AMD_multi_draw_indirect	glew.h	/^#define GL_AMD_multi_draw_indirect /;"	d
GL_AMD_name_gen_delete	glew.h	/^#define GL_AMD_name_gen_delete /;"	d
GL_AMD_occlusion_query_event	glew.h	/^#define GL_AMD_occlusion_query_event /;"	d
GL_AMD_performance_monitor	glew.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AMD_pinned_memory	glew.h	/^#define GL_AMD_pinned_memory /;"	d
GL_AMD_query_buffer_object	glew.h	/^#define GL_AMD_query_buffer_object /;"	d
GL_AMD_sample_positions	glew.h	/^#define GL_AMD_sample_positions /;"	d
GL_AMD_seamless_cubemap_per_texture	glew.h	/^#define GL_AMD_seamless_cubemap_per_texture /;"	d
GL_AMD_shader_atomic_counter_ops	glew.h	/^#define GL_AMD_shader_atomic_counter_ops /;"	d
GL_AMD_shader_stencil_export	glew.h	/^#define GL_AMD_shader_stencil_export /;"	d
GL_AMD_shader_stencil_value_export	glew.h	/^#define GL_AMD_shader_stencil_value_export /;"	d
GL_AMD_shader_trinary_minmax	glew.h	/^#define GL_AMD_shader_trinary_minmax /;"	d
GL_AMD_sparse_texture	glew.h	/^#define GL_AMD_sparse_texture /;"	d
GL_AMD_stencil_operation_extended	glew.h	/^#define GL_AMD_stencil_operation_extended /;"	d
GL_AMD_texture_texture4	glew.h	/^#define GL_AMD_texture_texture4 /;"	d
GL_AMD_transform_feedback3_lines_triangles	glew.h	/^#define GL_AMD_transform_feedback3_lines_triangles /;"	d
GL_AMD_transform_feedback4	glew.h	/^#define GL_AMD_transform_feedback4 /;"	d
GL_AMD_vertex_shader_layer	glew.h	/^#define GL_AMD_vertex_shader_layer /;"	d
GL_AMD_vertex_shader_tessellator	glew.h	/^#define GL_AMD_vertex_shader_tessellator /;"	d
GL_AMD_vertex_shader_viewport_index	glew.h	/^#define GL_AMD_vertex_shader_viewport_index /;"	d
GL_AND	glew.h	/^#define GL_AND /;"	d
GL_AND_INVERTED	glew.h	/^#define GL_AND_INVERTED /;"	d
GL_AND_REVERSE	glew.h	/^#define GL_AND_REVERSE /;"	d
GL_ANGLE_depth_texture	glew.h	/^#define GL_ANGLE_depth_texture /;"	d
GL_ANGLE_framebuffer_blit	glew.h	/^#define GL_ANGLE_framebuffer_blit /;"	d
GL_ANGLE_framebuffer_multisample	glew.h	/^#define GL_ANGLE_framebuffer_multisample /;"	d
GL_ANGLE_instanced_arrays	glew.h	/^#define GL_ANGLE_instanced_arrays /;"	d
GL_ANGLE_pack_reverse_row_order	glew.h	/^#define GL_ANGLE_pack_reverse_row_order /;"	d
GL_ANGLE_program_binary	glew.h	/^#define GL_ANGLE_program_binary /;"	d
GL_ANGLE_texture_compression_dxt1	glew.h	/^#define GL_ANGLE_texture_compression_dxt1 /;"	d
GL_ANGLE_texture_compression_dxt3	glew.h	/^#define GL_ANGLE_texture_compression_dxt3 /;"	d
GL_ANGLE_texture_compression_dxt5	glew.h	/^#define GL_ANGLE_texture_compression_dxt5 /;"	d
GL_ANGLE_texture_usage	glew.h	/^#define GL_ANGLE_texture_usage /;"	d
GL_ANGLE_timer_query	glew.h	/^#define GL_ANGLE_timer_query /;"	d
GL_ANGLE_translated_shader_source	glew.h	/^#define GL_ANGLE_translated_shader_source /;"	d
GL_ANY_SAMPLES_PASSED	glew.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	glew.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_APPLE_aux_depth_stencil	glew.h	/^#define GL_APPLE_aux_depth_stencil /;"	d
GL_APPLE_client_storage	glew.h	/^#define GL_APPLE_client_storage /;"	d
GL_APPLE_element_array	glew.h	/^#define GL_APPLE_element_array /;"	d
GL_APPLE_fence	glew.h	/^#define GL_APPLE_fence /;"	d
GL_APPLE_float_pixels	glew.h	/^#define GL_APPLE_float_pixels /;"	d
GL_APPLE_flush_buffer_range	glew.h	/^#define GL_APPLE_flush_buffer_range /;"	d
GL_APPLE_object_purgeable	glew.h	/^#define GL_APPLE_object_purgeable /;"	d
GL_APPLE_pixel_buffer	glew.h	/^#define GL_APPLE_pixel_buffer /;"	d
GL_APPLE_rgb_422	glew.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_APPLE_row_bytes	glew.h	/^#define GL_APPLE_row_bytes /;"	d
GL_APPLE_specular_vector	glew.h	/^#define GL_APPLE_specular_vector /;"	d
GL_APPLE_texture_range	glew.h	/^#define GL_APPLE_texture_range /;"	d
GL_APPLE_transform_hint	glew.h	/^#define GL_APPLE_transform_hint /;"	d
GL_APPLE_vertex_array_object	glew.h	/^#define GL_APPLE_vertex_array_object /;"	d
GL_APPLE_vertex_array_range	glew.h	/^#define GL_APPLE_vertex_array_range /;"	d
GL_APPLE_vertex_program_evaluators	glew.h	/^#define GL_APPLE_vertex_program_evaluators /;"	d
GL_APPLE_ycbcr_422	glew.h	/^#define GL_APPLE_ycbcr_422 /;"	d
GL_ARB_ES2_compatibility	glew.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_1_compatibility	glew.h	/^#define GL_ARB_ES3_1_compatibility /;"	d
GL_ARB_ES3_compatibility	glew.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	glew.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	glew.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	glew.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	glew.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	glew.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	glew.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	glew.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	glew.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_clip_control	glew.h	/^#define GL_ARB_clip_control /;"	d
GL_ARB_color_buffer_float	glew.h	/^#define GL_ARB_color_buffer_float /;"	d
GL_ARB_compatibility	glew.h	/^#define GL_ARB_compatibility /;"	d
GL_ARB_compressed_texture_pixel_storage	glew.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	glew.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	glew.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conditional_render_inverted	glew.h	/^#define GL_ARB_conditional_render_inverted /;"	d
GL_ARB_conservative_depth	glew.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	glew.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	glew.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_cull_distance	glew.h	/^#define GL_ARB_cull_distance /;"	d
GL_ARB_debug_output	glew.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	glew.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	glew.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_depth_texture	glew.h	/^#define GL_ARB_depth_texture /;"	d
GL_ARB_derivative_control	glew.h	/^#define GL_ARB_derivative_control /;"	d
GL_ARB_direct_state_access	glew.h	/^#define GL_ARB_direct_state_access /;"	d
GL_ARB_draw_buffers	glew.h	/^#define GL_ARB_draw_buffers /;"	d
GL_ARB_draw_buffers_blend	glew.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	glew.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	glew.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_instanced	glew.h	/^#define GL_ARB_draw_instanced /;"	d
GL_ARB_enhanced_layouts	glew.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	glew.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	glew.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	glew.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	glew.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_program	glew.h	/^#define GL_ARB_fragment_program /;"	d
GL_ARB_fragment_program_shadow	glew.h	/^#define GL_ARB_fragment_program_shadow /;"	d
GL_ARB_fragment_shader	glew.h	/^#define GL_ARB_fragment_shader /;"	d
GL_ARB_framebuffer_no_attachments	glew.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	glew.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	glew.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_geometry_shader4	glew.h	/^#define GL_ARB_geometry_shader4 /;"	d
GL_ARB_get_program_binary	glew.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_get_texture_sub_image	glew.h	/^#define GL_ARB_get_texture_sub_image /;"	d
GL_ARB_gpu_shader5	glew.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	glew.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_half_float_pixel	glew.h	/^#define GL_ARB_half_float_pixel /;"	d
GL_ARB_half_float_vertex	glew.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	glew.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	glew.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_instanced_arrays	glew.h	/^#define GL_ARB_instanced_arrays /;"	d
GL_ARB_internalformat_query	glew.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	glew.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	glew.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	glew.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	glew.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_matrix_palette	glew.h	/^#define GL_ARB_matrix_palette /;"	d
GL_ARB_multi_bind	glew.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	glew.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_multisample	glew.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_multitexture	glew.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_occlusion_query	glew.h	/^#define GL_ARB_occlusion_query /;"	d
GL_ARB_occlusion_query2	glew.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_pipeline_statistics_query	glew.h	/^#define GL_ARB_pipeline_statistics_query /;"	d
GL_ARB_pixel_buffer_object	glew.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_point_parameters	glew.h	/^#define GL_ARB_point_parameters /;"	d
GL_ARB_point_sprite	glew.h	/^#define GL_ARB_point_sprite /;"	d
GL_ARB_program_interface_query	glew.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	glew.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	glew.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	glew.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	glew.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_application_isolation	glew.h	/^#define GL_ARB_robustness_application_isolation /;"	d
GL_ARB_robustness_share_group_isolation	glew.h	/^#define GL_ARB_robustness_share_group_isolation /;"	d
GL_ARB_sample_shading	glew.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	glew.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	glew.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	glew.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	glew.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counters	glew.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_bit_encoding	glew.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_draw_parameters	glew.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	glew.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	glew.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	glew.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_objects	glew.h	/^#define GL_ARB_shader_objects /;"	d
GL_ARB_shader_precision	glew.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	glew.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	glew.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	glew.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_image_samples	glew.h	/^#define GL_ARB_shader_texture_image_samples /;"	d
GL_ARB_shader_texture_lod	glew.h	/^#define GL_ARB_shader_texture_lod /;"	d
GL_ARB_shading_language_100	glew.h	/^#define GL_ARB_shading_language_100 /;"	d
GL_ARB_shading_language_420pack	glew.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	glew.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	glew.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_shadow	glew.h	/^#define GL_ARB_shadow /;"	d
GL_ARB_shadow_ambient	glew.h	/^#define GL_ARB_shadow_ambient /;"	d
GL_ARB_sparse_buffer	glew.h	/^#define GL_ARB_sparse_buffer /;"	d
GL_ARB_sparse_texture	glew.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_stencil_texturing	glew.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	glew.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	glew.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_barrier	glew.h	/^#define GL_ARB_texture_barrier /;"	d
GL_ARB_texture_border_clamp	glew.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_buffer_object	glew.h	/^#define GL_ARB_texture_buffer_object /;"	d
GL_ARB_texture_buffer_object_rgb32	glew.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	glew.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression	glew.h	/^#define GL_ARB_texture_compression /;"	d
GL_ARB_texture_compression_bptc	glew.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	glew.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map	glew.h	/^#define GL_ARB_texture_cube_map /;"	d
GL_ARB_texture_cube_map_array	glew.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_env_add	glew.h	/^#define GL_ARB_texture_env_add /;"	d
GL_ARB_texture_env_combine	glew.h	/^#define GL_ARB_texture_env_combine /;"	d
GL_ARB_texture_env_crossbar	glew.h	/^#define GL_ARB_texture_env_crossbar /;"	d
GL_ARB_texture_env_dot3	glew.h	/^#define GL_ARB_texture_env_dot3 /;"	d
GL_ARB_texture_float	glew.h	/^#define GL_ARB_texture_float /;"	d
GL_ARB_texture_gather	glew.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	glew.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_mirrored_repeat	glew.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_multisample	glew.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_non_power_of_two	glew.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_query_levels	glew.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	glew.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rectangle	glew.h	/^#define GL_ARB_texture_rectangle /;"	d
GL_ARB_texture_rg	glew.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	glew.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	glew.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	glew.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	glew.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	glew.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	glew.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	glew.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	glew.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	glew.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	glew.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transform_feedback_overflow_query	glew.h	/^#define GL_ARB_transform_feedback_overflow_query /;"	d
GL_ARB_transpose_matrix	glew.h	/^#define GL_ARB_transpose_matrix /;"	d
GL_ARB_uniform_buffer_object	glew.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	glew.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	glew.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	glew.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	glew.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_blend	glew.h	/^#define GL_ARB_vertex_blend /;"	d
GL_ARB_vertex_buffer_object	glew.h	/^#define GL_ARB_vertex_buffer_object /;"	d
GL_ARB_vertex_program	glew.h	/^#define GL_ARB_vertex_program /;"	d
GL_ARB_vertex_shader	glew.h	/^#define GL_ARB_vertex_shader /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	glew.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	glew.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	glew.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARB_window_pos	glew.h	/^#define GL_ARB_window_pos /;"	d
GL_ARC_TO_NV	glew.h	/^#define GL_ARC_TO_NV /;"	d
GL_ARRAY_BUFFER	glew.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_ARB	glew.h	/^#define GL_ARRAY_BUFFER_ARB /;"	d
GL_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	glew.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	glew.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	glew.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	glew.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	d
GL_ARRAY_SIZE	glew.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	glew.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	glew.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_ASYNC_HISTOGRAM_SGIX	glew.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	d
GL_ASYNC_MARKER_SGIX	glew.h	/^#define GL_ASYNC_MARKER_SGIX /;"	d
GL_ASYNC_READ_PIXELS_SGIX	glew.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	d
GL_ASYNC_TEX_IMAGE_SGIX	glew.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_ATIX_point_sprites	glew.h	/^#define GL_ATIX_point_sprites /;"	d
GL_ATIX_texture_env_combine3	glew.h	/^#define GL_ATIX_texture_env_combine3 /;"	d
GL_ATIX_texture_env_route	glew.h	/^#define GL_ATIX_texture_env_route /;"	d
GL_ATIX_vertex_shader_output_point_size	glew.h	/^#define GL_ATIX_vertex_shader_output_point_size /;"	d
GL_ATI_draw_buffers	glew.h	/^#define GL_ATI_draw_buffers /;"	d
GL_ATI_element_array	glew.h	/^#define GL_ATI_element_array /;"	d
GL_ATI_envmap_bumpmap	glew.h	/^#define GL_ATI_envmap_bumpmap /;"	d
GL_ATI_fragment_shader	glew.h	/^#define GL_ATI_fragment_shader /;"	d
GL_ATI_map_object_buffer	glew.h	/^#define GL_ATI_map_object_buffer /;"	d
GL_ATI_meminfo	glew.h	/^#define GL_ATI_meminfo /;"	d
GL_ATI_pn_triangles	glew.h	/^#define GL_ATI_pn_triangles /;"	d
GL_ATI_separate_stencil	glew.h	/^#define GL_ATI_separate_stencil /;"	d
GL_ATI_shader_texture_lod	glew.h	/^#define GL_ATI_shader_texture_lod /;"	d
GL_ATI_text_fragment_shader	glew.h	/^#define GL_ATI_text_fragment_shader /;"	d
GL_ATI_texture_compression_3dc	glew.h	/^#define GL_ATI_texture_compression_3dc /;"	d
GL_ATI_texture_env_combine3	glew.h	/^#define GL_ATI_texture_env_combine3 /;"	d
GL_ATI_texture_float	glew.h	/^#define GL_ATI_texture_float /;"	d
GL_ATI_texture_mirror_once	glew.h	/^#define GL_ATI_texture_mirror_once /;"	d
GL_ATI_vertex_array_object	glew.h	/^#define GL_ATI_vertex_array_object /;"	d
GL_ATI_vertex_attrib_array_object	glew.h	/^#define GL_ATI_vertex_attrib_array_object /;"	d
GL_ATI_vertex_streams	glew.h	/^#define GL_ATI_vertex_streams /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	glew.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	glew.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT /;"	d
GL_ATOMIC_COUNTER_BUFFER	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_SHADERS	glew.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTENUATION_EXT	glew.h	/^#define GL_ATTENUATION_EXT /;"	d
GL_ATTRIB_ARRAY_POINTER_NV	glew.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	d
GL_ATTRIB_ARRAY_SIZE_NV	glew.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	glew.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	d
GL_ATTRIB_ARRAY_TYPE_NV	glew.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	d
GL_ATTRIB_STACK_DEPTH	glew.h	/^#define GL_ATTRIB_STACK_DEPTH /;"	d
GL_AUTO_GENERATE_MIPMAP	glew.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_AUTO_NORMAL	glew.h	/^#define GL_AUTO_NORMAL /;"	d
GL_AUX0	glew.h	/^#define GL_AUX0 /;"	d
GL_AUX1	glew.h	/^#define GL_AUX1 /;"	d
GL_AUX2	glew.h	/^#define GL_AUX2 /;"	d
GL_AUX3	glew.h	/^#define GL_AUX3 /;"	d
GL_AUX_BUFFERS	glew.h	/^#define GL_AUX_BUFFERS /;"	d
GL_AUX_DEPTH_STENCIL_APPLE	glew.h	/^#define GL_AUX_DEPTH_STENCIL_APPLE /;"	d
GL_AVERAGE_EXT	glew.h	/^#define GL_AVERAGE_EXT /;"	d
GL_BACK	glew.h	/^#define GL_BACK /;"	d
GL_BACK_LEFT	glew.h	/^#define GL_BACK_LEFT /;"	d
GL_BACK_NORMALS_HINT_PGI	glew.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	d
GL_BACK_PRIMARY_COLOR_NV	glew.h	/^#define GL_BACK_PRIMARY_COLOR_NV /;"	d
GL_BACK_RIGHT	glew.h	/^#define GL_BACK_RIGHT /;"	d
GL_BACK_SECONDARY_COLOR_NV	glew.h	/^#define GL_BACK_SECONDARY_COLOR_NV /;"	d
GL_BEVEL_NV	glew.h	/^#define GL_BEVEL_NV /;"	d
GL_BGR	glew.h	/^#define GL_BGR /;"	d
GL_BGRA	glew.h	/^#define GL_BGRA /;"	d
GL_BGRA_EXT	glew.h	/^#define GL_BGRA_EXT /;"	d
GL_BGRA_INTEGER	glew.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGRA_INTEGER_EXT	glew.h	/^#define GL_BGRA_INTEGER_EXT /;"	d
GL_BGR_EXT	glew.h	/^#define GL_BGR_EXT /;"	d
GL_BGR_INTEGER	glew.h	/^#define GL_BGR_INTEGER /;"	d
GL_BGR_INTEGER_EXT	glew.h	/^#define GL_BGR_INTEGER_EXT /;"	d
GL_BIAS_BIT_ATI	glew.h	/^#define GL_BIAS_BIT_ATI /;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	glew.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	d
GL_BINORMAL_ARRAY_EXT	glew.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	glew.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	glew.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	glew.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	d
GL_BITMAP	glew.h	/^#define GL_BITMAP /;"	d
GL_BITMAP_TOKEN	glew.h	/^#define GL_BITMAP_TOKEN /;"	d
GL_BLEND	glew.h	/^#define GL_BLEND /;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	glew.h	/^#define GL_BLEND_ADVANCED_COHERENT_KHR /;"	d
GL_BLEND_ADVANCED_COHERENT_NV	glew.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	d
GL_BLEND_COLOR	glew.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_EXT	glew.h	/^#define GL_BLEND_COLOR_EXT /;"	d
GL_BLEND_DST	glew.h	/^#define GL_BLEND_DST /;"	d
GL_BLEND_DST_ALPHA	glew.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA_EXT	glew.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	d
GL_BLEND_DST_RGB	glew.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB_EXT	glew.h	/^#define GL_BLEND_DST_RGB_EXT /;"	d
GL_BLEND_EQUATION	glew.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	glew.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA_EXT	glew.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	d
GL_BLEND_EQUATION_EXT	glew.h	/^#define GL_BLEND_EQUATION_EXT /;"	d
GL_BLEND_EQUATION_RGB	glew.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB_EXT	glew.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	d
GL_BLEND_OVERLAP_NV	glew.h	/^#define GL_BLEND_OVERLAP_NV /;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	glew.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	d
GL_BLEND_SRC	glew.h	/^#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC_ALPHA	glew.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA_EXT	glew.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	d
GL_BLEND_SRC_RGB	glew.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB_EXT	glew.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	d
GL_BLOCK_INDEX	glew.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE	glew.h	/^#define GL_BLUE /;"	d
GL_BLUE_BIAS	glew.h	/^#define GL_BLUE_BIAS /;"	d
GL_BLUE_BITS	glew.h	/^#define GL_BLUE_BITS /;"	d
GL_BLUE_BIT_ATI	glew.h	/^#define GL_BLUE_BIT_ATI /;"	d
GL_BLUE_INTEGER	glew.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_INTEGER_EXT	glew.h	/^#define GL_BLUE_INTEGER_EXT /;"	d
GL_BLUE_MAX_CLAMP_INGR	glew.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	d
GL_BLUE_MIN_CLAMP_INGR	glew.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	d
GL_BLUE_NV	glew.h	/^#define GL_BLUE_NV /;"	d
GL_BLUE_SCALE	glew.h	/^#define GL_BLUE_SCALE /;"	d
GL_BOLD_BIT_NV	glew.h	/^#define GL_BOLD_BIT_NV /;"	d
GL_BOOL	glew.h	/^#define GL_BOOL /;"	d
GL_BOOL_ARB	glew.h	/^#define GL_BOOL_ARB /;"	d
GL_BOOL_VEC2	glew.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2_ARB	glew.h	/^#define GL_BOOL_VEC2_ARB /;"	d
GL_BOOL_VEC3	glew.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3_ARB	glew.h	/^#define GL_BOOL_VEC3_ARB /;"	d
GL_BOOL_VEC4	glew.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4_ARB	glew.h	/^#define GL_BOOL_VEC4_ARB /;"	d
GL_BOUNDING_BOX_NV	glew.h	/^#define GL_BOUNDING_BOX_NV /;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	glew.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	d
GL_BUFFER	glew.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	glew.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_ARB	glew.h	/^#define GL_BUFFER_ACCESS_ARB /;"	d
GL_BUFFER_ACCESS_FLAGS	glew.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_BINDING	glew.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	glew.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	glew.h	/^#define GL_BUFFER_FLUSHING_UNMAP_APPLE /;"	d
GL_BUFFER_GPU_ADDRESS_NV	glew.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	glew.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_MAPPED	glew.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED_ARB	glew.h	/^#define GL_BUFFER_MAPPED_ARB /;"	d
GL_BUFFER_MAP_LENGTH	glew.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	glew.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	glew.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER_ARB	glew.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	d
GL_BUFFER_OBJECT_APPLE	glew.h	/^#define GL_BUFFER_OBJECT_APPLE /;"	d
GL_BUFFER_OBJECT_EXT	glew.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	glew.h	/^#define GL_BUFFER_SERIALIZED_MODIFY_APPLE /;"	d
GL_BUFFER_SIZE	glew.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE_ARB	glew.h	/^#define GL_BUFFER_SIZE_ARB /;"	d
GL_BUFFER_STORAGE_FLAGS	glew.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	glew.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	glew.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT /;"	d
GL_BUFFER_USAGE	glew.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE_ARB	glew.h	/^#define GL_BUFFER_USAGE_ARB /;"	d
GL_BUFFER_VARIABLE	glew.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BUMP_ENVMAP_ATI	glew.h	/^#define GL_BUMP_ENVMAP_ATI /;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	glew.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	d
GL_BUMP_ROT_MATRIX_ATI	glew.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	glew.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	d
GL_BUMP_TARGET_ATI	glew.h	/^#define GL_BUMP_TARGET_ATI /;"	d
GL_BUMP_TEX_UNITS_ATI	glew.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	d
GL_BYTE	glew.h	/^#define GL_BYTE /;"	d
GL_C3F_V3F	glew.h	/^#define GL_C3F_V3F /;"	d
GL_C4F_N3F_V3F	glew.h	/^#define GL_C4F_N3F_V3F /;"	d
GL_C4UB_V2F	glew.h	/^#define GL_C4UB_V2F /;"	d
GL_C4UB_V3F	glew.h	/^#define GL_C4UB_V3F /;"	d
GL_CACHE_REGAL	glew.h	/^#define GL_CACHE_REGAL /;"	d
GL_CAVEAT_SUPPORT	glew.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CCW	glew.h	/^#define GL_CCW /;"	d
GL_CG_FRAGMENT_SHADER_EXT	glew.h	/^#define GL_CG_FRAGMENT_SHADER_EXT /;"	d
GL_CG_VERTEX_SHADER_EXT	glew.h	/^#define GL_CG_VERTEX_SHADER_EXT /;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	glew.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	d
GL_CIRCULAR_CW_ARC_TO_NV	glew.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	glew.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	d
GL_CLAMP	glew.h	/^#define GL_CLAMP /;"	d
GL_CLAMP_FRAGMENT_COLOR	glew.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	glew.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	d
GL_CLAMP_READ_COLOR	glew.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_READ_COLOR_ARB	glew.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	d
GL_CLAMP_TO_BORDER	glew.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	glew.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_BORDER_SGIS	glew.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	d
GL_CLAMP_TO_EDGE	glew.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE_EXT	glew.h	/^#define GL_CLAMP_TO_EDGE_EXT /;"	d
GL_CLAMP_TO_EDGE_SGIS	glew.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	d
GL_CLAMP_VERTEX_COLOR	glew.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	d
GL_CLAMP_VERTEX_COLOR_ARB	glew.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	d
GL_CLEAR	glew.h	/^#define GL_CLEAR /;"	d
GL_CLEAR_BUFFER	glew.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	glew.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE	glew.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	glew.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	d
GL_CLIENT_ALL_ATTRIB_BITS	glew.h	/^#define GL_CLIENT_ALL_ATTRIB_BITS /;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	glew.h	/^#define GL_CLIENT_ATTRIB_STACK_DEPTH /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	glew.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_PIXEL_STORE_BIT	glew.h	/^#define GL_CLIENT_PIXEL_STORE_BIT /;"	d
GL_CLIENT_STORAGE_BIT	glew.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	glew.h	/^#define GL_CLIENT_VERTEX_ARRAY_BIT /;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	glew.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES_ARB /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	glew.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB /;"	d
GL_CLIP_DEPTH_MODE	glew.h	/^#define GL_CLIP_DEPTH_MODE /;"	d
GL_CLIP_DISTANCE0	glew.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	glew.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	glew.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	glew.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	glew.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	glew.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE_NV	glew.h	/^#define GL_CLIP_DISTANCE_NV /;"	d
GL_CLIP_FAR_HINT_PGI	glew.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	d
GL_CLIP_NEAR_HINT_PGI	glew.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	d
GL_CLIP_ORIGIN	glew.h	/^#define GL_CLIP_ORIGIN /;"	d
GL_CLIP_PLANE0	glew.h	/^#define GL_CLIP_PLANE0 /;"	d
GL_CLIP_PLANE1	glew.h	/^#define GL_CLIP_PLANE1 /;"	d
GL_CLIP_PLANE2	glew.h	/^#define GL_CLIP_PLANE2 /;"	d
GL_CLIP_PLANE3	glew.h	/^#define GL_CLIP_PLANE3 /;"	d
GL_CLIP_PLANE4	glew.h	/^#define GL_CLIP_PLANE4 /;"	d
GL_CLIP_PLANE5	glew.h	/^#define GL_CLIP_PLANE5 /;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	glew.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	d
GL_CLOSE_PATH_NV	glew.h	/^#define GL_CLOSE_PATH_NV /;"	d
GL_CMYKA_EXT	glew.h	/^#define GL_CMYKA_EXT /;"	d
GL_CMYK_EXT	glew.h	/^#define GL_CMYK_EXT /;"	d
GL_CND0_ATI	glew.h	/^#define GL_CND0_ATI /;"	d
GL_CND_ATI	glew.h	/^#define GL_CND_ATI /;"	d
GL_CODE_REGAL	glew.h	/^#define GL_CODE_REGAL /;"	d
GL_COEFF	glew.h	/^#define GL_COEFF /;"	d
GL_COLOR	glew.h	/^#define GL_COLOR /;"	d
GL_COLOR3_BIT_PGI	glew.h	/^#define GL_COLOR3_BIT_PGI /;"	d
GL_COLOR4_BIT_PGI	glew.h	/^#define GL_COLOR4_BIT_PGI /;"	d
GL_COLORBURN_KHR	glew.h	/^#define GL_COLORBURN_KHR /;"	d
GL_COLORBURN_NV	glew.h	/^#define GL_COLORBURN_NV /;"	d
GL_COLORDODGE_KHR	glew.h	/^#define GL_COLORDODGE_KHR /;"	d
GL_COLORDODGE_NV	glew.h	/^#define GL_COLORDODGE_NV /;"	d
GL_COLOR_ALPHA_PAIRING_ATI	glew.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	d
GL_COLOR_ARRAY	glew.h	/^#define GL_COLOR_ARRAY /;"	d
GL_COLOR_ARRAY_ADDRESS_NV	glew.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_COLOR_ARRAY_COUNT_EXT	glew.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	d
GL_COLOR_ARRAY_EXT	glew.h	/^#define GL_COLOR_ARRAY_EXT /;"	d
GL_COLOR_ARRAY_LENGTH_NV	glew.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	d
GL_COLOR_ARRAY_LIST_IBM	glew.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	glew.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_COLOR_ARRAY_POINTER	glew.h	/^#define GL_COLOR_ARRAY_POINTER /;"	d
GL_COLOR_ARRAY_POINTER_EXT	glew.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	d
GL_COLOR_ARRAY_SIZE	glew.h	/^#define GL_COLOR_ARRAY_SIZE /;"	d
GL_COLOR_ARRAY_SIZE_EXT	glew.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	d
GL_COLOR_ARRAY_STRIDE	glew.h	/^#define GL_COLOR_ARRAY_STRIDE /;"	d
GL_COLOR_ARRAY_STRIDE_EXT	glew.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_COLOR_ARRAY_TYPE	glew.h	/^#define GL_COLOR_ARRAY_TYPE /;"	d
GL_COLOR_ARRAY_TYPE_EXT	glew.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	d
GL_COLOR_ATTACHMENT0	glew.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT1	glew.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	glew.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT10_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT11	glew.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT11_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT12	glew.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT12_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT13	glew.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT13_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT14	glew.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT14_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT15	glew.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT15_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT1_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT2	glew.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT2_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT3	glew.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT3_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT4	glew.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT4_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT5	glew.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT5_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT6	glew.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT6_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT7	glew.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT7_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT8	glew.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT8_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT9	glew.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_ATTACHMENT9_EXT	glew.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_BUFFER_BIT	glew.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_CLEAR_VALUE	glew.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_COMPONENTS	glew.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	glew.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_FLOAT_APPLE	glew.h	/^#define GL_COLOR_FLOAT_APPLE /;"	d
GL_COLOR_INDEX	glew.h	/^#define GL_COLOR_INDEX /;"	d
GL_COLOR_INDEX12_EXT	glew.h	/^#define GL_COLOR_INDEX12_EXT /;"	d
GL_COLOR_INDEX16_EXT	glew.h	/^#define GL_COLOR_INDEX16_EXT /;"	d
GL_COLOR_INDEX1_EXT	glew.h	/^#define GL_COLOR_INDEX1_EXT /;"	d
GL_COLOR_INDEX2_EXT	glew.h	/^#define GL_COLOR_INDEX2_EXT /;"	d
GL_COLOR_INDEX4_EXT	glew.h	/^#define GL_COLOR_INDEX4_EXT /;"	d
GL_COLOR_INDEX8_EXT	glew.h	/^#define GL_COLOR_INDEX8_EXT /;"	d
GL_COLOR_INDEXES	glew.h	/^#define GL_COLOR_INDEXES /;"	d
GL_COLOR_LOGIC_OP	glew.h	/^#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_MATERIAL	glew.h	/^#define GL_COLOR_MATERIAL /;"	d
GL_COLOR_MATERIAL_FACE	glew.h	/^#define GL_COLOR_MATERIAL_FACE /;"	d
GL_COLOR_MATERIAL_PARAMETER	glew.h	/^#define GL_COLOR_MATERIAL_PARAMETER /;"	d
GL_COLOR_MATRIX	glew.h	/^#define GL_COLOR_MATRIX /;"	d
GL_COLOR_MATRIX_SGI	glew.h	/^#define GL_COLOR_MATRIX_SGI /;"	d
GL_COLOR_MATRIX_STACK_DEPTH	glew.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	glew.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_COLOR_RENDERABLE	glew.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_SAMPLES_NV	glew.h	/^#define GL_COLOR_SAMPLES_NV /;"	d
GL_COLOR_SUM	glew.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_SUM_ARB	glew.h	/^#define GL_COLOR_SUM_ARB /;"	d
GL_COLOR_SUM_CLAMP_NV	glew.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	d
GL_COLOR_SUM_EXT	glew.h	/^#define GL_COLOR_SUM_EXT /;"	d
GL_COLOR_TABLE	glew.h	/^#define GL_COLOR_TABLE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE	glew.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_EXT	glew.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_EXT /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	glew.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	d
GL_COLOR_TABLE_BIAS	glew.h	/^#define GL_COLOR_TABLE_BIAS /;"	d
GL_COLOR_TABLE_BIAS_SGI	glew.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	d
GL_COLOR_TABLE_BLUE_SIZE	glew.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	d
GL_COLOR_TABLE_BLUE_SIZE_EXT	glew.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_EXT /;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	glew.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	d
GL_COLOR_TABLE_FORMAT	glew.h	/^#define GL_COLOR_TABLE_FORMAT /;"	d
GL_COLOR_TABLE_FORMAT_EXT	glew.h	/^#define GL_COLOR_TABLE_FORMAT_EXT /;"	d
GL_COLOR_TABLE_FORMAT_SGI	glew.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	d
GL_COLOR_TABLE_GREEN_SIZE	glew.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	d
GL_COLOR_TABLE_GREEN_SIZE_EXT	glew.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_EXT /;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	glew.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	glew.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_EXT	glew.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_EXT /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	glew.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	glew.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_EXT	glew.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_EXT /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	glew.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	d
GL_COLOR_TABLE_RED_SIZE	glew.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	d
GL_COLOR_TABLE_RED_SIZE_EXT	glew.h	/^#define GL_COLOR_TABLE_RED_SIZE_EXT /;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	glew.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	d
GL_COLOR_TABLE_SCALE	glew.h	/^#define GL_COLOR_TABLE_SCALE /;"	d
GL_COLOR_TABLE_SCALE_SGI	glew.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	d
GL_COLOR_TABLE_SGI	glew.h	/^#define GL_COLOR_TABLE_SGI /;"	d
GL_COLOR_TABLE_WIDTH	glew.h	/^#define GL_COLOR_TABLE_WIDTH /;"	d
GL_COLOR_TABLE_WIDTH_EXT	glew.h	/^#define GL_COLOR_TABLE_WIDTH_EXT /;"	d
GL_COLOR_TABLE_WIDTH_SGI	glew.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	d
GL_COLOR_WRITEMASK	glew.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COMBINE	glew.h	/^#define GL_COMBINE /;"	d
GL_COMBINE4_NV	glew.h	/^#define GL_COMBINE4_NV /;"	d
GL_COMBINER0_NV	glew.h	/^#define GL_COMBINER0_NV /;"	d
GL_COMBINER1_NV	glew.h	/^#define GL_COMBINER1_NV /;"	d
GL_COMBINER2_NV	glew.h	/^#define GL_COMBINER2_NV /;"	d
GL_COMBINER3_NV	glew.h	/^#define GL_COMBINER3_NV /;"	d
GL_COMBINER4_NV	glew.h	/^#define GL_COMBINER4_NV /;"	d
GL_COMBINER5_NV	glew.h	/^#define GL_COMBINER5_NV /;"	d
GL_COMBINER6_NV	glew.h	/^#define GL_COMBINER6_NV /;"	d
GL_COMBINER7_NV	glew.h	/^#define GL_COMBINER7_NV /;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	glew.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	d
GL_COMBINER_AB_OUTPUT_NV	glew.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	d
GL_COMBINER_BIAS_NV	glew.h	/^#define GL_COMBINER_BIAS_NV /;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	glew.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	d
GL_COMBINER_CD_OUTPUT_NV	glew.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	d
GL_COMBINER_COMPONENT_USAGE_NV	glew.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	d
GL_COMBINER_INPUT_NV	glew.h	/^#define GL_COMBINER_INPUT_NV /;"	d
GL_COMBINER_MAPPING_NV	glew.h	/^#define GL_COMBINER_MAPPING_NV /;"	d
GL_COMBINER_MUX_SUM_NV	glew.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	d
GL_COMBINER_SCALE_NV	glew.h	/^#define GL_COMBINER_SCALE_NV /;"	d
GL_COMBINER_SUM_OUTPUT_NV	glew.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	d
GL_COMBINE_ALPHA	glew.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_ALPHA_ARB	glew.h	/^#define GL_COMBINE_ALPHA_ARB /;"	d
GL_COMBINE_ALPHA_EXT	glew.h	/^#define GL_COMBINE_ALPHA_EXT /;"	d
GL_COMBINE_ARB	glew.h	/^#define GL_COMBINE_ARB /;"	d
GL_COMBINE_EXT	glew.h	/^#define GL_COMBINE_EXT /;"	d
GL_COMBINE_RGB	glew.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMBINE_RGB_ARB	glew.h	/^#define GL_COMBINE_RGB_ARB /;"	d
GL_COMBINE_RGB_EXT	glew.h	/^#define GL_COMBINE_RGB_EXT /;"	d
GL_COMMAND_BARRIER_BIT	glew.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMMAND_BARRIER_BIT_EXT	glew.h	/^#define GL_COMMAND_BARRIER_BIT_EXT /;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	glew.h	/^#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT /;"	d
GL_COMPARE_REF_TO_TEXTURE	glew.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE	glew.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	glew.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	d
GL_COMPATIBLE_SUBROUTINES	glew.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE	glew.h	/^#define GL_COMPILE /;"	d
GL_COMPILE_AND_EXECUTE	glew.h	/^#define GL_COMPILE_AND_EXECUTE /;"	d
GL_COMPILE_STATUS	glew.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_ALPHA	glew.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_ALPHA_ARB	glew.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	d
GL_COMPRESSED_INTENSITY	glew.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_INTENSITY_ARB	glew.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	d
GL_COMPRESSED_LUMINANCE	glew.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI	glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_LUMINANCE_ARB	glew.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	glew.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_R11_EAC	glew.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	glew.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	glew.h	/^#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_RED_RGTC1	glew.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RED_RGTC1_EXT	glew.h	/^#define GL_COMPRESSED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_RG	glew.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	glew.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	glew.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	glew.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	glew.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	glew.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	glew.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ARB	glew.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	glew.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	glew.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	glew.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_ANGLE	glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE	glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE	glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_ARB	glew.h	/^#define GL_COMPRESSED_RGB_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	glew.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	glew.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	glew.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	glew.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	glew.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_ANGLE	glew.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_ANGLE /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	glew.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RG_RGTC2	glew.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	glew.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	glew.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	glew.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	glew.h	/^#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	glew.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	glew.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	glew.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	glew.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE	glew.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	glew.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	glew.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	d
GL_COMPRESSED_SLUMINANCE_EXT	glew.h	/^#define GL_COMPRESSED_SLUMINANCE_EXT /;"	d
GL_COMPRESSED_SRGB	glew.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	glew.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	glew.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_SRGB_EXT	glew.h	/^#define GL_COMPRESSED_SRGB_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	glew.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	glew.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	glew.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_COMPUTE_PROGRAM_NV	glew.h	/^#define GL_COMPUTE_PROGRAM_NV /;"	d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	glew.h	/^#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_COMPUTE_SHADER	glew.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	glew.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	glew.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS_ARB /;"	d
GL_COMPUTE_SUBROUTINE	glew.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	glew.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	glew.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	glew.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_COMP_BIT_ATI	glew.h	/^#define GL_COMP_BIT_ATI /;"	d
GL_CONDITION_SATISFIED	glew.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONJOINT_NV	glew.h	/^#define GL_CONJOINT_NV /;"	d
GL_CONSERVE_MEMORY_HINT_PGI	glew.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	d
GL_CONSTANT	glew.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	glew.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA_EXT	glew.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	d
GL_CONSTANT_ARB	glew.h	/^#define GL_CONSTANT_ARB /;"	d
GL_CONSTANT_ATTENUATION	glew.h	/^#define GL_CONSTANT_ATTENUATION /;"	d
GL_CONSTANT_BORDER	glew.h	/^#define GL_CONSTANT_BORDER /;"	d
GL_CONSTANT_COLOR	glew.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR0_NV	glew.h	/^#define GL_CONSTANT_COLOR0_NV /;"	d
GL_CONSTANT_COLOR1_NV	glew.h	/^#define GL_CONSTANT_COLOR1_NV /;"	d
GL_CONSTANT_COLOR_EXT	glew.h	/^#define GL_CONSTANT_COLOR_EXT /;"	d
GL_CONSTANT_EXT	glew.h	/^#define GL_CONSTANT_EXT /;"	d
GL_CONST_EYE_NV	glew.h	/^#define GL_CONST_EYE_NV /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	glew.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	glew.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	glew.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	glew.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	glew.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	glew.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_LOST	glew.h	/^#define GL_CONTEXT_LOST /;"	d
GL_CONTEXT_PROFILE_MASK	glew.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_ROBUST_ACCESS	glew.h	/^#define GL_CONTEXT_ROBUST_ACCESS /;"	d
GL_CONTINUOUS_AMD	glew.h	/^#define GL_CONTINUOUS_AMD /;"	d
GL_CONTRAST_NV	glew.h	/^#define GL_CONTRAST_NV /;"	d
GL_CONVEX_HULL_NV	glew.h	/^#define GL_CONVEX_HULL_NV /;"	d
GL_CONVOLUTION_1D	glew.h	/^#define GL_CONVOLUTION_1D /;"	d
GL_CONVOLUTION_1D_EXT	glew.h	/^#define GL_CONVOLUTION_1D_EXT /;"	d
GL_CONVOLUTION_2D	glew.h	/^#define GL_CONVOLUTION_2D /;"	d
GL_CONVOLUTION_2D_EXT	glew.h	/^#define GL_CONVOLUTION_2D_EXT /;"	d
GL_CONVOLUTION_BORDER_COLOR	glew.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	d
GL_CONVOLUTION_BORDER_MODE	glew.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	glew.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	d
GL_CONVOLUTION_FILTER_BIAS	glew.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	glew.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	d
GL_CONVOLUTION_FILTER_SCALE	glew.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	glew.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	d
GL_CONVOLUTION_FORMAT	glew.h	/^#define GL_CONVOLUTION_FORMAT /;"	d
GL_CONVOLUTION_FORMAT_EXT	glew.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	d
GL_CONVOLUTION_HEIGHT	glew.h	/^#define GL_CONVOLUTION_HEIGHT /;"	d
GL_CONVOLUTION_HEIGHT_EXT	glew.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	d
GL_CONVOLUTION_HINT_SGIX	glew.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	d
GL_CONVOLUTION_WIDTH	glew.h	/^#define GL_CONVOLUTION_WIDTH /;"	d
GL_CONVOLUTION_WIDTH_EXT	glew.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	d
GL_CON_0_ATI	glew.h	/^#define GL_CON_0_ATI /;"	d
GL_CON_1_ATI	glew.h	/^#define GL_CON_1_ATI /;"	d
GL_CON_2_ATI	glew.h	/^#define GL_CON_2_ATI /;"	d
GL_CON_3_ATI	glew.h	/^#define GL_CON_3_ATI /;"	d
GL_CON_4_ATI	glew.h	/^#define GL_CON_4_ATI /;"	d
GL_CON_5_ATI	glew.h	/^#define GL_CON_5_ATI /;"	d
GL_CON_6_ATI	glew.h	/^#define GL_CON_6_ATI /;"	d
GL_CON_7_ATI	glew.h	/^#define GL_CON_7_ATI /;"	d
GL_COORD_REPLACE	glew.h	/^#define GL_COORD_REPLACE /;"	d
GL_COORD_REPLACE_ARB	glew.h	/^#define GL_COORD_REPLACE_ARB /;"	d
GL_COORD_REPLACE_NV	glew.h	/^#define GL_COORD_REPLACE_NV /;"	d
GL_COPY	glew.h	/^#define GL_COPY /;"	d
GL_COPY_INVERTED	glew.h	/^#define GL_COPY_INVERTED /;"	d
GL_COPY_PIXEL_TOKEN	glew.h	/^#define GL_COPY_PIXEL_TOKEN /;"	d
GL_COPY_READ_BUFFER	glew.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_WRITE_BUFFER	glew.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COUNTER_RANGE_AMD	glew.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_TYPE_AMD	glew.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNT_DOWN_NV	glew.h	/^#define GL_COUNT_DOWN_NV /;"	d
GL_COUNT_UP_NV	glew.h	/^#define GL_COUNT_UP_NV /;"	d
GL_CUBIC_CURVE_TO_NV	glew.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	d
GL_CUBIC_EXT	glew.h	/^#define GL_CUBIC_EXT /;"	d
GL_CULL_FACE	glew.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	glew.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CULL_FRAGMENT_NV	glew.h	/^#define GL_CULL_FRAGMENT_NV /;"	d
GL_CULL_MODES_NV	glew.h	/^#define GL_CULL_MODES_NV /;"	d
GL_CULL_VERTEX_EXT	glew.h	/^#define GL_CULL_VERTEX_EXT /;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	glew.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	d
GL_CULL_VERTEX_IBM	glew.h	/^#define GL_CULL_VERTEX_IBM /;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	glew.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	d
GL_CURRENT_ATTRIB_NV	glew.h	/^#define GL_CURRENT_ATTRIB_NV /;"	d
GL_CURRENT_BINORMAL_EXT	glew.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	d
GL_CURRENT_BIT	glew.h	/^#define GL_CURRENT_BIT /;"	d
GL_CURRENT_COLOR	glew.h	/^#define GL_CURRENT_COLOR /;"	d
GL_CURRENT_FOG_COORD	glew.h	/^#define GL_CURRENT_FOG_COORD GL_CURRENT_FOG_COORDI/;"	d
GL_CURRENT_FOG_COORDINATE	glew.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_FOG_COORDINATE_EXT	glew.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	d
GL_CURRENT_INDEX	glew.h	/^#define GL_CURRENT_INDEX /;"	d
GL_CURRENT_MATRIX_ARB	glew.h	/^#define GL_CURRENT_MATRIX_ARB /;"	d
GL_CURRENT_MATRIX_INDEX_ARB	glew.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	d
GL_CURRENT_MATRIX_NV	glew.h	/^#define GL_CURRENT_MATRIX_NV /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	glew.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	glew.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	d
GL_CURRENT_NORMAL	glew.h	/^#define GL_CURRENT_NORMAL /;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	glew.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	glew.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	d
GL_CURRENT_PROGRAM	glew.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	glew.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY_ANGLE	glew.h	/^#define GL_CURRENT_QUERY_ANGLE /;"	d
GL_CURRENT_QUERY_ARB	glew.h	/^#define GL_CURRENT_QUERY_ARB /;"	d
GL_CURRENT_RASTER_COLOR	glew.h	/^#define GL_CURRENT_RASTER_COLOR /;"	d
GL_CURRENT_RASTER_DISTANCE	glew.h	/^#define GL_CURRENT_RASTER_DISTANCE /;"	d
GL_CURRENT_RASTER_INDEX	glew.h	/^#define GL_CURRENT_RASTER_INDEX /;"	d
GL_CURRENT_RASTER_NORMAL_EXT	glew.h	/^#define GL_CURRENT_RASTER_NORMAL_EXT /;"	d
GL_CURRENT_RASTER_POSITION	glew.h	/^#define GL_CURRENT_RASTER_POSITION /;"	d
GL_CURRENT_RASTER_POSITION_VALID	glew.h	/^#define GL_CURRENT_RASTER_POSITION_VALID /;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	glew.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	glew.h	/^#define GL_CURRENT_RASTER_TEXTURE_COORDS /;"	d
GL_CURRENT_SAMPLE_COUNT_QUERY_NV	glew.h	/^#define GL_CURRENT_SAMPLE_COUNT_QUERY_NV /;"	d
GL_CURRENT_SECONDARY_COLOR	glew.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	glew.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	d
GL_CURRENT_TANGENT_EXT	glew.h	/^#define GL_CURRENT_TANGENT_EXT /;"	d
GL_CURRENT_TEXTURE_COORDS	glew.h	/^#define GL_CURRENT_TEXTURE_COORDS /;"	d
GL_CURRENT_TIME_NV	glew.h	/^#define GL_CURRENT_TIME_NV /;"	d
GL_CURRENT_VERTEX_ATTRIB	glew.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	glew.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	d
GL_CURRENT_VERTEX_EXT	glew.h	/^#define GL_CURRENT_VERTEX_EXT /;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	glew.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	d
GL_CURRENT_WEIGHT_ARB	glew.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	d
GL_CW	glew.h	/^#define GL_CW /;"	d
GL_DARKEN_KHR	glew.h	/^#define GL_DARKEN_KHR /;"	d
GL_DARKEN_NV	glew.h	/^#define GL_DARKEN_NV /;"	d
GL_DATA_BUFFER_AMD	glew.h	/^#define GL_DATA_BUFFER_AMD /;"	d
GL_DEBUG_CALLBACK_FUNCTION	glew.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	glew.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	glew.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	glew.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_API_ERROR_AMD /;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_APPLICATION_AMD /;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_DEPRECATION_AMD /;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_OTHER_AMD /;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD /;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD /;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD /;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	glew.h	/^#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	glew.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	glew.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	glew.h	/^#define GL_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	glew.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	glew.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	glew.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	glew.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	glew.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	glew.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_REGAL	glew.h	/^#define GL_DEBUG_REGAL /;"	d
GL_DEBUG_SEVERITY_HIGH	glew.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	glew.h	/^#define GL_DEBUG_SEVERITY_HIGH_AMD /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	glew.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	glew.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_AMD	glew.h	/^#define GL_DEBUG_SEVERITY_LOW_AMD /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	glew.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	glew.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	glew.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_AMD /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	glew.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	glew.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	glew.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	glew.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	glew.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	glew.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	glew.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	glew.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	glew.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	glew.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	glew.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	glew.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	glew.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	glew.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	glew.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	glew.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	glew.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	glew.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	glew.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	glew.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	glew.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	glew.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	glew.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	glew.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	glew.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	glew.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	glew.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	glew.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	glew.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECAL	glew.h	/^#define GL_DECAL /;"	d
GL_DECODE_EXT	glew.h	/^#define GL_DECODE_EXT /;"	d
GL_DECR	glew.h	/^#define GL_DECR /;"	d
GL_DECR_WRAP	glew.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP_EXT	glew.h	/^#define GL_DECR_WRAP_EXT /;"	d
GL_DELETE_STATUS	glew.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	glew.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	glew.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	glew.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	glew.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	glew.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	d
GL_DEPTH	glew.h	/^#define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	glew.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH24_STENCIL8_EXT	glew.h	/^#define GL_DEPTH24_STENCIL8_EXT /;"	d
GL_DEPTH32F_STENCIL8	glew.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8_NV	glew.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	d
GL_DEPTH_ATTACHMENT	glew.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT_EXT	glew.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	d
GL_DEPTH_BIAS	glew.h	/^#define GL_DEPTH_BIAS /;"	d
GL_DEPTH_BITS	glew.h	/^#define GL_DEPTH_BITS /;"	d
GL_DEPTH_BOUNDS_EXT	glew.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	d
GL_DEPTH_BOUNDS_TEST_EXT	glew.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	d
GL_DEPTH_BUFFER	glew.h	/^#define GL_DEPTH_BUFFER /;"	d
GL_DEPTH_BUFFER_BIT	glew.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	glew.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	d
GL_DEPTH_CLAMP	glew.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLAMP_FAR_AMD	glew.h	/^#define GL_DEPTH_CLAMP_FAR_AMD /;"	d
GL_DEPTH_CLAMP_NEAR_AMD	glew.h	/^#define GL_DEPTH_CLAMP_NEAR_AMD /;"	d
GL_DEPTH_CLAMP_NV	glew.h	/^#define GL_DEPTH_CLAMP_NV /;"	d
GL_DEPTH_CLEAR_VALUE	glew.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	glew.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	glew.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16_ARB	glew.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	d
GL_DEPTH_COMPONENT16_SGIX	glew.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	d
GL_DEPTH_COMPONENT24	glew.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24_ARB	glew.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	d
GL_DEPTH_COMPONENT24_SGIX	glew.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	d
GL_DEPTH_COMPONENT32	glew.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	glew.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F_NV	glew.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	d
GL_DEPTH_COMPONENT32_ARB	glew.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	d
GL_DEPTH_COMPONENT32_SGIX	glew.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	d
GL_DEPTH_COMPONENTS	glew.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_FUNC	glew.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_RANGE	glew.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_RENDERABLE	glew.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_SCALE	glew.h	/^#define GL_DEPTH_SCALE /;"	d
GL_DEPTH_STENCIL	glew.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	glew.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_EXT	glew.h	/^#define GL_DEPTH_STENCIL_EXT /;"	d
GL_DEPTH_STENCIL_NV	glew.h	/^#define GL_DEPTH_STENCIL_NV /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	glew.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	glew.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	glew.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	d
GL_DEPTH_TEST	glew.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_TEXTURE_MODE	glew.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_TEXTURE_MODE_ARB	glew.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	d
GL_DEPTH_WRITEMASK	glew.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DIFFERENCE_KHR	glew.h	/^#define GL_DIFFERENCE_KHR /;"	d
GL_DIFFERENCE_NV	glew.h	/^#define GL_DIFFERENCE_NV /;"	d
GL_DIFFUSE	glew.h	/^#define GL_DIFFUSE /;"	d
GL_DISCARD_ATI	glew.h	/^#define GL_DISCARD_ATI /;"	d
GL_DISCARD_NV	glew.h	/^#define GL_DISCARD_NV /;"	d
GL_DISCRETE_AMD	glew.h	/^#define GL_DISCRETE_AMD /;"	d
GL_DISJOINT_NV	glew.h	/^#define GL_DISJOINT_NV /;"	d
GL_DISPATCH_INDIRECT_BUFFER	glew.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	glew.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPLAY_LIST	glew.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DISTANCE_ATTENUATION_EXT	glew.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	d
GL_DITHER	glew.h	/^#define GL_DITHER /;"	d
GL_DOMAIN	glew.h	/^#define GL_DOMAIN /;"	d
GL_DONT_CARE	glew.h	/^#define GL_DONT_CARE /;"	d
GL_DOT2_ADD_ATI	glew.h	/^#define GL_DOT2_ADD_ATI /;"	d
GL_DOT3_ATI	glew.h	/^#define GL_DOT3_ATI /;"	d
GL_DOT3_RGB	glew.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	glew.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOT3_RGBA_ARB	glew.h	/^#define GL_DOT3_RGBA_ARB /;"	d
GL_DOT3_RGBA_EXT	glew.h	/^#define GL_DOT3_RGBA_EXT /;"	d
GL_DOT3_RGB_ARB	glew.h	/^#define GL_DOT3_RGB_ARB /;"	d
GL_DOT3_RGB_EXT	glew.h	/^#define GL_DOT3_RGB_EXT /;"	d
GL_DOT4_ATI	glew.h	/^#define GL_DOT4_ATI /;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	glew.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	glew.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	glew.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	glew.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_NV	glew.h	/^#define GL_DOT_PRODUCT_NV /;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	glew.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	glew.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	d
GL_DOUBLE	glew.h	/^#define GL_DOUBLE /;"	d
GL_DOUBLEBUFFER	glew.h	/^#define GL_DOUBLEBUFFER /;"	d
GL_DOUBLE_EXT	glew.h	/^#define GL_DOUBLE_EXT /;"	d
GL_DOUBLE_MAT2	glew.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2_EXT	glew.h	/^#define GL_DOUBLE_MAT2_EXT /;"	d
GL_DOUBLE_MAT2x3	glew.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x3_EXT	glew.h	/^#define GL_DOUBLE_MAT2x3_EXT /;"	d
GL_DOUBLE_MAT2x4	glew.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT2x4_EXT	glew.h	/^#define GL_DOUBLE_MAT2x4_EXT /;"	d
GL_DOUBLE_MAT3	glew.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3_EXT	glew.h	/^#define GL_DOUBLE_MAT3_EXT /;"	d
GL_DOUBLE_MAT3x2	glew.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x2_EXT	glew.h	/^#define GL_DOUBLE_MAT3x2_EXT /;"	d
GL_DOUBLE_MAT3x4	glew.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT3x4_EXT	glew.h	/^#define GL_DOUBLE_MAT3x4_EXT /;"	d
GL_DOUBLE_MAT4	glew.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4_EXT	glew.h	/^#define GL_DOUBLE_MAT4_EXT /;"	d
GL_DOUBLE_MAT4x2	glew.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x2_EXT	glew.h	/^#define GL_DOUBLE_MAT4x2_EXT /;"	d
GL_DOUBLE_MAT4x3	glew.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_MAT4x3_EXT	glew.h	/^#define GL_DOUBLE_MAT4x3_EXT /;"	d
GL_DOUBLE_VEC2	glew.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC2_EXT	glew.h	/^#define GL_DOUBLE_VEC2_EXT /;"	d
GL_DOUBLE_VEC3	glew.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC3_EXT	glew.h	/^#define GL_DOUBLE_VEC3_EXT /;"	d
GL_DOUBLE_VEC4	glew.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DOUBLE_VEC4_EXT	glew.h	/^#define GL_DOUBLE_VEC4_EXT /;"	d
GL_DRAW_BUFFER	glew.h	/^#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER0	glew.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0_ARB	glew.h	/^#define GL_DRAW_BUFFER0_ARB /;"	d
GL_DRAW_BUFFER0_ATI	glew.h	/^#define GL_DRAW_BUFFER0_ATI /;"	d
GL_DRAW_BUFFER1	glew.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	glew.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10_ARB	glew.h	/^#define GL_DRAW_BUFFER10_ARB /;"	d
GL_DRAW_BUFFER10_ATI	glew.h	/^#define GL_DRAW_BUFFER10_ATI /;"	d
GL_DRAW_BUFFER11	glew.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11_ARB	glew.h	/^#define GL_DRAW_BUFFER11_ARB /;"	d
GL_DRAW_BUFFER11_ATI	glew.h	/^#define GL_DRAW_BUFFER11_ATI /;"	d
GL_DRAW_BUFFER12	glew.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12_ARB	glew.h	/^#define GL_DRAW_BUFFER12_ARB /;"	d
GL_DRAW_BUFFER12_ATI	glew.h	/^#define GL_DRAW_BUFFER12_ATI /;"	d
GL_DRAW_BUFFER13	glew.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13_ARB	glew.h	/^#define GL_DRAW_BUFFER13_ARB /;"	d
GL_DRAW_BUFFER13_ATI	glew.h	/^#define GL_DRAW_BUFFER13_ATI /;"	d
GL_DRAW_BUFFER14	glew.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14_ARB	glew.h	/^#define GL_DRAW_BUFFER14_ARB /;"	d
GL_DRAW_BUFFER14_ATI	glew.h	/^#define GL_DRAW_BUFFER14_ATI /;"	d
GL_DRAW_BUFFER15	glew.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15_ARB	glew.h	/^#define GL_DRAW_BUFFER15_ARB /;"	d
GL_DRAW_BUFFER15_ATI	glew.h	/^#define GL_DRAW_BUFFER15_ATI /;"	d
GL_DRAW_BUFFER1_ARB	glew.h	/^#define GL_DRAW_BUFFER1_ARB /;"	d
GL_DRAW_BUFFER1_ATI	glew.h	/^#define GL_DRAW_BUFFER1_ATI /;"	d
GL_DRAW_BUFFER2	glew.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2_ARB	glew.h	/^#define GL_DRAW_BUFFER2_ARB /;"	d
GL_DRAW_BUFFER2_ATI	glew.h	/^#define GL_DRAW_BUFFER2_ATI /;"	d
GL_DRAW_BUFFER3	glew.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3_ARB	glew.h	/^#define GL_DRAW_BUFFER3_ARB /;"	d
GL_DRAW_BUFFER3_ATI	glew.h	/^#define GL_DRAW_BUFFER3_ATI /;"	d
GL_DRAW_BUFFER4	glew.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4_ARB	glew.h	/^#define GL_DRAW_BUFFER4_ARB /;"	d
GL_DRAW_BUFFER4_ATI	glew.h	/^#define GL_DRAW_BUFFER4_ATI /;"	d
GL_DRAW_BUFFER5	glew.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5_ARB	glew.h	/^#define GL_DRAW_BUFFER5_ARB /;"	d
GL_DRAW_BUFFER5_ATI	glew.h	/^#define GL_DRAW_BUFFER5_ATI /;"	d
GL_DRAW_BUFFER6	glew.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6_ARB	glew.h	/^#define GL_DRAW_BUFFER6_ARB /;"	d
GL_DRAW_BUFFER6_ATI	glew.h	/^#define GL_DRAW_BUFFER6_ATI /;"	d
GL_DRAW_BUFFER7	glew.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7_ARB	glew.h	/^#define GL_DRAW_BUFFER7_ARB /;"	d
GL_DRAW_BUFFER7_ATI	glew.h	/^#define GL_DRAW_BUFFER7_ATI /;"	d
GL_DRAW_BUFFER8	glew.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8_ARB	glew.h	/^#define GL_DRAW_BUFFER8_ARB /;"	d
GL_DRAW_BUFFER8_ATI	glew.h	/^#define GL_DRAW_BUFFER8_ATI /;"	d
GL_DRAW_BUFFER9	glew.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9_ARB	glew.h	/^#define GL_DRAW_BUFFER9_ARB /;"	d
GL_DRAW_BUFFER9_ATI	glew.h	/^#define GL_DRAW_BUFFER9_ATI /;"	d
GL_DRAW_FRAMEBUFFER	glew.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_ANGLE	glew.h	/^#define GL_DRAW_FRAMEBUFFER_ANGLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_ANGLE	glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_EXT /;"	d
GL_DRAW_FRAMEBUFFER_EXT	glew.h	/^#define GL_DRAW_FRAMEBUFFER_EXT /;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	glew.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	d
GL_DRAW_INDIRECT_BUFFER	glew.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	glew.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_LENGTH_NV	glew.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	glew.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	d
GL_DRAW_PIXELS_APPLE	glew.h	/^#define GL_DRAW_PIXELS_APPLE /;"	d
GL_DRAW_PIXEL_TOKEN	glew.h	/^#define GL_DRAW_PIXEL_TOKEN /;"	d
GL_DRIVER_REGAL	glew.h	/^#define GL_DRIVER_REGAL /;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	glew.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	d
GL_DSDT8_MAG8_NV	glew.h	/^#define GL_DSDT8_MAG8_NV /;"	d
GL_DSDT8_NV	glew.h	/^#define GL_DSDT8_NV /;"	d
GL_DSDT_MAG_INTENSITY_NV	glew.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	d
GL_DSDT_MAG_NV	glew.h	/^#define GL_DSDT_MAG_NV /;"	d
GL_DSDT_MAG_VIB_NV	glew.h	/^#define GL_DSDT_MAG_VIB_NV /;"	d
GL_DSDT_NV	glew.h	/^#define GL_DSDT_NV /;"	d
GL_DST_ALPHA	glew.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_ATOP_NV	glew.h	/^#define GL_DST_ATOP_NV /;"	d
GL_DST_COLOR	glew.h	/^#define GL_DST_COLOR /;"	d
GL_DST_IN_NV	glew.h	/^#define GL_DST_IN_NV /;"	d
GL_DST_NV	glew.h	/^#define GL_DST_NV /;"	d
GL_DST_OUT_NV	glew.h	/^#define GL_DST_OUT_NV /;"	d
GL_DST_OVER_NV	glew.h	/^#define GL_DST_OVER_NV /;"	d
GL_DS_BIAS_NV	glew.h	/^#define GL_DS_BIAS_NV /;"	d
GL_DS_SCALE_NV	glew.h	/^#define GL_DS_SCALE_NV /;"	d
GL_DT_BIAS_NV	glew.h	/^#define GL_DT_BIAS_NV /;"	d
GL_DT_SCALE_NV	glew.h	/^#define GL_DT_SCALE_NV /;"	d
GL_DU8DV8_ATI	glew.h	/^#define GL_DU8DV8_ATI /;"	d
GL_DUDV_ATI	glew.h	/^#define GL_DUDV_ATI /;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	glew.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	glew.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	d
GL_DYNAMIC_ATI	glew.h	/^#define GL_DYNAMIC_ATI /;"	d
GL_DYNAMIC_COPY	glew.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY_ARB	glew.h	/^#define GL_DYNAMIC_COPY_ARB /;"	d
GL_DYNAMIC_DRAW	glew.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW_ARB	glew.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	d
GL_DYNAMIC_READ	glew.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ_ARB	glew.h	/^#define GL_DYNAMIC_READ_ARB /;"	d
GL_DYNAMIC_STORAGE_BIT	glew.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_EDGEFLAG_BIT_PGI	glew.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	d
GL_EDGE_FLAG	glew.h	/^#define GL_EDGE_FLAG /;"	d
GL_EDGE_FLAG_ARRAY	glew.h	/^#define GL_EDGE_FLAG_ARRAY /;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	glew.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	glew.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	d
GL_EDGE_FLAG_ARRAY_EXT	glew.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	glew.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	glew.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	d
GL_EDGE_FLAG_ARRAY_POINTER	glew.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER /;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	glew.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	glew.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	glew.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	d
GL_EIGHTH_BIT_ATI	glew.h	/^#define GL_EIGHTH_BIT_ATI /;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	glew.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	d
GL_ELEMENT_ARRAY_APPLE	glew.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	d
GL_ELEMENT_ARRAY_ATI	glew.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	glew.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	glew.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT /;"	d
GL_ELEMENT_ARRAY_BUFFER	glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	glew.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	glew.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	glew.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	glew.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	glew.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	glew.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	d
GL_EMBOSS_CONSTANT_NV	glew.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	d
GL_EMBOSS_LIGHT_NV	glew.h	/^#define GL_EMBOSS_LIGHT_NV /;"	d
GL_EMBOSS_MAP_NV	glew.h	/^#define GL_EMBOSS_MAP_NV /;"	d
GL_EMISSION	glew.h	/^#define GL_EMISSION /;"	d
GL_EMULATION_REGAL	glew.h	/^#define GL_EMULATION_REGAL /;"	d
GL_ENABLE_BIT	glew.h	/^#define GL_ENABLE_BIT /;"	d
GL_EQUAL	glew.h	/^#define GL_EQUAL /;"	d
GL_EQUIV	glew.h	/^#define GL_EQUIV /;"	d
GL_ERROR_REGAL	glew.h	/^#define GL_ERROR_REGAL /;"	d
GL_EVAL_2D_NV	glew.h	/^#define GL_EVAL_2D_NV /;"	d
GL_EVAL_BIT	glew.h	/^#define GL_EVAL_BIT /;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	glew.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	d
GL_EVAL_TRIANGULAR_2D_NV	glew.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	glew.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	d
GL_EXCLUSION_KHR	glew.h	/^#define GL_EXCLUSION_KHR /;"	d
GL_EXCLUSION_NV	glew.h	/^#define GL_EXCLUSION_NV /;"	d
GL_EXP	glew.h	/^#define GL_EXP /;"	d
GL_EXP2	glew.h	/^#define GL_EXP2 /;"	d
GL_EXPAND_NEGATE_NV	glew.h	/^#define GL_EXPAND_NEGATE_NV /;"	d
GL_EXPAND_NORMAL_NV	glew.h	/^#define GL_EXPAND_NORMAL_NV /;"	d
GL_EXTENDED_RANGE_SGIS	glew.h	/^#define GL_EXTENDED_RANGE_SGIS /;"	d
GL_EXTENSIONS	glew.h	/^#define GL_EXTENSIONS /;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	glew.h	/^#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD /;"	d
GL_EXT_422_pixels	glew.h	/^#define GL_EXT_422_pixels /;"	d
GL_EXT_Cg_shader	glew.h	/^#define GL_EXT_Cg_shader /;"	d
GL_EXT_abgr	glew.h	/^#define GL_EXT_abgr /;"	d
GL_EXT_bgra	glew.h	/^#define GL_EXT_bgra /;"	d
GL_EXT_bindable_uniform	glew.h	/^#define GL_EXT_bindable_uniform /;"	d
GL_EXT_blend_color	glew.h	/^#define GL_EXT_blend_color /;"	d
GL_EXT_blend_equation_separate	glew.h	/^#define GL_EXT_blend_equation_separate /;"	d
GL_EXT_blend_func_separate	glew.h	/^#define GL_EXT_blend_func_separate /;"	d
GL_EXT_blend_logic_op	glew.h	/^#define GL_EXT_blend_logic_op /;"	d
GL_EXT_blend_minmax	glew.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_subtract	glew.h	/^#define GL_EXT_blend_subtract /;"	d
GL_EXT_clip_volume_hint	glew.h	/^#define GL_EXT_clip_volume_hint /;"	d
GL_EXT_cmyka	glew.h	/^#define GL_EXT_cmyka /;"	d
GL_EXT_color_subtable	glew.h	/^#define GL_EXT_color_subtable /;"	d
GL_EXT_compiled_vertex_array	glew.h	/^#define GL_EXT_compiled_vertex_array /;"	d
GL_EXT_convolution	glew.h	/^#define GL_EXT_convolution /;"	d
GL_EXT_coordinate_frame	glew.h	/^#define GL_EXT_coordinate_frame /;"	d
GL_EXT_copy_texture	glew.h	/^#define GL_EXT_copy_texture /;"	d
GL_EXT_cull_vertex	glew.h	/^#define GL_EXT_cull_vertex /;"	d
GL_EXT_debug_label	glew.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_marker	glew.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_depth_bounds_test	glew.h	/^#define GL_EXT_depth_bounds_test /;"	d
GL_EXT_direct_state_access	glew.h	/^#define GL_EXT_direct_state_access /;"	d
GL_EXT_draw_buffers2	glew.h	/^#define GL_EXT_draw_buffers2 /;"	d
GL_EXT_draw_instanced	glew.h	/^#define GL_EXT_draw_instanced /;"	d
GL_EXT_draw_range_elements	glew.h	/^#define GL_EXT_draw_range_elements /;"	d
GL_EXT_fog_coord	glew.h	/^#define GL_EXT_fog_coord /;"	d
GL_EXT_fragment_lighting	glew.h	/^#define GL_EXT_fragment_lighting /;"	d
GL_EXT_framebuffer_blit	glew.h	/^#define GL_EXT_framebuffer_blit /;"	d
GL_EXT_framebuffer_multisample	glew.h	/^#define GL_EXT_framebuffer_multisample /;"	d
GL_EXT_framebuffer_multisample_blit_scaled	glew.h	/^#define GL_EXT_framebuffer_multisample_blit_scaled /;"	d
GL_EXT_framebuffer_object	glew.h	/^#define GL_EXT_framebuffer_object /;"	d
GL_EXT_framebuffer_sRGB	glew.h	/^#define GL_EXT_framebuffer_sRGB /;"	d
GL_EXT_geometry_shader4	glew.h	/^#define GL_EXT_geometry_shader4 /;"	d
GL_EXT_gpu_program_parameters	glew.h	/^#define GL_EXT_gpu_program_parameters /;"	d
GL_EXT_gpu_shader4	glew.h	/^#define GL_EXT_gpu_shader4 /;"	d
GL_EXT_histogram	glew.h	/^#define GL_EXT_histogram /;"	d
GL_EXT_index_array_formats	glew.h	/^#define GL_EXT_index_array_formats /;"	d
GL_EXT_index_func	glew.h	/^#define GL_EXT_index_func /;"	d
GL_EXT_index_material	glew.h	/^#define GL_EXT_index_material /;"	d
GL_EXT_index_texture	glew.h	/^#define GL_EXT_index_texture /;"	d
GL_EXT_light_texture	glew.h	/^#define GL_EXT_light_texture /;"	d
GL_EXT_misc_attribute	glew.h	/^#define GL_EXT_misc_attribute /;"	d
GL_EXT_multi_draw_arrays	glew.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multisample	glew.h	/^#define GL_EXT_multisample /;"	d
GL_EXT_packed_depth_stencil	glew.h	/^#define GL_EXT_packed_depth_stencil /;"	d
GL_EXT_packed_float	glew.h	/^#define GL_EXT_packed_float /;"	d
GL_EXT_packed_pixels	glew.h	/^#define GL_EXT_packed_pixels /;"	d
GL_EXT_paletted_texture	glew.h	/^#define GL_EXT_paletted_texture /;"	d
GL_EXT_pixel_buffer_object	glew.h	/^#define GL_EXT_pixel_buffer_object /;"	d
GL_EXT_pixel_transform	glew.h	/^#define GL_EXT_pixel_transform /;"	d
GL_EXT_pixel_transform_color_table	glew.h	/^#define GL_EXT_pixel_transform_color_table /;"	d
GL_EXT_point_parameters	glew.h	/^#define GL_EXT_point_parameters /;"	d
GL_EXT_polygon_offset	glew.h	/^#define GL_EXT_polygon_offset /;"	d
GL_EXT_provoking_vertex	glew.h	/^#define GL_EXT_provoking_vertex /;"	d
GL_EXT_rescale_normal	glew.h	/^#define GL_EXT_rescale_normal /;"	d
GL_EXT_scene_marker	glew.h	/^#define GL_EXT_scene_marker /;"	d
GL_EXT_secondary_color	glew.h	/^#define GL_EXT_secondary_color /;"	d
GL_EXT_separate_shader_objects	glew.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_separate_specular_color	glew.h	/^#define GL_EXT_separate_specular_color /;"	d
GL_EXT_shader_image_load_formatted	glew.h	/^#define GL_EXT_shader_image_load_formatted /;"	d
GL_EXT_shader_image_load_store	glew.h	/^#define GL_EXT_shader_image_load_store /;"	d
GL_EXT_shader_integer_mix	glew.h	/^#define GL_EXT_shader_integer_mix /;"	d
GL_EXT_shadow_funcs	glew.h	/^#define GL_EXT_shadow_funcs /;"	d
GL_EXT_shared_texture_palette	glew.h	/^#define GL_EXT_shared_texture_palette /;"	d
GL_EXT_stencil_clear_tag	glew.h	/^#define GL_EXT_stencil_clear_tag /;"	d
GL_EXT_stencil_two_side	glew.h	/^#define GL_EXT_stencil_two_side /;"	d
GL_EXT_stencil_wrap	glew.h	/^#define GL_EXT_stencil_wrap /;"	d
GL_EXT_subtexture	glew.h	/^#define GL_EXT_subtexture /;"	d
GL_EXT_texture	glew.h	/^#define GL_EXT_texture /;"	d
GL_EXT_texture3D	glew.h	/^#define GL_EXT_texture3D /;"	d
GL_EXT_texture_array	glew.h	/^#define GL_EXT_texture_array /;"	d
GL_EXT_texture_buffer_object	glew.h	/^#define GL_EXT_texture_buffer_object /;"	d
GL_EXT_texture_compression_dxt1	glew.h	/^#define GL_EXT_texture_compression_dxt1 /;"	d
GL_EXT_texture_compression_latc	glew.h	/^#define GL_EXT_texture_compression_latc /;"	d
GL_EXT_texture_compression_rgtc	glew.h	/^#define GL_EXT_texture_compression_rgtc /;"	d
GL_EXT_texture_compression_s3tc	glew.h	/^#define GL_EXT_texture_compression_s3tc /;"	d
GL_EXT_texture_cube_map	glew.h	/^#define GL_EXT_texture_cube_map /;"	d
GL_EXT_texture_edge_clamp	glew.h	/^#define GL_EXT_texture_edge_clamp /;"	d
GL_EXT_texture_env	glew.h	/^#define GL_EXT_texture_env /;"	d
GL_EXT_texture_env_add	glew.h	/^#define GL_EXT_texture_env_add /;"	d
GL_EXT_texture_env_combine	glew.h	/^#define GL_EXT_texture_env_combine /;"	d
GL_EXT_texture_env_dot3	glew.h	/^#define GL_EXT_texture_env_dot3 /;"	d
GL_EXT_texture_filter_anisotropic	glew.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_integer	glew.h	/^#define GL_EXT_texture_integer /;"	d
GL_EXT_texture_lod_bias	glew.h	/^#define GL_EXT_texture_lod_bias /;"	d
GL_EXT_texture_mirror_clamp	glew.h	/^#define GL_EXT_texture_mirror_clamp /;"	d
GL_EXT_texture_object	glew.h	/^#define GL_EXT_texture_object /;"	d
GL_EXT_texture_perturb_normal	glew.h	/^#define GL_EXT_texture_perturb_normal /;"	d
GL_EXT_texture_rectangle	glew.h	/^#define GL_EXT_texture_rectangle /;"	d
GL_EXT_texture_sRGB	glew.h	/^#define GL_EXT_texture_sRGB /;"	d
GL_EXT_texture_sRGB_decode	glew.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_shared_exponent	glew.h	/^#define GL_EXT_texture_shared_exponent /;"	d
GL_EXT_texture_snorm	glew.h	/^#define GL_EXT_texture_snorm /;"	d
GL_EXT_texture_swizzle	glew.h	/^#define GL_EXT_texture_swizzle /;"	d
GL_EXT_timer_query	glew.h	/^#define GL_EXT_timer_query /;"	d
GL_EXT_transform_feedback	glew.h	/^#define GL_EXT_transform_feedback /;"	d
GL_EXT_vertex_array	glew.h	/^#define GL_EXT_vertex_array /;"	d
GL_EXT_vertex_array_bgra	glew.h	/^#define GL_EXT_vertex_array_bgra /;"	d
GL_EXT_vertex_attrib_64bit	glew.h	/^#define GL_EXT_vertex_attrib_64bit /;"	d
GL_EXT_vertex_shader	glew.h	/^#define GL_EXT_vertex_shader /;"	d
GL_EXT_vertex_weighting	glew.h	/^#define GL_EXT_vertex_weighting /;"	d
GL_EXT_x11_sync_object	glew.h	/^#define GL_EXT_x11_sync_object /;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	glew.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	glew.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	d
GL_EYE_LINEAR	glew.h	/^#define GL_EYE_LINEAR /;"	d
GL_EYE_LINE_SGIS	glew.h	/^#define GL_EYE_LINE_SGIS /;"	d
GL_EYE_PLANE	glew.h	/^#define GL_EYE_PLANE /;"	d
GL_EYE_PLANE_ABSOLUTE_NV	glew.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	d
GL_EYE_POINT_SGIS	glew.h	/^#define GL_EYE_POINT_SGIS /;"	d
GL_EYE_RADIAL_NV	glew.h	/^#define GL_EYE_RADIAL_NV /;"	d
GL_E_TIMES_F_NV	glew.h	/^#define GL_E_TIMES_F_NV /;"	d
GL_FACTOR_MAX_AMD	glew.h	/^#define GL_FACTOR_MAX_AMD /;"	d
GL_FACTOR_MIN_AMD	glew.h	/^#define GL_FACTOR_MIN_AMD /;"	d
GL_FAILURE_NV	glew.h	/^#define GL_FAILURE_NV /;"	d
GL_FALSE	glew.h	/^#define GL_FALSE /;"	d
GL_FALSE	glm/detail/dummy.cpp	/^#define GL_FALSE /;"	d	file:
GL_FASTEST	glew.h	/^#define GL_FASTEST /;"	d
GL_FEEDBACK	glew.h	/^#define GL_FEEDBACK /;"	d
GL_FEEDBACK_BUFFER_POINTER	glew.h	/^#define GL_FEEDBACK_BUFFER_POINTER /;"	d
GL_FEEDBACK_BUFFER_SIZE	glew.h	/^#define GL_FEEDBACK_BUFFER_SIZE /;"	d
GL_FEEDBACK_BUFFER_TYPE	glew.h	/^#define GL_FEEDBACK_BUFFER_TYPE /;"	d
GL_FENCE_APPLE	glew.h	/^#define GL_FENCE_APPLE /;"	d
GL_FENCE_CONDITION_NV	glew.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_STATUS_NV	glew.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FIELDS_NV	glew.h	/^#define GL_FIELDS_NV /;"	d
GL_FIELD_LOWER_NV	glew.h	/^#define GL_FIELD_LOWER_NV /;"	d
GL_FIELD_UPPER_NV	glew.h	/^#define GL_FIELD_UPPER_NV /;"	d
GL_FILE_NAME_NV	glew.h	/^#define GL_FILE_NAME_NV /;"	d
GL_FILL	glew.h	/^#define GL_FILL /;"	d
GL_FILTER	glew.h	/^#define GL_FILTER /;"	d
GL_FIRST_TO_REST_NV	glew.h	/^#define GL_FIRST_TO_REST_NV /;"	d
GL_FIRST_VERTEX_CONVENTION	glew.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	glew.h	/^#define GL_FIRST_VERTEX_CONVENTION_EXT /;"	d
GL_FIXED	glew.h	/^#define GL_FIXED /;"	d
GL_FIXED_ONLY	glew.h	/^#define GL_FIXED_ONLY /;"	d
GL_FIXED_ONLY_ARB	glew.h	/^#define GL_FIXED_ONLY_ARB /;"	d
GL_FLAT	glew.h	/^#define GL_FLAT /;"	d
GL_FLOAT	glew.h	/^#define GL_FLOAT /;"	d
GL_FLOAT16_NV	glew.h	/^#define GL_FLOAT16_NV /;"	d
GL_FLOAT16_VEC2_NV	glew.h	/^#define GL_FLOAT16_VEC2_NV /;"	d
GL_FLOAT16_VEC3_NV	glew.h	/^#define GL_FLOAT16_VEC3_NV /;"	d
GL_FLOAT16_VEC4_NV	glew.h	/^#define GL_FLOAT16_VEC4_NV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	glew.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	glew.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	glew.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	d
GL_FLOAT_MAT2	glew.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2_ARB	glew.h	/^#define GL_FLOAT_MAT2_ARB /;"	d
GL_FLOAT_MAT2x3	glew.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	glew.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	glew.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3_ARB	glew.h	/^#define GL_FLOAT_MAT3_ARB /;"	d
GL_FLOAT_MAT3x2	glew.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	glew.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	glew.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4_ARB	glew.h	/^#define GL_FLOAT_MAT4_ARB /;"	d
GL_FLOAT_MAT4x2	glew.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	glew.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_R16_NV	glew.h	/^#define GL_FLOAT_R16_NV /;"	d
GL_FLOAT_R32_NV	glew.h	/^#define GL_FLOAT_R32_NV /;"	d
GL_FLOAT_RG16_NV	glew.h	/^#define GL_FLOAT_RG16_NV /;"	d
GL_FLOAT_RG32_NV	glew.h	/^#define GL_FLOAT_RG32_NV /;"	d
GL_FLOAT_RGB16_NV	glew.h	/^#define GL_FLOAT_RGB16_NV /;"	d
GL_FLOAT_RGB32_NV	glew.h	/^#define GL_FLOAT_RGB32_NV /;"	d
GL_FLOAT_RGBA16_NV	glew.h	/^#define GL_FLOAT_RGBA16_NV /;"	d
GL_FLOAT_RGBA32_NV	glew.h	/^#define GL_FLOAT_RGBA32_NV /;"	d
GL_FLOAT_RGBA_MODE_NV	glew.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	d
GL_FLOAT_RGBA_NV	glew.h	/^#define GL_FLOAT_RGBA_NV /;"	d
GL_FLOAT_RGB_NV	glew.h	/^#define GL_FLOAT_RGB_NV /;"	d
GL_FLOAT_RG_NV	glew.h	/^#define GL_FLOAT_RG_NV /;"	d
GL_FLOAT_R_NV	glew.h	/^#define GL_FLOAT_R_NV /;"	d
GL_FLOAT_VEC2	glew.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2_ARB	glew.h	/^#define GL_FLOAT_VEC2_ARB /;"	d
GL_FLOAT_VEC3	glew.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3_ARB	glew.h	/^#define GL_FLOAT_VEC3_ARB /;"	d
GL_FLOAT_VEC4	glew.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4_ARB	glew.h	/^#define GL_FLOAT_VEC4_ARB /;"	d
GL_FOG	glew.h	/^#define GL_FOG /;"	d
GL_FOG_BIT	glew.h	/^#define GL_FOG_BIT /;"	d
GL_FOG_COLOR	glew.h	/^#define GL_FOG_COLOR /;"	d
GL_FOG_COORD	glew.h	/^#define GL_FOG_COORD GL_FOG_COORDI/;"	d
GL_FOG_COORDINATE	glew.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	glew.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_FOG_COORDINATE_ARRAY_EXT	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	glew.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	d
GL_FOG_COORDINATE_EXT	glew.h	/^#define GL_FOG_COORDINATE_EXT /;"	d
GL_FOG_COORDINATE_SOURCE	glew.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORDINATE_SOURCE_EXT	glew.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	d
GL_FOG_COORD_ARRAY	glew.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	glew.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	glew.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	d
GL_FOG_COORD_ARRAY_POINTER	glew.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	glew.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	glew.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	glew.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DENSITY	glew.h	/^#define GL_FOG_DENSITY /;"	d
GL_FOG_DISTANCE_MODE_NV	glew.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	d
GL_FOG_END	glew.h	/^#define GL_FOG_END /;"	d
GL_FOG_HINT	glew.h	/^#define GL_FOG_HINT /;"	d
GL_FOG_INDEX	glew.h	/^#define GL_FOG_INDEX /;"	d
GL_FOG_MODE	glew.h	/^#define GL_FOG_MODE /;"	d
GL_FOG_OFFSET_SGIX	glew.h	/^#define GL_FOG_OFFSET_SGIX /;"	d
GL_FOG_OFFSET_VALUE_SGIX	glew.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	d
GL_FOG_PATCHY_FACTOR_SGIX	glew.h	/^#define GL_FOG_PATCHY_FACTOR_SGIX /;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	glew.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	d
GL_FOG_START	glew.h	/^#define GL_FOG_START /;"	d
GL_FONT_ASCENDER_BIT_NV	glew.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	d
GL_FONT_DESCENDER_BIT_NV	glew.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	d
GL_FONT_HAS_KERNING_BIT_NV	glew.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	d
GL_FONT_HEIGHT_BIT_NV	glew.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	glew.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	glew.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	glew.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	glew.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	glew.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	glew.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	glew.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	glew.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	glew.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	d
GL_FORCE_BLUE_TO_ONE_NV	glew.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	glew.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	glew.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	d
GL_FRACTIONAL_EVEN	glew.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	glew.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_COLOR_EXT	glew.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_EXT	glew.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT	glew.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT	glew.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT /;"	d
GL_FRAGMENT_DEPTH	glew.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_DEPTH_EXT	glew.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	d
GL_FRAGMENT_FOG_SGIX	glew.h	/^#define GL_FRAGMENT_FOG_SGIX /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	glew.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_LIGHT0_EXT	glew.h	/^#define GL_FRAGMENT_LIGHT0_EXT /;"	d
GL_FRAGMENT_LIGHT7_EXT	glew.h	/^#define GL_FRAGMENT_LIGHT7_EXT /;"	d
GL_FRAGMENT_LIGHTING_EXT	glew.h	/^#define GL_FRAGMENT_LIGHTING_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT	glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT	glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT	glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT	glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT /;"	d
GL_FRAGMENT_MATERIAL_EXT	glew.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	d
GL_FRAGMENT_NORMAL_EXT	glew.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	d
GL_FRAGMENT_PROGRAM_ARB	glew.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	glew.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	glew.h	/^#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV /;"	d
GL_FRAGMENT_PROGRAM_NV	glew.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	glew.h	/^#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_FRAGMENT_SHADER	glew.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_ARB	glew.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	d
GL_FRAGMENT_SHADER_ATI	glew.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	d
GL_FRAGMENT_SHADER_BIT	glew.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	glew.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	glew.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	glew.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB /;"	d
GL_FRAGMENT_SUBROUTINE	glew.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	glew.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	glew.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	glew.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ANGLE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	glew.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	glew.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT_EXT /;"	d
GL_FRAMEBUFFER_BINDING	glew.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING_EXT	glew.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	d
GL_FRAMEBUFFER_BLEND	glew.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	glew.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	glew.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	d
GL_FRAMEBUFFER_DEFAULT	glew.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_EXT	glew.h	/^#define GL_FRAMEBUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_RENDERABLE	glew.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	glew.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SRGB	glew.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	glew.h	/^#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	glew.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d
GL_FRAMEBUFFER_UNDEFINED	glew.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	glew.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	glew.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	d
GL_FRAME_NV	glew.h	/^#define GL_FRAME_NV /;"	d
GL_FRONT	glew.h	/^#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	glew.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	glew.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_LEFT	glew.h	/^#define GL_FRONT_LEFT /;"	d
GL_FRONT_RIGHT	glew.h	/^#define GL_FRONT_RIGHT /;"	d
GL_FULL_RANGE_EXT	glew.h	/^#define GL_FULL_RANGE_EXT /;"	d
GL_FULL_STIPPLE_HINT_PGI	glew.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	d
GL_FULL_SUPPORT	glew.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	glew.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD_EXT	glew.h	/^#define GL_FUNC_ADD_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT	glew.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	glew.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	d
GL_FUNC_SUBTRACT	glew.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT_EXT	glew.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	d
GL_GENERATE_MIPMAP	glew.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	glew.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	glew.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	d
GL_GENERATE_MIPMAP_SGIS	glew.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	d
GL_GENERIC_ATTRIB_NV	glew.h	/^#define GL_GENERIC_ATTRIB_NV /;"	d
GL_GEOMETRY_INPUT_TYPE	glew.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	glew.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	glew.h	/^#define GL_GEOMETRY_INPUT_TYPE_EXT /;"	d
GL_GEOMETRY_OUTPUT_TYPE	glew.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	glew.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	glew.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_EXT /;"	d
GL_GEOMETRY_PROGRAM_NV	glew.h	/^#define GL_GEOMETRY_PROGRAM_NV /;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	glew.h	/^#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_GEOMETRY_SHADER	glew.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_ARB	glew.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	d
GL_GEOMETRY_SHADER_BIT	glew.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_EXT	glew.h	/^#define GL_GEOMETRY_SHADER_EXT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	glew.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	glew.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB /;"	d
GL_GEOMETRY_SUBROUTINE	glew.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	glew.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	glew.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	glew.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	glew.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	glew.h	/^#define GL_GEOMETRY_VERTICES_OUT_EXT /;"	d
GL_GEQUAL	glew.h	/^#define GL_GEQUAL /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	glew.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	glew.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	glew.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	d
GL_GLOBAL_ALPHA_SUN	glew.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	glew.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	d
GL_GLYPH_HEIGHT_BIT_NV	glew.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	glew.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	glew.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	glew.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	glew.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	glew.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	glew.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_WIDTH_BIT_NV	glew.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	d
GL_GPU_ADDRESS_NV	glew.h	/^#define GL_GPU_ADDRESS_NV /;"	d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	glew.h	/^#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	glew.h	/^#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	glew.h	/^#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	glew.h	/^#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX /;"	d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	glew.h	/^#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX /;"	d
GL_GREATER	glew.h	/^#define GL_GREATER /;"	d
GL_GREEN	glew.h	/^#define GL_GREEN /;"	d
GL_GREEN_BIAS	glew.h	/^#define GL_GREEN_BIAS /;"	d
GL_GREEN_BITS	glew.h	/^#define GL_GREEN_BITS /;"	d
GL_GREEN_BIT_ATI	glew.h	/^#define GL_GREEN_BIT_ATI /;"	d
GL_GREEN_INTEGER	glew.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_INTEGER_EXT	glew.h	/^#define GL_GREEN_INTEGER_EXT /;"	d
GL_GREEN_MAX_CLAMP_INGR	glew.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	d
GL_GREEN_MIN_CLAMP_INGR	glew.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	d
GL_GREEN_NV	glew.h	/^#define GL_GREEN_NV /;"	d
GL_GREEN_SCALE	glew.h	/^#define GL_GREEN_SCALE /;"	d
GL_GREMEDY_frame_terminator	glew.h	/^#define GL_GREMEDY_frame_terminator /;"	d
GL_GREMEDY_string_marker	glew.h	/^#define GL_GREMEDY_string_marker /;"	d
GL_GUILTY_CONTEXT_RESET	glew.h	/^#define GL_GUILTY_CONTEXT_RESET /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	glew.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_APPLE	glew.h	/^#define GL_HALF_APPLE /;"	d
GL_HALF_BIAS_NEGATE_NV	glew.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	d
GL_HALF_BIAS_NORMAL_NV	glew.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	d
GL_HALF_BIT_ATI	glew.h	/^#define GL_HALF_BIT_ATI /;"	d
GL_HALF_FLOAT	glew.h	/^#define GL_HALF_FLOAT /;"	d
GL_HALF_FLOAT_ARB	glew.h	/^#define GL_HALF_FLOAT_ARB /;"	d
GL_HALF_FLOAT_NV	glew.h	/^#define GL_HALF_FLOAT_NV /;"	d
GL_HARDLIGHT_KHR	glew.h	/^#define GL_HARDLIGHT_KHR /;"	d
GL_HARDLIGHT_NV	glew.h	/^#define GL_HARDLIGHT_NV /;"	d
GL_HARDMIX_NV	glew.h	/^#define GL_HARDMIX_NV /;"	d
GL_HIGH_FLOAT	glew.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	glew.h	/^#define GL_HIGH_INT /;"	d
GL_HILO16_NV	glew.h	/^#define GL_HILO16_NV /;"	d
GL_HILO8_NV	glew.h	/^#define GL_HILO8_NV /;"	d
GL_HILO_NV	glew.h	/^#define GL_HILO_NV /;"	d
GL_HINT_BIT	glew.h	/^#define GL_HINT_BIT /;"	d
GL_HISTOGRAM	glew.h	/^#define GL_HISTOGRAM /;"	d
GL_HISTOGRAM_ALPHA_SIZE	glew.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	glew.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	d
GL_HISTOGRAM_BLUE_SIZE	glew.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	glew.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	d
GL_HISTOGRAM_EXT	glew.h	/^#define GL_HISTOGRAM_EXT /;"	d
GL_HISTOGRAM_FORMAT	glew.h	/^#define GL_HISTOGRAM_FORMAT /;"	d
GL_HISTOGRAM_FORMAT_EXT	glew.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	d
GL_HISTOGRAM_GREEN_SIZE	glew.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	glew.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	glew.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	glew.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	d
GL_HISTOGRAM_RED_SIZE	glew.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	d
GL_HISTOGRAM_RED_SIZE_EXT	glew.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	d
GL_HISTOGRAM_SINK	glew.h	/^#define GL_HISTOGRAM_SINK /;"	d
GL_HISTOGRAM_SINK_EXT	glew.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	d
GL_HISTOGRAM_WIDTH	glew.h	/^#define GL_HISTOGRAM_WIDTH /;"	d
GL_HISTOGRAM_WIDTH_EXT	glew.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	d
GL_HI_BIAS_NV	glew.h	/^#define GL_HI_BIAS_NV /;"	d
GL_HI_SCALE_NV	glew.h	/^#define GL_HI_SCALE_NV /;"	d
GL_HORIZONTAL_LINE_TO_NV	glew.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	d
GL_HP_convolution_border_modes	glew.h	/^#define GL_HP_convolution_border_modes /;"	d
GL_HP_image_transform	glew.h	/^#define GL_HP_image_transform /;"	d
GL_HP_occlusion_test	glew.h	/^#define GL_HP_occlusion_test /;"	d
GL_HP_texture_lighting	glew.h	/^#define GL_HP_texture_lighting /;"	d
GL_HSL_COLOR_KHR	glew.h	/^#define GL_HSL_COLOR_KHR /;"	d
GL_HSL_COLOR_NV	glew.h	/^#define GL_HSL_COLOR_NV /;"	d
GL_HSL_HUE_KHR	glew.h	/^#define GL_HSL_HUE_KHR /;"	d
GL_HSL_HUE_NV	glew.h	/^#define GL_HSL_HUE_NV /;"	d
GL_HSL_LUMINOSITY_KHR	glew.h	/^#define GL_HSL_LUMINOSITY_KHR /;"	d
GL_HSL_LUMINOSITY_NV	glew.h	/^#define GL_HSL_LUMINOSITY_NV /;"	d
GL_HSL_SATURATION_KHR	glew.h	/^#define GL_HSL_SATURATION_KHR /;"	d
GL_HSL_SATURATION_NV	glew.h	/^#define GL_HSL_SATURATION_NV /;"	d
GL_IBM_cull_vertex	glew.h	/^#define GL_IBM_cull_vertex /;"	d
GL_IBM_multimode_draw_arrays	glew.h	/^#define GL_IBM_multimode_draw_arrays /;"	d
GL_IBM_rasterpos_clip	glew.h	/^#define GL_IBM_rasterpos_clip /;"	d
GL_IBM_static_data	glew.h	/^#define GL_IBM_static_data /;"	d
GL_IBM_texture_mirrored_repeat	glew.h	/^#define GL_IBM_texture_mirrored_repeat /;"	d
GL_IBM_vertex_array_lists	glew.h	/^#define GL_IBM_vertex_array_lists /;"	d
GL_IDENTITY_NV	glew.h	/^#define GL_IDENTITY_NV /;"	d
GL_IGNORE_BORDER	glew.h	/^#define GL_IGNORE_BORDER /;"	d
GL_IMAGE_1D	glew.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	glew.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_1D_ARRAY_EXT	glew.h	/^#define GL_IMAGE_1D_ARRAY_EXT /;"	d
GL_IMAGE_1D_EXT	glew.h	/^#define GL_IMAGE_1D_EXT /;"	d
GL_IMAGE_2D	glew.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	glew.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_ARRAY_EXT	glew.h	/^#define GL_IMAGE_2D_ARRAY_EXT /;"	d
GL_IMAGE_2D_EXT	glew.h	/^#define GL_IMAGE_2D_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE	glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_IMAGE_2D_RECT	glew.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_2D_RECT_EXT	glew.h	/^#define GL_IMAGE_2D_RECT_EXT /;"	d
GL_IMAGE_3D	glew.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_3D_EXT	glew.h	/^#define GL_IMAGE_3D_EXT /;"	d
GL_IMAGE_BINDING_ACCESS	glew.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_ACCESS_EXT	glew.h	/^#define GL_IMAGE_BINDING_ACCESS_EXT /;"	d
GL_IMAGE_BINDING_FORMAT	glew.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_FORMAT_EXT	glew.h	/^#define GL_IMAGE_BINDING_FORMAT_EXT /;"	d
GL_IMAGE_BINDING_LAYER	glew.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	glew.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LAYERED_EXT	glew.h	/^#define GL_IMAGE_BINDING_LAYERED_EXT /;"	d
GL_IMAGE_BINDING_LAYER_EXT	glew.h	/^#define GL_IMAGE_BINDING_LAYER_EXT /;"	d
GL_IMAGE_BINDING_LEVEL	glew.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_LEVEL_EXT	glew.h	/^#define GL_IMAGE_BINDING_LEVEL_EXT /;"	d
GL_IMAGE_BINDING_NAME	glew.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BINDING_NAME_EXT	glew.h	/^#define GL_IMAGE_BINDING_NAME_EXT /;"	d
GL_IMAGE_BUFFER	glew.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_BUFFER_EXT	glew.h	/^#define GL_IMAGE_BUFFER_EXT /;"	d
GL_IMAGE_CLASS_10_10_10_2	glew.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	glew.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	glew.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	glew.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	glew.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	glew.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	glew.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	glew.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	glew.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	glew.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	glew.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	glew.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	glew.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_EXT	glew.h	/^#define GL_IMAGE_CUBE_EXT /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	glew.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	glew.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	glew.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	glew.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	glew.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_PIXEL_FORMAT	glew.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	glew.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_TEXEL_SIZE	glew.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	d
GL_INCR	glew.h	/^#define GL_INCR /;"	d
GL_INCR_WRAP	glew.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP_EXT	glew.h	/^#define GL_INCR_WRAP_EXT /;"	d
GL_INDEX	glew.h	/^#define GL_INDEX /;"	d
GL_INDEX_ARRAY	glew.h	/^#define GL_INDEX_ARRAY /;"	d
GL_INDEX_ARRAY_ADDRESS_NV	glew.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_INDEX_ARRAY_COUNT_EXT	glew.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	d
GL_INDEX_ARRAY_EXT	glew.h	/^#define GL_INDEX_ARRAY_EXT /;"	d
GL_INDEX_ARRAY_LENGTH_NV	glew.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	d
GL_INDEX_ARRAY_LIST_IBM	glew.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_INDEX_ARRAY_POINTER	glew.h	/^#define GL_INDEX_ARRAY_POINTER /;"	d
GL_INDEX_ARRAY_POINTER_EXT	glew.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	d
GL_INDEX_ARRAY_STRIDE	glew.h	/^#define GL_INDEX_ARRAY_STRIDE /;"	d
GL_INDEX_ARRAY_STRIDE_EXT	glew.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	d
GL_INDEX_ARRAY_TYPE	glew.h	/^#define GL_INDEX_ARRAY_TYPE /;"	d
GL_INDEX_ARRAY_TYPE_EXT	glew.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	d
GL_INDEX_BITS	glew.h	/^#define GL_INDEX_BITS /;"	d
GL_INDEX_BIT_PGI	glew.h	/^#define GL_INDEX_BIT_PGI /;"	d
GL_INDEX_CLEAR_VALUE	glew.h	/^#define GL_INDEX_CLEAR_VALUE /;"	d
GL_INDEX_LOGIC_OP	glew.h	/^#define GL_INDEX_LOGIC_OP /;"	d
GL_INDEX_MODE	glew.h	/^#define GL_INDEX_MODE /;"	d
GL_INDEX_OFFSET	glew.h	/^#define GL_INDEX_OFFSET /;"	d
GL_INDEX_SHIFT	glew.h	/^#define GL_INDEX_SHIFT /;"	d
GL_INDEX_WRITEMASK	glew.h	/^#define GL_INDEX_WRITEMASK /;"	d
GL_INFO_LOG_LENGTH	glew.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INGR_color_clamp	glew.h	/^#define GL_INGR_color_clamp /;"	d
GL_INGR_interlace_read	glew.h	/^#define GL_INGR_interlace_read /;"	d
GL_INNOCENT_CONTEXT_RESET	glew.h	/^#define GL_INNOCENT_CONTEXT_RESET /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	glew.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INT	glew.h	/^#define GL_INT /;"	d
GL_INT16_NV	glew.h	/^#define GL_INT16_NV /;"	d
GL_INT16_VEC2_NV	glew.h	/^#define GL_INT16_VEC2_NV /;"	d
GL_INT16_VEC3_NV	glew.h	/^#define GL_INT16_VEC3_NV /;"	d
GL_INT16_VEC4_NV	glew.h	/^#define GL_INT16_VEC4_NV /;"	d
GL_INT64_NV	glew.h	/^#define GL_INT64_NV /;"	d
GL_INT64_VEC2_NV	glew.h	/^#define GL_INT64_VEC2_NV /;"	d
GL_INT64_VEC3_NV	glew.h	/^#define GL_INT64_VEC3_NV /;"	d
GL_INT64_VEC4_NV	glew.h	/^#define GL_INT64_VEC4_NV /;"	d
GL_INT8_NV	glew.h	/^#define GL_INT8_NV /;"	d
GL_INT8_VEC2_NV	glew.h	/^#define GL_INT8_VEC2_NV /;"	d
GL_INT8_VEC3_NV	glew.h	/^#define GL_INT8_VEC3_NV /;"	d
GL_INT8_VEC4_NV	glew.h	/^#define GL_INT8_VEC4_NV /;"	d
GL_INTEL_fragment_shader_ordering	glew.h	/^#define GL_INTEL_fragment_shader_ordering /;"	d
GL_INTEL_map_texture	glew.h	/^#define GL_INTEL_map_texture /;"	d
GL_INTEL_parallel_arrays	glew.h	/^#define GL_INTEL_parallel_arrays /;"	d
GL_INTEL_performance_query	glew.h	/^#define GL_INTEL_performance_query /;"	d
GL_INTEL_texture_scissor	glew.h	/^#define GL_INTEL_texture_scissor /;"	d
GL_INTENSITY	glew.h	/^#define GL_INTENSITY /;"	d
GL_INTENSITY12	glew.h	/^#define GL_INTENSITY12 /;"	d
GL_INTENSITY12_EXT	glew.h	/^#define GL_INTENSITY12_EXT /;"	d
GL_INTENSITY16	glew.h	/^#define GL_INTENSITY16 /;"	d
GL_INTENSITY16F_ARB	glew.h	/^#define GL_INTENSITY16F_ARB /;"	d
GL_INTENSITY16I_EXT	glew.h	/^#define GL_INTENSITY16I_EXT /;"	d
GL_INTENSITY16UI_EXT	glew.h	/^#define GL_INTENSITY16UI_EXT /;"	d
GL_INTENSITY16_EXT	glew.h	/^#define GL_INTENSITY16_EXT /;"	d
GL_INTENSITY16_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_INTENSITY16_EXTENDED_RANGE_SGIX /;"	d
GL_INTENSITY16_SIGNED_SGIX	glew.h	/^#define GL_INTENSITY16_SIGNED_SGIX /;"	d
GL_INTENSITY16_SNORM	glew.h	/^#define GL_INTENSITY16_SNORM /;"	d
GL_INTENSITY32F_ARB	glew.h	/^#define GL_INTENSITY32F_ARB /;"	d
GL_INTENSITY32I_EXT	glew.h	/^#define GL_INTENSITY32I_EXT /;"	d
GL_INTENSITY32UI_EXT	glew.h	/^#define GL_INTENSITY32UI_EXT /;"	d
GL_INTENSITY4	glew.h	/^#define GL_INTENSITY4 /;"	d
GL_INTENSITY4_EXT	glew.h	/^#define GL_INTENSITY4_EXT /;"	d
GL_INTENSITY8	glew.h	/^#define GL_INTENSITY8 /;"	d
GL_INTENSITY8I_EXT	glew.h	/^#define GL_INTENSITY8I_EXT /;"	d
GL_INTENSITY8UI_EXT	glew.h	/^#define GL_INTENSITY8UI_EXT /;"	d
GL_INTENSITY8_EXT	glew.h	/^#define GL_INTENSITY8_EXT /;"	d
GL_INTENSITY8_SNORM	glew.h	/^#define GL_INTENSITY8_SNORM /;"	d
GL_INTENSITY_EXT	glew.h	/^#define GL_INTENSITY_EXT /;"	d
GL_INTENSITY_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_INTENSITY_EXTENDED_RANGE_SGIX /;"	d
GL_INTENSITY_FLOAT16_APPLE	glew.h	/^#define GL_INTENSITY_FLOAT16_APPLE /;"	d
GL_INTENSITY_FLOAT16_ATI	glew.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	d
GL_INTENSITY_FLOAT32_APPLE	glew.h	/^#define GL_INTENSITY_FLOAT32_APPLE /;"	d
GL_INTENSITY_FLOAT32_ATI	glew.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	d
GL_INTENSITY_SIGNED_SGIX	glew.h	/^#define GL_INTENSITY_SIGNED_SGIX /;"	d
GL_INTENSITY_SNORM	glew.h	/^#define GL_INTENSITY_SNORM /;"	d
GL_INTERLACE_OML	glew.h	/^#define GL_INTERLACE_OML /;"	d
GL_INTERLACE_READ_INGR	glew.h	/^#define GL_INTERLACE_READ_INGR /;"	d
GL_INTERLACE_READ_OML	glew.h	/^#define GL_INTERLACE_READ_OML /;"	d
GL_INTERLACE_SGIX	glew.h	/^#define GL_INTERLACE_SGIX /;"	d
GL_INTERLEAVED_ATTRIBS	glew.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERLEAVED_ATTRIBS_EXT	glew.h	/^#define GL_INTERLEAVED_ATTRIBS_EXT /;"	d
GL_INTERLEAVED_ATTRIBS_NV	glew.h	/^#define GL_INTERLEAVED_ATTRIBS_NV /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	glew.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	glew.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	glew.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	glew.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	glew.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	glew.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	glew.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	glew.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	glew.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	glew.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	glew.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	glew.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	glew.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	glew.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	glew.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INTERPOLATE	glew.h	/^#define GL_INTERPOLATE /;"	d
GL_INTERPOLATE_ARB	glew.h	/^#define GL_INTERPOLATE_ARB /;"	d
GL_INTERPOLATE_EXT	glew.h	/^#define GL_INTERPOLATE_EXT /;"	d
GL_INT_2_10_10_10_REV	glew.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	glew.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	glew.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	glew.h	/^#define GL_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_INT_IMAGE_1D_EXT	glew.h	/^#define GL_INT_IMAGE_1D_EXT /;"	d
GL_INT_IMAGE_2D	glew.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	glew.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	glew.h	/^#define GL_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_EXT	glew.h	/^#define GL_INT_IMAGE_2D_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_INT_IMAGE_2D_RECT	glew.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_2D_RECT_EXT	glew.h	/^#define GL_INT_IMAGE_2D_RECT_EXT /;"	d
GL_INT_IMAGE_3D	glew.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_3D_EXT	glew.h	/^#define GL_INT_IMAGE_3D_EXT /;"	d
GL_INT_IMAGE_BUFFER	glew.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_BUFFER_EXT	glew.h	/^#define GL_INT_IMAGE_BUFFER_EXT /;"	d
GL_INT_IMAGE_CUBE	glew.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_EXT	glew.h	/^#define GL_INT_IMAGE_CUBE_EXT /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	glew.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	glew.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D	glew.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	glew.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	glew.h	/^#define GL_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D_EXT	glew.h	/^#define GL_INT_SAMPLER_1D_EXT /;"	d
GL_INT_SAMPLER_2D	glew.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	glew.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	glew.h	/^#define GL_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_2D_EXT	glew.h	/^#define GL_INT_SAMPLER_2D_EXT /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	glew.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	glew.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_2D_RECT_EXT	glew.h	/^#define GL_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_INT_SAMPLER_3D	glew.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_3D_EXT	glew.h	/^#define GL_INT_SAMPLER_3D_EXT /;"	d
GL_INT_SAMPLER_BUFFER	glew.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_BUFFER_AMD	glew.h	/^#define GL_INT_SAMPLER_BUFFER_AMD /;"	d
GL_INT_SAMPLER_BUFFER_EXT	glew.h	/^#define GL_INT_SAMPLER_BUFFER_EXT /;"	d
GL_INT_SAMPLER_CUBE	glew.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_EXT	glew.h	/^#define GL_INT_SAMPLER_CUBE_EXT /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	glew.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glew.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	glew.h	/^#define GL_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_INT_VEC2	glew.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2_ARB	glew.h	/^#define GL_INT_VEC2_ARB /;"	d
GL_INT_VEC3	glew.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3_ARB	glew.h	/^#define GL_INT_VEC3_ARB /;"	d
GL_INT_VEC4	glew.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4_ARB	glew.h	/^#define GL_INT_VEC4_ARB /;"	d
GL_INVALID_ENUM	glew.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	glew.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	glew.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	d
GL_INVALID_INDEX	glew.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	glew.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	glew.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVARIANT_DATATYPE_EXT	glew.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	d
GL_INVARIANT_EXT	glew.h	/^#define GL_INVARIANT_EXT /;"	d
GL_INVARIANT_VALUE_EXT	glew.h	/^#define GL_INVARIANT_VALUE_EXT /;"	d
GL_INVERSE_NV	glew.h	/^#define GL_INVERSE_NV /;"	d
GL_INVERSE_TRANSPOSE_NV	glew.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	d
GL_INVERT	glew.h	/^#define GL_INVERT /;"	d
GL_INVERTED_SCREEN_W_REND	glew.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	d
GL_INVERT_OVG_NV	glew.h	/^#define GL_INVERT_OVG_NV /;"	d
GL_INVERT_RGB_NV	glew.h	/^#define GL_INVERT_RGB_NV /;"	d
GL_ISOLINES	glew.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	glew.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	glew.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_ITALIC_BIT_NV	glew.h	/^#define GL_ITALIC_BIT_NV /;"	d
GL_KEEP	glew.h	/^#define GL_KEEP /;"	d
GL_KHR_blend_equation_advanced	glew.h	/^#define GL_KHR_blend_equation_advanced /;"	d
GL_KHR_blend_equation_advanced_coherent	glew.h	/^#define GL_KHR_blend_equation_advanced_coherent /;"	d
GL_KHR_context_flush_control	glew.h	/^#define GL_KHR_context_flush_control /;"	d
GL_KHR_debug	glew.h	/^#define GL_KHR_debug /;"	d
GL_KHR_robust_buffer_access_behavior	glew.h	/^#define GL_KHR_robust_buffer_access_behavior /;"	d
GL_KHR_robustness	glew.h	/^#define GL_KHR_robustness /;"	d
GL_KHR_texture_compression_astc_hdr	glew.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	glew.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_KTX_BACK_REGION	glew.h	/^#define GL_KTX_BACK_REGION /;"	d
GL_KTX_FRONT_REGION	glew.h	/^#define GL_KTX_FRONT_REGION /;"	d
GL_KTX_STENCIL_REGION	glew.h	/^#define GL_KTX_STENCIL_REGION /;"	d
GL_KTX_Z_REGION	glew.h	/^#define GL_KTX_Z_REGION /;"	d
GL_KTX_buffer_region	glew.h	/^#define GL_KTX_buffer_region /;"	d
GL_LARGE_CCW_ARC_TO_NV	glew.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	d
GL_LARGE_CW_ARC_TO_NV	glew.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	d
GL_LAST_VERTEX_CONVENTION	glew.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAST_VERTEX_CONVENTION_EXT	glew.h	/^#define GL_LAST_VERTEX_CONVENTION_EXT /;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	glew.h	/^#define GL_LAST_VIDEO_CAPTURE_STATUS_NV /;"	d
GL_LAYER_PROVOKING_VERTEX	glew.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LAYOUT_DEFAULT_INTEL	glew.h	/^#define GL_LAYOUT_DEFAULT_INTEL /;"	d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	glew.h	/^#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL /;"	d
GL_LAYOUT_LINEAR_INTEL	glew.h	/^#define GL_LAYOUT_LINEAR_INTEL /;"	d
GL_LEFT	glew.h	/^#define GL_LEFT /;"	d
GL_LEQUAL	glew.h	/^#define GL_LEQUAL /;"	d
GL_LERP_ATI	glew.h	/^#define GL_LERP_ATI /;"	d
GL_LESS	glew.h	/^#define GL_LESS /;"	d
GL_LIGHT0	glew.h	/^#define GL_LIGHT0 /;"	d
GL_LIGHT1	glew.h	/^#define GL_LIGHT1 /;"	d
GL_LIGHT2	glew.h	/^#define GL_LIGHT2 /;"	d
GL_LIGHT3	glew.h	/^#define GL_LIGHT3 /;"	d
GL_LIGHT4	glew.h	/^#define GL_LIGHT4 /;"	d
GL_LIGHT5	glew.h	/^#define GL_LIGHT5 /;"	d
GL_LIGHT6	glew.h	/^#define GL_LIGHT6 /;"	d
GL_LIGHT7	glew.h	/^#define GL_LIGHT7 /;"	d
GL_LIGHTEN_KHR	glew.h	/^#define GL_LIGHTEN_KHR /;"	d
GL_LIGHTEN_NV	glew.h	/^#define GL_LIGHTEN_NV /;"	d
GL_LIGHTING	glew.h	/^#define GL_LIGHTING /;"	d
GL_LIGHTING_BIT	glew.h	/^#define GL_LIGHTING_BIT /;"	d
GL_LIGHT_ENV_MODE_EXT	glew.h	/^#define GL_LIGHT_ENV_MODE_EXT /;"	d
GL_LIGHT_MODEL_AMBIENT	glew.h	/^#define GL_LIGHT_MODEL_AMBIENT /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	glew.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	glew.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	glew.h	/^#define GL_LIGHT_MODEL_LOCAL_VIEWER /;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	glew.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	d
GL_LIGHT_MODEL_TWO_SIDE	glew.h	/^#define GL_LIGHT_MODEL_TWO_SIDE /;"	d
GL_LINE	glew.h	/^#define GL_LINE /;"	d
GL_LINEAR	glew.h	/^#define GL_LINEAR /;"	d
GL_LINEARBURN_NV	glew.h	/^#define GL_LINEARBURN_NV /;"	d
GL_LINEARDODGE_NV	glew.h	/^#define GL_LINEARDODGE_NV /;"	d
GL_LINEARLIGHT_NV	glew.h	/^#define GL_LINEARLIGHT_NV /;"	d
GL_LINEAR_ATTENUATION	glew.h	/^#define GL_LINEAR_ATTENUATION /;"	d
GL_LINEAR_MIPMAP_LINEAR	glew.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	glew.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINES	glew.h	/^#define GL_LINES /;"	d
GL_LINES_ADJACENCY	glew.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY_ARB	glew.h	/^#define GL_LINES_ADJACENCY_ARB /;"	d
GL_LINES_ADJACENCY_EXT	glew.h	/^#define GL_LINES_ADJACENCY_EXT /;"	d
GL_LINE_BIT	glew.h	/^#define GL_LINE_BIT /;"	d
GL_LINE_LOOP	glew.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_RESET_TOKEN	glew.h	/^#define GL_LINE_RESET_TOKEN /;"	d
GL_LINE_SMOOTH	glew.h	/^#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH_HINT	glew.h	/^#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_STIPPLE	glew.h	/^#define GL_LINE_STIPPLE /;"	d
GL_LINE_STIPPLE_PATTERN	glew.h	/^#define GL_LINE_STIPPLE_PATTERN /;"	d
GL_LINE_STIPPLE_REPEAT	glew.h	/^#define GL_LINE_STIPPLE_REPEAT /;"	d
GL_LINE_STRIP	glew.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	glew.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY_ARB	glew.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	d
GL_LINE_STRIP_ADJACENCY_EXT	glew.h	/^#define GL_LINE_STRIP_ADJACENCY_EXT /;"	d
GL_LINE_TOKEN	glew.h	/^#define GL_LINE_TOKEN /;"	d
GL_LINE_TO_NV	glew.h	/^#define GL_LINE_TO_NV /;"	d
GL_LINE_WIDTH	glew.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_GRANULARITY	glew.h	/^#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_RANGE	glew.h	/^#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINK_STATUS	glew.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_BASE	glew.h	/^#define GL_LIST_BASE /;"	d
GL_LIST_BIT	glew.h	/^#define GL_LIST_BIT /;"	d
GL_LIST_INDEX	glew.h	/^#define GL_LIST_INDEX /;"	d
GL_LIST_MODE	glew.h	/^#define GL_LIST_MODE /;"	d
GL_LOAD	glew.h	/^#define GL_LOAD /;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	glew.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	d
GL_LOCAL_CONSTANT_EXT	glew.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	glew.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	d
GL_LOCAL_EXT	glew.h	/^#define GL_LOCAL_EXT /;"	d
GL_LOCATION	glew.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	glew.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	glew.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOGIC_OP	glew.h	/^#define GL_LOGIC_OP /;"	d
GL_LOGIC_OP_MODE	glew.h	/^#define GL_LOGIC_OP_MODE /;"	d
GL_LOG_APP_REGAL	glew.h	/^#define GL_LOG_APP_REGAL /;"	d
GL_LOG_DEBUG_REGAL	glew.h	/^#define GL_LOG_DEBUG_REGAL /;"	d
GL_LOG_DRIVER_REGAL	glew.h	/^#define GL_LOG_DRIVER_REGAL /;"	d
GL_LOG_ERROR_REGAL	glew.h	/^#define GL_LOG_ERROR_REGAL /;"	d
GL_LOG_HTTP_REGAL	glew.h	/^#define GL_LOG_HTTP_REGAL /;"	d
GL_LOG_INFO_REGAL	glew.h	/^#define GL_LOG_INFO_REGAL /;"	d
GL_LOG_INTERNAL_REGAL	glew.h	/^#define GL_LOG_INTERNAL_REGAL /;"	d
GL_LOG_REGAL	glew.h	/^#define GL_LOG_REGAL /;"	d
GL_LOG_STATUS_REGAL	glew.h	/^#define GL_LOG_STATUS_REGAL /;"	d
GL_LOG_WARNING_REGAL	glew.h	/^#define GL_LOG_WARNING_REGAL /;"	d
GL_LOSE_CONTEXT_ON_RESET	glew.h	/^#define GL_LOSE_CONTEXT_ON_RESET /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	glew.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	glew.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	glew.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	glew.h	/^#define GL_LOW_INT /;"	d
GL_LO_BIAS_NV	glew.h	/^#define GL_LO_BIAS_NV /;"	d
GL_LO_SCALE_NV	glew.h	/^#define GL_LO_SCALE_NV /;"	d
GL_LUMINANCE	glew.h	/^#define GL_LUMINANCE /;"	d
GL_LUMINANCE12	glew.h	/^#define GL_LUMINANCE12 /;"	d
GL_LUMINANCE12_ALPHA12	glew.h	/^#define GL_LUMINANCE12_ALPHA12 /;"	d
GL_LUMINANCE12_ALPHA12_EXT	glew.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	d
GL_LUMINANCE12_ALPHA4	glew.h	/^#define GL_LUMINANCE12_ALPHA4 /;"	d
GL_LUMINANCE12_ALPHA4_EXT	glew.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	d
GL_LUMINANCE12_EXT	glew.h	/^#define GL_LUMINANCE12_EXT /;"	d
GL_LUMINANCE16	glew.h	/^#define GL_LUMINANCE16 /;"	d
GL_LUMINANCE16F_ARB	glew.h	/^#define GL_LUMINANCE16F_ARB /;"	d
GL_LUMINANCE16I_EXT	glew.h	/^#define GL_LUMINANCE16I_EXT /;"	d
GL_LUMINANCE16UI_EXT	glew.h	/^#define GL_LUMINANCE16UI_EXT /;"	d
GL_LUMINANCE16_ALPHA16	glew.h	/^#define GL_LUMINANCE16_ALPHA16 /;"	d
GL_LUMINANCE16_ALPHA16_EXT	glew.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	d
GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE16_ALPHA16_SIGNED_SGIX	glew.h	/^#define GL_LUMINANCE16_ALPHA16_SIGNED_SGIX /;"	d
GL_LUMINANCE16_ALPHA16_SNORM	glew.h	/^#define GL_LUMINANCE16_ALPHA16_SNORM /;"	d
GL_LUMINANCE16_EXT	glew.h	/^#define GL_LUMINANCE16_EXT /;"	d
GL_LUMINANCE16_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_LUMINANCE16_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE16_SIGNED_SGIX	glew.h	/^#define GL_LUMINANCE16_SIGNED_SGIX /;"	d
GL_LUMINANCE16_SNORM	glew.h	/^#define GL_LUMINANCE16_SNORM /;"	d
GL_LUMINANCE32F_ARB	glew.h	/^#define GL_LUMINANCE32F_ARB /;"	d
GL_LUMINANCE32I_EXT	glew.h	/^#define GL_LUMINANCE32I_EXT /;"	d
GL_LUMINANCE32UI_EXT	glew.h	/^#define GL_LUMINANCE32UI_EXT /;"	d
GL_LUMINANCE4	glew.h	/^#define GL_LUMINANCE4 /;"	d
GL_LUMINANCE4_ALPHA4	glew.h	/^#define GL_LUMINANCE4_ALPHA4 /;"	d
GL_LUMINANCE4_ALPHA4_EXT	glew.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	d
GL_LUMINANCE4_EXT	glew.h	/^#define GL_LUMINANCE4_EXT /;"	d
GL_LUMINANCE6_ALPHA2	glew.h	/^#define GL_LUMINANCE6_ALPHA2 /;"	d
GL_LUMINANCE6_ALPHA2_EXT	glew.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	d
GL_LUMINANCE8	glew.h	/^#define GL_LUMINANCE8 /;"	d
GL_LUMINANCE8I_EXT	glew.h	/^#define GL_LUMINANCE8I_EXT /;"	d
GL_LUMINANCE8UI_EXT	glew.h	/^#define GL_LUMINANCE8UI_EXT /;"	d
GL_LUMINANCE8_ALPHA8	glew.h	/^#define GL_LUMINANCE8_ALPHA8 /;"	d
GL_LUMINANCE8_ALPHA8_EXT	glew.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_ALPHA8_SNORM	glew.h	/^#define GL_LUMINANCE8_ALPHA8_SNORM /;"	d
GL_LUMINANCE8_EXT	glew.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE8_SNORM	glew.h	/^#define GL_LUMINANCE8_SNORM /;"	d
GL_LUMINANCE_ALPHA	glew.h	/^#define GL_LUMINANCE_ALPHA /;"	d
GL_LUMINANCE_ALPHA16F_ARB	glew.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	d
GL_LUMINANCE_ALPHA16I_EXT	glew.h	/^#define GL_LUMINANCE_ALPHA16I_EXT /;"	d
GL_LUMINANCE_ALPHA16UI_EXT	glew.h	/^#define GL_LUMINANCE_ALPHA16UI_EXT /;"	d
GL_LUMINANCE_ALPHA32F_ARB	glew.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	d
GL_LUMINANCE_ALPHA32I_EXT	glew.h	/^#define GL_LUMINANCE_ALPHA32I_EXT /;"	d
GL_LUMINANCE_ALPHA32UI_EXT	glew.h	/^#define GL_LUMINANCE_ALPHA32UI_EXT /;"	d
GL_LUMINANCE_ALPHA8I_EXT	glew.h	/^#define GL_LUMINANCE_ALPHA8I_EXT /;"	d
GL_LUMINANCE_ALPHA8UI_EXT	glew.h	/^#define GL_LUMINANCE_ALPHA8UI_EXT /;"	d
GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	glew.h	/^#define GL_LUMINANCE_ALPHA_INTEGER_EXT /;"	d
GL_LUMINANCE_ALPHA_SIGNED_SGIX	glew.h	/^#define GL_LUMINANCE_ALPHA_SIGNED_SGIX /;"	d
GL_LUMINANCE_ALPHA_SNORM	glew.h	/^#define GL_LUMINANCE_ALPHA_SNORM /;"	d
GL_LUMINANCE_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_LUMINANCE_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE_FLOAT16_APPLE	glew.h	/^#define GL_LUMINANCE_FLOAT16_APPLE /;"	d
GL_LUMINANCE_FLOAT16_ATI	glew.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	d
GL_LUMINANCE_FLOAT32_APPLE	glew.h	/^#define GL_LUMINANCE_FLOAT32_APPLE /;"	d
GL_LUMINANCE_FLOAT32_ATI	glew.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	d
GL_LUMINANCE_INTEGER_EXT	glew.h	/^#define GL_LUMINANCE_INTEGER_EXT /;"	d
GL_LUMINANCE_SIGNED_SGIX	glew.h	/^#define GL_LUMINANCE_SIGNED_SGIX /;"	d
GL_LUMINANCE_SNORM	glew.h	/^#define GL_LUMINANCE_SNORM /;"	d
GL_MAD_ATI	glew.h	/^#define GL_MAD_ATI /;"	d
GL_MAGNITUDE_BIAS_NV	glew.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	d
GL_MAGNITUDE_SCALE_NV	glew.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	d
GL_MAJOR_VERSION	glew.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MANUAL_GENERATE_MIPMAP	glew.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP1_BINORMAL_EXT	glew.h	/^#define GL_MAP1_BINORMAL_EXT /;"	d
GL_MAP1_COLOR_4	glew.h	/^#define GL_MAP1_COLOR_4 /;"	d
GL_MAP1_GRID_DOMAIN	glew.h	/^#define GL_MAP1_GRID_DOMAIN /;"	d
GL_MAP1_GRID_SEGMENTS	glew.h	/^#define GL_MAP1_GRID_SEGMENTS /;"	d
GL_MAP1_INDEX	glew.h	/^#define GL_MAP1_INDEX /;"	d
GL_MAP1_NORMAL	glew.h	/^#define GL_MAP1_NORMAL /;"	d
GL_MAP1_TANGENT_EXT	glew.h	/^#define GL_MAP1_TANGENT_EXT /;"	d
GL_MAP1_TEXTURE_COORD_1	glew.h	/^#define GL_MAP1_TEXTURE_COORD_1 /;"	d
GL_MAP1_TEXTURE_COORD_2	glew.h	/^#define GL_MAP1_TEXTURE_COORD_2 /;"	d
GL_MAP1_TEXTURE_COORD_3	glew.h	/^#define GL_MAP1_TEXTURE_COORD_3 /;"	d
GL_MAP1_TEXTURE_COORD_4	glew.h	/^#define GL_MAP1_TEXTURE_COORD_4 /;"	d
GL_MAP1_VERTEX_3	glew.h	/^#define GL_MAP1_VERTEX_3 /;"	d
GL_MAP1_VERTEX_4	glew.h	/^#define GL_MAP1_VERTEX_4 /;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	glew.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP2_BINORMAL_EXT	glew.h	/^#define GL_MAP2_BINORMAL_EXT /;"	d
GL_MAP2_COLOR_4	glew.h	/^#define GL_MAP2_COLOR_4 /;"	d
GL_MAP2_GRID_DOMAIN	glew.h	/^#define GL_MAP2_GRID_DOMAIN /;"	d
GL_MAP2_GRID_SEGMENTS	glew.h	/^#define GL_MAP2_GRID_SEGMENTS /;"	d
GL_MAP2_INDEX	glew.h	/^#define GL_MAP2_INDEX /;"	d
GL_MAP2_NORMAL	glew.h	/^#define GL_MAP2_NORMAL /;"	d
GL_MAP2_TANGENT_EXT	glew.h	/^#define GL_MAP2_TANGENT_EXT /;"	d
GL_MAP2_TEXTURE_COORD_1	glew.h	/^#define GL_MAP2_TEXTURE_COORD_1 /;"	d
GL_MAP2_TEXTURE_COORD_2	glew.h	/^#define GL_MAP2_TEXTURE_COORD_2 /;"	d
GL_MAP2_TEXTURE_COORD_3	glew.h	/^#define GL_MAP2_TEXTURE_COORD_3 /;"	d
GL_MAP2_TEXTURE_COORD_4	glew.h	/^#define GL_MAP2_TEXTURE_COORD_4 /;"	d
GL_MAP2_VERTEX_3	glew.h	/^#define GL_MAP2_VERTEX_3 /;"	d
GL_MAP2_VERTEX_4	glew.h	/^#define GL_MAP2_VERTEX_4 /;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	glew.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP_ATTRIB_U_ORDER_NV	glew.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	d
GL_MAP_ATTRIB_V_ORDER_NV	glew.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	d
GL_MAP_COHERENT_BIT	glew.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_COLOR	glew.h	/^#define GL_MAP_COLOR /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	glew.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	glew.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	glew.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_PERSISTENT_BIT	glew.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_READ_BIT	glew.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_STENCIL	glew.h	/^#define GL_MAP_STENCIL /;"	d
GL_MAP_TESSELLATION_NV	glew.h	/^#define GL_MAP_TESSELLATION_NV /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	glew.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	glew.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATERIAL_SIDE_HINT_PGI	glew.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	d
GL_MATRIX0_ARB	glew.h	/^#define GL_MATRIX0_ARB /;"	d
GL_MATRIX0_NV	glew.h	/^#define GL_MATRIX0_NV /;"	d
GL_MATRIX10_ARB	glew.h	/^#define GL_MATRIX10_ARB /;"	d
GL_MATRIX11_ARB	glew.h	/^#define GL_MATRIX11_ARB /;"	d
GL_MATRIX12_ARB	glew.h	/^#define GL_MATRIX12_ARB /;"	d
GL_MATRIX13_ARB	glew.h	/^#define GL_MATRIX13_ARB /;"	d
GL_MATRIX14_ARB	glew.h	/^#define GL_MATRIX14_ARB /;"	d
GL_MATRIX15_ARB	glew.h	/^#define GL_MATRIX15_ARB /;"	d
GL_MATRIX16_ARB	glew.h	/^#define GL_MATRIX16_ARB /;"	d
GL_MATRIX17_ARB	glew.h	/^#define GL_MATRIX17_ARB /;"	d
GL_MATRIX18_ARB	glew.h	/^#define GL_MATRIX18_ARB /;"	d
GL_MATRIX19_ARB	glew.h	/^#define GL_MATRIX19_ARB /;"	d
GL_MATRIX1_ARB	glew.h	/^#define GL_MATRIX1_ARB /;"	d
GL_MATRIX1_NV	glew.h	/^#define GL_MATRIX1_NV /;"	d
GL_MATRIX20_ARB	glew.h	/^#define GL_MATRIX20_ARB /;"	d
GL_MATRIX21_ARB	glew.h	/^#define GL_MATRIX21_ARB /;"	d
GL_MATRIX22_ARB	glew.h	/^#define GL_MATRIX22_ARB /;"	d
GL_MATRIX23_ARB	glew.h	/^#define GL_MATRIX23_ARB /;"	d
GL_MATRIX24_ARB	glew.h	/^#define GL_MATRIX24_ARB /;"	d
GL_MATRIX25_ARB	glew.h	/^#define GL_MATRIX25_ARB /;"	d
GL_MATRIX26_ARB	glew.h	/^#define GL_MATRIX26_ARB /;"	d
GL_MATRIX27_ARB	glew.h	/^#define GL_MATRIX27_ARB /;"	d
GL_MATRIX28_ARB	glew.h	/^#define GL_MATRIX28_ARB /;"	d
GL_MATRIX29_ARB	glew.h	/^#define GL_MATRIX29_ARB /;"	d
GL_MATRIX2_ARB	glew.h	/^#define GL_MATRIX2_ARB /;"	d
GL_MATRIX2_NV	glew.h	/^#define GL_MATRIX2_NV /;"	d
GL_MATRIX30_ARB	glew.h	/^#define GL_MATRIX30_ARB /;"	d
GL_MATRIX31_ARB	glew.h	/^#define GL_MATRIX31_ARB /;"	d
GL_MATRIX3_ARB	glew.h	/^#define GL_MATRIX3_ARB /;"	d
GL_MATRIX3_NV	glew.h	/^#define GL_MATRIX3_NV /;"	d
GL_MATRIX4_ARB	glew.h	/^#define GL_MATRIX4_ARB /;"	d
GL_MATRIX4_NV	glew.h	/^#define GL_MATRIX4_NV /;"	d
GL_MATRIX5_ARB	glew.h	/^#define GL_MATRIX5_ARB /;"	d
GL_MATRIX5_NV	glew.h	/^#define GL_MATRIX5_NV /;"	d
GL_MATRIX6_ARB	glew.h	/^#define GL_MATRIX6_ARB /;"	d
GL_MATRIX6_NV	glew.h	/^#define GL_MATRIX6_NV /;"	d
GL_MATRIX7_ARB	glew.h	/^#define GL_MATRIX7_ARB /;"	d
GL_MATRIX7_NV	glew.h	/^#define GL_MATRIX7_NV /;"	d
GL_MATRIX8_ARB	glew.h	/^#define GL_MATRIX8_ARB /;"	d
GL_MATRIX9_ARB	glew.h	/^#define GL_MATRIX9_ARB /;"	d
GL_MATRIX_EXT	glew.h	/^#define GL_MATRIX_EXT /;"	d
GL_MATRIX_INDEX_ARRAY_ARB	glew.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	glew.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	glew.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	glew.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	glew.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	d
GL_MATRIX_MODE	glew.h	/^#define GL_MATRIX_MODE /;"	d
GL_MATRIX_PALETTE_ARB	glew.h	/^#define GL_MATRIX_PALETTE_ARB /;"	d
GL_MATRIX_STRIDE	glew.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	glew.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	d
GL_MAT_AMBIENT_BIT_PGI	glew.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	glew.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	d
GL_MAT_DIFFUSE_BIT_PGI	glew.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	d
GL_MAT_EMISSION_BIT_PGI	glew.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	d
GL_MAT_SHININESS_BIT_PGI	glew.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	d
GL_MAT_SPECULAR_BIT_PGI	glew.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	d
GL_MAX	glew.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	glew.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	glew.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_ACTIVE_LIGHTS_EXT	glew.h	/^#define GL_MAX_ACTIVE_LIGHTS_EXT /;"	d
GL_MAX_ALPHA_SGIS	glew.h	/^#define GL_MAX_ALPHA_SGIS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	glew.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	glew.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT /;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	glew.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	glew.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	glew.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	glew.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	glew.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	glew.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_ATTRIB_STACK_DEPTH	glew.h	/^#define GL_MAX_ATTRIB_STACK_DEPTH /;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	glew.h	/^#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT /;"	d
GL_MAX_BLUE_SGIS	glew.h	/^#define GL_MAX_BLUE_SGIS /;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	glew.h	/^#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH /;"	d
GL_MAX_CLIP_DISTANCES	glew.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_CLIP_PLANES	glew.h	/^#define GL_MAX_CLIP_PLANES /;"	d
GL_MAX_COLOR_ATTACHMENTS	glew.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	glew.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	glew.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	glew.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	glew.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	glew.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	glew.h	/^#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	glew.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	glew.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	glew.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	glew.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	glew.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	glew.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	glew.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	glew.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	glew.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	glew.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	glew.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	glew.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	glew.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	glew.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	glew.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	glew.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	glew.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	glew.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	glew.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	glew.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	glew.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	glew.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CONVOLUTION_HEIGHT	glew.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	glew.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	d
GL_MAX_CONVOLUTION_WIDTH	glew.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	glew.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	glew.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	glew.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	glew.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	d
GL_MAX_CULL_DISTANCES	glew.h	/^#define GL_MAX_CULL_DISTANCES /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	glew.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	glew.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	glew.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	glew.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	glew.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	glew.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	glew.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	glew.h	/^#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV /;"	d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	glew.h	/^#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV /;"	d
GL_MAX_DEPTH	glew.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	glew.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	glew.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS_ARB	glew.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	d
GL_MAX_DRAW_BUFFERS_ATI	glew.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	glew.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	glew.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES_EXT	glew.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	d
GL_MAX_ELEMENTS_VERTICES	glew.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	glew.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	d
GL_MAX_ELEMENT_INDEX	glew.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_EVAL_ORDER	glew.h	/^#define GL_MAX_EVAL_ORDER /;"	d
GL_MAX_EXT	glew.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	glew.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	glew.h	/^#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	glew.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	glew.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	glew.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	glew.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MAX_FRAGMENT_LIGHTS_EXT	glew.h	/^#define GL_MAX_FRAGMENT_LIGHTS_EXT /;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	glew.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	glew.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	glew.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	glew.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	glew.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	glew.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_GENERAL_COMBINERS_NV	glew.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	glew.h	/^#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	glew.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	glew.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT /;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	glew.h	/^#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	glew.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	glew.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	glew.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	glew.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	glew.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	glew.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	glew.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	glew.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	glew.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	glew.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_GREEN_SGIS	glew.h	/^#define GL_MAX_GREEN_SGIS /;"	d
GL_MAX_HEIGHT	glew.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	glew.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_SAMPLES_EXT	glew.h	/^#define GL_MAX_IMAGE_SAMPLES_EXT /;"	d
GL_MAX_IMAGE_UNITS	glew.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_IMAGE_UNITS_EXT	glew.h	/^#define GL_MAX_IMAGE_UNITS_EXT /;"	d
GL_MAX_INTEGER_SAMPLES	glew.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_INTENSITY_SGIS	glew.h	/^#define GL_MAX_INTENSITY_SGIS /;"	d
GL_MAX_LABEL_LENGTH	glew.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	glew.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_LIGHTS	glew.h	/^#define GL_MAX_LIGHTS /;"	d
GL_MAX_LIST_NESTING	glew.h	/^#define GL_MAX_LIST_NESTING /;"	d
GL_MAX_LUMINANCE_SGIS	glew.h	/^#define GL_MAX_LUMINANCE_SGIS /;"	d
GL_MAX_MAP_TESSELLATION_NV	glew.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	glew.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	glew.h	/^#define GL_MAX_MODELVIEW_STACK_DEPTH /;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	glew.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MAX_NAME_LENGTH	glew.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NAME_STACK_DEPTH	glew.h	/^#define GL_MAX_NAME_STACK_DEPTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	glew.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	glew.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_PALETTE_MATRICES_ARB	glew.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	d
GL_MAX_PATCH_VERTICES	glew.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PIXEL_MAP_TABLE	glew.h	/^#define GL_MAX_PIXEL_MAP_TABLE /;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	glew.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	glew.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	glew.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	glew.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	glew.h	/^#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	glew.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	glew.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	glew.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	glew.h	/^#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	glew.h	/^#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV /;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	glew.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	glew.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	glew.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	glew.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	d
GL_MAX_PROGRAM_MATRICES_ARB	glew.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	glew.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	glew.h	/^#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV /;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	glew.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	glew.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	glew.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV /;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	glew.h	/^#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	glew.h	/^#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	glew.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	glew.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	glew.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS	glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	glew.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	glew.h	/^#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV /;"	d
GL_MAX_PROJECTION_STACK_DEPTH	glew.h	/^#define GL_MAX_PROJECTION_STACK_DEPTH /;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	glew.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT	glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	d
GL_MAX_RED_SGIS	glew.h	/^#define GL_MAX_RED_SGIS /;"	d
GL_MAX_RENDERBUFFER_SIZE	glew.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	glew.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	d
GL_MAX_SAMPLES	glew.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLES_ANGLE	glew.h	/^#define GL_MAX_SAMPLES_ANGLE /;"	d
GL_MAX_SAMPLES_EXT	glew.h	/^#define GL_MAX_SAMPLES_EXT /;"	d
GL_MAX_SAMPLE_MASK_WORDS	glew.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	glew.h	/^#define GL_MAX_SAMPLE_MASK_WORDS_NV /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	glew.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	glew.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	glew.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	glew.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SHININESS_NV	glew.h	/^#define GL_MAX_SHININESS_NV /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	glew.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	glew.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	glew.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	glew.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	glew.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	glew.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPOT_EXPONENT_NV	glew.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	d
GL_MAX_SUBROUTINES	glew.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	glew.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	glew.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	glew.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	glew.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	glew.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	glew.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	glew.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	glew.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	glew.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	glew.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	glew.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	glew.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	glew.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	glew.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	glew.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	glew.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	glew.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT /;"	d
GL_MAX_TEXTURE_COORDS	glew.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_COORDS_ARB	glew.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	d
GL_MAX_TEXTURE_COORDS_NV	glew.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	glew.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	glew.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	glew.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TEXTURE_LOD_BIAS	glew.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	glew.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	glew.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_SIZE	glew.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TEXTURE_STACK_DEPTH	glew.h	/^#define GL_MAX_TEXTURE_STACK_DEPTH /;"	d
GL_MAX_TEXTURE_UNITS	glew.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TEXTURE_UNITS_ARB	glew.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	d
GL_MAX_TRACK_MATRICES_NV	glew.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	glew.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	glew.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	glew.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	glew.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	glew.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_COMPONENTS_EXT	glew.h	/^#define GL_MAX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VARYING_FLOATS	glew.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS_ARB	glew.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	d
GL_MAX_VARYING_VECTORS	glew.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE	glew.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	glew.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	glew.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	glew.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	glew.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	glew.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	glew.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	glew.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	glew.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	glew.h	/^#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_VERTEX_HINT_PGI	glew.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	glew.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	glew.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	glew.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	glew.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	glew.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glew.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	glew.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	glew.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_VERTEX_STREAMS	glew.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_STREAMS_ATI	glew.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	glew.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	glew.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	glew.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	glew.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	glew.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	glew.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNITS_ARB	glew.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	glew.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	glew.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VIEWPORTS	glew.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWPORT_DIMS	glew.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MAX_WIDTH	glew.h	/^#define GL_MAX_WIDTH /;"	d
GL_MEDIUM_FLOAT	glew.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	glew.h	/^#define GL_MEDIUM_INT /;"	d
GL_MESAX_texture_stack	glew.h	/^#define GL_MESAX_texture_stack /;"	d
GL_MESA_pack_invert	glew.h	/^#define GL_MESA_pack_invert /;"	d
GL_MESA_resize_buffers	glew.h	/^#define GL_MESA_resize_buffers /;"	d
GL_MESA_window_pos	glew.h	/^#define GL_MESA_window_pos /;"	d
GL_MESA_ycbcr_texture	glew.h	/^#define GL_MESA_ycbcr_texture /;"	d
GL_MIN	glew.h	/^#define GL_MIN /;"	d
GL_MINMAX	glew.h	/^#define GL_MINMAX /;"	d
GL_MINMAX_EXT	glew.h	/^#define GL_MINMAX_EXT /;"	d
GL_MINMAX_FORMAT	glew.h	/^#define GL_MINMAX_FORMAT /;"	d
GL_MINMAX_FORMAT_EXT	glew.h	/^#define GL_MINMAX_FORMAT_EXT /;"	d
GL_MINMAX_SINK	glew.h	/^#define GL_MINMAX_SINK /;"	d
GL_MINMAX_SINK_EXT	glew.h	/^#define GL_MINMAX_SINK_EXT /;"	d
GL_MINOR_VERSION	glew.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINUS_CLAMPED_NV	glew.h	/^#define GL_MINUS_CLAMPED_NV /;"	d
GL_MINUS_NV	glew.h	/^#define GL_MINUS_NV /;"	d
GL_MIN_ALPHA_SGIS	glew.h	/^#define GL_MIN_ALPHA_SGIS /;"	d
GL_MIN_BLUE_SGIS	glew.h	/^#define GL_MIN_BLUE_SGIS /;"	d
GL_MIN_EXT	glew.h	/^#define GL_MIN_EXT /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	glew.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	glew.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MIN_GREEN_SGIS	glew.h	/^#define GL_MIN_GREEN_SGIS /;"	d
GL_MIN_INTENSITY_SGIS	glew.h	/^#define GL_MIN_INTENSITY_SGIS /;"	d
GL_MIN_LOD_WARNING_AMD	glew.h	/^#define GL_MIN_LOD_WARNING_AMD /;"	d
GL_MIN_LUMINANCE_SGIS	glew.h	/^#define GL_MIN_LUMINANCE_SGIS /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	glew.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE	glew.h	/^#define GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	glew.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	glew.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	glew.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glew.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	glew.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MIN_RED_SGIS	glew.h	/^#define GL_MIN_RED_SGIS /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	glew.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	glew.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIN_SPARSE_LEVEL_AMD	glew.h	/^#define GL_MIN_SPARSE_LEVEL_AMD /;"	d
GL_MIPMAP	glew.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	glew.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	glew.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRRORED_REPEAT_IBM	glew.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	d
GL_MIRROR_CLAMP_ATI	glew.h	/^#define GL_MIRROR_CLAMP_ATI /;"	d
GL_MIRROR_CLAMP_EXT	glew.h	/^#define GL_MIRROR_CLAMP_EXT /;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	glew.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	d
GL_MIRROR_CLAMP_TO_EDGE	glew.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	glew.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	glew.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	d
GL_MISSING_REGAL	glew.h	/^#define GL_MISSING_REGAL /;"	d
GL_MITER_REVERT_NV	glew.h	/^#define GL_MITER_REVERT_NV /;"	d
GL_MITER_TRUNCATE_NV	glew.h	/^#define GL_MITER_TRUNCATE_NV /;"	d
GL_MODELVIEW	glew.h	/^#define GL_MODELVIEW /;"	d
GL_MODELVIEW0_ARB	glew.h	/^#define GL_MODELVIEW0_ARB /;"	d
GL_MODELVIEW0_EXT	glew.h	/^#define GL_MODELVIEW0_EXT /;"	d
GL_MODELVIEW0_MATRIX_EXT	glew.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	glew.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW10_ARB	glew.h	/^#define GL_MODELVIEW10_ARB /;"	d
GL_MODELVIEW11_ARB	glew.h	/^#define GL_MODELVIEW11_ARB /;"	d
GL_MODELVIEW12_ARB	glew.h	/^#define GL_MODELVIEW12_ARB /;"	d
GL_MODELVIEW13_ARB	glew.h	/^#define GL_MODELVIEW13_ARB /;"	d
GL_MODELVIEW14_ARB	glew.h	/^#define GL_MODELVIEW14_ARB /;"	d
GL_MODELVIEW15_ARB	glew.h	/^#define GL_MODELVIEW15_ARB /;"	d
GL_MODELVIEW16_ARB	glew.h	/^#define GL_MODELVIEW16_ARB /;"	d
GL_MODELVIEW17_ARB	glew.h	/^#define GL_MODELVIEW17_ARB /;"	d
GL_MODELVIEW18_ARB	glew.h	/^#define GL_MODELVIEW18_ARB /;"	d
GL_MODELVIEW19_ARB	glew.h	/^#define GL_MODELVIEW19_ARB /;"	d
GL_MODELVIEW1_ARB	glew.h	/^#define GL_MODELVIEW1_ARB /;"	d
GL_MODELVIEW1_EXT	glew.h	/^#define GL_MODELVIEW1_EXT /;"	d
GL_MODELVIEW1_MATRIX_EXT	glew.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	glew.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW20_ARB	glew.h	/^#define GL_MODELVIEW20_ARB /;"	d
GL_MODELVIEW21_ARB	glew.h	/^#define GL_MODELVIEW21_ARB /;"	d
GL_MODELVIEW22_ARB	glew.h	/^#define GL_MODELVIEW22_ARB /;"	d
GL_MODELVIEW23_ARB	glew.h	/^#define GL_MODELVIEW23_ARB /;"	d
GL_MODELVIEW24_ARB	glew.h	/^#define GL_MODELVIEW24_ARB /;"	d
GL_MODELVIEW25_ARB	glew.h	/^#define GL_MODELVIEW25_ARB /;"	d
GL_MODELVIEW26_ARB	glew.h	/^#define GL_MODELVIEW26_ARB /;"	d
GL_MODELVIEW27_ARB	glew.h	/^#define GL_MODELVIEW27_ARB /;"	d
GL_MODELVIEW28_ARB	glew.h	/^#define GL_MODELVIEW28_ARB /;"	d
GL_MODELVIEW29_ARB	glew.h	/^#define GL_MODELVIEW29_ARB /;"	d
GL_MODELVIEW2_ARB	glew.h	/^#define GL_MODELVIEW2_ARB /;"	d
GL_MODELVIEW30_ARB	glew.h	/^#define GL_MODELVIEW30_ARB /;"	d
GL_MODELVIEW31_ARB	glew.h	/^#define GL_MODELVIEW31_ARB /;"	d
GL_MODELVIEW3_ARB	glew.h	/^#define GL_MODELVIEW3_ARB /;"	d
GL_MODELVIEW4_ARB	glew.h	/^#define GL_MODELVIEW4_ARB /;"	d
GL_MODELVIEW5_ARB	glew.h	/^#define GL_MODELVIEW5_ARB /;"	d
GL_MODELVIEW6_ARB	glew.h	/^#define GL_MODELVIEW6_ARB /;"	d
GL_MODELVIEW7_ARB	glew.h	/^#define GL_MODELVIEW7_ARB /;"	d
GL_MODELVIEW8_ARB	glew.h	/^#define GL_MODELVIEW8_ARB /;"	d
GL_MODELVIEW9_ARB	glew.h	/^#define GL_MODELVIEW9_ARB /;"	d
GL_MODELVIEW_MATRIX	glew.h	/^#define GL_MODELVIEW_MATRIX /;"	d
GL_MODELVIEW_PROJECTION_NV	glew.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	d
GL_MODELVIEW_STACK_DEPTH	glew.h	/^#define GL_MODELVIEW_STACK_DEPTH /;"	d
GL_MODULATE	glew.h	/^#define GL_MODULATE /;"	d
GL_MODULATE_ADD_ATI	glew.h	/^#define GL_MODULATE_ADD_ATI /;"	d
GL_MODULATE_ADD_ATIX	glew.h	/^#define GL_MODULATE_ADD_ATIX /;"	d
GL_MODULATE_SIGNED_ADD_ATI	glew.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	d
GL_MODULATE_SIGNED_ADD_ATIX	glew.h	/^#define GL_MODULATE_SIGNED_ADD_ATIX /;"	d
GL_MODULATE_SUBTRACT_ATI	glew.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	d
GL_MODULATE_SUBTRACT_ATIX	glew.h	/^#define GL_MODULATE_SUBTRACT_ATIX /;"	d
GL_MOVE_TO_CONTINUES_NV	glew.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	d
GL_MOVE_TO_NV	glew.h	/^#define GL_MOVE_TO_NV /;"	d
GL_MOVE_TO_RESETS_NV	glew.h	/^#define GL_MOVE_TO_RESETS_NV /;"	d
GL_MOV_ATI	glew.h	/^#define GL_MOV_ATI /;"	d
GL_MULT	glew.h	/^#define GL_MULT /;"	d
GL_MULTIPLY_KHR	glew.h	/^#define GL_MULTIPLY_KHR /;"	d
GL_MULTIPLY_NV	glew.h	/^#define GL_MULTIPLY_NV /;"	d
GL_MULTISAMPLE	glew.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLE_3DFX	glew.h	/^#define GL_MULTISAMPLE_3DFX /;"	d
GL_MULTISAMPLE_ARB	glew.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	glew.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_3DFX	glew.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	d
GL_MULTISAMPLE_BIT_ARB	glew.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_MULTISAMPLE_BIT_EXT	glew.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	glew.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MULTISAMPLE_EXT	glew.h	/^#define GL_MULTISAMPLE_EXT /;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	glew.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	d
GL_MULTISAMPLE_SGIS	glew.h	/^#define GL_MULTISAMPLE_SGIS /;"	d
GL_MUL_ATI	glew.h	/^#define GL_MUL_ATI /;"	d
GL_MVP_MATRIX_EXT	glew.h	/^#define GL_MVP_MATRIX_EXT /;"	d
GL_N3F_V3F	glew.h	/^#define GL_N3F_V3F /;"	d
GL_NAMED_STRING_LENGTH_ARB	glew.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	glew.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	glew.h	/^#define GL_NAME_LENGTH /;"	d
GL_NAME_STACK_DEPTH	glew.h	/^#define GL_NAME_STACK_DEPTH /;"	d
GL_NAND	glew.h	/^#define GL_NAND /;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	glew.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	glew.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	glew.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	d
GL_NEAREST	glew.h	/^#define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	glew.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	glew.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEGATE_BIT_ATI	glew.h	/^#define GL_NEGATE_BIT_ATI /;"	d
GL_NEGATIVE_ONE_EXT	glew.h	/^#define GL_NEGATIVE_ONE_EXT /;"	d
GL_NEGATIVE_ONE_TO_ONE	glew.h	/^#define GL_NEGATIVE_ONE_TO_ONE /;"	d
GL_NEGATIVE_W_EXT	glew.h	/^#define GL_NEGATIVE_W_EXT /;"	d
GL_NEGATIVE_X_EXT	glew.h	/^#define GL_NEGATIVE_X_EXT /;"	d
GL_NEGATIVE_Y_EXT	glew.h	/^#define GL_NEGATIVE_Y_EXT /;"	d
GL_NEGATIVE_Z_EXT	glew.h	/^#define GL_NEGATIVE_Z_EXT /;"	d
GL_NEVER	glew.h	/^#define GL_NEVER /;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	glew.h	/^#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV /;"	d
GL_NICEST	glew.h	/^#define GL_NICEST /;"	d
GL_NONE	glew.h	/^#define GL_NONE /;"	d
GL_NOOP	glew.h	/^#define GL_NOOP /;"	d
GL_NOR	glew.h	/^#define GL_NOR /;"	d
GL_NORMALIZE	glew.h	/^#define GL_NORMALIZE /;"	d
GL_NORMALIZED_RANGE_EXT	glew.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	d
GL_NORMAL_ARRAY	glew.h	/^#define GL_NORMAL_ARRAY /;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	glew.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_NORMAL_ARRAY_COUNT_EXT	glew.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	d
GL_NORMAL_ARRAY_EXT	glew.h	/^#define GL_NORMAL_ARRAY_EXT /;"	d
GL_NORMAL_ARRAY_LENGTH_NV	glew.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	d
GL_NORMAL_ARRAY_LIST_IBM	glew.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	glew.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_NORMAL_ARRAY_POINTER	glew.h	/^#define GL_NORMAL_ARRAY_POINTER /;"	d
GL_NORMAL_ARRAY_POINTER_EXT	glew.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	d
GL_NORMAL_ARRAY_STRIDE	glew.h	/^#define GL_NORMAL_ARRAY_STRIDE /;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	glew.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	d
GL_NORMAL_ARRAY_TYPE	glew.h	/^#define GL_NORMAL_ARRAY_TYPE /;"	d
GL_NORMAL_ARRAY_TYPE_EXT	glew.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	d
GL_NORMAL_BIT_PGI	glew.h	/^#define GL_NORMAL_BIT_PGI /;"	d
GL_NORMAL_MAP	glew.h	/^#define GL_NORMAL_MAP /;"	d
GL_NORMAL_MAP_ARB	glew.h	/^#define GL_NORMAL_MAP_ARB /;"	d
GL_NORMAL_MAP_EXT	glew.h	/^#define GL_NORMAL_MAP_EXT /;"	d
GL_NORMAL_MAP_NV	glew.h	/^#define GL_NORMAL_MAP_NV /;"	d
GL_NOTEQUAL	glew.h	/^#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	glew.h	/^#define GL_NO_ERROR /;"	d
GL_NO_RESET_NOTIFICATION	glew.h	/^#define GL_NO_RESET_NOTIFICATION /;"	d
GL_NO_RESET_NOTIFICATION_ARB	glew.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_ACTIVE_VARIABLES	glew.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	glew.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	glew.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	glew.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_NUM_EXTENSIONS	glew.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_FILL_STREAMS_NV	glew.h	/^#define GL_NUM_FILL_STREAMS_NV /;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	glew.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	glew.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	d
GL_NUM_GENERAL_COMBINERS_NV	glew.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	glew.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	glew.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	glew.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	glew.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	d
GL_NUM_PASSES_ATI	glew.h	/^#define GL_NUM_PASSES_ATI /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	glew.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_SAMPLE_COUNTS	glew.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	glew.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	glew.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_SPARSE_LEVELS_ARB	glew.h	/^#define GL_NUM_SPARSE_LEVELS_ARB /;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	glew.h	/^#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	glew.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_NVX_conditional_render	glew.h	/^#define GL_NVX_conditional_render /;"	d
GL_NVX_gpu_memory_info	glew.h	/^#define GL_NVX_gpu_memory_info /;"	d
GL_NV_bindless_multi_draw_indirect	glew.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	d
GL_NV_bindless_multi_draw_indirect_count	glew.h	/^#define GL_NV_bindless_multi_draw_indirect_count /;"	d
GL_NV_bindless_texture	glew.h	/^#define GL_NV_bindless_texture /;"	d
GL_NV_blend_equation_advanced	glew.h	/^#define GL_NV_blend_equation_advanced /;"	d
GL_NV_blend_equation_advanced_coherent	glew.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	d
GL_NV_blend_square	glew.h	/^#define GL_NV_blend_square /;"	d
GL_NV_compute_program5	glew.h	/^#define GL_NV_compute_program5 /;"	d
GL_NV_conditional_render	glew.h	/^#define GL_NV_conditional_render /;"	d
GL_NV_copy_depth_to_color	glew.h	/^#define GL_NV_copy_depth_to_color /;"	d
GL_NV_copy_image	glew.h	/^#define GL_NV_copy_image /;"	d
GL_NV_deep_texture3D	glew.h	/^#define GL_NV_deep_texture3D /;"	d
GL_NV_depth_buffer_float	glew.h	/^#define GL_NV_depth_buffer_float /;"	d
GL_NV_depth_clamp	glew.h	/^#define GL_NV_depth_clamp /;"	d
GL_NV_depth_range_unclamped	glew.h	/^#define GL_NV_depth_range_unclamped /;"	d
GL_NV_draw_texture	glew.h	/^#define GL_NV_draw_texture /;"	d
GL_NV_evaluators	glew.h	/^#define GL_NV_evaluators /;"	d
GL_NV_explicit_multisample	glew.h	/^#define GL_NV_explicit_multisample /;"	d
GL_NV_fence	glew.h	/^#define GL_NV_fence /;"	d
GL_NV_float_buffer	glew.h	/^#define GL_NV_float_buffer /;"	d
GL_NV_fog_distance	glew.h	/^#define GL_NV_fog_distance /;"	d
GL_NV_fragment_program	glew.h	/^#define GL_NV_fragment_program /;"	d
GL_NV_fragment_program2	glew.h	/^#define GL_NV_fragment_program2 /;"	d
GL_NV_fragment_program4	glew.h	/^#define GL_NV_fragment_program4 /;"	d
GL_NV_fragment_program_option	glew.h	/^#define GL_NV_fragment_program_option /;"	d
GL_NV_framebuffer_multisample_coverage	glew.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	d
GL_NV_geometry_program4	glew.h	/^#define GL_NV_geometry_program4 /;"	d
GL_NV_geometry_shader4	glew.h	/^#define GL_NV_geometry_shader4 /;"	d
GL_NV_gpu_program4	glew.h	/^#define GL_NV_gpu_program4 /;"	d
GL_NV_gpu_program5	glew.h	/^#define GL_NV_gpu_program5 /;"	d
GL_NV_gpu_program5_mem_extended	glew.h	/^#define GL_NV_gpu_program5_mem_extended /;"	d
GL_NV_gpu_program_fp64	glew.h	/^#define GL_NV_gpu_program_fp64 /;"	d
GL_NV_gpu_shader5	glew.h	/^#define GL_NV_gpu_shader5 /;"	d
GL_NV_half_float	glew.h	/^#define GL_NV_half_float /;"	d
GL_NV_light_max_exponent	glew.h	/^#define GL_NV_light_max_exponent /;"	d
GL_NV_multisample_coverage	glew.h	/^#define GL_NV_multisample_coverage /;"	d
GL_NV_multisample_filter_hint	glew.h	/^#define GL_NV_multisample_filter_hint /;"	d
GL_NV_occlusion_query	glew.h	/^#define GL_NV_occlusion_query /;"	d
GL_NV_packed_depth_stencil	glew.h	/^#define GL_NV_packed_depth_stencil /;"	d
GL_NV_parameter_buffer_object	glew.h	/^#define GL_NV_parameter_buffer_object /;"	d
GL_NV_parameter_buffer_object2	glew.h	/^#define GL_NV_parameter_buffer_object2 /;"	d
GL_NV_path_rendering	glew.h	/^#define GL_NV_path_rendering /;"	d
GL_NV_pixel_data_range	glew.h	/^#define GL_NV_pixel_data_range /;"	d
GL_NV_point_sprite	glew.h	/^#define GL_NV_point_sprite /;"	d
GL_NV_present_video	glew.h	/^#define GL_NV_present_video /;"	d
GL_NV_primitive_restart	glew.h	/^#define GL_NV_primitive_restart /;"	d
GL_NV_register_combiners	glew.h	/^#define GL_NV_register_combiners /;"	d
GL_NV_register_combiners2	glew.h	/^#define GL_NV_register_combiners2 /;"	d
GL_NV_shader_atomic_counters	glew.h	/^#define GL_NV_shader_atomic_counters /;"	d
GL_NV_shader_atomic_float	glew.h	/^#define GL_NV_shader_atomic_float /;"	d
GL_NV_shader_atomic_int64	glew.h	/^#define GL_NV_shader_atomic_int64 /;"	d
GL_NV_shader_buffer_load	glew.h	/^#define GL_NV_shader_buffer_load /;"	d
GL_NV_shader_storage_buffer_object	glew.h	/^#define GL_NV_shader_storage_buffer_object /;"	d
GL_NV_shader_thread_group	glew.h	/^#define GL_NV_shader_thread_group /;"	d
GL_NV_shader_thread_shuffle	glew.h	/^#define GL_NV_shader_thread_shuffle /;"	d
GL_NV_tessellation_program5	glew.h	/^#define GL_NV_tessellation_program5 /;"	d
GL_NV_texgen_emboss	glew.h	/^#define GL_NV_texgen_emboss /;"	d
GL_NV_texgen_reflection	glew.h	/^#define GL_NV_texgen_reflection /;"	d
GL_NV_texture_barrier	glew.h	/^#define GL_NV_texture_barrier /;"	d
GL_NV_texture_compression_vtc	glew.h	/^#define GL_NV_texture_compression_vtc /;"	d
GL_NV_texture_env_combine4	glew.h	/^#define GL_NV_texture_env_combine4 /;"	d
GL_NV_texture_expand_normal	glew.h	/^#define GL_NV_texture_expand_normal /;"	d
GL_NV_texture_multisample	glew.h	/^#define GL_NV_texture_multisample /;"	d
GL_NV_texture_rectangle	glew.h	/^#define GL_NV_texture_rectangle /;"	d
GL_NV_texture_shader	glew.h	/^#define GL_NV_texture_shader /;"	d
GL_NV_texture_shader2	glew.h	/^#define GL_NV_texture_shader2 /;"	d
GL_NV_texture_shader3	glew.h	/^#define GL_NV_texture_shader3 /;"	d
GL_NV_transform_feedback	glew.h	/^#define GL_NV_transform_feedback /;"	d
GL_NV_transform_feedback2	glew.h	/^#define GL_NV_transform_feedback2 /;"	d
GL_NV_vdpau_interop	glew.h	/^#define GL_NV_vdpau_interop /;"	d
GL_NV_vertex_array_range	glew.h	/^#define GL_NV_vertex_array_range /;"	d
GL_NV_vertex_array_range2	glew.h	/^#define GL_NV_vertex_array_range2 /;"	d
GL_NV_vertex_attrib_integer_64bit	glew.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	d
GL_NV_vertex_buffer_unified_memory	glew.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	d
GL_NV_vertex_program	glew.h	/^#define GL_NV_vertex_program /;"	d
GL_NV_vertex_program1_1	glew.h	/^#define GL_NV_vertex_program1_1 /;"	d
GL_NV_vertex_program2	glew.h	/^#define GL_NV_vertex_program2 /;"	d
GL_NV_vertex_program2_option	glew.h	/^#define GL_NV_vertex_program2_option /;"	d
GL_NV_vertex_program3	glew.h	/^#define GL_NV_vertex_program3 /;"	d
GL_NV_vertex_program4	glew.h	/^#define GL_NV_vertex_program4 /;"	d
GL_NV_video_capture	glew.h	/^#define GL_NV_video_capture /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	glew.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	glew.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	glew.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	glew.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	glew.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	d
GL_OBJECT_BUFFER_SIZE_ATI	glew.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	d
GL_OBJECT_BUFFER_USAGE_ATI	glew.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	d
GL_OBJECT_COMPILE_STATUS_ARB	glew.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	d
GL_OBJECT_DELETE_STATUS_ARB	glew.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	glew.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	glew.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	glew.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	d
GL_OBJECT_LINEAR	glew.h	/^#define GL_OBJECT_LINEAR /;"	d
GL_OBJECT_LINE_SGIS	glew.h	/^#define GL_OBJECT_LINE_SGIS /;"	d
GL_OBJECT_LINK_STATUS_ARB	glew.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	d
GL_OBJECT_PLANE	glew.h	/^#define GL_OBJECT_PLANE /;"	d
GL_OBJECT_POINT_SGIS	glew.h	/^#define GL_OBJECT_POINT_SGIS /;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	glew.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	d
GL_OBJECT_SUBTYPE_ARB	glew.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	d
GL_OBJECT_TYPE	glew.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OBJECT_TYPE_ARB	glew.h	/^#define GL_OBJECT_TYPE_ARB /;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	glew.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	glew.h	/^#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD /;"	d
GL_OES_byte_coordinates	glew.h	/^#define GL_OES_byte_coordinates /;"	d
GL_OES_compressed_paletted_texture	glew.h	/^#define GL_OES_compressed_paletted_texture /;"	d
GL_OES_read_format	glew.h	/^#define GL_OES_read_format /;"	d
GL_OES_single_precision	glew.h	/^#define GL_OES_single_precision /;"	d
GL_OFFSET	glew.h	/^#define GL_OFFSET /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	glew.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	glew.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	glew.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	glew.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	glew.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	glew.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_2D_NV	glew.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	glew.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_BIAS_NV	glew.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	glew.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	glew.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	glew.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_SCALE_NV	glew.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	d
GL_OML_interlace	glew.h	/^#define GL_OML_interlace /;"	d
GL_OML_resample	glew.h	/^#define GL_OML_resample /;"	d
GL_OML_subsample	glew.h	/^#define GL_OML_subsample /;"	d
GL_ONE	glew.h	/^#define GL_ONE /;"	d
GL_ONE_EXT	glew.h	/^#define GL_ONE_EXT /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	glew.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	glew.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	glew.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	glew.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	d
GL_ONE_MINUS_DST_ALPHA	glew.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	glew.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	glew.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	glew.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	glew.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	glew.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OPERAND0_ALPHA	glew.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_ALPHA_ARB	glew.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	d
GL_OPERAND0_ALPHA_EXT	glew.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	d
GL_OPERAND0_RGB	glew.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND0_RGB_ARB	glew.h	/^#define GL_OPERAND0_RGB_ARB /;"	d
GL_OPERAND0_RGB_EXT	glew.h	/^#define GL_OPERAND0_RGB_EXT /;"	d
GL_OPERAND1_ALPHA	glew.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_ALPHA_ARB	glew.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	d
GL_OPERAND1_ALPHA_EXT	glew.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	d
GL_OPERAND1_RGB	glew.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND1_RGB_ARB	glew.h	/^#define GL_OPERAND1_RGB_ARB /;"	d
GL_OPERAND1_RGB_EXT	glew.h	/^#define GL_OPERAND1_RGB_EXT /;"	d
GL_OPERAND2_ALPHA	glew.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_ALPHA_ARB	glew.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	d
GL_OPERAND2_ALPHA_EXT	glew.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	d
GL_OPERAND2_RGB	glew.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OPERAND2_RGB_ARB	glew.h	/^#define GL_OPERAND2_RGB_ARB /;"	d
GL_OPERAND2_RGB_EXT	glew.h	/^#define GL_OPERAND2_RGB_EXT /;"	d
GL_OPERAND3_ALPHA_NV	glew.h	/^#define GL_OPERAND3_ALPHA_NV /;"	d
GL_OPERAND3_RGB_NV	glew.h	/^#define GL_OPERAND3_RGB_NV /;"	d
GL_OP_ADD_EXT	glew.h	/^#define GL_OP_ADD_EXT /;"	d
GL_OP_CLAMP_EXT	glew.h	/^#define GL_OP_CLAMP_EXT /;"	d
GL_OP_CROSS_PRODUCT_EXT	glew.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	d
GL_OP_DOT3_EXT	glew.h	/^#define GL_OP_DOT3_EXT /;"	d
GL_OP_DOT4_EXT	glew.h	/^#define GL_OP_DOT4_EXT /;"	d
GL_OP_EXP_BASE_2_EXT	glew.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	d
GL_OP_FLOOR_EXT	glew.h	/^#define GL_OP_FLOOR_EXT /;"	d
GL_OP_FRAC_EXT	glew.h	/^#define GL_OP_FRAC_EXT /;"	d
GL_OP_INDEX_EXT	glew.h	/^#define GL_OP_INDEX_EXT /;"	d
GL_OP_LOG_BASE_2_EXT	glew.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	d
GL_OP_MADD_EXT	glew.h	/^#define GL_OP_MADD_EXT /;"	d
GL_OP_MAX_EXT	glew.h	/^#define GL_OP_MAX_EXT /;"	d
GL_OP_MIN_EXT	glew.h	/^#define GL_OP_MIN_EXT /;"	d
GL_OP_MOV_EXT	glew.h	/^#define GL_OP_MOV_EXT /;"	d
GL_OP_MULTIPLY_MATRIX_EXT	glew.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	d
GL_OP_MUL_EXT	glew.h	/^#define GL_OP_MUL_EXT /;"	d
GL_OP_NEGATE_EXT	glew.h	/^#define GL_OP_NEGATE_EXT /;"	d
GL_OP_POWER_EXT	glew.h	/^#define GL_OP_POWER_EXT /;"	d
GL_OP_RECIP_EXT	glew.h	/^#define GL_OP_RECIP_EXT /;"	d
GL_OP_RECIP_SQRT_EXT	glew.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	d
GL_OP_ROUND_EXT	glew.h	/^#define GL_OP_ROUND_EXT /;"	d
GL_OP_SET_GE_EXT	glew.h	/^#define GL_OP_SET_GE_EXT /;"	d
GL_OP_SET_LT_EXT	glew.h	/^#define GL_OP_SET_LT_EXT /;"	d
GL_OP_SUB_EXT	glew.h	/^#define GL_OP_SUB_EXT /;"	d
GL_OR	glew.h	/^#define GL_OR /;"	d
GL_ORDER	glew.h	/^#define GL_ORDER /;"	d
GL_OR_INVERTED	glew.h	/^#define GL_OR_INVERTED /;"	d
GL_OR_REVERSE	glew.h	/^#define GL_OR_REVERSE /;"	d
GL_OUTPUT_COLOR0_EXT	glew.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	d
GL_OUTPUT_COLOR1_EXT	glew.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	d
GL_OUTPUT_FOG_EXT	glew.h	/^#define GL_OUTPUT_FOG_EXT /;"	d
GL_OUTPUT_POINT_SIZE_ATIX	glew.h	/^#define GL_OUTPUT_POINT_SIZE_ATIX /;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	glew.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	d
GL_OUTPUT_VERTEX_EXT	glew.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	d
GL_OUT_OF_MEMORY	glew.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_OVERLAY_KHR	glew.h	/^#define GL_OVERLAY_KHR /;"	d
GL_OVERLAY_NV	glew.h	/^#define GL_OVERLAY_NV /;"	d
GL_PACK_ALIGNMENT	glew.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_CMYK_HINT_EXT	glew.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_HEIGHT	glew.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT_EXT	glew.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	d
GL_PACK_INVERT_MESA	glew.h	/^#define GL_PACK_INVERT_MESA /;"	d
GL_PACK_LSB_FIRST	glew.h	/^#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_RESAMPLE_OML	glew.h	/^#define GL_PACK_RESAMPLE_OML /;"	d
GL_PACK_RESAMPLE_SGIX	glew.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	d
GL_PACK_REVERSE_ROW_ORDER_ANGLE	glew.h	/^#define GL_PACK_REVERSE_ROW_ORDER_ANGLE /;"	d
GL_PACK_ROW_BYTES_APPLE	glew.h	/^#define GL_PACK_ROW_BYTES_APPLE /;"	d
GL_PACK_ROW_LENGTH	glew.h	/^#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_SKIP_IMAGES	glew.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES_EXT	glew.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	d
GL_PACK_SKIP_PIXELS	glew.h	/^#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_ROWS	glew.h	/^#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SWAP_BYTES	glew.h	/^#define GL_PACK_SWAP_BYTES /;"	d
GL_PALETTE4_R5_G6_B5_OES	glew.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	d
GL_PALETTE4_RGB5_A1_OES	glew.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	d
GL_PALETTE4_RGB8_OES	glew.h	/^#define GL_PALETTE4_RGB8_OES /;"	d
GL_PALETTE4_RGBA4_OES	glew.h	/^#define GL_PALETTE4_RGBA4_OES /;"	d
GL_PALETTE4_RGBA8_OES	glew.h	/^#define GL_PALETTE4_RGBA8_OES /;"	d
GL_PALETTE8_R5_G6_B5_OES	glew.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	d
GL_PALETTE8_RGB5_A1_OES	glew.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	d
GL_PALETTE8_RGB8_OES	glew.h	/^#define GL_PALETTE8_RGB8_OES /;"	d
GL_PALETTE8_RGBA4_OES	glew.h	/^#define GL_PALETTE8_RGBA4_OES /;"	d
GL_PALETTE8_RGBA8_OES	glew.h	/^#define GL_PALETTE8_RGBA8_OES /;"	d
GL_PARALLEL_ARRAYS_INTEL	glew.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	d
GL_PARAMETER_BUFFER_ARB	glew.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	glew.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PARTIAL_SUCCESS_NV	glew.h	/^#define GL_PARTIAL_SUCCESS_NV /;"	d
GL_PASS_THROUGH_NV	glew.h	/^#define GL_PASS_THROUGH_NV /;"	d
GL_PASS_THROUGH_TOKEN	glew.h	/^#define GL_PASS_THROUGH_TOKEN /;"	d
GL_PATCHES	glew.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	glew.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	glew.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	glew.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATH_CLIENT_LENGTH_NV	glew.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	d
GL_PATH_COMMAND_COUNT_NV	glew.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	d
GL_PATH_COMPUTED_LENGTH_NV	glew.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	d
GL_PATH_COORD_COUNT_NV	glew.h	/^#define GL_PATH_COORD_COUNT_NV /;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	glew.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	glew.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	d
GL_PATH_DASH_CAPS_NV	glew.h	/^#define GL_PATH_DASH_CAPS_NV /;"	d
GL_PATH_DASH_OFFSET_NV	glew.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	d
GL_PATH_DASH_OFFSET_RESET_NV	glew.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	d
GL_PATH_END_CAPS_NV	glew.h	/^#define GL_PATH_END_CAPS_NV /;"	d
GL_PATH_ERROR_POSITION_NV	glew.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	glew.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	d
GL_PATH_FILL_COVER_MODE_NV	glew.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	d
GL_PATH_FILL_MASK_NV	glew.h	/^#define GL_PATH_FILL_MASK_NV /;"	d
GL_PATH_FILL_MODE_NV	glew.h	/^#define GL_PATH_FILL_MODE_NV /;"	d
GL_PATH_FOG_GEN_MODE_NV	glew.h	/^#define GL_PATH_FOG_GEN_MODE_NV /;"	d
GL_PATH_FORMAT_PS_NV	glew.h	/^#define GL_PATH_FORMAT_PS_NV /;"	d
GL_PATH_FORMAT_SVG_NV	glew.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	d
GL_PATH_GEN_COEFF_NV	glew.h	/^#define GL_PATH_GEN_COEFF_NV /;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	glew.h	/^#define GL_PATH_GEN_COLOR_FORMAT_NV /;"	d
GL_PATH_GEN_COMPONENTS_NV	glew.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	d
GL_PATH_GEN_MODE_NV	glew.h	/^#define GL_PATH_GEN_MODE_NV /;"	d
GL_PATH_INITIAL_DASH_CAP_NV	glew.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	d
GL_PATH_INITIAL_END_CAP_NV	glew.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	d
GL_PATH_JOIN_STYLE_NV	glew.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	d
GL_PATH_MITER_LIMIT_NV	glew.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	glew.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	glew.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	glew.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	d
GL_PATH_STENCIL_FUNC_NV	glew.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	d
GL_PATH_STENCIL_REF_NV	glew.h	/^#define GL_PATH_STENCIL_REF_NV /;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	glew.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	glew.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	d
GL_PATH_STROKE_COVER_MODE_NV	glew.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	d
GL_PATH_STROKE_MASK_NV	glew.h	/^#define GL_PATH_STROKE_MASK_NV /;"	d
GL_PATH_STROKE_WIDTH_NV	glew.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	glew.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	d
GL_PATH_TERMINAL_END_CAP_NV	glew.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	d
GL_PERCENTAGE_AMD	glew.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERFMON_RESULT_AMD	glew.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	glew.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	glew.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFORMANCE_MONITOR_AMD	glew.h	/^#define GL_PERFORMANCE_MONITOR_AMD /;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	glew.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	glew.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	d
GL_PERFQUERY_FLUSH_INTEL	glew.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	glew.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	glew.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	glew.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	glew.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	d
GL_PERFQUERY_WAIT_INTEL	glew.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	d
GL_PERSPECTIVE_CORRECTION_HINT	glew.h	/^#define GL_PERSPECTIVE_CORRECTION_HINT /;"	d
GL_PERTURB_EXT	glew.h	/^#define GL_PERTURB_EXT /;"	d
GL_PER_STAGE_CONSTANTS_NV	glew.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	d
GL_PGI_misc_hints	glew.h	/^#define GL_PGI_misc_hints /;"	d
GL_PGI_vertex_hints	glew.h	/^#define GL_PGI_vertex_hints /;"	d
GL_PHONG_HINT_WIN	glew.h	/^#define GL_PHONG_HINT_WIN /;"	d
GL_PHONG_WIN	glew.h	/^#define GL_PHONG_WIN /;"	d
GL_PINLIGHT_NV	glew.h	/^#define GL_PINLIGHT_NV /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	glew.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	glew.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT /;"	d
GL_PIXEL_COUNTER_BITS_NV	glew.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	glew.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	d
GL_PIXEL_COUNT_NV	glew.h	/^#define GL_PIXEL_COUNT_NV /;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	glew.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	d
GL_PIXEL_MAG_FILTER_EXT	glew.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	d
GL_PIXEL_MAP_A_TO_A	glew.h	/^#define GL_PIXEL_MAP_A_TO_A /;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	glew.h	/^#define GL_PIXEL_MAP_A_TO_A_SIZE /;"	d
GL_PIXEL_MAP_B_TO_B	glew.h	/^#define GL_PIXEL_MAP_B_TO_B /;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	glew.h	/^#define GL_PIXEL_MAP_B_TO_B_SIZE /;"	d
GL_PIXEL_MAP_G_TO_G	glew.h	/^#define GL_PIXEL_MAP_G_TO_G /;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	glew.h	/^#define GL_PIXEL_MAP_G_TO_G_SIZE /;"	d
GL_PIXEL_MAP_I_TO_A	glew.h	/^#define GL_PIXEL_MAP_I_TO_A /;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	glew.h	/^#define GL_PIXEL_MAP_I_TO_A_SIZE /;"	d
GL_PIXEL_MAP_I_TO_B	glew.h	/^#define GL_PIXEL_MAP_I_TO_B /;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	glew.h	/^#define GL_PIXEL_MAP_I_TO_B_SIZE /;"	d
GL_PIXEL_MAP_I_TO_G	glew.h	/^#define GL_PIXEL_MAP_I_TO_G /;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	glew.h	/^#define GL_PIXEL_MAP_I_TO_G_SIZE /;"	d
GL_PIXEL_MAP_I_TO_I	glew.h	/^#define GL_PIXEL_MAP_I_TO_I /;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	glew.h	/^#define GL_PIXEL_MAP_I_TO_I_SIZE /;"	d
GL_PIXEL_MAP_I_TO_R	glew.h	/^#define GL_PIXEL_MAP_I_TO_R /;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	glew.h	/^#define GL_PIXEL_MAP_I_TO_R_SIZE /;"	d
GL_PIXEL_MAP_R_TO_R	glew.h	/^#define GL_PIXEL_MAP_R_TO_R /;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	glew.h	/^#define GL_PIXEL_MAP_R_TO_R_SIZE /;"	d
GL_PIXEL_MAP_S_TO_S	glew.h	/^#define GL_PIXEL_MAP_S_TO_S /;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	glew.h	/^#define GL_PIXEL_MAP_S_TO_S_SIZE /;"	d
GL_PIXEL_MIN_FILTER_EXT	glew.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	d
GL_PIXEL_MODE_BIT	glew.h	/^#define GL_PIXEL_MODE_BIT /;"	d
GL_PIXEL_PACK_BUFFER	glew.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_ARB	glew.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	glew.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	glew.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	glew.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_PACK_BUFFER_EXT	glew.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_EXT	glew.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	glew.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	glew.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER	glew.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	d
GL_PLUS_CLAMPED_ALPHA_NV	glew.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	d
GL_PLUS_CLAMPED_NV	glew.h	/^#define GL_PLUS_CLAMPED_NV /;"	d
GL_PLUS_DARKER_NV	glew.h	/^#define GL_PLUS_DARKER_NV /;"	d
GL_PLUS_NV	glew.h	/^#define GL_PLUS_NV /;"	d
GL_PN_TRIANGLES_ATI	glew.h	/^#define GL_PN_TRIANGLES_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	glew.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	glew.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	glew.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	glew.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	glew.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	glew.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	glew.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_POINT	glew.h	/^#define GL_POINT /;"	d
GL_POINTS	glew.h	/^#define GL_POINTS /;"	d
GL_POINT_BIT	glew.h	/^#define GL_POINT_BIT /;"	d
GL_POINT_DISTANCE_ATTENUATION	glew.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	glew.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	glew.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	glew.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	glew.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	d
GL_POINT_SIZE	glew.h	/^#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE_GRANULARITY	glew.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_MAX	glew.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MAX_ARB	glew.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	d
GL_POINT_SIZE_MAX_EXT	glew.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	d
GL_POINT_SIZE_MIN	glew.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_MIN_ARB	glew.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	d
GL_POINT_SIZE_MIN_EXT	glew.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	d
GL_POINT_SIZE_RANGE	glew.h	/^#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SMOOTH	glew.h	/^#define GL_POINT_SMOOTH /;"	d
GL_POINT_SMOOTH_HINT	glew.h	/^#define GL_POINT_SMOOTH_HINT /;"	d
GL_POINT_SPRITE	glew.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_ARB	glew.h	/^#define GL_POINT_SPRITE_ARB /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	glew.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_CULL_CENTER_ATIX	glew.h	/^#define GL_POINT_SPRITE_CULL_CENTER_ATIX /;"	d
GL_POINT_SPRITE_CULL_CLIP_ATIX	glew.h	/^#define GL_POINT_SPRITE_CULL_CLIP_ATIX /;"	d
GL_POINT_SPRITE_CULL_MODE_ATIX	glew.h	/^#define GL_POINT_SPRITE_CULL_MODE_ATIX /;"	d
GL_POINT_SPRITE_NV	glew.h	/^#define GL_POINT_SPRITE_NV /;"	d
GL_POINT_SPRITE_R_MODE_NV	glew.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	d
GL_POINT_TOKEN	glew.h	/^#define GL_POINT_TOKEN /;"	d
GL_POLYGON	glew.h	/^#define GL_POLYGON /;"	d
GL_POLYGON_BIT	glew.h	/^#define GL_POLYGON_BIT /;"	d
GL_POLYGON_MODE	glew.h	/^#define GL_POLYGON_MODE /;"	d
GL_POLYGON_OFFSET_BIAS_EXT	glew.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	d
GL_POLYGON_OFFSET_EXT	glew.h	/^#define GL_POLYGON_OFFSET_EXT /;"	d
GL_POLYGON_OFFSET_FACTOR	glew.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	glew.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	d
GL_POLYGON_OFFSET_FILL	glew.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	glew.h	/^#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_POINT	glew.h	/^#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_UNITS	glew.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	glew.h	/^#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH_HINT	glew.h	/^#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_POLYGON_STIPPLE	glew.h	/^#define GL_POLYGON_STIPPLE /;"	d
GL_POLYGON_STIPPLE_BIT	glew.h	/^#define GL_POLYGON_STIPPLE_BIT /;"	d
GL_POLYGON_TOKEN	glew.h	/^#define GL_POLYGON_TOKEN /;"	d
GL_POSITION	glew.h	/^#define GL_POSITION /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	glew.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	glew.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	glew.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	glew.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	glew.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	glew.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	glew.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	glew.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	glew.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	glew.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	glew.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	glew.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	glew.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	glew.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_RED_BIAS	glew.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	glew.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_RED_SCALE	glew.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	glew.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	glew.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	glew.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	glew.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	glew.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	glew.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	d
GL_PRESENT_DURATION_NV	glew.h	/^#define GL_PRESENT_DURATION_NV /;"	d
GL_PRESENT_TIME_NV	glew.h	/^#define GL_PRESENT_TIME_NV /;"	d
GL_PRESERVE_ATI	glew.h	/^#define GL_PRESERVE_ATI /;"	d
GL_PREVIOUS	glew.h	/^#define GL_PREVIOUS /;"	d
GL_PREVIOUS_ARB	glew.h	/^#define GL_PREVIOUS_ARB /;"	d
GL_PREVIOUS_EXT	glew.h	/^#define GL_PREVIOUS_EXT /;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	glew.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	d
GL_PRIMARY_COLOR	glew.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMARY_COLOR_ARB	glew.h	/^#define GL_PRIMARY_COLOR_ARB /;"	d
GL_PRIMARY_COLOR_EXT	glew.h	/^#define GL_PRIMARY_COLOR_EXT /;"	d
GL_PRIMARY_COLOR_NV	glew.h	/^#define GL_PRIMARY_COLOR_NV /;"	d
GL_PRIMITIVES_GENERATED	glew.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_GENERATED_EXT	glew.h	/^#define GL_PRIMITIVES_GENERATED_EXT /;"	d
GL_PRIMITIVES_GENERATED_NV	glew.h	/^#define GL_PRIMITIVES_GENERATED_NV /;"	d
GL_PRIMITIVES_SUBMITTED_ARB	glew.h	/^#define GL_PRIMITIVES_SUBMITTED_ARB /;"	d
GL_PRIMITIVE_ID_NV	glew.h	/^#define GL_PRIMITIVE_ID_NV /;"	d
GL_PRIMITIVE_RESTART	glew.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	glew.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	glew.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_INDEX	glew.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	glew.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	d
GL_PRIMITIVE_RESTART_NV	glew.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	d
GL_PROGRAM	glew.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	glew.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	glew.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_ATTRIBS_ARB	glew.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	glew.h	/^#define GL_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_PROGRAM_BINARY_ANGLE	glew.h	/^#define GL_PROGRAM_BINARY_ANGLE /;"	d
GL_PROGRAM_BINARY_FORMATS	glew.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_LENGTH	glew.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	glew.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_BINDING_ARB	glew.h	/^#define GL_PROGRAM_BINDING_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_ARB	glew.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_NV	glew.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	d
GL_PROGRAM_ERROR_STRING_ARB	glew.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	d
GL_PROGRAM_ERROR_STRING_NV	glew.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	d
GL_PROGRAM_FORMAT_ARB	glew.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	glew.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	d
GL_PROGRAM_INPUT	glew.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	glew.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_LENGTH_ARB	glew.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	d
GL_PROGRAM_LENGTH_NV	glew.h	/^#define GL_PROGRAM_LENGTH_NV /;"	d
GL_PROGRAM_MATRIX_EXT	glew.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	glew.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	glew.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_OBJECT_ARB	glew.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	d
GL_PROGRAM_OBJECT_EXT	glew.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OUTPUT	glew.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PARAMETERS_ARB	glew.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	d
GL_PROGRAM_PARAMETER_NV	glew.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	d
GL_PROGRAM_PIPELINE	glew.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	glew.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	glew.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_POINT_SIZE	glew.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE_ARB	glew.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	d
GL_PROGRAM_POINT_SIZE_EXT	glew.h	/^#define GL_PROGRAM_POINT_SIZE_EXT /;"	d
GL_PROGRAM_RESIDENT_NV	glew.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	glew.h	/^#define GL_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_PROGRAM_SEPARABLE	glew.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROGRAM_STRING_ARB	glew.h	/^#define GL_PROGRAM_STRING_ARB /;"	d
GL_PROGRAM_STRING_NV	glew.h	/^#define GL_PROGRAM_STRING_NV /;"	d
GL_PROGRAM_TARGET_NV	glew.h	/^#define GL_PROGRAM_TARGET_NV /;"	d
GL_PROGRAM_TEMPORARIES_ARB	glew.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	glew.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	glew.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	glew.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	d
GL_PROJECTION	glew.h	/^#define GL_PROJECTION /;"	d
GL_PROJECTION_MATRIX	glew.h	/^#define GL_PROJECTION_MATRIX /;"	d
GL_PROJECTION_STACK_DEPTH	glew.h	/^#define GL_PROJECTION_STACK_DEPTH /;"	d
GL_PROVOKING_VERTEX	glew.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROVOKING_VERTEX_EXT	glew.h	/^#define GL_PROVOKING_VERTEX_EXT /;"	d
GL_PROXY_COLOR_TABLE	glew.h	/^#define GL_PROXY_COLOR_TABLE /;"	d
GL_PROXY_COLOR_TABLE_SGI	glew.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	d
GL_PROXY_HISTOGRAM	glew.h	/^#define GL_PROXY_HISTOGRAM /;"	d
GL_PROXY_HISTOGRAM_EXT	glew.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	glew.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	glew.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	glew.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	glew.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_1D	glew.h	/^#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	glew.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	glew.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_1D_EXT	glew.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	glew.h	/^#define GL_PROXY_TEXTURE_1D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_2D	glew.h	/^#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	glew.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	glew.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_2D_EXT	glew.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	glew.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	glew.h	/^#define GL_PROXY_TEXTURE_2D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_3D	glew.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D_EXT	glew.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	glew.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE	glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE_EXT	glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	d
GL_PURGEABLE_APPLE	glew.h	/^#define GL_PURGEABLE_APPLE /;"	d
GL_Q	glew.h	/^#define GL_Q /;"	d
GL_QUADRATIC_ATTENUATION	glew.h	/^#define GL_QUADRATIC_ATTENUATION /;"	d
GL_QUADRATIC_CURVE_TO_NV	glew.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	d
GL_QUADS	glew.h	/^#define GL_QUADS /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	glew.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	glew.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT /;"	d
GL_QUAD_MESH_SUN	glew.h	/^#define GL_QUAD_MESH_SUN /;"	d
GL_QUAD_STRIP	glew.h	/^#define GL_QUAD_STRIP /;"	d
GL_QUARTER_BIT_ATI	glew.h	/^#define GL_QUARTER_BIT_ATI /;"	d
GL_QUERY	glew.h	/^#define GL_QUERY /;"	d
GL_QUERY_ALL_EVENT_BITS_AMD	glew.h	/^#define GL_QUERY_ALL_EVENT_BITS_AMD /;"	d
GL_QUERY_BUFFER	glew.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_AMD	glew.h	/^#define GL_QUERY_BUFFER_AMD /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	glew.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	glew.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BUFFER_BINDING_AMD	glew.h	/^#define GL_QUERY_BUFFER_BINDING_AMD /;"	d
GL_QUERY_BY_REGION_NO_WAIT	glew.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	glew.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	glew.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	d
GL_QUERY_BY_REGION_WAIT	glew.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	glew.h	/^#define GL_QUERY_BY_REGION_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_WAIT_NV	glew.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	d
GL_QUERY_COUNTER_BITS	glew.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS_ANGLE	glew.h	/^#define GL_QUERY_COUNTER_BITS_ANGLE /;"	d
GL_QUERY_COUNTER_BITS_ARB	glew.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	glew.h	/^#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	glew.h	/^#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	glew.h	/^#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD /;"	d
GL_QUERY_NO_WAIT	glew.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_INVERTED	glew.h	/^#define GL_QUERY_NO_WAIT_INVERTED /;"	d
GL_QUERY_NO_WAIT_NV	glew.h	/^#define GL_QUERY_NO_WAIT_NV /;"	d
GL_QUERY_OBJECT_AMD	glew.h	/^#define GL_QUERY_OBJECT_AMD /;"	d
GL_QUERY_OBJECT_EXT	glew.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_RESULT	glew.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_ANGLE	glew.h	/^#define GL_QUERY_RESULT_ANGLE /;"	d
GL_QUERY_RESULT_ARB	glew.h	/^#define GL_QUERY_RESULT_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE	glew.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ANGLE	glew.h	/^#define GL_QUERY_RESULT_AVAILABLE_ANGLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	glew.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE_NV	glew.h	/^#define GL_QUERY_RESULT_AVAILABLE_NV /;"	d
GL_QUERY_RESULT_NO_WAIT	glew.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	glew.h	/^#define GL_QUERY_RESULT_NO_WAIT_AMD /;"	d
GL_QUERY_RESULT_NV	glew.h	/^#define GL_QUERY_RESULT_NV /;"	d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	glew.h	/^#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_TARGET	glew.h	/^#define GL_QUERY_TARGET /;"	d
GL_QUERY_WAIT	glew.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_INVERTED	glew.h	/^#define GL_QUERY_WAIT_INVERTED /;"	d
GL_QUERY_WAIT_NV	glew.h	/^#define GL_QUERY_WAIT_NV /;"	d
GL_R	glew.h	/^#define GL_R /;"	d
GL_R11F_G11F_B10F	glew.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R11F_G11F_B10F_EXT	glew.h	/^#define GL_R11F_G11F_B10F_EXT /;"	d
GL_R16	glew.h	/^#define GL_R16 /;"	d
GL_R16F	glew.h	/^#define GL_R16F /;"	d
GL_R16I	glew.h	/^#define GL_R16I /;"	d
GL_R16UI	glew.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	glew.h	/^#define GL_R16_SNORM /;"	d
GL_R1UI_C3F_V3F_SUN	glew.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	d
GL_R1UI_C4F_N3F_V3F_SUN	glew.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_C4UB_V3F_SUN	glew.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	d
GL_R1UI_N3F_V3F_SUN	glew.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	glew.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_N3F_V3F_SUN	glew.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_V3F_SUN	glew.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	d
GL_R1UI_V3F_SUN	glew.h	/^#define GL_R1UI_V3F_SUN /;"	d
GL_R32F	glew.h	/^#define GL_R32F /;"	d
GL_R32I	glew.h	/^#define GL_R32I /;"	d
GL_R32UI	glew.h	/^#define GL_R32UI /;"	d
GL_R3_G3_B2	glew.h	/^#define GL_R3_G3_B2 /;"	d
GL_R8	glew.h	/^#define GL_R8 /;"	d
GL_R8I	glew.h	/^#define GL_R8I /;"	d
GL_R8UI	glew.h	/^#define GL_R8UI /;"	d
GL_R8_SNORM	glew.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	glew.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTERIZER_DISCARD_EXT	glew.h	/^#define GL_RASTERIZER_DISCARD_EXT /;"	d
GL_RASTERIZER_DISCARD_NV	glew.h	/^#define GL_RASTERIZER_DISCARD_NV /;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	glew.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	d
GL_READ_BUFFER	glew.h	/^#define GL_READ_BUFFER /;"	d
GL_READ_FRAMEBUFFER	glew.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_ANGLE	glew.h	/^#define GL_READ_FRAMEBUFFER_ANGLE /;"	d
GL_READ_FRAMEBUFFER_BINDING	glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_FRAMEBUFFER_BINDING_ANGLE	glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING_ANGLE /;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING_EXT /;"	d
GL_READ_FRAMEBUFFER_EXT	glew.h	/^#define GL_READ_FRAMEBUFFER_EXT /;"	d
GL_READ_ONLY	glew.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY_ARB	glew.h	/^#define GL_READ_ONLY_ARB /;"	d
GL_READ_PIXELS	glew.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	glew.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	glew.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	glew.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_NV	glew.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	glew.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_READ_WRITE	glew.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE_ARB	glew.h	/^#define GL_READ_WRITE_ARB /;"	d
GL_RECLAIM_MEMORY_HINT_PGI	glew.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	d
GL_RECT_NV	glew.h	/^#define GL_RECT_NV /;"	d
GL_RED	glew.h	/^#define GL_RED /;"	d
GL_REDUCE	glew.h	/^#define GL_REDUCE /;"	d
GL_REDUCE_EXT	glew.h	/^#define GL_REDUCE_EXT /;"	d
GL_RED_BIAS	glew.h	/^#define GL_RED_BIAS /;"	d
GL_RED_BITS	glew.h	/^#define GL_RED_BITS /;"	d
GL_RED_BIT_ATI	glew.h	/^#define GL_RED_BIT_ATI /;"	d
GL_RED_INTEGER	glew.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_INTEGER_EXT	glew.h	/^#define GL_RED_INTEGER_EXT /;"	d
GL_RED_MAX_CLAMP_INGR	glew.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	d
GL_RED_MIN_CLAMP_INGR	glew.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	d
GL_RED_NV	glew.h	/^#define GL_RED_NV /;"	d
GL_RED_SCALE	glew.h	/^#define GL_RED_SCALE /;"	d
GL_RED_SNORM	glew.h	/^#define GL_RED_SNORM /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	glew.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	glew.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	glew.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	glew.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	glew.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	glew.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_REFLECTION_MAP	glew.h	/^#define GL_REFLECTION_MAP /;"	d
GL_REFLECTION_MAP_ARB	glew.h	/^#define GL_REFLECTION_MAP_ARB /;"	d
GL_REFLECTION_MAP_EXT	glew.h	/^#define GL_REFLECTION_MAP_EXT /;"	d
GL_REFLECTION_MAP_NV	glew.h	/^#define GL_REFLECTION_MAP_NV /;"	d
GL_REGAL_ES1_0_compatibility	glew.h	/^#define GL_REGAL_ES1_0_compatibility /;"	d
GL_REGAL_ES1_1_compatibility	glew.h	/^#define GL_REGAL_ES1_1_compatibility /;"	d
GL_REGAL_enable	glew.h	/^#define GL_REGAL_enable /;"	d
GL_REGAL_error_string	glew.h	/^#define GL_REGAL_error_string /;"	d
GL_REGAL_extension_query	glew.h	/^#define GL_REGAL_extension_query /;"	d
GL_REGAL_log	glew.h	/^#define GL_REGAL_log /;"	d
GL_REGAL_proc_address	glew.h	/^#define GL_REGAL_proc_address /;"	d
GL_REGISTER_COMBINERS_NV	glew.h	/^#define GL_REGISTER_COMBINERS_NV /;"	d
GL_REG_0_ATI	glew.h	/^#define GL_REG_0_ATI /;"	d
GL_REG_1_ATI	glew.h	/^#define GL_REG_1_ATI /;"	d
GL_REG_2_ATI	glew.h	/^#define GL_REG_2_ATI /;"	d
GL_REG_3_ATI	glew.h	/^#define GL_REG_3_ATI /;"	d
GL_REG_4_ATI	glew.h	/^#define GL_REG_4_ATI /;"	d
GL_REG_5_ATI	glew.h	/^#define GL_REG_5_ATI /;"	d
GL_RELATIVE_ARC_TO_NV	glew.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	glew.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	glew.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	glew.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	glew.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	d
GL_RELATIVE_LINE_TO_NV	glew.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	d
GL_RELATIVE_MOVE_TO_NV	glew.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	glew.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	glew.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	glew.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	glew.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	glew.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	glew.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	d
GL_RELEASED_APPLE	glew.h	/^#define GL_RELEASED_APPLE /;"	d
GL_RENDER	glew.h	/^#define GL_RENDER /;"	d
GL_RENDERBUFFER	glew.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	glew.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	glew.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	d
GL_RENDERBUFFER_BINDING	glew.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING_EXT	glew.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	d
GL_RENDERBUFFER_BLUE_SIZE	glew.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	glew.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	glew.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	glew.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	glew.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	glew.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	d
GL_RENDERBUFFER_EXT	glew.h	/^#define GL_RENDERBUFFER_EXT /;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	glew.h	/^#define GL_RENDERBUFFER_FREE_MEMORY_ATI /;"	d
GL_RENDERBUFFER_GREEN_SIZE	glew.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	glew.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	d
GL_RENDERBUFFER_HEIGHT	glew.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT_EXT	glew.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	glew.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	glew.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	d
GL_RENDERBUFFER_RED_SIZE	glew.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	glew.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	d
GL_RENDERBUFFER_SAMPLES	glew.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_SAMPLES_ANGLE	glew.h	/^#define GL_RENDERBUFFER_SAMPLES_ANGLE /;"	d
GL_RENDERBUFFER_SAMPLES_EXT	glew.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	glew.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	glew.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	d
GL_RENDERBUFFER_WIDTH	glew.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH_EXT	glew.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	d
GL_RENDERER	glew.h	/^#define GL_RENDERER /;"	d
GL_RENDER_MODE	glew.h	/^#define GL_RENDER_MODE /;"	d
GL_REND_screen_coordinates	glew.h	/^#define GL_REND_screen_coordinates /;"	d
GL_REPEAT	glew.h	/^#define GL_REPEAT /;"	d
GL_REPLACE	glew.h	/^#define GL_REPLACE /;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	d
GL_REPLACEMENT_CODE_SUN	glew.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	d
GL_REPLACE_EXT	glew.h	/^#define GL_REPLACE_EXT /;"	d
GL_REPLACE_MIDDLE_SUN	glew.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	d
GL_REPLACE_OLDEST_SUN	glew.h	/^#define GL_REPLACE_OLDEST_SUN /;"	d
GL_REPLACE_VALUE_AMD	glew.h	/^#define GL_REPLACE_VALUE_AMD /;"	d
GL_REPLICATE_BORDER	glew.h	/^#define GL_REPLICATE_BORDER /;"	d
GL_RESAMPLE_AVERAGE_OML	glew.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	d
GL_RESAMPLE_DECIMATE_OML	glew.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	d
GL_RESAMPLE_DECIMATE_SGIX	glew.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	d
GL_RESAMPLE_REPLICATE_OML	glew.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	d
GL_RESAMPLE_REPLICATE_SGIX	glew.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	d
GL_RESAMPLE_ZERO_FILL_OML	glew.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	glew.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	d
GL_RESCALE_NORMAL	glew.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESCALE_NORMAL_EXT	glew.h	/^#define GL_RESCALE_NORMAL_EXT /;"	d
GL_RESET_NOTIFICATION_STRATEGY	glew.h	/^#define GL_RESET_NOTIFICATION_STRATEGY /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	glew.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESTART_PATH_NV	glew.h	/^#define GL_RESTART_PATH_NV /;"	d
GL_RESTART_SUN	glew.h	/^#define GL_RESTART_SUN /;"	d
GL_RETAINED_APPLE	glew.h	/^#define GL_RETAINED_APPLE /;"	d
GL_RETURN	glew.h	/^#define GL_RETURN /;"	d
GL_RG	glew.h	/^#define GL_RG /;"	d
GL_RG16	glew.h	/^#define GL_RG16 /;"	d
GL_RG16F	glew.h	/^#define GL_RG16F /;"	d
GL_RG16I	glew.h	/^#define GL_RG16I /;"	d
GL_RG16UI	glew.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	glew.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	glew.h	/^#define GL_RG32F /;"	d
GL_RG32I	glew.h	/^#define GL_RG32I /;"	d
GL_RG32UI	glew.h	/^#define GL_RG32UI /;"	d
GL_RG8	glew.h	/^#define GL_RG8 /;"	d
GL_RG8I	glew.h	/^#define GL_RG8I /;"	d
GL_RG8UI	glew.h	/^#define GL_RG8UI /;"	d
GL_RG8_SNORM	glew.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB	glew.h	/^#define GL_RGB /;"	d
GL_RGB10	glew.h	/^#define GL_RGB10 /;"	d
GL_RGB10_A2	glew.h	/^#define GL_RGB10_A2 /;"	d
GL_RGB10_A2UI	glew.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2_EXT	glew.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	glew.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12	glew.h	/^#define GL_RGB12 /;"	d
GL_RGB12_EXT	glew.h	/^#define GL_RGB12_EXT /;"	d
GL_RGB16	glew.h	/^#define GL_RGB16 /;"	d
GL_RGB16F	glew.h	/^#define GL_RGB16F /;"	d
GL_RGB16F_ARB	glew.h	/^#define GL_RGB16F_ARB /;"	d
GL_RGB16I	glew.h	/^#define GL_RGB16I /;"	d
GL_RGB16I_EXT	glew.h	/^#define GL_RGB16I_EXT /;"	d
GL_RGB16UI	glew.h	/^#define GL_RGB16UI /;"	d
GL_RGB16UI_EXT	glew.h	/^#define GL_RGB16UI_EXT /;"	d
GL_RGB16_EXT	glew.h	/^#define GL_RGB16_EXT /;"	d
GL_RGB16_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_RGB16_EXTENDED_RANGE_SGIX /;"	d
GL_RGB16_SIGNED_SGIX	glew.h	/^#define GL_RGB16_SIGNED_SGIX /;"	d
GL_RGB16_SNORM	glew.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB2_EXT	glew.h	/^#define GL_RGB2_EXT /;"	d
GL_RGB32F	glew.h	/^#define GL_RGB32F /;"	d
GL_RGB32F_ARB	glew.h	/^#define GL_RGB32F_ARB /;"	d
GL_RGB32I	glew.h	/^#define GL_RGB32I /;"	d
GL_RGB32I_EXT	glew.h	/^#define GL_RGB32I_EXT /;"	d
GL_RGB32UI	glew.h	/^#define GL_RGB32UI /;"	d
GL_RGB32UI_EXT	glew.h	/^#define GL_RGB32UI_EXT /;"	d
GL_RGB4	glew.h	/^#define GL_RGB4 /;"	d
GL_RGB4_EXT	glew.h	/^#define GL_RGB4_EXT /;"	d
GL_RGB4_S3TC	glew.h	/^#define GL_RGB4_S3TC /;"	d
GL_RGB5	glew.h	/^#define GL_RGB5 /;"	d
GL_RGB565	glew.h	/^#define GL_RGB565 /;"	d
GL_RGB5_A1	glew.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB5_A1_EXT	glew.h	/^#define GL_RGB5_A1_EXT /;"	d
GL_RGB5_EXT	glew.h	/^#define GL_RGB5_EXT /;"	d
GL_RGB8	glew.h	/^#define GL_RGB8 /;"	d
GL_RGB8I	glew.h	/^#define GL_RGB8I /;"	d
GL_RGB8I_EXT	glew.h	/^#define GL_RGB8I_EXT /;"	d
GL_RGB8UI	glew.h	/^#define GL_RGB8UI /;"	d
GL_RGB8UI_EXT	glew.h	/^#define GL_RGB8UI_EXT /;"	d
GL_RGB8_EXT	glew.h	/^#define GL_RGB8_EXT /;"	d
GL_RGB8_SNORM	glew.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	glew.h	/^#define GL_RGB9_E5 /;"	d
GL_RGB9_E5_EXT	glew.h	/^#define GL_RGB9_E5_EXT /;"	d
GL_RGBA	glew.h	/^#define GL_RGBA /;"	d
GL_RGBA12	glew.h	/^#define GL_RGBA12 /;"	d
GL_RGBA12_EXT	glew.h	/^#define GL_RGBA12_EXT /;"	d
GL_RGBA16	glew.h	/^#define GL_RGBA16 /;"	d
GL_RGBA16F	glew.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F_ARB	glew.h	/^#define GL_RGBA16F_ARB /;"	d
GL_RGBA16I	glew.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16I_EXT	glew.h	/^#define GL_RGBA16I_EXT /;"	d
GL_RGBA16UI	glew.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16UI_EXT	glew.h	/^#define GL_RGBA16UI_EXT /;"	d
GL_RGBA16_EXT	glew.h	/^#define GL_RGBA16_EXT /;"	d
GL_RGBA16_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_RGBA16_EXTENDED_RANGE_SGIX /;"	d
GL_RGBA16_SIGNED_SGIX	glew.h	/^#define GL_RGBA16_SIGNED_SGIX /;"	d
GL_RGBA16_SNORM	glew.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2	glew.h	/^#define GL_RGBA2 /;"	d
GL_RGBA2_EXT	glew.h	/^#define GL_RGBA2_EXT /;"	d
GL_RGBA32F	glew.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F_ARB	glew.h	/^#define GL_RGBA32F_ARB /;"	d
GL_RGBA32I	glew.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32I_EXT	glew.h	/^#define GL_RGBA32I_EXT /;"	d
GL_RGBA32UI	glew.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA32UI_EXT	glew.h	/^#define GL_RGBA32UI_EXT /;"	d
GL_RGBA4	glew.h	/^#define GL_RGBA4 /;"	d
GL_RGBA4_DXT5_S3TC	glew.h	/^#define GL_RGBA4_DXT5_S3TC /;"	d
GL_RGBA4_EXT	glew.h	/^#define GL_RGBA4_EXT /;"	d
GL_RGBA4_S3TC	glew.h	/^#define GL_RGBA4_S3TC /;"	d
GL_RGBA8	glew.h	/^#define GL_RGBA8 /;"	d
GL_RGBA8I	glew.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8I_EXT	glew.h	/^#define GL_RGBA8I_EXT /;"	d
GL_RGBA8UI	glew.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8UI_EXT	glew.h	/^#define GL_RGBA8UI_EXT /;"	d
GL_RGBA8_EXT	glew.h	/^#define GL_RGBA8_EXT /;"	d
GL_RGBA8_SNORM	glew.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_DXT5_S3TC	glew.h	/^#define GL_RGBA_DXT5_S3TC /;"	d
GL_RGBA_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_RGBA_EXTENDED_RANGE_SGIX /;"	d
GL_RGBA_FLOAT16_APPLE	glew.h	/^#define GL_RGBA_FLOAT16_APPLE /;"	d
GL_RGBA_FLOAT16_ATI	glew.h	/^#define GL_RGBA_FLOAT16_ATI /;"	d
GL_RGBA_FLOAT32_APPLE	glew.h	/^#define GL_RGBA_FLOAT32_APPLE /;"	d
GL_RGBA_FLOAT32_ATI	glew.h	/^#define GL_RGBA_FLOAT32_ATI /;"	d
GL_RGBA_FLOAT_MODE_ARB	glew.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	d
GL_RGBA_INTEGER	glew.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_INTEGER_EXT	glew.h	/^#define GL_RGBA_INTEGER_EXT /;"	d
GL_RGBA_INTEGER_MODE_EXT	glew.h	/^#define GL_RGBA_INTEGER_MODE_EXT /;"	d
GL_RGBA_MODE	glew.h	/^#define GL_RGBA_MODE /;"	d
GL_RGBA_S3TC	glew.h	/^#define GL_RGBA_S3TC /;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	glew.h	/^#define GL_RGBA_SIGNED_COMPONENTS_EXT /;"	d
GL_RGBA_SIGNED_SGIX	glew.h	/^#define GL_RGBA_SIGNED_SGIX /;"	d
GL_RGBA_SNORM	glew.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	glew.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	d
GL_RGB_422_APPLE	glew.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_EXTENDED_RANGE_SGIX	glew.h	/^#define GL_RGB_EXTENDED_RANGE_SGIX /;"	d
GL_RGB_FLOAT16_APPLE	glew.h	/^#define GL_RGB_FLOAT16_APPLE /;"	d
GL_RGB_FLOAT16_ATI	glew.h	/^#define GL_RGB_FLOAT16_ATI /;"	d
GL_RGB_FLOAT32_APPLE	glew.h	/^#define GL_RGB_FLOAT32_APPLE /;"	d
GL_RGB_FLOAT32_ATI	glew.h	/^#define GL_RGB_FLOAT32_ATI /;"	d
GL_RGB_INTEGER	glew.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_INTEGER_EXT	glew.h	/^#define GL_RGB_INTEGER_EXT /;"	d
GL_RGB_RAW_422_APPLE	glew.h	/^#define GL_RGB_RAW_422_APPLE /;"	d
GL_RGB_S3TC	glew.h	/^#define GL_RGB_S3TC /;"	d
GL_RGB_SCALE	glew.h	/^#define GL_RGB_SCALE /;"	d
GL_RGB_SCALE_ARB	glew.h	/^#define GL_RGB_SCALE_ARB /;"	d
GL_RGB_SCALE_EXT	glew.h	/^#define GL_RGB_SCALE_EXT /;"	d
GL_RGB_SIGNED_SGIX	glew.h	/^#define GL_RGB_SIGNED_SGIX /;"	d
GL_RGB_SNORM	glew.h	/^#define GL_RGB_SNORM /;"	d
GL_RG_INTEGER	glew.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_SNORM	glew.h	/^#define GL_RG_SNORM /;"	d
GL_RIGHT	glew.h	/^#define GL_RIGHT /;"	d
GL_ROUND_NV	glew.h	/^#define GL_ROUND_NV /;"	d
GL_S	glew.h	/^#define GL_S /;"	d
GL_S3_s3tc	glew.h	/^#define GL_S3_s3tc /;"	d
GL_SAMPLER	glew.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	glew.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARB	glew.h	/^#define GL_SAMPLER_1D_ARB /;"	d
GL_SAMPLER_1D_ARRAY	glew.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_EXT	glew.h	/^#define GL_SAMPLER_1D_ARRAY_EXT /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	glew.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	glew.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_1D_SHADOW	glew.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW_ARB	glew.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	d
GL_SAMPLER_2D	glew.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARB	glew.h	/^#define GL_SAMPLER_2D_ARB /;"	d
GL_SAMPLER_2D_ARRAY	glew.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_EXT	glew.h	/^#define GL_SAMPLER_2D_ARRAY_EXT /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	glew.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	glew.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_2D_MULTISAMPLE	glew.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	glew.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_ARB	glew.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	d
GL_SAMPLER_2D_RECT_SHADOW	glew.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	glew.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW	glew.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW_ARB	glew.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	d
GL_SAMPLER_3D	glew.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D_ARB	glew.h	/^#define GL_SAMPLER_3D_ARB /;"	d
GL_SAMPLER_BINDING	glew.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	glew.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_BUFFER_AMD	glew.h	/^#define GL_SAMPLER_BUFFER_AMD /;"	d
GL_SAMPLER_BUFFER_EXT	glew.h	/^#define GL_SAMPLER_BUFFER_EXT /;"	d
GL_SAMPLER_CUBE	glew.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_ARB	glew.h	/^#define GL_SAMPLER_CUBE_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	glew.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	glew.h	/^#define GL_SAMPLER_CUBE_SHADOW_EXT /;"	d
GL_SAMPLER_OBJECT_AMD	glew.h	/^#define GL_SAMPLER_OBJECT_AMD /;"	d
GL_SAMPLER_RENDERBUFFER_NV	glew.h	/^#define GL_SAMPLER_RENDERBUFFER_NV /;"	d
GL_SAMPLES	glew.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_3DFX	glew.h	/^#define GL_SAMPLES_3DFX /;"	d
GL_SAMPLES_ARB	glew.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_EXT	glew.h	/^#define GL_SAMPLES_EXT /;"	d
GL_SAMPLES_PASSED	glew.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED_ARB	glew.h	/^#define GL_SAMPLES_PASSED_ARB /;"	d
GL_SAMPLES_SGIS	glew.h	/^#define GL_SAMPLES_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	glew.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	glew.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	glew.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	glew.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_ONE	glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	d
GL_SAMPLE_BUFFERS	glew.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_3DFX	glew.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	d
GL_SAMPLE_BUFFERS_ARB	glew.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_BUFFERS_EXT	glew.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	d
GL_SAMPLE_BUFFERS_SGIS	glew.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	d
GL_SAMPLE_COUNT_BITS_NV	glew.h	/^#define GL_SAMPLE_COUNT_BITS_NV /;"	d
GL_SAMPLE_COUNT_NV	glew.h	/^#define GL_SAMPLE_COUNT_NV /;"	d
GL_SAMPLE_COVERAGE	glew.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	glew.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	glew.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	glew.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	glew.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	glew.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_MASK	glew.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_EXT	glew.h	/^#define GL_SAMPLE_MASK_EXT /;"	d
GL_SAMPLE_MASK_INVERT_EXT	glew.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	d
GL_SAMPLE_MASK_INVERT_SGIS	glew.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	d
GL_SAMPLE_MASK_NV	glew.h	/^#define GL_SAMPLE_MASK_NV /;"	d
GL_SAMPLE_MASK_SGIS	glew.h	/^#define GL_SAMPLE_MASK_SGIS /;"	d
GL_SAMPLE_MASK_VALUE	glew.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_MASK_VALUE_EXT	glew.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	d
GL_SAMPLE_MASK_VALUE_NV	glew.h	/^#define GL_SAMPLE_MASK_VALUE_NV /;"	d
GL_SAMPLE_MASK_VALUE_SGIS	glew.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	d
GL_SAMPLE_PATTERN_EXT	glew.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	d
GL_SAMPLE_PATTERN_SGIS	glew.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	d
GL_SAMPLE_POSITION	glew.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_POSITION_NV	glew.h	/^#define GL_SAMPLE_POSITION_NV /;"	d
GL_SAMPLE_SHADING	glew.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	glew.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SATURATE_BIT_ATI	glew.h	/^#define GL_SATURATE_BIT_ATI /;"	d
GL_SCALAR_EXT	glew.h	/^#define GL_SCALAR_EXT /;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	glew.h	/^#define GL_SCALED_RESOLVE_FASTEST_EXT /;"	d
GL_SCALED_RESOLVE_NICEST_EXT	glew.h	/^#define GL_SCALED_RESOLVE_NICEST_EXT /;"	d
GL_SCALE_BY_FOUR_NV	glew.h	/^#define GL_SCALE_BY_FOUR_NV /;"	d
GL_SCALE_BY_ONE_HALF_NV	glew.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	d
GL_SCALE_BY_TWO_NV	glew.h	/^#define GL_SCALE_BY_TWO_NV /;"	d
GL_SCISSOR_BIT	glew.h	/^#define GL_SCISSOR_BIT /;"	d
GL_SCISSOR_BOX	glew.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_TEST	glew.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SCREEN_COORDINATES_REND	glew.h	/^#define GL_SCREEN_COORDINATES_REND /;"	d
GL_SCREEN_KHR	glew.h	/^#define GL_SCREEN_KHR /;"	d
GL_SCREEN_NV	glew.h	/^#define GL_SCREEN_NV /;"	d
GL_SECONDARY_COLOR_ARRAY	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	d
GL_SECONDARY_COLOR_ATIX	glew.h	/^#define GL_SECONDARY_COLOR_ATIX /;"	d
GL_SECONDARY_COLOR_NV	glew.h	/^#define GL_SECONDARY_COLOR_NV /;"	d
GL_SECONDARY_INTERPOLATOR_ATI	glew.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	d
GL_SELECT	glew.h	/^#define GL_SELECT /;"	d
GL_SELECTION_BUFFER_POINTER	glew.h	/^#define GL_SELECTION_BUFFER_POINTER /;"	d
GL_SELECTION_BUFFER_SIZE	glew.h	/^#define GL_SELECTION_BUFFER_SIZE /;"	d
GL_SEPARABLE_2D	glew.h	/^#define GL_SEPARABLE_2D /;"	d
GL_SEPARABLE_2D_EXT	glew.h	/^#define GL_SEPARABLE_2D_EXT /;"	d
GL_SEPARATE_ATTRIBS	glew.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_ATTRIBS_EXT	glew.h	/^#define GL_SEPARATE_ATTRIBS_EXT /;"	d
GL_SEPARATE_ATTRIBS_NV	glew.h	/^#define GL_SEPARATE_ATTRIBS_NV /;"	d
GL_SEPARATE_SPECULAR_COLOR	glew.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	glew.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d
GL_SET	glew.h	/^#define GL_SET /;"	d
GL_SET_AMD	glew.h	/^#define GL_SET_AMD /;"	d
GL_SGIS_color_range	glew.h	/^#define GL_SGIS_color_range /;"	d
GL_SGIS_detail_texture	glew.h	/^#define GL_SGIS_detail_texture /;"	d
GL_SGIS_fog_function	glew.h	/^#define GL_SGIS_fog_function /;"	d
GL_SGIS_generate_mipmap	glew.h	/^#define GL_SGIS_generate_mipmap /;"	d
GL_SGIS_multisample	glew.h	/^#define GL_SGIS_multisample /;"	d
GL_SGIS_pixel_texture	glew.h	/^#define GL_SGIS_pixel_texture /;"	d
GL_SGIS_point_line_texgen	glew.h	/^#define GL_SGIS_point_line_texgen /;"	d
GL_SGIS_sharpen_texture	glew.h	/^#define GL_SGIS_sharpen_texture /;"	d
GL_SGIS_texture4D	glew.h	/^#define GL_SGIS_texture4D /;"	d
GL_SGIS_texture_border_clamp	glew.h	/^#define GL_SGIS_texture_border_clamp /;"	d
GL_SGIS_texture_edge_clamp	glew.h	/^#define GL_SGIS_texture_edge_clamp /;"	d
GL_SGIS_texture_filter4	glew.h	/^#define GL_SGIS_texture_filter4 /;"	d
GL_SGIS_texture_lod	glew.h	/^#define GL_SGIS_texture_lod /;"	d
GL_SGIS_texture_select	glew.h	/^#define GL_SGIS_texture_select /;"	d
GL_SGIX_async	glew.h	/^#define GL_SGIX_async /;"	d
GL_SGIX_async_histogram	glew.h	/^#define GL_SGIX_async_histogram /;"	d
GL_SGIX_async_pixel	glew.h	/^#define GL_SGIX_async_pixel /;"	d
GL_SGIX_blend_alpha_minmax	glew.h	/^#define GL_SGIX_blend_alpha_minmax /;"	d
GL_SGIX_clipmap	glew.h	/^#define GL_SGIX_clipmap /;"	d
GL_SGIX_convolution_accuracy	glew.h	/^#define GL_SGIX_convolution_accuracy /;"	d
GL_SGIX_depth_texture	glew.h	/^#define GL_SGIX_depth_texture /;"	d
GL_SGIX_flush_raster	glew.h	/^#define GL_SGIX_flush_raster /;"	d
GL_SGIX_fog_offset	glew.h	/^#define GL_SGIX_fog_offset /;"	d
GL_SGIX_fog_texture	glew.h	/^#define GL_SGIX_fog_texture /;"	d
GL_SGIX_fragment_specular_lighting	glew.h	/^#define GL_SGIX_fragment_specular_lighting /;"	d
GL_SGIX_framezoom	glew.h	/^#define GL_SGIX_framezoom /;"	d
GL_SGIX_interlace	glew.h	/^#define GL_SGIX_interlace /;"	d
GL_SGIX_ir_instrument1	glew.h	/^#define GL_SGIX_ir_instrument1 /;"	d
GL_SGIX_list_priority	glew.h	/^#define GL_SGIX_list_priority /;"	d
GL_SGIX_pixel_texture	glew.h	/^#define GL_SGIX_pixel_texture /;"	d
GL_SGIX_pixel_texture_bits	glew.h	/^#define GL_SGIX_pixel_texture_bits /;"	d
GL_SGIX_reference_plane	glew.h	/^#define GL_SGIX_reference_plane /;"	d
GL_SGIX_resample	glew.h	/^#define GL_SGIX_resample /;"	d
GL_SGIX_shadow	glew.h	/^#define GL_SGIX_shadow /;"	d
GL_SGIX_shadow_ambient	glew.h	/^#define GL_SGIX_shadow_ambient /;"	d
GL_SGIX_sprite	glew.h	/^#define GL_SGIX_sprite /;"	d
GL_SGIX_tag_sample_buffer	glew.h	/^#define GL_SGIX_tag_sample_buffer /;"	d
GL_SGIX_texture_add_env	glew.h	/^#define GL_SGIX_texture_add_env /;"	d
GL_SGIX_texture_coordinate_clamp	glew.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	d
GL_SGIX_texture_lod_bias	glew.h	/^#define GL_SGIX_texture_lod_bias /;"	d
GL_SGIX_texture_multi_buffer	glew.h	/^#define GL_SGIX_texture_multi_buffer /;"	d
GL_SGIX_texture_range	glew.h	/^#define GL_SGIX_texture_range /;"	d
GL_SGIX_texture_scale_bias	glew.h	/^#define GL_SGIX_texture_scale_bias /;"	d
GL_SGIX_vertex_preclip	glew.h	/^#define GL_SGIX_vertex_preclip /;"	d
GL_SGIX_vertex_preclip_hint	glew.h	/^#define GL_SGIX_vertex_preclip_hint /;"	d
GL_SGIX_ycrcb	glew.h	/^#define GL_SGIX_ycrcb /;"	d
GL_SGI_color_matrix	glew.h	/^#define GL_SGI_color_matrix /;"	d
GL_SGI_color_table	glew.h	/^#define GL_SGI_color_table /;"	d
GL_SGI_texture_color_table	glew.h	/^#define GL_SGI_texture_color_table /;"	d
GL_SHADER	glew.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_FORMATS	glew.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_COMPILER	glew.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_CONSISTENT_NV	glew.h	/^#define GL_SHADER_CONSISTENT_NV /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	glew.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	glew.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT /;"	d
GL_SHADER_IMAGE_ATOMIC	glew.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	glew.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	glew.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	glew.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_OBJECT_ARB	glew.h	/^#define GL_SHADER_OBJECT_ARB /;"	d
GL_SHADER_OBJECT_EXT	glew.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_OPERATION_NV	glew.h	/^#define GL_SHADER_OPERATION_NV /;"	d
GL_SHADER_SOURCE_LENGTH	glew.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	glew.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	glew.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	glew.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	glew.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	glew.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	glew.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	glew.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	glew.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADE_MODEL	glew.h	/^#define GL_SHADE_MODEL /;"	d
GL_SHADING_LANGUAGE_VERSION	glew.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	glew.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	d
GL_SHADOW_AMBIENT_SGIX	glew.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	d
GL_SHADOW_ATTENUATION_EXT	glew.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	glew.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	d
GL_SHININESS	glew.h	/^#define GL_SHININESS /;"	d
GL_SHORT	glew.h	/^#define GL_SHORT /;"	d
GL_SIGNALED	glew.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_ALPHA8_NV	glew.h	/^#define GL_SIGNED_ALPHA8_NV /;"	d
GL_SIGNED_ALPHA_NV	glew.h	/^#define GL_SIGNED_ALPHA_NV /;"	d
GL_SIGNED_HILO16_NV	glew.h	/^#define GL_SIGNED_HILO16_NV /;"	d
GL_SIGNED_HILO8_NV	glew.h	/^#define GL_SIGNED_HILO8_NV /;"	d
GL_SIGNED_HILO_NV	glew.h	/^#define GL_SIGNED_HILO_NV /;"	d
GL_SIGNED_IDENTITY_NV	glew.h	/^#define GL_SIGNED_IDENTITY_NV /;"	d
GL_SIGNED_INTENSITY8_NV	glew.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	d
GL_SIGNED_INTENSITY_NV	glew.h	/^#define GL_SIGNED_INTENSITY_NV /;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	glew.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	d
GL_SIGNED_LUMINANCE8_NV	glew.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	glew.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	d
GL_SIGNED_LUMINANCE_NV	glew.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	d
GL_SIGNED_NEGATE_NV	glew.h	/^#define GL_SIGNED_NEGATE_NV /;"	d
GL_SIGNED_NORMALIZED	glew.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIGNED_RGB8_NV	glew.h	/^#define GL_SIGNED_RGB8_NV /;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	glew.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	d
GL_SIGNED_RGBA8_NV	glew.h	/^#define GL_SIGNED_RGBA8_NV /;"	d
GL_SIGNED_RGBA_NV	glew.h	/^#define GL_SIGNED_RGBA_NV /;"	d
GL_SIGNED_RGB_NV	glew.h	/^#define GL_SIGNED_RGB_NV /;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	glew.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SINGLE_COLOR	glew.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	glew.h	/^#define GL_SINGLE_COLOR_EXT /;"	d
GL_SKIP_DECODE_EXT	glew.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_MISSING_GLYPH_NV	glew.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	d
GL_SLICE_ACCUM_SUN	glew.h	/^#define GL_SLICE_ACCUM_SUN /;"	d
GL_SLUMINANCE	glew.h	/^#define GL_SLUMINANCE /;"	d
GL_SLUMINANCE8	glew.h	/^#define GL_SLUMINANCE8 /;"	d
GL_SLUMINANCE8_ALPHA8	glew.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	d
GL_SLUMINANCE8_ALPHA8_EXT	glew.h	/^#define GL_SLUMINANCE8_ALPHA8_EXT /;"	d
GL_SLUMINANCE8_EXT	glew.h	/^#define GL_SLUMINANCE8_EXT /;"	d
GL_SLUMINANCE_ALPHA	glew.h	/^#define GL_SLUMINANCE_ALPHA /;"	d
GL_SLUMINANCE_ALPHA_EXT	glew.h	/^#define GL_SLUMINANCE_ALPHA_EXT /;"	d
GL_SLUMINANCE_EXT	glew.h	/^#define GL_SLUMINANCE_EXT /;"	d
GL_SMALL_CCW_ARC_TO_NV	glew.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	d
GL_SMALL_CW_ARC_TO_NV	glew.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	d
GL_SMOOTH	glew.h	/^#define GL_SMOOTH /;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	glew.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	glew.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	glew.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	glew.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	glew.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	glew.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_SM_COUNT_NV	glew.h	/^#define GL_SM_COUNT_NV /;"	d
GL_SOFTLIGHT_KHR	glew.h	/^#define GL_SOFTLIGHT_KHR /;"	d
GL_SOFTLIGHT_NV	glew.h	/^#define GL_SOFTLIGHT_NV /;"	d
GL_SOURCE0_ALPHA	glew.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_ALPHA_ARB	glew.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	d
GL_SOURCE0_ALPHA_EXT	glew.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	d
GL_SOURCE0_RGB	glew.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE0_RGB_ARB	glew.h	/^#define GL_SOURCE0_RGB_ARB /;"	d
GL_SOURCE0_RGB_EXT	glew.h	/^#define GL_SOURCE0_RGB_EXT /;"	d
GL_SOURCE1_ALPHA	glew.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_ALPHA_ARB	glew.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	d
GL_SOURCE1_ALPHA_EXT	glew.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	d
GL_SOURCE1_RGB	glew.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE1_RGB_ARB	glew.h	/^#define GL_SOURCE1_RGB_ARB /;"	d
GL_SOURCE1_RGB_EXT	glew.h	/^#define GL_SOURCE1_RGB_EXT /;"	d
GL_SOURCE2_ALPHA	glew.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_ALPHA_ARB	glew.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	d
GL_SOURCE2_ALPHA_EXT	glew.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	d
GL_SOURCE2_RGB	glew.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SOURCE2_RGB_ARB	glew.h	/^#define GL_SOURCE2_RGB_ARB /;"	d
GL_SOURCE2_RGB_EXT	glew.h	/^#define GL_SOURCE2_RGB_EXT /;"	d
GL_SOURCE3_ALPHA_NV	glew.h	/^#define GL_SOURCE3_ALPHA_NV /;"	d
GL_SOURCE3_RGB_NV	glew.h	/^#define GL_SOURCE3_RGB_NV /;"	d
GL_SPARE0_NV	glew.h	/^#define GL_SPARE0_NV /;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	glew.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	d
GL_SPARE1_NV	glew.h	/^#define GL_SPARE1_NV /;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	glew.h	/^#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB /;"	d
GL_SPARSE_STORAGE_BIT_ARB	glew.h	/^#define GL_SPARSE_STORAGE_BIT_ARB /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	glew.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SPECULAR	glew.h	/^#define GL_SPECULAR /;"	d
GL_SPHERE_MAP	glew.h	/^#define GL_SPHERE_MAP /;"	d
GL_SPOT_CUTOFF	glew.h	/^#define GL_SPOT_CUTOFF /;"	d
GL_SPOT_DIRECTION	glew.h	/^#define GL_SPOT_DIRECTION /;"	d
GL_SPOT_EXPONENT	glew.h	/^#define GL_SPOT_EXPONENT /;"	d
GL_SQUARE_NV	glew.h	/^#define GL_SQUARE_NV /;"	d
GL_SRC0_ALPHA	glew.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	glew.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	glew.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	glew.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_RGB	glew.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	glew.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	glew.h	/^#define GL_SRC2_RGB /;"	d
GL_SRC_ALPHA	glew.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	glew.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_ATOP_NV	glew.h	/^#define GL_SRC_ATOP_NV /;"	d
GL_SRC_COLOR	glew.h	/^#define GL_SRC_COLOR /;"	d
GL_SRC_IN_NV	glew.h	/^#define GL_SRC_IN_NV /;"	d
GL_SRC_NV	glew.h	/^#define GL_SRC_NV /;"	d
GL_SRC_OUT_NV	glew.h	/^#define GL_SRC_OUT_NV /;"	d
GL_SRC_OVER_NV	glew.h	/^#define GL_SRC_OVER_NV /;"	d
GL_SRGB	glew.h	/^#define GL_SRGB /;"	d
GL_SRGB8	glew.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	glew.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8_EXT	glew.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_EXT	glew.h	/^#define GL_SRGB8_EXT /;"	d
GL_SRGB_ALPHA	glew.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA_EXT	glew.h	/^#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_DECODE_ARB	glew.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_EXT	glew.h	/^#define GL_SRGB_EXT /;"	d
GL_SRGB_READ	glew.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	glew.h	/^#define GL_SRGB_WRITE /;"	d
GL_STACK_OVERFLOW	glew.h	/^#define GL_STACK_OVERFLOW /;"	d
GL_STACK_UNDERFLOW	glew.h	/^#define GL_STACK_UNDERFLOW /;"	d
GL_STANDARD_FONT_NAME_NV	glew.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	d
GL_STATIC_ATI	glew.h	/^#define GL_STATIC_ATI /;"	d
GL_STATIC_COPY	glew.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY_ARB	glew.h	/^#define GL_STATIC_COPY_ARB /;"	d
GL_STATIC_DRAW	glew.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW_ARB	glew.h	/^#define GL_STATIC_DRAW_ARB /;"	d
GL_STATIC_READ	glew.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ_ARB	glew.h	/^#define GL_STATIC_READ_ARB /;"	d
GL_STATIC_VERTEX_ARRAY_IBM	glew.h	/^#define GL_STATIC_VERTEX_ARRAY_IBM /;"	d
GL_STATISTICS_REGAL	glew.h	/^#define GL_STATISTICS_REGAL /;"	d
GL_STENCIL	glew.h	/^#define GL_STENCIL /;"	d
GL_STENCIL_ATTACHMENT	glew.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT_EXT	glew.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	d
GL_STENCIL_BACK_FAIL	glew.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL_ATI	glew.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	d
GL_STENCIL_BACK_FUNC	glew.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC_ATI	glew.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	glew.h	/^#define GL_STENCIL_BACK_OP_VALUE_AMD /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	d
GL_STENCIL_BACK_REF	glew.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	glew.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	glew.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BITS	glew.h	/^#define GL_STENCIL_BITS /;"	d
GL_STENCIL_BUFFER	glew.h	/^#define GL_STENCIL_BUFFER /;"	d
GL_STENCIL_BUFFER_BIT	glew.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	glew.h	/^#define GL_STENCIL_CLEAR_TAG_VALUE_EXT /;"	d
GL_STENCIL_CLEAR_VALUE	glew.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_COMPONENTS	glew.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_FAIL	glew.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	glew.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	glew.h	/^#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX1	glew.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	glew.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX16_EXT	glew.h	/^#define GL_STENCIL_INDEX16_EXT /;"	d
GL_STENCIL_INDEX1_EXT	glew.h	/^#define GL_STENCIL_INDEX1_EXT /;"	d
GL_STENCIL_INDEX4	glew.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX4_EXT	glew.h	/^#define GL_STENCIL_INDEX4_EXT /;"	d
GL_STENCIL_INDEX8	glew.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8_EXT	glew.h	/^#define GL_STENCIL_INDEX8_EXT /;"	d
GL_STENCIL_OP_VALUE_AMD	glew.h	/^#define GL_STENCIL_OP_VALUE_AMD /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	glew.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	glew.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	glew.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_RENDERABLE	glew.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_TAG_BITS_EXT	glew.h	/^#define GL_STENCIL_TAG_BITS_EXT /;"	d
GL_STENCIL_TEST	glew.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	glew.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	d
GL_STENCIL_VALUE_MASK	glew.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	glew.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	glew.h	/^#define GL_STEREO /;"	d
GL_STORAGE_CACHED_APPLE	glew.h	/^#define GL_STORAGE_CACHED_APPLE /;"	d
GL_STORAGE_CLIENT_APPLE	glew.h	/^#define GL_STORAGE_CLIENT_APPLE /;"	d
GL_STORAGE_PRIVATE_APPLE	glew.h	/^#define GL_STORAGE_PRIVATE_APPLE /;"	d
GL_STORAGE_SHARED_APPLE	glew.h	/^#define GL_STORAGE_SHARED_APPLE /;"	d
GL_STREAM_COPY	glew.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY_ARB	glew.h	/^#define GL_STREAM_COPY_ARB /;"	d
GL_STREAM_DRAW	glew.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW_ARB	glew.h	/^#define GL_STREAM_DRAW_ARB /;"	d
GL_STREAM_RASTERIZATION_AMD	glew.h	/^#define GL_STREAM_RASTERIZATION_AMD /;"	d
GL_STREAM_READ	glew.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ_ARB	glew.h	/^#define GL_STREAM_READ_ARB /;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	glew.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	d
GL_STRICT_LIGHTING_HINT_PGI	glew.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	d
GL_STRICT_SCISSOR_HINT_PGI	glew.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	d
GL_SUBPIXEL_BITS	glew.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SUBSAMPLE_DISTANCE_AMD	glew.h	/^#define GL_SUBSAMPLE_DISTANCE_AMD /;"	d
GL_SUBTRACT	glew.h	/^#define GL_SUBTRACT /;"	d
GL_SUBTRACT_ARB	glew.h	/^#define GL_SUBTRACT_ARB /;"	d
GL_SUB_ATI	glew.h	/^#define GL_SUB_ATI /;"	d
GL_SUCCESS_NV	glew.h	/^#define GL_SUCCESS_NV /;"	d
GL_SUNX_constant_data	glew.h	/^#define GL_SUNX_constant_data /;"	d
GL_SUN_convolution_border_modes	glew.h	/^#define GL_SUN_convolution_border_modes /;"	d
GL_SUN_global_alpha	glew.h	/^#define GL_SUN_global_alpha /;"	d
GL_SUN_mesh_array	glew.h	/^#define GL_SUN_mesh_array /;"	d
GL_SUN_read_video_pixels	glew.h	/^#define GL_SUN_read_video_pixels /;"	d
GL_SUN_slice_accum	glew.h	/^#define GL_SUN_slice_accum /;"	d
GL_SUN_triangle_list	glew.h	/^#define GL_SUN_triangle_list /;"	d
GL_SUN_vertex	glew.h	/^#define GL_SUN_vertex /;"	d
GL_SURFACE_MAPPED_NV	glew.h	/^#define GL_SURFACE_MAPPED_NV /;"	d
GL_SURFACE_REGISTERED_NV	glew.h	/^#define GL_SURFACE_REGISTERED_NV /;"	d
GL_SURFACE_STATE_NV	glew.h	/^#define GL_SURFACE_STATE_NV /;"	d
GL_SWIZZLE_STQ_ATI	glew.h	/^#define GL_SWIZZLE_STQ_ATI /;"	d
GL_SWIZZLE_STQ_DQ_ATI	glew.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	d
GL_SWIZZLE_STRQ_ATI	glew.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	d
GL_SWIZZLE_STRQ_DQ_ATI	glew.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	d
GL_SWIZZLE_STR_ATI	glew.h	/^#define GL_SWIZZLE_STR_ATI /;"	d
GL_SWIZZLE_STR_DR_ATI	glew.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	d
GL_SYNC_CL_EVENT_ARB	glew.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	glew.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	glew.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	glew.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	glew.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	glew.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	glew.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	glew.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYNC_X11_FENCE_EXT	glew.h	/^#define GL_SYNC_X11_FENCE_EXT /;"	d
GL_SYSTEM_FONT_NAME_NV	glew.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	d
GL_T	glew.h	/^#define GL_T /;"	d
GL_T2F_C3F_V3F	glew.h	/^#define GL_T2F_C3F_V3F /;"	d
GL_T2F_C4F_N3F_V3F	glew.h	/^#define GL_T2F_C4F_N3F_V3F /;"	d
GL_T2F_C4UB_V3F	glew.h	/^#define GL_T2F_C4UB_V3F /;"	d
GL_T2F_N3F_V3F	glew.h	/^#define GL_T2F_N3F_V3F /;"	d
GL_T2F_V3F	glew.h	/^#define GL_T2F_V3F /;"	d
GL_T4F_C4F_N3F_V4F	glew.h	/^#define GL_T4F_C4F_N3F_V4F /;"	d
GL_T4F_V4F	glew.h	/^#define GL_T4F_V4F /;"	d
GL_TABLE_TOO_LARGE	glew.h	/^#define GL_TABLE_TOO_LARGE /;"	d
GL_TANGENT_ARRAY_EXT	glew.h	/^#define GL_TANGENT_ARRAY_EXT /;"	d
GL_TANGENT_ARRAY_POINTER_EXT	glew.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	glew.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	d
GL_TANGENT_ARRAY_TYPE_EXT	glew.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	d
GL_TESSELLATION_FACTOR_AMD	glew.h	/^#define GL_TESSELLATION_FACTOR_AMD /;"	d
GL_TESSELLATION_MODE_AMD	glew.h	/^#define GL_TESSELLATION_MODE_AMD /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	glew.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_PROGRAM_NV	glew.h	/^#define GL_TESS_CONTROL_PROGRAM_NV /;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	glew.h	/^#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_CONTROL_SHADER	glew.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	glew.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	glew.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES_ARB /;"	d
GL_TESS_CONTROL_SUBROUTINE	glew.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	glew.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	glew.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_PROGRAM_NV	glew.h	/^#define GL_TESS_EVALUATION_PROGRAM_NV /;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	glew.h	/^#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_EVALUATION_SHADER	glew.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	glew.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	glew.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB /;"	d
GL_TESS_EVALUATION_SUBROUTINE	glew.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	glew.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	glew.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	glew.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	glew.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	glew.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	glew.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXCOORD1_BIT_PGI	glew.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	d
GL_TEXCOORD2_BIT_PGI	glew.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	d
GL_TEXCOORD3_BIT_PGI	glew.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	d
GL_TEXCOORD4_BIT_PGI	glew.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	d
GL_TEXTURE	glew.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE0	glew.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0_ARB	glew.h	/^#define GL_TEXTURE0_ARB /;"	d
GL_TEXTURE1	glew.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	glew.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10_ARB	glew.h	/^#define GL_TEXTURE10_ARB /;"	d
GL_TEXTURE11	glew.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11_ARB	glew.h	/^#define GL_TEXTURE11_ARB /;"	d
GL_TEXTURE12	glew.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12_ARB	glew.h	/^#define GL_TEXTURE12_ARB /;"	d
GL_TEXTURE13	glew.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13_ARB	glew.h	/^#define GL_TEXTURE13_ARB /;"	d
GL_TEXTURE14	glew.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14_ARB	glew.h	/^#define GL_TEXTURE14_ARB /;"	d
GL_TEXTURE15	glew.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15_ARB	glew.h	/^#define GL_TEXTURE15_ARB /;"	d
GL_TEXTURE16	glew.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16_ARB	glew.h	/^#define GL_TEXTURE16_ARB /;"	d
GL_TEXTURE17	glew.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17_ARB	glew.h	/^#define GL_TEXTURE17_ARB /;"	d
GL_TEXTURE18	glew.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18_ARB	glew.h	/^#define GL_TEXTURE18_ARB /;"	d
GL_TEXTURE19	glew.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19_ARB	glew.h	/^#define GL_TEXTURE19_ARB /;"	d
GL_TEXTURE1_ARB	glew.h	/^#define GL_TEXTURE1_ARB /;"	d
GL_TEXTURE2	glew.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	glew.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20_ARB	glew.h	/^#define GL_TEXTURE20_ARB /;"	d
GL_TEXTURE21	glew.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21_ARB	glew.h	/^#define GL_TEXTURE21_ARB /;"	d
GL_TEXTURE22	glew.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22_ARB	glew.h	/^#define GL_TEXTURE22_ARB /;"	d
GL_TEXTURE23	glew.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23_ARB	glew.h	/^#define GL_TEXTURE23_ARB /;"	d
GL_TEXTURE24	glew.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24_ARB	glew.h	/^#define GL_TEXTURE24_ARB /;"	d
GL_TEXTURE25	glew.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25_ARB	glew.h	/^#define GL_TEXTURE25_ARB /;"	d
GL_TEXTURE26	glew.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26_ARB	glew.h	/^#define GL_TEXTURE26_ARB /;"	d
GL_TEXTURE27	glew.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27_ARB	glew.h	/^#define GL_TEXTURE27_ARB /;"	d
GL_TEXTURE28	glew.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28_ARB	glew.h	/^#define GL_TEXTURE28_ARB /;"	d
GL_TEXTURE29	glew.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29_ARB	glew.h	/^#define GL_TEXTURE29_ARB /;"	d
GL_TEXTURE2_ARB	glew.h	/^#define GL_TEXTURE2_ARB /;"	d
GL_TEXTURE3	glew.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	glew.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30_ARB	glew.h	/^#define GL_TEXTURE30_ARB /;"	d
GL_TEXTURE31	glew.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31_ARB	glew.h	/^#define GL_TEXTURE31_ARB /;"	d
GL_TEXTURE3_ARB	glew.h	/^#define GL_TEXTURE3_ARB /;"	d
GL_TEXTURE4	glew.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4_ARB	glew.h	/^#define GL_TEXTURE4_ARB /;"	d
GL_TEXTURE5	glew.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5_ARB	glew.h	/^#define GL_TEXTURE5_ARB /;"	d
GL_TEXTURE6	glew.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6_ARB	glew.h	/^#define GL_TEXTURE6_ARB /;"	d
GL_TEXTURE7	glew.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7_ARB	glew.h	/^#define GL_TEXTURE7_ARB /;"	d
GL_TEXTURE8	glew.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8_ARB	glew.h	/^#define GL_TEXTURE8_ARB /;"	d
GL_TEXTURE9	glew.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9_ARB	glew.h	/^#define GL_TEXTURE9_ARB /;"	d
GL_TEXTURE_1D	glew.h	/^#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D_ARRAY	glew.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_1D_ARRAY_EXT	glew.h	/^#define GL_TEXTURE_1D_ARRAY_EXT /;"	d
GL_TEXTURE_1D_BINDING_EXT	glew.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	glew.h	/^#define GL_TEXTURE_1D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_1D_STACK_MESAX	glew.h	/^#define GL_TEXTURE_1D_STACK_MESAX /;"	d
GL_TEXTURE_2D	glew.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	glew.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_ARRAY_EXT	glew.h	/^#define GL_TEXTURE_2D_ARRAY_EXT /;"	d
GL_TEXTURE_2D_BINDING_EXT	glew.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	d
GL_TEXTURE_2D_MULTISAMPLE	glew.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	glew.h	/^#define GL_TEXTURE_2D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_2D_STACK_MESAX	glew.h	/^#define GL_TEXTURE_2D_STACK_MESAX /;"	d
GL_TEXTURE_3D	glew.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D_BINDING_EXT	glew.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	d
GL_TEXTURE_3D_EXT	glew.h	/^#define GL_TEXTURE_3D_EXT /;"	d
GL_TEXTURE_ALPHA_SIZE	glew.h	/^#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	glew.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	d
GL_TEXTURE_ALPHA_TYPE	glew.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	glew.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	glew.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	d
GL_TEXTURE_BASE_LEVEL	glew.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	glew.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	d
GL_TEXTURE_BINDING	glew.h	/^#define GL_TEXTURE_BINDING /;"	d
GL_TEXTURE_BINDING_1D	glew.h	/^#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	glew.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	glew.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D	glew.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	glew.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	glew.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	glew.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	glew.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	glew.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	glew.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	glew.h	/^#define GL_TEXTURE_BINDING_BUFFER_EXT /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	d
GL_TEXTURE_BINDING_RECTANGLE	glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE_EXT	glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_EXT /;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	glew.h	/^#define GL_TEXTURE_BINDING_RENDERBUFFER_NV /;"	d
GL_TEXTURE_BIT	glew.h	/^#define GL_TEXTURE_BIT /;"	d
GL_TEXTURE_BLUE_SIZE	glew.h	/^#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_SIZE_EXT	glew.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	d
GL_TEXTURE_BLUE_TYPE	glew.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BLUE_TYPE_ARB	glew.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	d
GL_TEXTURE_BORDER	glew.h	/^#define GL_TEXTURE_BORDER /;"	d
GL_TEXTURE_BORDER_COLOR	glew.h	/^#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BORDER_VALUES_NV	glew.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	d
GL_TEXTURE_BUFFER	glew.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_ARB	glew.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	d
GL_TEXTURE_BUFFER_BINDING	glew.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	glew.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	glew.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	glew.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT /;"	d
GL_TEXTURE_BUFFER_EXT	glew.h	/^#define GL_TEXTURE_BUFFER_EXT /;"	d
GL_TEXTURE_BUFFER_FORMAT	glew.h	/^#define GL_TEXTURE_BUFFER_FORMAT /;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	glew.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	glew.h	/^#define GL_TEXTURE_BUFFER_FORMAT_EXT /;"	d
GL_TEXTURE_BUFFER_OFFSET	glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	glew.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	glew.h	/^#define GL_TEXTURE_COLOR_SAMPLES_NV /;"	d
GL_TEXTURE_COLOR_TABLE_SGI	glew.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	glew.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC	glew.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	glew.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	d
GL_TEXTURE_COMPARE_MODE	glew.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE_ARB	glew.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	glew.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	d
GL_TEXTURE_COMPARE_SGIX	glew.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	d
GL_TEXTURE_COMPONENTS	glew.h	/^#define GL_TEXTURE_COMPONENTS /;"	d
GL_TEXTURE_COMPRESSED	glew.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_ARB	glew.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	glew.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	glew.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	glew.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	glew.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	glew.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	d
GL_TEXTURE_COMPRESSION_HINT	glew.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	glew.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	glew.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	d
GL_TEXTURE_COORD_ARRAY	glew.h	/^#define GL_TEXTURE_COORD_ARRAY /;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_EXT	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	glew.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	d
GL_TEXTURE_COORD_NV	glew.h	/^#define GL_TEXTURE_COORD_NV /;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	glew.h	/^#define GL_TEXTURE_COVERAGE_SAMPLES_NV /;"	d
GL_TEXTURE_CUBE_MAP	glew.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_EXT	glew.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	glew.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS_ARB	glew.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS_ARB /;"	d
GL_TEXTURE_DEPTH	glew.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_EXT	glew.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	d
GL_TEXTURE_DEPTH_SIZE	glew.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	glew.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	d
GL_TEXTURE_DEPTH_TYPE	glew.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	glew.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	d
GL_TEXTURE_DS_SIZE_NV	glew.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	d
GL_TEXTURE_DT_SIZE_NV	glew.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	d
GL_TEXTURE_ENV	glew.h	/^#define GL_TEXTURE_ENV /;"	d
GL_TEXTURE_ENV_COLOR	glew.h	/^#define GL_TEXTURE_ENV_COLOR /;"	d
GL_TEXTURE_ENV_MODE	glew.h	/^#define GL_TEXTURE_ENV_MODE /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	glew.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	glew.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_FILTER_CONTROL	glew.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	glew.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	glew.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	glew.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	d
GL_TEXTURE_FOG_SGIX	glew.h	/^#define GL_TEXTURE_FOG_SGIX /;"	d
GL_TEXTURE_FREE_MEMORY_ATI	glew.h	/^#define GL_TEXTURE_FREE_MEMORY_ATI /;"	d
GL_TEXTURE_GATHER	glew.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	glew.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GEN_MODE	glew.h	/^#define GL_TEXTURE_GEN_MODE /;"	d
GL_TEXTURE_GEN_Q	glew.h	/^#define GL_TEXTURE_GEN_Q /;"	d
GL_TEXTURE_GEN_R	glew.h	/^#define GL_TEXTURE_GEN_R /;"	d
GL_TEXTURE_GEN_S	glew.h	/^#define GL_TEXTURE_GEN_S /;"	d
GL_TEXTURE_GEN_T	glew.h	/^#define GL_TEXTURE_GEN_T /;"	d
GL_TEXTURE_GEQUAL_R_SGIX	glew.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	d
GL_TEXTURE_GREEN_SIZE	glew.h	/^#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_SIZE_EXT	glew.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	d
GL_TEXTURE_GREEN_TYPE	glew.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_GREEN_TYPE_ARB	glew.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	d
GL_TEXTURE_HEIGHT	glew.h	/^#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_HI_SIZE_NV	glew.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	d
GL_TEXTURE_IMAGE_FORMAT	glew.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	glew.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	glew.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	glew.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INDEX_SIZE_EXT	glew.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_SIZE	glew.h	/^#define GL_TEXTURE_INTENSITY_SIZE /;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	glew.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_TYPE	glew.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	glew.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	d
GL_TEXTURE_INTERNAL_FORMAT	glew.h	/^#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_LEQUAL_R_SGIX	glew.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	d
GL_TEXTURE_LIGHT_EXT	glew.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	d
GL_TEXTURE_LOD_BIAS	glew.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS_EXT	glew.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	d
GL_TEXTURE_LO_SIZE_NV	glew.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	d
GL_TEXTURE_LUMINANCE_SIZE	glew.h	/^#define GL_TEXTURE_LUMINANCE_SIZE /;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	glew.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	d
GL_TEXTURE_LUMINANCE_TYPE	glew.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	glew.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	d
GL_TEXTURE_MAG_FILTER	glew.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAG_SIZE_NV	glew.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	glew.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	glew.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	d
GL_TEXTURE_MATRIX	glew.h	/^#define GL_TEXTURE_MATRIX /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	glew.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	glew.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	glew.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	glew.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	d
GL_TEXTURE_MAX_LEVEL	glew.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	glew.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	d
GL_TEXTURE_MAX_LOD	glew.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD_SGIS	glew.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	glew.h	/^#define GL_TEXTURE_MEMORY_LAYOUT_INTEL /;"	d
GL_TEXTURE_MIN_FILTER	glew.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	glew.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD_SGIS	glew.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	glew.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	d
GL_TEXTURE_NORMAL_EXT	glew.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	d
GL_TEXTURE_OUTPUT_ALPHA_ATIX	glew.h	/^#define GL_TEXTURE_OUTPUT_ALPHA_ATIX /;"	d
GL_TEXTURE_OUTPUT_RGB_ATIX	glew.h	/^#define GL_TEXTURE_OUTPUT_RGB_ATIX /;"	d
GL_TEXTURE_POINT_MODE_ATIX	glew.h	/^#define GL_TEXTURE_POINT_MODE_ATIX /;"	d
GL_TEXTURE_POINT_ONE_COORD_ATIX	glew.h	/^#define GL_TEXTURE_POINT_ONE_COORD_ATIX /;"	d
GL_TEXTURE_POINT_SPRITE_ATIX	glew.h	/^#define GL_TEXTURE_POINT_SPRITE_ATIX /;"	d
GL_TEXTURE_PRIORITY	glew.h	/^#define GL_TEXTURE_PRIORITY /;"	d
GL_TEXTURE_PRIORITY_EXT	glew.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	glew.h	/^#define GL_TEXTURE_RANGE_LENGTH_APPLE /;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	glew.h	/^#define GL_TEXTURE_RANGE_POINTER_APPLE /;"	d
GL_TEXTURE_RECTANGLE	glew.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RECTANGLE_ARB	glew.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	d
GL_TEXTURE_RECTANGLE_EXT	glew.h	/^#define GL_TEXTURE_RECTANGLE_EXT /;"	d
GL_TEXTURE_RECTANGLE_NV	glew.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	d
GL_TEXTURE_RED_SIZE	glew.h	/^#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_SIZE_EXT	glew.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	d
GL_TEXTURE_RED_TYPE	glew.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RED_TYPE_ARB	glew.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	glew.h	/^#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV /;"	d
GL_TEXTURE_RENDERBUFFER_NV	glew.h	/^#define GL_TEXTURE_RENDERBUFFER_NV /;"	d
GL_TEXTURE_RESIDENT	glew.h	/^#define GL_TEXTURE_RESIDENT /;"	d
GL_TEXTURE_RESIDENT_EXT	glew.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	d
GL_TEXTURE_SAMPLES	glew.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHADER_NV	glew.h	/^#define GL_TEXTURE_SHADER_NV /;"	d
GL_TEXTURE_SHADOW	glew.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	glew.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SHARED_SIZE_EXT	glew.h	/^#define GL_TEXTURE_SHARED_SIZE_EXT /;"	d
GL_TEXTURE_SPARSE_ARB	glew.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	glew.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_STACK_DEPTH	glew.h	/^#define GL_TEXTURE_STACK_DEPTH /;"	d
GL_TEXTURE_STENCIL_SIZE	glew.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	glew.h	/^#define GL_TEXTURE_STENCIL_SIZE_EXT /;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	glew.h	/^#define GL_TEXTURE_STORAGE_HINT_APPLE /;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	glew.h	/^#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD /;"	d
GL_TEXTURE_SWIZZLE_A	glew.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_A_EXT	glew.h	/^#define GL_TEXTURE_SWIZZLE_A_EXT /;"	d
GL_TEXTURE_SWIZZLE_B	glew.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_B_EXT	glew.h	/^#define GL_TEXTURE_SWIZZLE_B_EXT /;"	d
GL_TEXTURE_SWIZZLE_G	glew.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_G_EXT	glew.h	/^#define GL_TEXTURE_SWIZZLE_G_EXT /;"	d
GL_TEXTURE_SWIZZLE_R	glew.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	glew.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	glew.h	/^#define GL_TEXTURE_SWIZZLE_RGBA_EXT /;"	d
GL_TEXTURE_SWIZZLE_R_EXT	glew.h	/^#define GL_TEXTURE_SWIZZLE_R_EXT /;"	d
GL_TEXTURE_TARGET	glew.h	/^#define GL_TEXTURE_TARGET /;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	glew.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	glew.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	glew.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_USAGE_ANGLE	glew.h	/^#define GL_TEXTURE_USAGE_ANGLE /;"	d
GL_TEXTURE_VIEW	glew.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	glew.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	glew.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	glew.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	glew.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WIDTH	glew.h	/^#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WRAP_R	glew.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R_EXT	glew.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	d
GL_TEXTURE_WRAP_S	glew.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	glew.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	glew.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	d
GL_TIMEOUT_EXPIRED	glew.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	glew.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	glew.h	/^#define GL_TIMESTAMP /;"	d
GL_TIMESTAMP_ANGLE	glew.h	/^#define GL_TIMESTAMP_ANGLE /;"	d
GL_TIME_ELAPSED	glew.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TIME_ELAPSED_ANGLE	glew.h	/^#define GL_TIME_ELAPSED_ANGLE /;"	d
GL_TIME_ELAPSED_EXT	glew.h	/^#define GL_TIME_ELAPSED_EXT /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	glew.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	glew.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRACE_REGAL	glew.h	/^#define GL_TRACE_REGAL /;"	d
GL_TRACK_MATRIX_NV	glew.h	/^#define GL_TRACK_MATRIX_NV /;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	glew.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	d
GL_TRANSFORM_BIT	glew.h	/^#define GL_TRANSFORM_BIT /;"	d
GL_TRANSFORM_FEEDBACK	glew.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_NV /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	glew.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	glew.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV /;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_RECORD_NV /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	glew.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT /;"	d
GL_TRANSFORM_HINT_APPLE	glew.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	d
GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE	glew.h	/^#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE /;"	d
GL_TRANSLATE_2D_NV	glew.h	/^#define GL_TRANSLATE_2D_NV /;"	d
GL_TRANSLATE_3D_NV	glew.h	/^#define GL_TRANSLATE_3D_NV /;"	d
GL_TRANSLATE_X_NV	glew.h	/^#define GL_TRANSLATE_X_NV /;"	d
GL_TRANSLATE_Y_NV	glew.h	/^#define GL_TRANSLATE_Y_NV /;"	d
GL_TRANSPOSE_AFFINE_2D_NV	glew.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	d
GL_TRANSPOSE_AFFINE_3D_NV	glew.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	d
GL_TRANSPOSE_COLOR_MATRIX	glew.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	glew.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	glew.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	glew.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	glew.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	d
GL_TRANSPOSE_NV	glew.h	/^#define GL_TRANSPOSE_NV /;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	glew.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	glew.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	glew.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	glew.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	glew.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	d
GL_TRIANGLES	glew.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	glew.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY_ARB	glew.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	d
GL_TRIANGLES_ADJACENCY_EXT	glew.h	/^#define GL_TRIANGLES_ADJACENCY_EXT /;"	d
GL_TRIANGLE_FAN	glew.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_LIST_SUN	glew.h	/^#define GL_TRIANGLE_LIST_SUN /;"	d
GL_TRIANGLE_MESH_SUN	glew.h	/^#define GL_TRIANGLE_MESH_SUN /;"	d
GL_TRIANGLE_STRIP	glew.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	glew.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	glew.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	glew.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_EXT /;"	d
GL_TRIANGULAR_NV	glew.h	/^#define GL_TRIANGULAR_NV /;"	d
GL_TRUE	glew.h	/^#define GL_TRUE /;"	d
GL_TYPE	glew.h	/^#define GL_TYPE /;"	d
GL_UNCORRELATED_NV	glew.h	/^#define GL_UNCORRELATED_NV /;"	d
GL_UNDEFINED_APPLE	glew.h	/^#define GL_UNDEFINED_APPLE /;"	d
GL_UNDEFINED_VERTEX	glew.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	glew.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ARRAY_STRIDE	glew.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	glew.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	glew.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BARRIER_BIT_EXT	glew.h	/^#define GL_UNIFORM_BARRIER_BIT_EXT /;"	d
GL_UNIFORM_BLOCK	glew.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	glew.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	glew.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	glew.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	glew.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	glew.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	glew.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	glew.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	glew.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	glew.h	/^#define GL_UNIFORM_BUFFER_BINDING_EXT /;"	d
GL_UNIFORM_BUFFER_EXT	glew.h	/^#define GL_UNIFORM_BUFFER_EXT /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	glew.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	glew.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	glew.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	glew.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	glew.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	glew.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	glew.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	glew.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	glew.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET	glew.h	/^#define GL_UNKNOWN_CONTEXT_RESET /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	glew.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_ALIGNMENT	glew.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	glew.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	d
GL_UNPACK_CMYK_HINT_EXT	glew.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	glew.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	d
GL_UNPACK_IMAGE_HEIGHT	glew.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	glew.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	d
GL_UNPACK_LSB_FIRST	glew.h	/^#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_RESAMPLE_OML	glew.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	d
GL_UNPACK_RESAMPLE_SGIX	glew.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	d
GL_UNPACK_ROW_BYTES_APPLE	glew.h	/^#define GL_UNPACK_ROW_BYTES_APPLE /;"	d
GL_UNPACK_ROW_LENGTH	glew.h	/^#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_SKIP_IMAGES	glew.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES_EXT	glew.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	d
GL_UNPACK_SKIP_PIXELS	glew.h	/^#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_ROWS	glew.h	/^#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SWAP_BYTES	glew.h	/^#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNSIGNALED	glew.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE	glew.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	glew.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	glew.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	glew.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	d
GL_UNSIGNED_IDENTITY_NV	glew.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	d
GL_UNSIGNED_INT	glew.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT16_NV	glew.h	/^#define GL_UNSIGNED_INT16_NV /;"	d
GL_UNSIGNED_INT16_VEC2_NV	glew.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	d
GL_UNSIGNED_INT16_VEC3_NV	glew.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	d
GL_UNSIGNED_INT16_VEC4_NV	glew.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	d
GL_UNSIGNED_INT64_AMD	glew.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_ARB	glew.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT64_NV	glew.h	/^#define GL_UNSIGNED_INT64_NV /;"	d
GL_UNSIGNED_INT64_VEC2_NV	glew.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	d
GL_UNSIGNED_INT64_VEC3_NV	glew.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	d
GL_UNSIGNED_INT64_VEC4_NV	glew.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	d
GL_UNSIGNED_INT8_NV	glew.h	/^#define GL_UNSIGNED_INT8_NV /;"	d
GL_UNSIGNED_INT8_VEC2_NV	glew.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	d
GL_UNSIGNED_INT8_VEC3_NV	glew.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	d
GL_UNSIGNED_INT8_VEC4_NV	glew.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	glew.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	glew.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT /;"	d
GL_UNSIGNED_INT_10_10_10_2	glew.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	glew.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	d
GL_UNSIGNED_INT_24_8	glew.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_24_8_EXT	glew.h	/^#define GL_UNSIGNED_INT_24_8_EXT /;"	d
GL_UNSIGNED_INT_24_8_NV	glew.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	glew.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	glew.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	glew.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8	glew.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	glew.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	glew.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	glew.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	glew.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_3D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	glew.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_UNSIGNED_INT_VEC2	glew.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC2_EXT	glew.h	/^#define GL_UNSIGNED_INT_VEC2_EXT /;"	d
GL_UNSIGNED_INT_VEC3	glew.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC3_EXT	glew.h	/^#define GL_UNSIGNED_INT_VEC3_EXT /;"	d
GL_UNSIGNED_INT_VEC4	glew.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_INT_VEC4_EXT	glew.h	/^#define GL_UNSIGNED_INT_VEC4_EXT /;"	d
GL_UNSIGNED_INVERT_NV	glew.h	/^#define GL_UNSIGNED_INVERT_NV /;"	d
GL_UNSIGNED_NORMALIZED	glew.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_NORMALIZED_ARB	glew.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	d
GL_UNSIGNED_SHORT	glew.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	glew.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	glew.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	glew.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	d
GL_UNSIGNED_SHORT_5_6_5	glew.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	glew.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	glew.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_MESA	glew.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	glew.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	glew.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	d
GL_UPPER_LEFT	glew.h	/^#define GL_UPPER_LEFT /;"	d
GL_USE_MISSING_GLYPH_NV	glew.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	d
GL_UTF16_NV	glew.h	/^#define GL_UTF16_NV /;"	d
GL_UTF8_NV	glew.h	/^#define GL_UTF8_NV /;"	d
GL_V2F	glew.h	/^#define GL_V2F /;"	d
GL_V3F	glew.h	/^#define GL_V3F /;"	d
GL_VALIDATE_STATUS	glew.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VARIABLE_A_NV	glew.h	/^#define GL_VARIABLE_A_NV /;"	d
GL_VARIABLE_B_NV	glew.h	/^#define GL_VARIABLE_B_NV /;"	d
GL_VARIABLE_C_NV	glew.h	/^#define GL_VARIABLE_C_NV /;"	d
GL_VARIABLE_D_NV	glew.h	/^#define GL_VARIABLE_D_NV /;"	d
GL_VARIABLE_E_NV	glew.h	/^#define GL_VARIABLE_E_NV /;"	d
GL_VARIABLE_F_NV	glew.h	/^#define GL_VARIABLE_F_NV /;"	d
GL_VARIABLE_G_NV	glew.h	/^#define GL_VARIABLE_G_NV /;"	d
GL_VARIANT_ARRAY_EXT	glew.h	/^#define GL_VARIANT_ARRAY_EXT /;"	d
GL_VARIANT_ARRAY_POINTER_EXT	glew.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	glew.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	d
GL_VARIANT_ARRAY_TYPE_EXT	glew.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	d
GL_VARIANT_DATATYPE_EXT	glew.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	d
GL_VARIANT_EXT	glew.h	/^#define GL_VARIANT_EXT /;"	d
GL_VARIANT_VALUE_EXT	glew.h	/^#define GL_VARIANT_VALUE_EXT /;"	d
GL_VBO_FREE_MEMORY_ATI	glew.h	/^#define GL_VBO_FREE_MEMORY_ATI /;"	d
GL_VECTOR_EXT	glew.h	/^#define GL_VECTOR_EXT /;"	d
GL_VENDOR	glew.h	/^#define GL_VENDOR /;"	d
GL_VERSION	glew.h	/^#define GL_VERSION /;"	d
GL_VERSION_1_1	glew.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_2	glew.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_2_1	glew.h	/^#define GL_VERSION_1_2_1 /;"	d
GL_VERSION_1_3	glew.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	glew.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	glew.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	glew.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	glew.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	glew.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	glew.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	glew.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	glew.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	glew.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	glew.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	glew.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	glew.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	glew.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERSION_4_5	glew.h	/^#define GL_VERSION_4_5 /;"	d
GL_VERTEX23_BIT_PGI	glew.h	/^#define GL_VERTEX23_BIT_PGI /;"	d
GL_VERTEX4_BIT_PGI	glew.h	/^#define GL_VERTEX4_BIT_PGI /;"	d
GL_VERTEX_ARRAY	glew.h	/^#define GL_VERTEX_ARRAY /;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	glew.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ARRAY_BINDING	glew.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	glew.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ARRAY_COUNT_EXT	glew.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	d
GL_VERTEX_ARRAY_EXT	glew.h	/^#define GL_VERTEX_ARRAY_EXT /;"	d
GL_VERTEX_ARRAY_LENGTH_NV	glew.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_LIST_IBM	glew.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	glew.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	glew.h	/^#define GL_VERTEX_ARRAY_OBJECT_AMD /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	glew.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	glew.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_VERTEX_ARRAY_POINTER	glew.h	/^#define GL_VERTEX_ARRAY_POINTER /;"	d
GL_VERTEX_ARRAY_POINTER_EXT	glew.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_RANGE_NV	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	glew.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	d
GL_VERTEX_ARRAY_SIZE	glew.h	/^#define GL_VERTEX_ARRAY_SIZE /;"	d
GL_VERTEX_ARRAY_SIZE_EXT	glew.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	glew.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	d
GL_VERTEX_ARRAY_STRIDE	glew.h	/^#define GL_VERTEX_ARRAY_STRIDE /;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	glew.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_ARRAY_TYPE	glew.h	/^#define GL_VERTEX_ARRAY_TYPE /;"	d
GL_VERTEX_ARRAY_TYPE_EXT	glew.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	d
GL_VERTEX_ATTRIB_BINDING	glew.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	glew.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_BUFFER	glew.h	/^#define GL_VERTEX_BINDING_BUFFER /;"	d
GL_VERTEX_BINDING_DIVISOR	glew.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	glew.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	glew.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_BLEND_ARB	glew.h	/^#define GL_VERTEX_BLEND_ARB /;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	glew.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	d
GL_VERTEX_DATA_HINT_PGI	glew.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	glew.h	/^#define GL_VERTEX_ELEMENT_SWIZZLE_AMD /;"	d
GL_VERTEX_ID_NV	glew.h	/^#define GL_VERTEX_ID_NV /;"	d
GL_VERTEX_ID_SWIZZLE_AMD	glew.h	/^#define GL_VERTEX_ID_SWIZZLE_AMD /;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	glew.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	d
GL_VERTEX_PRECLIP_SGIX	glew.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	d
GL_VERTEX_PROGRAM_ARB	glew.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	d
GL_VERTEX_PROGRAM_BINDING_NV	glew.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	d
GL_VERTEX_PROGRAM_NV	glew.h	/^#define GL_VERTEX_PROGRAM_NV /;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	glew.h	/^#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	glew.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	glew.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	glew.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	glew.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	glew.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	glew.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	d
GL_VERTEX_SHADER	glew.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_ARB	glew.h	/^#define GL_VERTEX_SHADER_ARB /;"	d
GL_VERTEX_SHADER_BINDING_EXT	glew.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	d
GL_VERTEX_SHADER_BIT	glew.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_EXT	glew.h	/^#define GL_VERTEX_SHADER_EXT /;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	glew.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	glew.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	glew.h	/^#define GL_VERTEX_SHADER_INVOCATIONS_ARB /;"	d
GL_VERTEX_SHADER_LOCALS_EXT	glew.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	glew.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	glew.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	glew.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_VERTEX_SOURCE_ATI	glew.h	/^#define GL_VERTEX_SOURCE_ATI /;"	d
GL_VERTEX_STATE_PROGRAM_NV	glew.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	d
GL_VERTEX_STREAM0_ATI	glew.h	/^#define GL_VERTEX_STREAM0_ATI /;"	d
GL_VERTEX_STREAM1_ATI	glew.h	/^#define GL_VERTEX_STREAM1_ATI /;"	d
GL_VERTEX_STREAM2_ATI	glew.h	/^#define GL_VERTEX_STREAM2_ATI /;"	d
GL_VERTEX_STREAM3_ATI	glew.h	/^#define GL_VERTEX_STREAM3_ATI /;"	d
GL_VERTEX_STREAM4_ATI	glew.h	/^#define GL_VERTEX_STREAM4_ATI /;"	d
GL_VERTEX_STREAM5_ATI	glew.h	/^#define GL_VERTEX_STREAM5_ATI /;"	d
GL_VERTEX_STREAM6_ATI	glew.h	/^#define GL_VERTEX_STREAM6_ATI /;"	d
GL_VERTEX_STREAM7_ATI	glew.h	/^#define GL_VERTEX_STREAM7_ATI /;"	d
GL_VERTEX_SUBROUTINE	glew.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	glew.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	glew.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTEX_WEIGHTING_EXT	glew.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	d
GL_VERTICAL_LINE_TO_NV	glew.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	d
GL_VERTICES_SUBMITTED_ARB	glew.h	/^#define GL_VERTICES_SUBMITTED_ARB /;"	d
GL_VIBRANCE_BIAS_NV	glew.h	/^#define GL_VIBRANCE_BIAS_NV /;"	d
GL_VIBRANCE_SCALE_NV	glew.h	/^#define GL_VIBRANCE_SCALE_NV /;"	d
GL_VIDEO_BUFFER_BINDING_NV	glew.h	/^#define GL_VIDEO_BUFFER_BINDING_NV /;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	glew.h	/^#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV /;"	d
GL_VIDEO_BUFFER_NV	glew.h	/^#define GL_VIDEO_BUFFER_NV /;"	d
GL_VIDEO_BUFFER_PITCH_NV	glew.h	/^#define GL_VIDEO_BUFFER_PITCH_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	glew.h	/^#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	glew.h	/^#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	glew.h	/^#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	glew.h	/^#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV /;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	glew.h	/^#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV /;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	glew.h	/^#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_MAX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_MIN_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV /;"	d
GL_VIEWPORT	glew.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT_BIT	glew.h	/^#define GL_VIEWPORT_BIT /;"	d
GL_VIEWPORT_BOUNDS_RANGE	glew.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	glew.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	glew.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEW_CLASS_128_BITS	glew.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	glew.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	glew.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	glew.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	glew.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	glew.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	glew.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	glew.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	glew.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	glew.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	glew.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	glew.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	glew.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_VIVIDLIGHT_NV	glew.h	/^#define GL_VIVIDLIGHT_NV /;"	d
GL_VOLATILE_APPLE	glew.h	/^#define GL_VOLATILE_APPLE /;"	d
GL_WAIT_FAILED	glew.h	/^#define GL_WAIT_FAILED /;"	d
GL_WARPS_PER_SM_NV	glew.h	/^#define GL_WARPS_PER_SM_NV /;"	d
GL_WARP_SIZE_NV	glew.h	/^#define GL_WARP_SIZE_NV /;"	d
GL_WEIGHT_ARRAY_ARB	glew.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	glew.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	glew.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	glew.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	glew.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	glew.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	glew.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	d
GL_WEIGHT_SUM_UNITY_ARB	glew.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	d
GL_WIDE_LINE_HINT_PGI	glew.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	d
GL_WIN_phong_shading	glew.h	/^#define GL_WIN_phong_shading /;"	d
GL_WIN_specular_fog	glew.h	/^#define GL_WIN_specular_fog /;"	d
GL_WIN_swap_hint	glew.h	/^#define GL_WIN_swap_hint /;"	d
GL_WRAP_BORDER	glew.h	/^#define GL_WRAP_BORDER /;"	d
GL_WRAP_BORDER_SUN	glew.h	/^#define GL_WRAP_BORDER_SUN /;"	d
GL_WRITE_DISCARD_NV	glew.h	/^#define GL_WRITE_DISCARD_NV /;"	d
GL_WRITE_ONLY	glew.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY_ARB	glew.h	/^#define GL_WRITE_ONLY_ARB /;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	glew.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	glew.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	glew.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_W_EXT	glew.h	/^#define GL_W_EXT /;"	d
GL_XOR	glew.h	/^#define GL_XOR /;"	d
GL_XOR_NV	glew.h	/^#define GL_XOR_NV /;"	d
GL_X_EXT	glew.h	/^#define GL_X_EXT /;"	d
GL_YCBAYCR8A_4224_NV	glew.h	/^#define GL_YCBAYCR8A_4224_NV /;"	d
GL_YCBCR_422_APPLE	glew.h	/^#define GL_YCBCR_422_APPLE /;"	d
GL_YCBCR_MESA	glew.h	/^#define GL_YCBCR_MESA /;"	d
GL_YCBYCR8_422_NV	glew.h	/^#define GL_YCBYCR8_422_NV /;"	d
GL_Y_EXT	glew.h	/^#define GL_Y_EXT /;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	glew.h	/^#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV /;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	glew.h	/^#define GL_Z4Y12Z4CB12Z4CR12_444_NV /;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	glew.h	/^#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV /;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	glew.h	/^#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV /;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	glew.h	/^#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV /;"	d
GL_ZERO	glew.h	/^#define GL_ZERO /;"	d
GL_ZERO_EXT	glew.h	/^#define GL_ZERO_EXT /;"	d
GL_ZERO_TO_ONE	glew.h	/^#define GL_ZERO_TO_ONE /;"	d
GL_ZOOM_X	glew.h	/^#define GL_ZOOM_X /;"	d
GL_ZOOM_Y	glew.h	/^#define GL_ZOOM_Y /;"	d
GL_Z_EXT	glew.h	/^#define GL_Z_EXT /;"	d
GLbitfield	glew.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	glew.h	/^typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	glew.h	/^typedef signed char GLbyte;$/;"	t	typeref:typename:signed char
GLchar	glew.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	glew.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLclampd	glew.h	/^typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampf	glew.h	/^typedef float GLclampf;$/;"	t	typeref:typename:float
GLclampx	glew.h	/^typedef int GLclampx;$/;"	t	typeref:typename:int
GLdouble	glew.h	/^typedef double GLdouble;$/;"	t	typeref:typename:double
GLenum	glew.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLfixed	glew.h	/^typedef int GLfixed;$/;"	t	typeref:typename:int
GLfloat	glew.h	/^typedef float GLfloat;$/;"	t	typeref:typename:float
GLhalf	glew.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhandleARB	glew.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLint	glew.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint64	glew.h	/^typedef GLint64EXT  GLint64;$/;"	t	typeref:typename:GLint64EXT
GLint64EXT	glew.h	/^typedef __int64 GLint64EXT;$/;"	t	typeref:typename:__int64
GLint64EXT	glew.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLint64EXT	glew.h	/^typedef signed long long GLint64EXT;$/;"	t	typeref:typename:signed long long
GLintptr	glew.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	glew.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLshadertype	glslprogram.cpp	/^struct GLshadertype$/;"	s	file:
GLshort	glew.h	/^typedef short GLshort;$/;"	t	typeref:typename:short
GLsizei	glew.h	/^typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	glew.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	glew.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	glew.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	glew.h	/^typedef unsigned char GLubyte;$/;"	t	typeref:typename:unsigned char
GLuint	glew.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint	glm/detail/dummy.cpp	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int	file:
GLuint64	glew.h	/^typedef GLuint64EXT GLuint64;$/;"	t	typeref:typename:GLuint64EXT
GLuint64EXT	glew.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	glew.h	/^typedef unsigned __int64 GLuint64EXT;$/;"	t	typeref:typename:unsigned __int64
GLuint64EXT	glew.h	/^typedef unsigned long long GLuint64EXT;$/;"	t	typeref:typename:unsigned long long
GLulong	glew.h	/^typedef unsigned long GLulong;$/;"	t	typeref:typename:unsigned long
GLushort	glew.h	/^typedef unsigned short GLushort;$/;"	t	typeref:typename:unsigned short
GLvdpauSurfaceNV	glew.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GLvoid	glew.h	/^typedef void GLvoid;$/;"	t	typeref:typename:void
GREEN	main.cpp	/^	GREEN,$/;"	e	enum:Colors	file:
GetAttributeLocation	glslprogram.cpp	/^GLSLProgram::GetAttributeLocation( char *name )$/;"	f	class:GLSLProgram	typeref:typename:int
GetExtension	glslprogram.cpp	/^GetExtension( char *file )$/;"	f	typeref:typename:char *	file:
GetFirstTime	keytime.cpp	/^Keytimes::GetFirstTime( )$/;"	f	class:Keytimes	typeref:typename:float
GetLastTime	keytime.cpp	/^Keytimes::GetLastTime( )$/;"	f	class:Keytimes	typeref:typename:float
GetNumKeytimes	keytime.cpp	/^Keytimes::GetNumKeytimes( )$/;"	f	class:Keytimes	typeref:typename:int
GetOSU	glslprogram.h	/^inline int GetOSU( int flag )$/;"	f	typeref:typename:int
GetUniformLocation	glslprogram.cpp	/^GLSLProgram::GetUniformLocation( char *name )$/;"	f	class:GLSLProgram	typeref:typename:int
GetValue	keytime.cpp	/^Keytimes::GetValue( float _time )$/;"	f	class:Keytimes	typeref:typename:float
Heights	main.cpp	/^int*  Heights;          \/\/Y values of points on the plane$/;"	v	typeref:typename:int *
HsvRgb	main.cpp	/^HsvRgb( float hsv[3], float rgb[3] )$/;"	f	typeref:typename:void
INIT_WINDOW_SIZE	main.cpp	/^const int INIT_WINDOW_SIZE = 600;$/;"	v	typeref:typename:const int
IncludeGstap	glslprogram.h	/^	bool			IncludeGstap;$/;"	m	class:GLSLProgram	typeref:typename:bool
InfoHeader	bmptotexture.cpp	/^} InfoHeader;$/;"	v	typeref:struct:bmih
Init	glslprogram.cpp	/^GLSLProgram::Init( )$/;"	f	class:GLSLProgram	typeref:typename:void
Init	keytime.cpp	/^Keytimes::Init( )$/;"	f	class:Keytimes	typeref:typename:void
InitGraphics	main.cpp	/^InitGraphics( )$/;"	f	typeref:typename:void
InitLists	main.cpp	/^InitLists( )$/;"	f	typeref:typename:void
InitMenus	main.cpp	/^InitMenus( )$/;"	f	typeref:typename:void
IsExtensionSupported	glslprogram.cpp	/^GLSLProgram::IsExtensionSupported( const char *extension )$/;"	f	class:GLSLProgram	typeref:typename:bool
IsNotValid	glslprogram.cpp	/^GLSLProgram::IsNotValid( )$/;"	f	class:GLSLProgram	typeref:typename:bool
IsValid	glslprogram.cpp	/^GLSLProgram::IsValid( )$/;"	f	class:GLSLProgram	typeref:typename:bool
KEYTIME_H	keytime.h	/^#define KEYTIME_H$/;"	d
Keyboard	main.cpp	/^Keyboard( unsigned char c, int x, int y )$/;"	f	typeref:typename:void
Keytimes	keytime.cpp	/^Keytimes::Keytimes( )$/;"	f	class:Keytimes
Keytimes	keytime.h	/^class Keytimes$/;"	c
LEFT	main.cpp	/^const int LEFT   = 4;$/;"	v	typeref:typename:const int
LENFRAC	main.cpp	/^const float LENFRAC = 0.10f;$/;"	v	typeref:typename:const float
LabelFalse	glm/gtx/string_cast.inl	/^	static const char* LabelFalse = "false";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
LabelTrue	glm/gtx/string_cast.inl	/^	static const char* LabelTrue = "true";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
LoadObjFile	loadobjfile.cpp	/^LoadObjFile( char *name )$/;"	f	typeref:typename:int
MAGENTA	main.cpp	/^	MAGENTA$/;"	e	enum:Colors	file:
MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	glew.h	/^#define MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
MIDDLE	main.cpp	/^const int MIDDLE = 2;$/;"	v	typeref:typename:const int
MINSCALE	main.cpp	/^const float MINSCALE = 0.05f;$/;"	v	typeref:typename:const float
MS_PER_CYCLE	main.cpp	/^const int MS_PER_CYCLE = 10000;		\/\/ 10000 milliseconds = 10 seconds$/;"	v	typeref:typename:const int
MainWindow	main.cpp	/^int		MainWindow;				\/\/ window id for main graphics window$/;"	v	typeref:typename:int
MouseButton	main.cpp	/^MouseButton( int button, int state, int x, int y )$/;"	f	typeref:typename:void
MouseMotion	main.cpp	/^MouseMotion( int x, int y )$/;"	f	typeref:typename:void
MulArray3	main.cpp	/^MulArray3( float factor, float array0[ ] )$/;"	f	typeref:typename:float *
MulArray3	main.cpp	/^MulArray3(float factor, float a, float b, float c )$/;"	f	typeref:typename:float *
NAME	glm/CMakeLists.txt	/^set(NAME glm_dummy)$/;"	v
NOMINMAX	freeglut_std.h	/^#    define NOMINMAX$/;"	d
Normal	loadobjfile.cpp	/^struct Normal$/;"	s	file:
NowColor	main.cpp	/^int		NowColor;				\/\/ index into Colors[ ]$/;"	v	typeref:typename:int
NowProjection	main.cpp	/^int		NowProjection;			\/\/ ORTHO or PERSP$/;"	v	typeref:typename:int
OBJDELIMS	loadobjfile.cpp	/^#define OBJDELIMS	/;"	d	file:
ORTHO	main.cpp	/^	ORTHO,$/;"	e	enum:Projections	file:
P	glm/gtx/simd_vec4.hpp	/^		P = 2,$/;"	e	enum:glm::comp
PERSP	main.cpp	/^	PERSP$/;"	e	enum:Projections	file:
PFNGLACTIVEPROGRAMEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLuint program)
PFNGLACTIVESTENCILFACEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLACTIVETEXTUREPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLACTIVEVARYINGNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLADDSWAPHINTRECTWINPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLADDSWAPHINTRECTWINPROC) (GLint x, GLint y, GLsizei width, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLALPHAFRAGMENTOP1ATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLALPHAFUNCXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFUNCXPROC) (GLenum func, GLclampx ref);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum func,GLclampx ref)
PFNGLAPPLYTEXTUREEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint* ids, G/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsizei n,const GLuint * ids,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint* textu/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint i)
PFNGLARRAYOBJECTATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCMARKERSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERNVXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBEGINCONDITIONALRENDERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum mode)
PFNGLBEGINFRAGMENTSHADERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBEGINPERFMONITORAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle)
PFNGLBEGINQUERYANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYANGLEPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBEGINQUERYARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBEGINSCENEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINSCENEEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode)
PFNGLBEGINVERTEXSHADEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBEGINVIDEOCAPTURENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot)
PFNGLBINDATTRIBLOCATIONARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLc/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERBASEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFEROFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint bu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFEROFFSETNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei coun/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint colorNumber, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint colorNumber,const GLchar * name)
PFNGLBINDFRAGMENTSHADERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
PFNGLBINDIMAGETEXTUREPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDLIGHTPARAMETEREXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum face,GLenum value)
PFNGLBINDMULTITEXTUREEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPARAMETEREXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum value)
PFNGLBINDPROGRAMARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBINDPROGRAMPIPELINEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline)
PFNGLBINDRENDERBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint* sa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDTEXGENPARAMETEREXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint* te/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum unit,GLenum value)
PFNGLBINDTEXTUREUNITPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint unit,GLuint texture)
PFNGLBINDTRANSFORMFEEDBACKNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBINDVERTEXSHADEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
PFNGLBINORMALPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, void *poin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,void * pointer)
PFNGLBLENDBARRIERKHRPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBLENDBARRIERNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBLENDCOLOREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
PFNGLBLENDCOLORPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
PFNGLBLENDEQUATIONEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONINDEXEDAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCINDEXEDAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCSEPARATEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum ds/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFERANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITFRAMEBUFFERANGLEPROC) (GLint srcX0, GLint srcY0, GLint srcX1/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITNAMEDFRAMEBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64E/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERDATAARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
PFNGLBUFFERDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void* dat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPAGECOMMITMENTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLBUFFERPARAMETERIAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLBUFFERREGIONENABLEDPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBUFFERREGIONENABLEDPROC) (void);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(void)
PFNGLBUFFERSTORAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void */;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
PFNGLBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenu/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint framebuffer,GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum t/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum clamp)
PFNGLCLEARBUFFERDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawBuffer, GLfloat dep/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawBuffer, const GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawBuffer, const GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawBuffer, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,const GLuint * value)
PFNGLCLEARCOLORIIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCLEARCOLORIUIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCLEARCOLORXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARCOLORXPROC) (GLclampx red, GLclampx green, GLclampx blue, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx red,GLclampx green,GLclampx blue,GLclampx alpha)
PFNGLCLEARDEPTHDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble depth)
PFNGLCLEARDEPTHFOESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHFOESPROC) (GLclampd depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampd depth)
PFNGLCLEARDEPTHFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHFPROC) (GLclampf d);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf d)
PFNGLCLEARDEPTHXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHXPROC) (GLclampx depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLfloat depth,GLint stencil)
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARTEXIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffse/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTACTIVETEXTUREARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLCLIENTWAITSYNCPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCLIENTWAITSYNCPROC) (GLsync GLsync,GLbitfield flags,GLuint64 t/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLsync GLsync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPCONTROLPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum origin,GLenum depth)
PFNGLCLIPPLANEFOESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPPLANEFPROC) (GLenum plane, const GLfloat* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPPLANEXPROC) (GLenum plane, const GLfixed* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,const GLfixed * equation)
PFNGLCOLOR3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat* c, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3HNVPROC) (GLhalf red, GLhalf green, GLhalf blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf red,GLhalf green,GLhalf blue)
PFNGLCOLOR3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* c, const GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4HNVPROC) (GLhalf red, GLhalf green, GLhalf blue, GLhalf al/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf red,GLhalf green,GLhalf blue,GLhalf alpha)
PFNGLCOLOR4HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLuby/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte* c, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLuby/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte* c, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4XPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4XPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed /;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCOLORFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORFRAGMENTOP1ATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORMASKINDEXEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint buf, GLboolean r, GLboolean g, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORMASKIPROC) (GLuint buf, GLboolean red, GLboolean green, GLb/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLCOLORP3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint* color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint* color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void** p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,const void ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei cou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORSUBTABLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLESGIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOMBINERINPUTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum varia/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat* params)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMPILESHADERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERINCLUDEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCONVOLUTIONFILTER1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalforma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalforma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat param)
PFNGLCONVOLUTIONPARAMETERFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLCONVOLUTIONPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOPYBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readtarget, GLenum writetarget, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum readtarget,GLenum writetarget,GLintptr readoffset,GLintptr writeoffset,GLsizeiptr size)
PFNGLCOPYCOLORSUBTABLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYIMAGESUBDATANVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLCOPYIMAGESUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYPATHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathName/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERSTROKEPATHNVPROC) (GLuint name, GLenum coverMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint name,GLenum coverMode)
PFNGLCREATEBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * buffers)
PFNGLCREATEFRAMEBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * framebuffers)
PFNGLCREATEPERFQUERYINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint* queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMOBJECTARBPROC	glew.h	/^typedef GLhandleARB (GLAPIENTRY * PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t	typeref:typename:GLhandleARB (GLAPIENTRY *)(void)
PFNGLCREATEPROGRAMPIPELINESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint* pipelines);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * pipelines)
PFNGLCREATEPROGRAMPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(void)
PFNGLCREATEQUERIESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,GLuint * ids)
PFNGLCREATERENDERBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * renderbuffers)
PFNGLCREATESAMPLERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint* samplers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * samplers)
PFNGLCREATESHADEROBJECTARBPROC	glew.h	/^typedef GLhandleARB (GLAPIENTRY * PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t	typeref:typename:GLhandleARB (GLAPIENTRY *)(GLenum shaderType)
PFNGLCREATESHADERPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar* string/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const G/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESYNCFROMCLEVENTARBPROC	glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLCREATESYNCFROMCLEVENTARBPROC) (cl_context context, cl_event ev/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(cl_context context,cl_event event,GLbitfield flags)
PFNGLCREATETEXTURESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint* textures)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,GLuint * textures)
PFNGLCREATETRANSFORMFEEDBACKSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLCREATEVERTEXARRAYSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * arrays)
PFNGLCULLPARAMETERDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint index)
PFNGLDEBUGMESSAGECALLBACKAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *use/;"	t	typeref:typename:void (GLAPIENTRY *)(GLDEBUGPROCAMD callback,void * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *use/;"	t	typeref:typename:void (GLAPIENTRY *)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEENABLEAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDELETEASYNCMARKERSSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERREGIONPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEBUFFERREGIONPROC) (GLenum region);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum region)
PFNGLDELETEBUFFERSARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFENCESAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint* framebuffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETENAMEDSTRINGARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint namelen,const GLchar * name)
PFNGLDELETENAMESAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint num,const GLuint * names)
PFNGLDELETEOBJECTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEPATHSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint* monitors);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint* pipelines)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint* programs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESANGLEPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint* renderbuff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint* renderbuffers/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint * samplers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader)
PFNGLDELETESYNCPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESYNCPROC) (GLsync GLsync);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync)
PFNGLDELETETEXTURESEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint* textures);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLDEPTHBOUNDSDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHBOUNDSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampd zmin,GLclampd zmax)
PFNGLDEPTHRANGEARRAYVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLclam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLclampd * v)
PFNGLDEPTHRANGEDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFOESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEFPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEINDEXEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLclampd n, GLclampd f);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLclampd n,GLclampd f)
PFNGLDEPTHRANGEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEXPROC) (GLclampx zNear, GLclampx zFar);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx zNear,GLclampx zFar)
PFNGLDETACHOBJECTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB atta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLECLIENTSTATEIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLDISABLEINDEXEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEIPROC) (GLenum cap, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum cap,GLuint index)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYATTRIBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint nu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSINDIRECTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDANGLEPROC) (GLenum mode, GLint first, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei coun/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWBUFFERREGIONPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERREGIONPROC) (GLuint region, GLint x, GLint y, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint region,GLint x,GLint y,GLsizei width,GLsizei height,GLint xDest,GLint yDest)
PFNGLDRAWBUFFERSARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTARRAYAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count)
PFNGLDRAWELEMENTSBASEVERTEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDANGLEPROC) (GLenum mode, GLsizei count, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei cou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWRANGEELEMENTSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTEXTURENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id,GLsizei primcount)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id,GLuint stream,GLsizei primcount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id,GLuint stream)
PFNGLEDGEFLAGFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei stride)
PFNGLEDGEFLAGPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean ** po/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLELEMENTPOINTERAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const void * pointer)
PFNGLELEMENTPOINTERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const void * pointer)
PFNGLENABLECLIENTSTATEIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLENABLEINDEXEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLENABLEIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEIPROC) (GLenum cap, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum cap,GLuint index)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYATTRIBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDCONDITIONALRENDERNVXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDCONDITIONALRENDERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDFRAGMENTSHADERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDPERFMONITORAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle)
PFNGLENDQUERYANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYANGLEPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLENDQUERYARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLENDQUERYINDEXEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLENDSCENEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDSCENEEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDTRANSFORMFEEDBACKEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDTRANSFORMFEEDBACKNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDVERTEXSHADEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDVIDEOCAPTURENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot)
PFNGLERRORSTRINGREGALPROC	glew.h	/^typedef const GLchar* (GLAPIENTRY * PFNGLERRORSTRINGREGALPROC) (GLenum error);$/;"	t	typeref:typename:const GLchar * (GLAPIENTRY *)(GLenum error)
PFNGLEVALMAPSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum mode)
PFNGLEXECUTEPROGRAMNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTRACTCOMPONENTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint src,GLuint num)
PFNGLFENCESYNCPROC	glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLFENCESYNCPROC) (GLenum condition,GLbitfield flags);$/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(GLenum condition,GLbitfield flags)
PFNGLFINALCOMBINERINPUTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLFINISHASYNCSGIXPROC) (GLuint* markerp);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence)
PFNGLFINISHFENCENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr off/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPIXELDATARANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,void * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFOGCOORDDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble coord)
PFNGLFOGCOORDDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat coord)
PFNGLFOGCOORDFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride)
PFNGLFOGCOORDFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDHNVPROC) (GLhalf fog);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf fog)
PFNGLFOGCOORDHVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDHVNVPROC) (const GLhalf* fog);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * fog)
PFNGLFOGCOORDPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const vo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLfloat * points)
PFNGLFOGXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed param)
PFNGLFOGXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGXVPROC) (GLenum pname, const GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfixed * params)
PFNGLFRAGMENTCOLORMATERIALEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTCOLORMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLFRAGMENTLIGHTFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFEXTPROC) (GLenum light, GLenum pname, GLfloat para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTFVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTIEXTPROC) (GLenum light, GLenum pname, GLint param)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTISGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint * params)
PFNGLFRAGMENTLIGHTIVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint * params)
PFNGLFRAGMENTLIGHTMODELFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFVEXTPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTMODELIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELIEXTPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELIVEXTPROC) (GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * params)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * params)
PFNGLFRAGMENTMATERIALFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFEXTPROC) (GLenum face, GLenum pname, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat param)
PFNGLFRAGMENTMATERIALFSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat param)
PFNGLFRAGMENTMATERIALFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALFVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALIEXTPROC) (GLenum face, GLenum pname, const GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint param)
PFNGLFRAGMENTMATERIALISGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint param)
PFNGLFRAGMENTMATERIALIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALIVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachmen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachmen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachmen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target,GLenum attachment, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMETERMINATORGREMEDYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFRAMEZOOMSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLFRUSTUMFOESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLFRUSTUMFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRUSTUMFPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat left,GLfloat right,GLfloat bottom,GLfloat top,GLfloat zNear,GLfloat zFar)
PFNGLFRUSTUMXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLFRUSTUMXPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed left,GLfixed right,GLfixed bottom,GLfixed top,GLfixed zNear,GLfixed zFar)
PFNGLGENASYNCMARKERSSGIXPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLsizei range)
PFNGLGENBUFFERSARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENBUFFERSPROC) (GLsizei n, GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLGENERATEMIPMAPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target)
PFNGLGENERATETEXTUREMIPMAPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture)
PFNGLGENFENCESAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFENCESNVPROC) (GLsizei n, GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * framebuffers)
PFNGLGENNAMESAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint* names);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint num,GLuint * names)
PFNGLGENOCCLUSIONQUERIESNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENPATHSNVPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint* monitors);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint* pipelines);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMSARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint* programs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESANGLEPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint* samplers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei count,GLuint * samplers)
PFNGLGENSYMBOLSEXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENSYMBOLSEXTPROC) (GLenum dataType, GLenum storageType, GLenu/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum dataType,GLenum storageType,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint* textures);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint range)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei maxL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shader/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shad/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBloc/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei max/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEVARYINGNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei ma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONARBPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLchar/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar* name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum value, GLuint index, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBOOLEANI_VPROC) (GLenum pname, GLuint index, GLboolean* data)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum value, GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum value,GLint64 * data)
PFNGLGETBUFFERPARAMETERIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void** p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void** para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
PFNGLGETBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeipt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEFOESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,GLfloat * equation)
PFNGLGETCLIPPLANEFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCLIPPLANEFPROC) (GLenum pname, GLfloat eqn[4]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat eqn[4])
PFNGLGETCLIPPLANEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCLIPPLANEXPROC) (GLenum pname, GLfixed eqn[4]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed eqn[4])
PFNGLGETCOLORTABLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOLORTABLESGIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum targe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, void *i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, void *img)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLsizei bufSize,void * pixels)
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void * pixels)
PFNGLGETCONVOLUTIONFILTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONFILTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETDEBUGMESSAGELOGAMDPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLe/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
PFNGLGETDEBUGMESSAGELOGARBPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLe/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDETAILTEXFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat * points)
PFNGLGETDOUBLEINDEXEDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETEXTENSIONREGALPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLGETEXTENSIONREGALPROC) (const GLchar* ext);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(const GLchar * ext)
PFNGLGETFENCEIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint* queryId);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * queryId)
PFNGLGETFIXEDVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFIXEDVPROC) (GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed * params)
PFNGLGETFLOATINDEXEDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFOGFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFOGFUNCSGISPROC) (GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat * points)
PFNGLGETFRAGDATAINDEXPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar * name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONEXTPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar* name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETFRAGMENTLIGHTFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum value, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum value,GLfloat * data)
PFNGLGETFRAGMENTLIGHTIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum value, GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum value,GLint * data)
PFNGLGETFRAGMENTMATERIALFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat * data)
PFNGLGETFRAGMENTMATERIALIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint * data)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pn/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint * param)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(void)
PFNGLGETHANDLEARBPROC	glew.h	/^typedef GLhandleARB (GLAPIENTRY * PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t	typeref:typename:GLhandleARB (GLAPIENTRY *)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum for/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETIMAGEHANDLEARBPROC	glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboole/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolea/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLGETINFOLOGARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINTEGER64I_VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGER64I_VPROC) (GLenum pname, GLuint index, GLint64 * data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint64 * params)
PFNGLGETINTEGERINDEXEDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum value, GLuint index, GLint* d/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EX/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint index,GLuint64EXT result[])
PFNGLGETINTEGERUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT* result);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint64EXT * result)
PFNGLGETINTERNALFORMATI64VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINVARIANTBOOLEANVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *da/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *da/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLint * data)
PFNGLGETLIGHTXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLIGHTXVPROC) (GLenum light, GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfixed * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
PFNGLGETMAPPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMATERIALXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMATERIALXVPROC) (GLenum face, GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLfixed * params)
PFNGLGETMINMAXEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum types,void * values)
PFNGLGETMULTISAMPLEFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat* val)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint64 * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERPOINTERVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void**/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint * param)
PFNGLGETNAMEDPROGRAMIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar* name, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOLORTABLEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCONVOLUTIONFILTERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNEXTPERFQUERYIDINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint* nextQueryI/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNHISTOGRAMARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum fo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum forma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNPIXELMAPFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte* pattern);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNUNIFORMDVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETNUNIFORMUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTBUFFERFVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTLABELEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufS/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPARAMETERFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum objectType,GLuint name,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOBJECTPTRLABELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOCCLUSIONQUERYIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPATHCOLORGENFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum color,GLenum pname,GLfloat * value)
PFNGLGETPATHCOLORGENIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum color,GLenum pname,GLint * value)
PFNGLGETPATHCOMMANDSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOMMANDSNVPROC) (GLuint name, GLubyte* commands);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint name,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOORDSNVPROC) (GLuint name, GLfloat* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint name,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHDASHARRAYNVPROC) (GLuint name, GLfloat* dashArray);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint name,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	glew.h	/^typedef GLfloat (GLAPIENTRY * PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	t	typeref:typename:GLfloat (GLAPIENTRY *)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint fi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield metricQueryMask,GLuint fistPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHPARAMETERFVNVPROC) (GLuint name, GLenum param, GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint name,GLenum param,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHPARAMETERIVNVPROC) (GLuint name, GLenum param, GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint name,GLenum param,GLint * value)
PFNGLGETPATHSPACINGNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPATHTEXGENFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texCoordSet,GLenum pname,GLfloat * value)
PFNGLGETPATHTEXGENIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texCoordSet,GLenum pname,GLint * value)
PFNGLGETPERFCOUNTERINFOINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint* numCounters/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei countersSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint* numGroups, GLsizei groupsSi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle,GLuint flags,GLsizei dataSize,void * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar* queryName, GLuint *query/;"	t	typeref:typename:void (GLAPIENTRY *)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLeng/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLGETPOINTERINDEXEDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void** /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,void ** params)
PFNGLGETPOINTERI_VEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void** params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,void ** params)
PFNGLGETPROCADDRESSREGALPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLGETPROCADDRESSREGALPROC) (const GLchar *name);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(const GLchar * name)
PFNGLGETPROGRAMBINARYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMINFOLOGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint* param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint * param)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programIn/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterfa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum pr/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum program/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTRINGARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *str/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void * string)
PFNGLGETPROGRAMSTRINGNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte* progr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETQUERYINDEXEDIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYIVANGLEPROC) (GLenum target, GLenum pname, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTI64VANGLEPROC) (GLuint id, GLenum pname, GLint64* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint64EXT * params)
PFNGLGETQUERYOBJECTI64VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVANGLEPROC) (GLuint id, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUI64VANGLEPROC) (GLuint id, GLenum pname, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EX/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint64EXT * params)
PFNGLGETQUERYOBJECTUI64VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVANGLEPROC) (GLuint id, GLenum pname, GLuint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint* params)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSEPARABLEFILTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSEPARABLEFILTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSHADERINFOLOGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint* param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLenum pname,GLint * param)
PFNGLGETSHADERPRECISIONFORMATPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERSOURCEPROC) (GLuint obj, GLsizei maxLength, GLsizei* le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint obj,GLsizei maxLength,GLsizei * length,GLchar * source)
PFNGLGETSHARPENTEXFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat * points)
PFNGLGETSTRINGIPROC	glew.h	/^typedef const GLubyte* (GLAPIENTRY * PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (GLAPIENTRY *)(GLenum name,GLuint index)
PFNGLGETSUBROUTINEINDEXPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, co/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shade/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSYNCIVPROC) (GLsync GLsync,GLenum pname,GLsizei bufSize,GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * param)
PFNGLGETTEXENVXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXENVXVPROC) (GLenum env, GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum env,GLenum pname,GLfixed * params)
PFNGLGETTEXFILTERFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTEXPARAMETERIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint */;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void ** params)
PFNGLGETTEXPARAMETERXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERXVPROC) (GLenum target, GLenum pname, GLfixed* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXTUREHANDLEARBPROC	glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTUREIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum targe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum targe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTURELEVELPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint samp/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampl/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESUBIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTRACKMATRIXIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLenum pname,GLuint index,GLint64 * param)
PFNGLGETTRANSFORMFEEDBACKIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLenum pname,GLint * param)
PFNGLGETTRANSFORMFEEDBACKI_VPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLenum pname,GLuint index,GLint * param)
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint inde/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLint * location)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
PFNGLGETUNIFORMBLOCKINDEXPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar* unifo/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLint location)
PFNGLGETUNIFORMDVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EX/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcha/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar* name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMOFFSETEXTPROC	glew.h	/^typedef GLintptr (GLAPIENTRY * PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLintptr (GLAPIENTRY *)(GLuint program,GLint location)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint * params)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean */;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,void ** data)
PFNGLGETVARYINGLOCATIONNVPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETVERTEXARRAYINDEXED64IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,GLint64 * param)
PFNGLGETVERTEXARRAYINDEXEDIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint* param)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void**/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVIDEOCAPTUREIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
PFNGLGETVIDEOI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLint64EXT * params)
PFNGLGETVIDEOIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64E/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLuint64EXT * params)
PFNGLGETVIDEOUIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLuint * params)
PFNGLGLOBALALPHAFACTORBSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort factor)
PFNGLHISTOGRAMEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLIMPORTSYNCEXTPROC	glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr extern/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
PFNGLINDEXFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride)
PFNGLINDEXFUNCEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXFUNCEXTPROC) (GLenum func, GLfloat ref);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum func,GLfloat ref)
PFNGLINDEXMATERIALEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLINSERTCOMPONENTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint src,GLuint num)
PFNGLINSERTEVENTMARKEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar* marker)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,const GLchar * marker)
PFNGLINTERPOLATEPATHSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISASYNCMARKERSGIXPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint marker)
PFNGLISBUFFERARBPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISBUFFERPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target)
PFNGLISENABLEDINDEXEDEXTPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISENABLEDIPROC) (GLenum cap, GLuint index);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum cap,GLuint index)
PFNGLISFENCEAPPLEPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLISFENCENVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISNAMEAMDPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum identifier,GLuint name)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLint namelen,const GLchar * name)
PFNGLISOBJECTBUFFERATIPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISPATHNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPATHNVPROC) (GLuint path);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMARBPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint program)
PFNGLISPROGRAMNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISPROGRAMPIPELINEPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint pipeline)
PFNGLISPROGRAMPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint program)
PFNGLISQUERYANGLEPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISQUERYANGLEPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISQUERYARBPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISQUERYARBPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISQUERYPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint sampler)
PFNGLISSHADERPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint shader)
PFNGLISSUPPORTEDREGALPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSUPPORTEDREGALPROC) (const GLchar* ext);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(const GLchar * ext)
PFNGLISSYNCPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSYNCPROC) (GLsync GLsync);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsync GLsync)
PFNGLISTEXTUREEXTPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint texture)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISTRANSFORMFEEDBACKNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISVARIANTENABLEDEXTPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint array)
PFNGLISVERTEXARRAYPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint array)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint index,GLenum pname)
PFNGLLABELOBJECTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLIGHTENVIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTENVIEXTPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLLIGHTMODELXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTMODELXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed param)
PFNGLLIGHTMODELXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTMODELXVPROC) (GLenum pname, const GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfixed * params)
PFNGLLIGHTXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTXPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfixed param)
PFNGLLIGHTXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTXVPROC) (GLenum light, GLenum pname, const GLfixed* params)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,const GLfixed * params)
PFNGLLINEWIDTHXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLINEWIDTHXPROC) (GLfixed width);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed width)
PFNGLLINKPROGRAMARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLLOADMATRIXXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADMATRIXXPROC) (const GLfixed* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfixed * m)
PFNGLLOADPROGRAMNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXDARBPROC) (GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble m[16])
PFNGLLOADTRANSPOSEMATRIXDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble m[16])
PFNGLLOADTRANSPOSEMATRIXFARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXFARBPROC) (GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat m[16])
PFNGLLOADTRANSPOSEMATRIXFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat m[16])
PFNGLLOCKARRAYSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint first,GLsizei count)
PFNGLLOGMESSAGECALLBACKREGALPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLLOGMESSAGECALLBACKREGALPROC) (GLLOGPROCREGAL callback);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLLOGPROCREGAL callback)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAPBUFFERARBPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	glew.h	/^typedef void* (GLAPIENTRY * PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeipt/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPCONTROLPOINTSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
PFNGLMAPNAMEDBUFFEREXTPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, G/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPNAMEDBUFFERRANGEPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPOBJECTBUFFERATIPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLMAPTEXTURE2DINTELPROC	glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfiel/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMATERIALXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATERIALXPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLfixed param)
PFNGLMATERIALXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATERIALXVPROC) (GLenum face, GLenum pname, const GLfixed* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfixed * params)
PFNGLMATRIXFRUSTUMEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXFRUSTUMEXTPROC) (GLenum matrixMode, GLdouble l, GLdouble r/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble l,GLdouble r,GLdouble b,GLdouble t,GLdouble n,GLdouble f)
PFNGLMATRIXINDEXPOINTERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLMATRIXINDEXUBVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXUBVARBPROC) (GLint size, GLubyte *indices);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXUIVARBPROC) (GLint size, GLuint *indices);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXUSVARBPROC) (GLint size, GLushort *indices);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLushort * indices)
PFNGLMATRIXLOADDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADDEXTPROC) (GLenum matrixMode, const GLdouble* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADFEXTPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum matrixMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum matrixMode, const GLdouble*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum matrixMode, const GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTDEXTPROC) (GLenum matrixMode, const GLdouble* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTFEXTPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum matrixMode, const GLdouble*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum matrixMode, const GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXORTHOEXTPROC) (GLenum matrixMode, GLdouble l, GLdouble r, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble l,GLdouble r,GLdouble b,GLdouble t,GLdouble n,GLdouble f)
PFNGLMATRIXPOPEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXPOPEXTPROC) (GLenum matrixMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode)
PFNGLMATRIXPUSHEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXPUSHEXTPROC) (GLenum matrixMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode)
PFNGLMATRIXROTATEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXROTATEDEXTPROC) (GLenum matrixMode, GLdouble angle, GLdoub/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXROTATEFEXTPROC) (GLenum matrixMode, GLfloat angle, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXSCALEDEXTPROC) (GLenum matrixMode, GLdouble x, GLdouble y,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXSCALEFEXTPROC) (GLenum matrixMode, GLfloat x, GLfloat y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum matrixMode, GLdouble x, GLdoubl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum matrixMode, GLfloat x, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMEMORYBARRIERBYREGIONPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield barriers)
PFNGLMEMORYBARRIEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield barriers)
PFNGLMINMAXEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINSAMPLESHADINGARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGARBPROC) (GLclampf value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value)
PFNGLMINSAMPLESHADINGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGPROC) (GLclampf value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value)
PFNGLMULTIDRAWARRAYSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint* first, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indire/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLintptr drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint* first/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei* co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, GLsizei* count, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLintptr drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum ty/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum* mode, const GLint *fi/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum* mode, const GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTITEXBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORD1DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalf s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s)
PFNGLMULTITEXCOORD1HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD1IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalf s, GLhalf t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s,GLhalf t)
PFNGLMULTITEXCOORD2HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD2IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalf s, GLhalf t, GLhal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s,GLhalf t,GLhalf r)
PFNGLMULTITEXCOORD3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD3IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalf s, GLhalf t, GLhal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s,GLhalf t,GLhalf r,GLhalf q)
PFNGLMULTITEXCOORD4HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD4IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4XPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4XPROC) (GLenum target, GLfixed s, GLfixed t, GLfix/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLMULTITEXCOORDP1UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * param)
PFNGLMULTITEXPARAMETERIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLint * param)
PFNGLMULTITEXRENDERBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLMULTMATRIXXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTMATRIXXPROC) (const GLfixed* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfixed * m)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXDARBPROC) (GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble m[16])
PFNGLMULTTRANSPOSEMATRIXDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble m[16])
PFNGLMULTTRANSPOSEMATRIXFARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXFARBPROC) (GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat m[16])
PFNGLMULTTRANSPOSEMATRIXFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat m[16])
PFNGLNAMEDBUFFERDATAEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSTORAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDBUFFERSUBDATAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeB/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum mode/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum mode/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum atta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint rend/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum inter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar* n/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNEWBUFFERREGIONPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLNEWBUFFERREGIONPROC) (GLenum region);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum region)
PFNGLNEWOBJECTBUFFERATIPROC	glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GL/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLsizei size,const void * pointer,GLenum usage)
PFNGLNORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* n, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3HNVPROC) (GLhalf nx, GLhalf ny, GLhalf nz);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf nx,GLhalf ny,GLhalf nz)
PFNGLNORMAL3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLNORMAL3XPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3XPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed nx,GLfixed ny,GLfixed nz)
PFNGLNORMALFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride)
PFNGLNORMALP3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei coun/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void** pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const void ** pointer)
PFNGLNORMALSTREAM3BATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte x, GLbyte y, GLbyt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLbyte x,GLbyte y,GLbyte z)
PFNGLNORMALSTREAM3BVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLNORMALSTREAM3DVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMALSTREAM3FVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLNORMALSTREAM3IVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLNORMALSTREAM3SVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLOBJECTLABELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLch/;"	t	typeref:typename:void (GLAPIENTRY *)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPURGEABLEAPPLEPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLe/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum objectType,GLuint name,GLenum option)
PFNGLOBJECTUNPURGEABLEAPPLEPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, G/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum objectType,GLuint name,GLenum option)
PFNGLORTHOFOESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLORTHOFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLORTHOFPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat left,GLfloat right,GLfloat bottom,GLfloat top,GLfloat zNear,GLfloat zFar)
PFNGLORTHOXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLORTHOXPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfixe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed left,GLfixed right,GLfixed bottom,GLfixed top,GLfixed zNear,GLfixed zFar)
PFNGLPASSTEXCOORDATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPATCHPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat* values);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint value)
PFNGLPATHCOLORGENNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorF/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
PFNGLPATHCOMMANDSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum zfunc);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum zfunc)
PFNGLPATHDASHARRAYNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHFOGGENNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum genMode)
PFNGLPATHGLYPHRANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei n/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHTEXGENNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint com/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPIXELDATARANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, void *poin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei length,void * pointer)
PFNGLPIXELTEXGENSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLPNTRIANGLESFATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, G/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed param)
PFNGLPOINTPARAMETERXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERXVPROC) (GLenum pname, const GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfixed * params)
PFNGLPOINTSIZEPOINTEROESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTSIZEPOINTEROESPROC) (GLenum type, GLsizei stride, const voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLPOINTSIZEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTSIZEXPROC) (GLfixed size);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed size)
PFNGLPOLLASYNCSGIXPROC	glew.h	/^typedef GLint (GLAPIENTRY * PFNGLPOLLASYNCSGIXPROC) (GLuint* markerp);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint * markerp)
PFNGLPOLYGONOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor,GLfloat bias)
PFNGLPOLYGONOFFSETXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOLYGONOFFSETXPROC) (GLfixed factor, GLfixed units);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed factor,GLfixed units)
PFNGLPOPDEBUGGROUPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPOPGROUPMARKEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPRESENTFRAMEDUALFILLNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minP/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
PFNGLPRESENTFRAMEKEYEDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPres/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
PFNGLPRIMITIVERESTARTINDEXNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLPRIMITIVERESTARTNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint* textures, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPROGRAMBINARYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMENVPARAMETER4DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERI4INVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMENVPARAMETERI4UINVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble v[])
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat v[])
PFNGLPROGRAMPARAMETER4DNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMPARAMETER4FNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMPARAMETERIARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERS4DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei num,const GLdouble * params)
PFNGLPROGRAMPARAMETERS4FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei num,const GLfloat * params)
PFNGLPROGRAMSTRINGARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLPROGRAMUNIFORM1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x)
PFNGLPROGRAMUNIFORM1FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x)
PFNGLPROGRAMUNIFORM1IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x,GLfloat y)
PFNGLPROGRAMUNIFORM2FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint x, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x,GLint y)
PFNGLPROGRAMUNIFORM2IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x,GLuint y)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z)
PFNGLPROGRAMUNIFORM3FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint x, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x,GLint y,GLint z)
PFNGLPROGRAMUNIFORM3IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x,GLuint y,GLuint z)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMUNIFORM4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint x, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMUNIFORM4IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMVERTEXLIMITNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint limit)
PFNGLPROVOKINGVERTEXEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar* marker);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTERANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLQUERYCOUNTERANGLEPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum target)
PFNGLQUERYCOUNTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum target)
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id,GLenum pname,GLuint param)
PFNGLREADBUFFERREGIONPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREADBUFFERREGIONPROC) (GLuint region, GLint x, GLint y, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint region,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLREADNPIXELSARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei he/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADVIDEOPIXELSSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREADVIDEOPIXELSSUNPROC) (GLint x, GLint y, GLsizei width, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,void * pixels)
PFNGLREFERENCEPLANESGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREFERENCEPLANESGIXPROC) (const GLdouble* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * equation)
PFNGLRELEASESHADERCOMPILERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRENDERBUFFERSTORAGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalforma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC) (GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samp/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte* code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint* rc, con/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint*/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint* rc, co/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint* rc, co/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (con/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint* rc, /;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint* rc, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint* code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort* code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLRESETHISTOGRAMEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESETHISTOGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESETMINMAXEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESETMINMAXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLROTATEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLROTATEXPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
PFNGLSAMPLECOVERAGEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLECOVERAGEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLECOVERAGEXPROC) (GLclampx value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKINDEXEDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pattern)
PFNGLSAMPLERPARAMETERFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLfloat * params)
PFNGLSAMPLERPARAMETERIIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLint * params)
PFNGLSAMPLERPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLuint * params)
PFNGLSAMPLERPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLint * params)
PFNGLSCALEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSCALEXPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed x,GLfixed y,GLfixed z)
PFNGLSCISSORARRAYVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint * v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORINDEXEDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint * v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLSECONDARYCOLOR3BEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat bl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3HNVPROC) (GLhalf red, GLhalf green, GLhalf blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf red,GLhalf green,GLhalf blue)
PFNGLSECONDARYCOLOR3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLSECONDARYCOLOR3IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort bl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLushort * v)
PFNGLSECONDARYCOLORFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei st/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLSECONDARYCOLORP3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint* color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean ena/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSEPARABLEFILTER2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSEPARABLEFILTER2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSETFENCEAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence)
PFNGLSETFENCENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, void *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,void * addr)
PFNGLSETLOCALCONSTANTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, void *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,void * addr)
PFNGLSETMULTISAMPLEFVAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,const GLfloat * val)
PFNGLSHADERBINARYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint* shaders, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
PFNGLSHADEROP1EXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint ar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint ar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHARPENTEXFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSPRITEPARAMETERFSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * params)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mas/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCSEPARATEATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPVALUEAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLuint value)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum path/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint m/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLint reference,GLuint mask)
PFNGLSTRINGMARKERGREMEDYPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei len,const void * string)
PFNGLSWIZZLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLSYNCTEXTUREINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture)
PFNGLTAGSAMPLEBUFFERSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLTANGENTPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, void *point/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,void * pointer)
PFNGLTBUFFERMASK3DFXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint mask)
PFNGLTESSELLATIONFACTORAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor)
PFNGLTESSELLATIONMODEAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLTESTFENCEAPPLEPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLTESTFENCENVPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum object,GLuint name)
PFNGLTEXBUFFERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalFormat, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalFormat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUMPPARAMETERFVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * param)
PFNGLTEXCOORD1HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD1HNVPROC) (GLhalf s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s)
PFNGLTEXCOORD1HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD1HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* tc, c/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat* tc, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* tc, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLfloat *v/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2HNVPROC) (GLhalf s, GLhalf t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s,GLhalf t)
PFNGLTEXCOORD2HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORD3HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD3HNVPROC) (GLhalf s, GLhalf t, GLhalf r);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s,GLhalf t,GLhalf r)
PFNGLTEXCOORD3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat* tc, c/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat* tc, const GLfloat *v/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4HNVPROC) (GLhalf s, GLhalf t, GLhalf r, GLhalf q);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s,GLhalf t,GLhalf r,GLhalf q)
PFNGLTEXCOORD4HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORDFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXCOORDP1UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stri/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,const void ** pointer)
PFNGLTEXENVXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXENVXPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXENVXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXENVXVPROC) (GLenum target, GLenum pname, const GLfixed* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXFILTERFUNCSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei cov/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei cov/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalForma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE4DSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei extent,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXPARAMETERIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERXPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXPARAMETERXVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERXVPROC) (GLenum target, GLenum pname, const GLfixed*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXRENDERBUFFERNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint renderbuffer)
PFNGLTEXSCISSORFUNCINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSCISSORFUNCINTELPROC) (GLenum target, GLenum lfunc, GLenum hf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum lfunc,GLenum hfunc)
PFNGLTEXSCISSORINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSCISSORINTELPROC) (GLenum target, GLclampf tlow, GLclampf thi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLclampf tlow,GLclampf thigh)
PFNGLTEXSTORAGE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGESPARSEAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXSUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei extent,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREBARRIERNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLTEXTUREBARRIERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBARRIERPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLTEXTUREBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum int/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREBUFFERRANGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREFOGSGIXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREFOGSGIXPROC) (GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname)
PFNGLTEXTUREIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTURELIGHTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXTUREPARAMETERFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLfloat * param)
PFNGLTEXTUREPARAMETERFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLfloat * param)
PFNGLTEXTUREPARAMETERIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLint * param)
PFNGLTEXTUREPARAMETERIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLint * param)
PFNGLTEXTURERANGEAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, void *poi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei length,void * pointer)
PFNGLTEXTURERENDERBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei sample/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei sample/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGESPARSEAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXTURESUBIMAGE1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtext/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRACKMATRIXNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint count,const GLint * attribs,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLuint index,GLuint buffer)
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLTRANSLATEXPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSLATEXPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed x,GLfixed y,GLfixed z)
PFNGLUNIFORM1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockInd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint bu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint buffer)
PFNGLUNIFORMHANDLEUI64ARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboole/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboole/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboole/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNLOCKARRAYSEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLUNMAPBUFFERARBPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target)
PFNGLUNMAPBUFFERPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLUNMAPNAMEDBUFFERPROC	glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLUNMAPOBJECTBUFFERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLUNMAPTEXTURE2DINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level)
PFNGLUPDATEOBJECTBUFFERATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
PFNGLUSEPROGRAMOBJECTARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPIPELINEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stri/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTBVEXTPROC) (GLuint id, GLbyte *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLbyte * addr)
PFNGLVARIANTDVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTDVEXTPROC) (GLuint id, GLdouble *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLdouble * addr)
PFNGLVARIANTFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTFVEXTPROC) (GLuint id, GLfloat *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLfloat * addr)
PFNGLVARIANTIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTIVEXTPROC) (GLuint id, GLint *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,GLuint stride,void * addr)
PFNGLVARIANTSVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTSVEXTPROC) (GLuint id, GLshort *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLshort * addr)
PFNGLVARIANTUBVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTUBVEXTPROC) (GLuint id, GLubyte *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTUIVEXTPROC) (GLuint id, GLuint *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLuint * addr)
PFNGLVARIANTUSVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTUSVEXTPROC) (GLuint id, GLushort *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLushort * addr)
PFNGLVDPAUFININVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUFININVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLVDPAUGETSURFACEIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLVDPAUINITNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUINITNVPROC) (const void* vdpDevice, const void*getProcAddre/;"	t	typeref:typename:void (GLAPIENTRY *)(const void * vdpDevice,const void * getProcAddress)
PFNGLVDPAUISSURFACENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface)
PFNGLVDPAUMAPSURFACESNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	glew.h	/^typedef GLvdpauSurfaceNV (GLAPIENTRY * PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void* vdpSu/;"	t	typeref:typename:GLvdpauSurfaceNV (GLAPIENTRY *)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	glew.h	/^typedef GLvdpauSurfaceNV (GLAPIENTRY * PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void* vdpSur/;"	t	typeref:typename:GLvdpauSurfaceNV (GLAPIENTRY *)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUSURFACEACCESSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum acce/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface,GLenum access)
PFNGLVDPAUUNMAPSURFACESNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUUNREGISTERSURFACENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface)
PFNGLVERTEX2HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX2HNVPROC) (GLhalf x, GLhalf y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf x,GLhalf y)
PFNGLVERTEX2HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX2HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLVERTEX3HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX3HNVPROC) (GLhalf x, GLhalf y, GLhalf z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf x,GLhalf y,GLhalf z)
PFNGLVERTEX3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLVERTEX4HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX4HNVPROC) (GLhalf x, GLhalf y, GLhalf z, GLhalf w);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf x,GLhalf y,GLhalf z,GLhalf w)
PFNGLVERTEX4HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX4HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLVERTEXARRAYATTRIBBINDINGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYATTRIBFORMATPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBIFORMATPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBLFORMATPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYBINDINGDIVISORPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindinginde/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYELEMENTBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYRANGENVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint bu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint att/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint ind/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint att/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint att/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXBUFFERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalf x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x)
PFNGLVERTEXATTRIB1HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB1SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalf x, GLhalf y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x,GLhalf y)
PFNGLVERTEXATTRIB2HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB2SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalf x, GLhalf y, GLhalf /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x,GLhalf y,GLhalf z)
PFNGLVERTEXATTRIB3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB3SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLsh/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalf x, GLhalf y, GLhalf /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x,GLhalf y,GLhalf z,GLhalf w)
PFNGLVERTEXATTRIB4HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB4IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLsh/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLub/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBBINDINGPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindinginde/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORANGLEPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISORANGLEPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0)
PFNGLVERTEXATTRIBI1IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI1UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0)
PFNGLVERTEXATTRIBI1UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI2IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint v0, GLint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0,GLint v1)
PFNGLVERTEXATTRIBI2IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI2UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0,GLuint v1)
PFNGLVERTEXATTRIBI2UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI3IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint v0, GLint v1, GLint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0,GLint v1,GLint v2)
PFNGLVERTEXATTRIBI3IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI3UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint v0, GLuint v1, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0,GLuint v1,GLuint v2)
PFNGLVERTEXATTRIBI3UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI4BVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v0)
PFNGLVERTEXATTRIBI4IEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint v0, GLint v1, GLint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLVERTEXATTRIBI4IVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI4SVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v0)
PFNGLVERTEXATTRIBI4UBVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v0)
PFNGLVERTEXATTRIBI4UIEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint v0, GLuint v1, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLVERTEXATTRIBI4UIVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI4USVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v0)
PFNGLVERTEXATTRIBIFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT* v)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint param)
PFNGLVERTEXATTRIBPOINTERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum ty/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint size, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS1SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS2SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS3SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS4SVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei n, const GLubyte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLubyte * v)
PFNGLVERTEXBINDINGDIVISORPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBLENDARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLVERTEXFORMATNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXP2UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint* value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint* value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint* value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void** /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,const void ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTFVEXTPROC) (GLfloat* weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTHNVPROC) (GLhalf weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf weight)
PFNGLVERTEXWEIGHTHVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalf* weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei st/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLVIDEOCAPTURENVPROC	glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint* sequen/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
PFNGLVIEWPORTARRAYVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat * v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLWAITSYNCPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWAITSYNCPROC) (GLsync GLsync,GLbitfield flags,GLuint64 timeout);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync,GLbitfield flags,GLuint64 timeout)
PFNGLWEIGHTBVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTBVARBPROC) (GLint size, GLbyte *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLbyte * weights)
PFNGLWEIGHTDVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTDVARBPROC) (GLint size, GLdouble *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLdouble * weights)
PFNGLWEIGHTFVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTFVARBPROC) (GLint size, GLfloat *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLfloat * weights)
PFNGLWEIGHTIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTIVARBPROC) (GLint size, GLint *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLint * weights)
PFNGLWEIGHTPATHSNVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLsizei numPaths,const GLuint paths[],const GLfloat weights[])
PFNGLWEIGHTPOINTERARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLWEIGHTSVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTSVARBPROC) (GLint size, GLshort *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLshort * weights)
PFNGLWEIGHTUBVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTUBVARBPROC) (GLint size, GLubyte *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTUIVARBPROC) (GLint size, GLuint *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLuint * weights)
PFNGLWEIGHTUSVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTUSVARBPROC) (GLint size, GLushort *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DVARBPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS2DVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS2DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DVPROC) (const GLdouble *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS2FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FVARBPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS2FVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS2FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FVPROC) (const GLfloat *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS2IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IVARBPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS2IVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IVMESAPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS2IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IVPROC) (const GLint *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS2SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SVARBPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS2SVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SVMESAPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS2SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SVPROC) (const GLshort *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS3DARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DVARBPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS3DVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS3DVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DVPROC) (const GLdouble *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS3FARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FVARBPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS3FVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS3FVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FVPROC) (const GLfloat *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS3IARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IVARBPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS3IVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IVMESAPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS3IVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IVPROC) (const GLint *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS3SARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SVARBPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS3SVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SVMESAPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS3SVPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SVPROC) (const GLshort *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS4DMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdoub/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z,GLdouble)
PFNGLWINDOWPOS4DVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS4FMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS4IMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4IVMESAPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS4SMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4SVMESAPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWRITEMASKEXTPROC	glew.h	/^typedef void (GLAPIENTRY * PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum ou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
Pattern	main.cpp	/^GLSLProgram Pattern;$/;"	v	typeref:typename:GLSLProgram
PositionDataF16	glm/detail/dummy.cpp	/^glm::uint const PositionDataF16[VertexCount] =$/;"	v	typeref:typename:glm::uint const[]
PositionDataF32	glm/detail/dummy.cpp	/^glm::vec2 const PositionDataF32[VertexCount] =$/;"	v	typeref:typename:glm::vec2 const[]
PositionDataI32	glm/detail/dummy.cpp	/^glm::i32vec2 const PositionDataI32[VertexCount] =$/;"	v	typeref:typename:glm::i32vec2 const[]
PositionDataI8	glm/detail/dummy.cpp	/^glm::i8vec2 const PositionDataI8[VertexCount] =$/;"	v	typeref:typename:glm::i8vec2 const[]
PositionSizeF16	glm/detail/dummy.cpp	/^std::size_t const PositionSizeF16 = VertexCount * sizeof(glm::uint);$/;"	v	typeref:typename:std::size_t const
PositionSizeF32	glm/detail/dummy.cpp	/^std::size_t const PositionSizeF32 = VertexCount * sizeof(glm::vec2);$/;"	v	typeref:typename:std::size_t const
PositionSizeI32	glm/detail/dummy.cpp	/^std::size_t const PositionSizeI32 = VertexCount * sizeof(glm::i32vec2);$/;"	v	typeref:typename:std::size_t const
PositionSizeI8	glm/detail/dummy.cpp	/^std::size_t const PositionSizeI8 = VertexCount * sizeof(glm::i8vec2);$/;"	v	typeref:typename:std::size_t const
PrintTimeValues	keytime.cpp	/^Keytimes::PrintTimeValues( )$/;"	f	class:Keytimes	typeref:typename:void
Program	glslprogram.h	/^	GLuint			Program;$/;"	m	class:GLSLProgram	typeref:typename:GLuint
Projections	main.cpp	/^enum Projections$/;"	g	file:
Q	glm/gtx/simd_vec4.hpp	/^		Q = 3$/;"	e	enum:glm::comp
QUIT	main.cpp	/^	QUIT$/;"	e	enum:ButtonVals	file:
R	glm/gtx/simd_vec4.hpp	/^		R = 0,$/;"	e	enum:glm::comp
RED	main.cpp	/^	RED,$/;"	e	enum:Colors	file:
RESET	main.cpp	/^	RESET,$/;"	e	enum:ButtonVals	file:
RIGHT	main.cpp	/^const int RIGHT  = 1;$/;"	v	typeref:typename:const int
ReadInt	bmptotexture.cpp	/^ReadInt( FILE *fp )$/;"	f	typeref:typename:int
ReadObjVTN	loadobjfile.cpp	/^ReadObjVTN( char *str, int *v, int *t, int *n )$/;"	f	typeref:typename:void
ReadRestOfLine	loadobjfile.cpp	/^ReadRestOfLine( FILE *fp )$/;"	f	typeref:typename:char *
ReadShort	bmptotexture.cpp	/^ReadShort( FILE *fp )$/;"	f	typeref:typename:short
Reset	main.cpp	/^Reset( )$/;"	f	typeref:typename:void
Resize	main.cpp	/^Resize( int width, int height )$/;"	f	typeref:typename:void
Resolution	main.cpp	/^int   Resolution;       \/\/Resolution of plane. Default 10$/;"	v	typeref:typename:int
S	glm/gtx/simd_vec4.hpp	/^		S = 0,$/;"	e	enum:glm::comp
SCLFACT	main.cpp	/^const float SCLFACT = 0.005f;$/;"	v	typeref:typename:const float
SCROLL_WHEEL_CLICK_FACTOR	main.cpp	/^const float SCROLL_WHEEL_CLICK_FACTOR = 5.f;$/;"	v	typeref:typename:const float
SCROLL_WHEEL_DOWN	main.cpp	/^const int SCROLL_WHEEL_DOWN = 4;$/;"	v	typeref:typename:const int
SCROLL_WHEEL_UP	main.cpp	/^const int SCROLL_WHEEL_UP   = 3;$/;"	v	typeref:typename:const int
Sc	main.cpp	/^Keytimes Sc, Tc;$/;"	v	typeref:typename:Keytimes
Scale	main.cpp	/^float	Scale;					\/\/ scaling factor$/;"	v	typeref:typename:float
SetAttributePointer3fv	glslprogram.cpp	/^GLSLProgram::SetAttributePointer3fv( char* name, float* vals )$/;"	f	class:GLSLProgram	typeref:typename:void
SetAttributeVariable	glslprogram.cpp	/^GLSLProgram::SetAttributeVariable( char* name, float val )$/;"	f	class:GLSLProgram	typeref:typename:void
SetAttributeVariable	glslprogram.cpp	/^GLSLProgram::SetAttributeVariable( char* name, float val0, float val1, float val2 )$/;"	f	class:GLSLProgram	typeref:typename:void
SetAttributeVariable	glslprogram.cpp	/^GLSLProgram::SetAttributeVariable( char* name, float vals[3] )$/;"	f	class:GLSLProgram	typeref:typename:void
SetAttributeVariable	glslprogram.cpp	/^GLSLProgram::SetAttributeVariable( char* name, int val )$/;"	f	class:GLSLProgram	typeref:typename:void
SetMaterial	setmaterial.cpp	/^SetMaterial( float r, float g, float b,  float shininess )$/;"	f	typeref:typename:void
SetPointLight	setlight.cpp	/^SetPointLight( int ilight, float x, float y, float z,  float r, float g, float b )$/;"	f	typeref:typename:void
SetSpotLight	setlight.cpp	/^SetSpotLight( int ilight, float x, float y, float z,  float xdir, float ydir, float zdir, float /;"	f	typeref:typename:void
SetUniformVariable	glslprogram.cpp	/^GLSLProgram::SetUniformVariable( char* name, float val )$/;"	f	class:GLSLProgram	typeref:typename:void
SetUniformVariable	glslprogram.cpp	/^GLSLProgram::SetUniformVariable( char* name, float val0, float val1, float val2 )$/;"	f	class:GLSLProgram	typeref:typename:void
SetUniformVariable	glslprogram.cpp	/^GLSLProgram::SetUniformVariable( char* name, float vals[3] )$/;"	f	class:GLSLProgram	typeref:typename:void
SetUniformVariable	glslprogram.cpp	/^GLSLProgram::SetUniformVariable( char* name, int val )$/;"	f	class:GLSLProgram	typeref:typename:void
SetVerbose	glslprogram.cpp	/^GLSLProgram::SetVerbose( bool v )$/;"	f	class:GLSLProgram	typeref:typename:void
ShaderTypes	glslprogram.cpp	/^ShaderTypes [ ] =$/;"	v	typeref:struct:GLshadertype[]
Stub	glm/detail/_swizzle.hpp	/^		struct Stub {};$/;"	s	struct:glm::detail::_swizzle_base2
T	glm/gtx/simd_vec4.hpp	/^		T = 1,$/;"	e	enum:glm::comp
Tc	main.cpp	/^Keytimes Sc, Tc;$/;"	v	typeref:typename:Keytimes
TextureCoord	loadobjfile.cpp	/^struct TextureCoord$/;"	s	file:
Time	main.cpp	/^float	Time;					\/\/ used for animation, this has a value between 0. and 1.$/;"	v	typeref:typename:float
TimeValue	keytime.h	/^struct TimeValue$/;"	s
UnUse	glslprogram.cpp	/^GLSLProgram::UnUse( )$/;"	f	class:GLSLProgram	typeref:typename:void
UniformLocs	glslprogram.h	/^	std::map<char *, int>	UniformLocs;$/;"	m	class:GLSLProgram	typeref:typename:std::map<char *,int>
Unit	main.cpp	/^Unit( float v[3] )$/;"	f	typeref:typename:float
Unit	main.cpp	/^Unit(float vin[3], float vout[3])$/;"	f	typeref:typename:float
Use	glslprogram.cpp	/^GLSLProgram::Use( )$/;"	f	class:GLSLProgram	typeref:typename:void
Use	glslprogram.cpp	/^GLSLProgram::Use( GLuint p )$/;"	f	class:GLSLProgram	typeref:typename:void
UseFixedFunction	glslprogram.cpp	/^GLSLProgram::UseFixedFunction( )$/;"	f	class:GLSLProgram	typeref:typename:void
VERBOSE	bmptotexture.cpp	/^#define VERBOSE	/;"	d	file:
Valid	glslprogram.h	/^	bool			Valid;$/;"	m	class:GLSLProgram	typeref:typename:bool
Verbose	glslprogram.h	/^	bool			Verbose;$/;"	m	class:GLSLProgram	typeref:typename:bool
Vertex	loadobjfile.cpp	/^struct Vertex$/;"	s	file:
VertexCount	glm/detail/dummy.cpp	/^std::size_t const VertexCount = 4;$/;"	v	typeref:typename:std::size_t const
Vfile	glslprogram.h	/^	char *			Vfile;$/;"	m	class:GLSLProgram	typeref:typename:char *
Visibility	main.cpp	/^Visibility ( int state )$/;"	f	typeref:typename:void
Vshader	glslprogram.h	/^	GLuint			Vshader;$/;"	m	class:GLSLProgram	typeref:typename:GLuint
W	glm/gtx/simd_vec4.hpp	/^		W = 3,$/;"	e	enum:glm::comp
WHITE	main.cpp	/^const float	WHITE[ ] = { 1.,1.,1.,1. };$/;"	v	typeref:typename:const float[]
WIN32_LEAN_AND_MEAN	freeglut_std.h	/^#    define WIN32_LEAN_AND_MEAN /;"	d
WINDOWTITLE	main.cpp	/^const char *WINDOWTITLE = "TopoToucher -- Will Garrison";$/;"	v	typeref:typename:const char *
WINGDIAPI	glew.h	/^#define WINGDIAPI /;"	d
X	glm/gtx/simd_vec4.hpp	/^		X = 0,$/;"	e	enum:glm::comp
Xmouse	main.cpp	/^int		Xmouse, Ymouse;			\/\/ mouse values$/;"	v	typeref:typename:int
Xrot	main.cpp	/^float	Xrot, Yrot;				\/\/ rotation angles in degrees$/;"	v	typeref:typename:float
Y	glm/gtx/simd_vec4.hpp	/^		Y = 1,$/;"	e	enum:glm::comp
YCoCg2rgb	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> YCoCg2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
YCoCgR2rgb	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> YCoCgR2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
YELLOW	main.cpp	/^	YELLOW,$/;"	e	enum:Colors	file:
Ymouse	main.cpp	/^int		Xmouse, Ymouse;			\/\/ mouse values$/;"	v	typeref:typename:int
Yrot	main.cpp	/^float	Xrot, Yrot;				\/\/ rotation angles in degrees$/;"	v	typeref:typename:float
Z	glm/gtx/simd_vec4.hpp	/^		Z = 2,$/;"	e	enum:glm::comp
_GLM_SWIZZLE2_2_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE2_2_MEMBERS(/;"	d
_GLM_SWIZZLE2_3_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE2_3_MEMBERS(/;"	d
_GLM_SWIZZLE2_4_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE2_4_MEMBERS(/;"	d
_GLM_SWIZZLE3_2_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE3_2_MEMBERS(/;"	d
_GLM_SWIZZLE3_3_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE3_3_MEMBERS(/;"	d
_GLM_SWIZZLE3_4_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE3_4_MEMBERS(/;"	d
_GLM_SWIZZLE4_2_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE4_2_MEMBERS(/;"	d
_GLM_SWIZZLE4_3_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE4_3_MEMBERS(/;"	d
_GLM_SWIZZLE4_4_MEMBERS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE4_4_MEMBERS(/;"	d
_GLM_SWIZZLE_FUNCTION_1_ARGS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_FUNCTION_1_ARGS(/;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_FUNCTION_2_ARGS(/;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR(/;"	d
_GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
_GLM_SWIZZLE_TEMPLATE1	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TEMPLATE1 /;"	d
_GLM_SWIZZLE_TEMPLATE2	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TEMPLATE2 /;"	d
_GLM_SWIZZLE_TYPE1	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TYPE1 /;"	d
_GLM_SWIZZLE_TYPE2	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_TYPE2 /;"	d
_GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION	glm/detail/_swizzle.hpp	/^#define _GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
_PTRDIFF_T_	glew.h	/^#  define _PTRDIFF_T_$/;"	d
_PTRDIFF_T_DEFINED	glew.h	/^#  define _PTRDIFF_T_DEFINED$/;"	d
_USE_MATH_DEFINES	glslprogram.h	/^#define _USE_MATH_DEFINES$/;"	d
_USE_MATH_DEFINES	main.cpp	/^#define _USE_MATH_DEFINES$/;"	d	file:
_W64	glew.h	/^#    define _W64 /;"	d
_W64	glew.h	/^#    define _W64$/;"	d
_WCHAR_T_DEFINED	glew.h	/^#  define _WCHAR_T_DEFINED$/;"	d
__FREEGLUT_EXT_H__	freeglut_ext.h	/^#define  __FREEGLUT_EXT_H__$/;"	d
__FREEGLUT_H__	freeglut.h	/^#define  __FREEGLUT_H__$/;"	d
__FREEGLUT_STD_H__	freeglut_std.h	/^#define  __FREEGLUT_STD_H__$/;"	d
__GLEW_3DFX_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_3DFX_tbuffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_tbuffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_3DFX_texture_compression_FXT1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_texture_compression_FXT1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_blend_minmax_factor	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_blend_minmax_factor;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_conservative_depth	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_conservative_depth;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_debug_output	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_debug_output;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_depth_clamp_separate	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_depth_clamp_separate;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_draw_buffers_blend	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_draw_buffers_blend;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_gcn_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_gcn_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_gpu_shader_int64	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_gpu_shader_int64;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_interleaved_elements	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_interleaved_elements;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_multi_draw_indirect	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_multi_draw_indirect;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_name_gen_delete	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_name_gen_delete;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_occlusion_query_event	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_occlusion_query_event;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_performance_monitor	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_performance_monitor;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_pinned_memory	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_pinned_memory;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_query_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_query_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_sample_positions	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_sample_positions;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_seamless_cubemap_per_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_seamless_cubemap_per_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_atomic_counter_ops	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_atomic_counter_ops;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_stencil_export	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_stencil_export;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_stencil_value_export	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_stencil_value_export;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_trinary_minmax	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_trinary_minmax;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_sparse_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_sparse_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_stencil_operation_extended	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_stencil_operation_extended;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_texture_texture4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_texture_texture4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_transform_feedback3_lines_triangles	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_transform_feedback3_lines_triangles;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_transform_feedback4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_transform_feedback4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_vertex_shader_layer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_vertex_shader_layer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_vertex_shader_tessellator	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_vertex_shader_tessellator;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_vertex_shader_viewport_index	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_vertex_shader_viewport_index;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_depth_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_depth_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_framebuffer_blit	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_framebuffer_blit;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_framebuffer_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_framebuffer_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_instanced_arrays	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_instanced_arrays;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_pack_reverse_row_order	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_pack_reverse_row_order;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_program_binary	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_program_binary;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_compression_dxt1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_compression_dxt1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_compression_dxt3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_compression_dxt3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_compression_dxt5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_compression_dxt5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_usage	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_usage;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_timer_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_timer_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_translated_shader_source	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_translated_shader_source;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_aux_depth_stencil	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_aux_depth_stencil;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_client_storage	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_client_storage;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_element_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_element_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_fence	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_fence;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_float_pixels	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_float_pixels;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_flush_buffer_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_flush_buffer_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_object_purgeable	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_object_purgeable;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_pixel_buffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_pixel_buffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_rgb_422	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_rgb_422;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_row_bytes	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_row_bytes;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_specular_vector	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_specular_vector;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_texture_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_texture_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_transform_hint	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_transform_hint;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_vertex_array_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_vertex_array_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_vertex_array_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_vertex_array_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_vertex_program_evaluators	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_vertex_program_evaluators;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_ycbcr_422	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_ycbcr_422;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_ES2_compatibility	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_ES2_compatibility;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_ES3_1_compatibility	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_ES3_1_compatibility;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_ES3_compatibility	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_ES3_compatibility;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_arrays_of_arrays	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_arrays_of_arrays;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_base_instance	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_base_instance;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_bindless_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_bindless_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_blend_func_extended	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_blend_func_extended;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_buffer_storage	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_buffer_storage;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_cl_event	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_cl_event;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_clear_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_clear_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_clear_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_clear_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_clip_control	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_clip_control;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_color_buffer_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_color_buffer_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compatibility	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compatibility;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compressed_texture_pixel_storage	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compressed_texture_pixel_storage;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compute_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compute_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compute_variable_group_size	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compute_variable_group_size;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_conditional_render_inverted	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_conditional_render_inverted;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_conservative_depth	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_conservative_depth;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_copy_buffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_copy_buffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_copy_image	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_copy_image;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_cull_distance	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_cull_distance;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_debug_output	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_debug_output;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_depth_buffer_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_depth_buffer_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_depth_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_depth_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_depth_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_depth_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_derivative_control	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_derivative_control;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_direct_state_access	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_direct_state_access;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_buffers	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_buffers;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_buffers_blend	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_buffers_blend;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_elements_base_vertex	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_elements_base_vertex;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_indirect	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_indirect;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_instanced	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_instanced;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_enhanced_layouts	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_enhanced_layouts;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_explicit_attrib_location	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_explicit_attrib_location;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_explicit_uniform_location	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_explicit_uniform_location;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_coord_conventions	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_coord_conventions;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_layer_viewport	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_layer_viewport;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_program	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_program;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_program_shadow	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_program_shadow;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_framebuffer_no_attachments	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_framebuffer_no_attachments;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_framebuffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_framebuffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_framebuffer_sRGB	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_framebuffer_sRGB;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_geometry_shader4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_geometry_shader4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_get_program_binary	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_get_program_binary;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_get_texture_sub_image	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_get_texture_sub_image;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_gpu_shader5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_gpu_shader5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_gpu_shader_fp64	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_gpu_shader_fp64;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_half_float_pixel	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_half_float_pixel;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_half_float_vertex	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_half_float_vertex;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_imaging	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_imaging;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_indirect_parameters	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_indirect_parameters;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_instanced_arrays	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_instanced_arrays;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_internalformat_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_internalformat_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_internalformat_query2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_internalformat_query2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_invalidate_subdata	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_invalidate_subdata;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_map_buffer_alignment	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_map_buffer_alignment;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_map_buffer_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_map_buffer_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_matrix_palette	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_matrix_palette;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multi_bind	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multi_bind;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multi_draw_indirect	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multi_draw_indirect;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multitexture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multitexture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_occlusion_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_occlusion_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_occlusion_query2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_occlusion_query2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_pipeline_statistics_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_pipeline_statistics_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_pixel_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_pixel_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_point_parameters	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_point_parameters;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_point_sprite	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_point_sprite;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_program_interface_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_program_interface_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_provoking_vertex	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_provoking_vertex;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_query_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_query_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robust_buffer_access_behavior	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robust_buffer_access_behavior;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robustness	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robustness;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robustness_application_isolation	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robustness_application_isolation;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robustness_share_group_isolation	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robustness_share_group_isolation;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sample_shading	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sample_shading;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sampler_objects	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sampler_objects;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_seamless_cube_map	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_seamless_cube_map;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_seamless_cubemap_per_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_seamless_cubemap_per_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_separate_shader_objects	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_separate_shader_objects;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_atomic_counters	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_atomic_counters;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_bit_encoding	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_bit_encoding;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_draw_parameters	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_draw_parameters;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_group_vote	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_group_vote;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_image_load_store	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_image_load_store;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_image_size	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_image_size;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_objects	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_objects;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_precision	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_precision;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_stencil_export	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_stencil_export;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_storage_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_storage_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_subroutine	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_subroutine;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_texture_image_samples	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_texture_image_samples;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_texture_lod	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_texture_lod;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_100	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_100;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_420pack	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_420pack;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_include	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_include;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_packing	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_packing;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shadow	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shadow;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shadow_ambient	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shadow_ambient;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sparse_buffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sparse_buffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sparse_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sparse_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_stencil_texturing	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_stencil_texturing;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sync	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sync;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_tessellation_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_tessellation_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_barrier	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_barrier;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_border_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_border_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_buffer_object_rgb32	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_buffer_object_rgb32;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_buffer_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_buffer_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_compression	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_compression;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_compression_bptc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_compression_bptc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_compression_rgtc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_compression_rgtc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_cube_map	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_cube_map;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_cube_map_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_cube_map_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_add	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_add;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_combine	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_combine;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_crossbar	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_crossbar;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_dot3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_dot3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_gather	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_gather;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_mirror_clamp_to_edge	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_mirror_clamp_to_edge;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_mirrored_repeat	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_mirrored_repeat;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_non_power_of_two	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_non_power_of_two;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_query_levels	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_query_levels;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_query_lod	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_query_lod;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_rectangle	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_rectangle;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_rg	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_rg;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_rgb10_a2ui	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_rgb10_a2ui;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_stencil8	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_stencil8;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_storage	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_storage;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_storage_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_storage_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_swizzle	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_swizzle;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_view	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_view;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_timer_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_timer_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback_instanced	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback_instanced;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback_overflow_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback_overflow_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transpose_matrix	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transpose_matrix;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_uniform_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_uniform_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_array_bgra	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_array_bgra;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_array_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_array_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_attrib_64bit	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_attrib_64bit;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_attrib_binding	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_attrib_binding;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_blend	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_blend;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_program	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_program;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_type_10f_11f_11f_rev	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_type_10f_11f_11f_rev;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_type_2_10_10_10_rev	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_type_2_10_10_10_rev;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_viewport_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_viewport_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_window_pos	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_window_pos;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_point_sprites	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_point_sprites;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_texture_env_combine3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_texture_env_combine3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_texture_env_route	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_texture_env_route;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_vertex_shader_output_point_size	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_vertex_shader_output_point_size;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_draw_buffers	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_draw_buffers;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_element_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_element_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_envmap_bumpmap	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_envmap_bumpmap;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_fragment_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_fragment_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_map_object_buffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_map_object_buffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_meminfo	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_meminfo;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_pn_triangles	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_pn_triangles;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_separate_stencil	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_separate_stencil;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_shader_texture_lod	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_shader_texture_lod;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_text_fragment_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_text_fragment_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_compression_3dc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_compression_3dc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_env_combine3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_env_combine3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_mirror_once	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_mirror_once;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_vertex_array_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_vertex_array_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_vertex_attrib_array_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_vertex_attrib_array_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_vertex_streams	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_vertex_streams;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_422_pixels	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_422_pixels;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_Cg_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_Cg_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_abgr	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_abgr;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_bgra	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_bgra;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_bindable_uniform	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_bindable_uniform;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_color	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_color;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_equation_separate	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_equation_separate;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_func_separate	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_func_separate;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_logic_op	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_logic_op;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_minmax	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_minmax;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_subtract	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_subtract;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_clip_volume_hint	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_clip_volume_hint;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_cmyka	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_cmyka;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_color_subtable	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_color_subtable;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_compiled_vertex_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_compiled_vertex_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_convolution	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_convolution;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_coordinate_frame	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_coordinate_frame;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_copy_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_copy_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_cull_vertex	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_cull_vertex;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_debug_label	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_debug_label;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_debug_marker	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_debug_marker;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_depth_bounds_test	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_depth_bounds_test;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_direct_state_access	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_direct_state_access;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_buffers2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_buffers2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_instanced	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_instanced;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_range_elements	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_range_elements;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_fog_coord	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_fog_coord;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_fragment_lighting	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_fragment_lighting;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_blit	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_blit;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_multisample_blit_scaled	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_multisample_blit_scaled;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_sRGB	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_sRGB;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_geometry_shader4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_geometry_shader4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_gpu_program_parameters	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_gpu_program_parameters;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_gpu_shader4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_gpu_shader4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_histogram	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_histogram;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_array_formats	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_array_formats;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_func	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_func;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_material	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_material;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_light_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_light_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_misc_attribute	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_misc_attribute;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multi_draw_arrays	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multi_draw_arrays;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_packed_depth_stencil	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_packed_depth_stencil;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_packed_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_packed_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_packed_pixels	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_packed_pixels;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_paletted_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_paletted_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_pixel_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_pixel_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_pixel_transform	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_pixel_transform;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_pixel_transform_color_table	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_pixel_transform_color_table;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_point_parameters	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_point_parameters;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_polygon_offset	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_polygon_offset;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_provoking_vertex	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_provoking_vertex;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_rescale_normal	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_rescale_normal;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_scene_marker	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_scene_marker;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_secondary_color	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_secondary_color;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_separate_shader_objects	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_separate_shader_objects;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_separate_specular_color	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_separate_specular_color;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_image_load_formatted	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_image_load_formatted;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_image_load_store	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_image_load_store;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_integer_mix	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_integer_mix;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shadow_funcs	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shadow_funcs;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shared_texture_palette	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shared_texture_palette;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_stencil_clear_tag	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_stencil_clear_tag;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_stencil_two_side	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_stencil_two_side;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_stencil_wrap	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_stencil_wrap;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_subtexture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_subtexture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture3D	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture3D;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_dxt1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_dxt1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_latc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_latc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_rgtc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_rgtc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_s3tc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_s3tc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_cube_map	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_cube_map;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_edge_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_edge_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env_add	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env_add;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env_combine	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env_combine;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env_dot3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env_dot3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_filter_anisotropic	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_filter_anisotropic;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_integer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_integer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_lod_bias	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_lod_bias;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_mirror_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_mirror_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_perturb_normal	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_perturb_normal;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_rectangle	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_rectangle;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_sRGB	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_sRGB;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_sRGB_decode	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_sRGB_decode;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_shared_exponent	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_shared_exponent;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_snorm	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_snorm;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_swizzle	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_swizzle;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_timer_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_timer_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_transform_feedback	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_transform_feedback;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_array_bgra	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_array_bgra;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_attrib_64bit	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_attrib_64bit;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_weighting	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_weighting;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_x11_sync_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_x11_sync_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_GREMEDY_frame_terminator	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_GREMEDY_frame_terminator;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_GREMEDY_string_marker	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_GREMEDY_string_marker;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_convolution_border_modes	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_convolution_border_modes;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_image_transform	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_image_transform;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_occlusion_test	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_occlusion_test;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_texture_lighting	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_texture_lighting;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_H__	glew.h	/^#define __GLEW_H__$/;"	d
__GLEW_IBM_cull_vertex	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_cull_vertex;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_multimode_draw_arrays	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_multimode_draw_arrays;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_rasterpos_clip	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_rasterpos_clip;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_static_data	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_static_data;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_texture_mirrored_repeat	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_texture_mirrored_repeat;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_vertex_array_lists	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_vertex_array_lists;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INGR_color_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INGR_color_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INGR_interlace_read	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INGR_interlace_read;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_fragment_shader_ordering	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_fragment_shader_ordering;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_map_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_map_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_parallel_arrays	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_parallel_arrays;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_performance_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_performance_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_texture_scissor	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_texture_scissor;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_blend_equation_advanced	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_blend_equation_advanced;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_blend_equation_advanced_coherent	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_blend_equation_advanced_coherent;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_context_flush_control	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_context_flush_control;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_debug	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_debug;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_robust_buffer_access_behavior	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_robust_buffer_access_behavior;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_robustness	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_robustness;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_texture_compression_astc_hdr	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_texture_compression_astc_hdr;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_texture_compression_astc_ldr	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_texture_compression_astc_ldr;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KTX_buffer_region	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KTX_buffer_region;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESAX_texture_stack	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESAX_texture_stack;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_pack_invert	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_pack_invert;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_resize_buffers	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_resize_buffers;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_window_pos	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_window_pos;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_ycbcr_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_ycbcr_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_conditional_render	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_conditional_render;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_gpu_memory_info	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_gpu_memory_info;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_bindless_multi_draw_indirect	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_bindless_multi_draw_indirect;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_bindless_multi_draw_indirect_count	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_bindless_multi_draw_indirect_count;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_bindless_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_bindless_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_blend_equation_advanced	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_blend_equation_advanced;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_blend_equation_advanced_coherent	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_blend_equation_advanced_coherent;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_blend_square	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_blend_square;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_compute_program5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_compute_program5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_conditional_render	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_conditional_render;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_copy_depth_to_color	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_copy_depth_to_color;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_copy_image	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_copy_image;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_deep_texture3D	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_deep_texture3D;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_depth_buffer_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_depth_buffer_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_depth_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_depth_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_depth_range_unclamped	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_depth_range_unclamped;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_draw_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_draw_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_evaluators	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_evaluators;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_explicit_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_explicit_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fence	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fence;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_float_buffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_float_buffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fog_distance	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fog_distance;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program_option	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program_option;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_framebuffer_multisample_coverage	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_framebuffer_multisample_coverage;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_geometry_program4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_geometry_program4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_geometry_shader4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_geometry_shader4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program5_mem_extended	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program5_mem_extended;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program_fp64	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program_fp64;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_shader5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_shader5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_half_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_half_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_light_max_exponent	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_light_max_exponent;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_multisample_coverage	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_multisample_coverage;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_multisample_filter_hint	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_multisample_filter_hint;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_occlusion_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_occlusion_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_packed_depth_stencil	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_packed_depth_stencil;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_parameter_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_parameter_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_parameter_buffer_object2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_parameter_buffer_object2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_path_rendering	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_path_rendering;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_pixel_data_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_pixel_data_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_point_sprite	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_point_sprite;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_present_video	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_present_video;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_primitive_restart	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_primitive_restart;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_register_combiners	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_register_combiners;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_register_combiners2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_register_combiners2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_counters	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_counters;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_float	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_float;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_int64	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_int64;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_buffer_load	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_buffer_load;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_storage_buffer_object	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_storage_buffer_object;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_thread_group	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_thread_group;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_thread_shuffle	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_thread_shuffle;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_tessellation_program5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_tessellation_program5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texgen_emboss	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texgen_emboss;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texgen_reflection	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texgen_reflection;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_barrier	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_barrier;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_compression_vtc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_compression_vtc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_env_combine4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_env_combine4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_expand_normal	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_expand_normal;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_rectangle	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_rectangle;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_shader	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_shader;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_shader2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_shader2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_shader3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_shader3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_transform_feedback	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_transform_feedback;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_transform_feedback2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_transform_feedback2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vdpau_interop	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vdpau_interop;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_array_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_array_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_array_range2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_array_range2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_attrib_integer_64bit	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_attrib_integer_64bit;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_buffer_unified_memory	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_buffer_unified_memory;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program1_1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program1_1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program2_option	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program2_option;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_video_capture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_video_capture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_byte_coordinates	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_byte_coordinates;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_compressed_paletted_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_compressed_paletted_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_read_format	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_read_format;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_single_precision	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_single_precision;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OML_interlace	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OML_interlace;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OML_resample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OML_resample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OML_subsample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OML_subsample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_PGI_misc_hints	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_PGI_misc_hints;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_PGI_vertex_hints	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_PGI_vertex_hints;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_ES1_0_compatibility	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_ES1_0_compatibility;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_ES1_1_compatibility	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_ES1_1_compatibility;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_enable	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_enable;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_error_string	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_error_string;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_extension_query	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_extension_query;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_log	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_log;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_proc_address	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_proc_address;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REND_screen_coordinates	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REND_screen_coordinates;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_S3_s3tc	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_S3_s3tc;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_color_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_color_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_detail_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_detail_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_fog_function	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_fog_function;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_generate_mipmap	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_generate_mipmap;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_multisample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_multisample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_pixel_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_pixel_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_point_line_texgen	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_point_line_texgen;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_sharpen_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_sharpen_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture4D	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture4D;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_border_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_border_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_edge_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_edge_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_filter4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_filter4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_lod	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_lod;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_select	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_select;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_async	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_async_histogram	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async_histogram;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_async_pixel	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async_pixel;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_blend_alpha_minmax	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_blend_alpha_minmax;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_clipmap	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_clipmap;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_convolution_accuracy	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_convolution_accuracy;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_depth_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_depth_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_flush_raster	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_flush_raster;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_offset	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_offset;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fragment_specular_lighting	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fragment_specular_lighting;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_framezoom	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_framezoom;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_interlace	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_interlace;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_ir_instrument1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_ir_instrument1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_list_priority	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_list_priority;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_pixel_texture	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_pixel_texture;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_pixel_texture_bits	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_pixel_texture_bits;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_reference_plane	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_reference_plane;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_resample	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_resample;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_shadow	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_shadow;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_shadow_ambient	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_shadow_ambient;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_sprite	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_sprite;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_tag_sample_buffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_tag_sample_buffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_add_env	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_add_env;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_coordinate_clamp	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_coordinate_clamp;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_lod_bias	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_lod_bias;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_multi_buffer	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_multi_buffer;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_range	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_range;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_scale_bias	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_scale_bias;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_vertex_preclip	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_vertex_preclip;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_vertex_preclip_hint	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_vertex_preclip_hint;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_ycrcb	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_ycrcb;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_color_matrix	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_color_matrix;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_color_table	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_color_table;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_texture_color_table	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_texture_color_table;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUNX_constant_data	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUNX_constant_data;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_convolution_border_modes	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_convolution_border_modes;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_global_alpha	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_global_alpha;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_mesh_array	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_mesh_array;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_read_video_pixels	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_read_video_pixels;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_slice_accum	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_slice_accum;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_triangle_list	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_triangle_list;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_vertex	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_vertex;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_2_1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_2_1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_2_0	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_2_0;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_2_1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_2_1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_0	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_0;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_0	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_0;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_1	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_1;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_2	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_2;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_3	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_3;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_4	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_4;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_5	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_5;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_WIN_phong_shading	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_WIN_phong_shading;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_WIN_specular_fog	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_WIN_specular_fog;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_WIN_swap_hint	glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_WIN_swap_hint;$/;"	m	struct:GLEWContextStruct::GLEWContextStruct	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEXT_H_	glew.h	/^#define __GLEXT_H_$/;"	d
__GLUT_H__	glut.h	/^#define  __GLUT_H__$/;"	d
__GL_H__	glew.h	/^#define __GL_H__$/;"	d
__REGAL_H__	glew.h	/^#define __REGAL_H__$/;"	d
__X_GL_H	glew.h	/^#define __X_GL_H$/;"	d
__anon0beeb0fc010a	glm/detail/type_vec1.hpp	/^			{$/;"	u	struct:glm::tvec1
__anon0beeb0fc020a	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	u	struct:glm::tvec1
__anon0c00c97d010a	glm/detail/type_vec2.hpp	/^			{$/;"	u	struct:glm::tvec2
__anon0c00c97d0208	glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	s	union:glm::tvec2::__anon0c00c97d010a
__anon0c00c97d0308	glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	s	union:glm::tvec2::__anon0c00c97d010a
__anon0c00c97d0408	glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	s	union:glm::tvec2::__anon0c00c97d010a
__anon0c00c97d050a	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	u	struct:glm::tvec2
__anon0c00c97d060a	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	u	struct:glm::tvec2
__anon0c12e1fe010a	glm/detail/type_vec3.hpp	/^			{$/;"	u	struct:glm::tvec3
__anon0c12e1fe0208	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	s	union:glm::tvec3::__anon0c12e1fe010a
__anon0c12e1fe0308	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	s	union:glm::tvec3::__anon0c12e1fe010a
__anon0c12e1fe0408	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	s	union:glm::tvec3::__anon0c12e1fe010a
__anon0c12e1fe050a	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	u	struct:glm::tvec3
__anon0c12e1fe060a	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	u	struct:glm::tvec3
__anon0c12e1fe070a	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	u	struct:glm::tvec3
__anon0c24fa7f010a	glm/detail/type_vec4.hpp	/^			{$/;"	u	struct:glm::tvec4
__anon0c24fa7f0208	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	s	union:glm::tvec4::__anon0c24fa7f010a
__anon0c24fa7f0308	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	s	union:glm::tvec4::__anon0c24fa7f010a
__anon0c24fa7f0408	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	s	union:glm::tvec4::__anon0c24fa7f010a
__anon0c24fa7f050a	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	u	struct:glm::tvec4
__anon0c24fa7f060a	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	u	struct:glm::tvec4
__anon0c24fa7f070a	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	u	struct:glm::tvec4
__anon0c24fa7f080a	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	u	struct:glm::tvec4
__anon1165e74f0108	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::u10u10u10u2	file:
__anon1165e74f0208	glm/gtc/packing.inl	/^		{$/;"	s	union:glm::detail::i10i10i10i2	file:
__anon2dbcfbc3010a	glm/gtc/ulp.inl	/^{$/;"	u	file:
__anon2dbcfbc3020a	glm/gtc/ulp.inl	/^{$/;"	u	file:
__anon2dbcfbc30308	glm/gtc/ulp.inl	/^	{$/;"	s	union:__anon2dbcfbc3020a	file:
__anon704219bd010a	glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	u	function:_mm_castpd_ps
__anon704219bd020a	glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	u	function:_mm_castps_pd
__anon704219bd030a	glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	u	function:_mm_castps_si128
__anon704219bd040a	glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	u	function:_mm_castsi128_ps
__anona9631bca010a	glm/gtx/simd_vec4.hpp	/^		{$/;"	u	namespace:glm::detail
__anona9631bca0208	glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	s	union:glm::detail::__anona9631bca010a
__anona9631fc50103	glm/gtx/simd_vec4.inl	/^	enum{value = Value};$/;"	g	struct:glm::detail::shuffle_mask	file:
__anondb998e73010a	glm/gtx/simd_quat.hpp	/^		{$/;"	u	namespace:glm::detail
__anondb998e730208	glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	s	union:glm::detail::__anondb998e73010a
__gl2_h_	glew.h	/^#define __gl2_h_$/;"	d
__gl_ATI_h_	glew.h	/^#define __gl_ATI_h_$/;"	d
__gl_h_	glew.h	/^#define __gl_h_$/;"	d
__glewActiveProgramEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVEPROGRAMEXTPROC __glewActiveProgramEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVEPROGRAMEXTPROC
__glewActiveShaderProgram	glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVESHADERPROGRAMPROC __glewActiveShaderProgram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVESHADERPROGRAMPROC
__glewActiveStencilFaceEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVESTENCILFACEEXTPROC __glewActiveStencilFaceEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVESTENCILFACEEXTPROC
__glewActiveTexture	glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVETEXTUREPROC __glewActiveTexture;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVETEXTUREPROC
__glewActiveTextureARB	glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVETEXTUREARBPROC __glewActiveTextureARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVETEXTUREARBPROC
__glewActiveVaryingNV	glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVEVARYINGNVPROC __glewActiveVaryingNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVEVARYINGNVPROC
__glewAddSwapHintRectWIN	glew.h	/^GLEW_FUN_EXPORT PFNGLADDSWAPHINTRECTWINPROC __glewAddSwapHintRectWIN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLADDSWAPHINTRECTWINPROC
__glewAlphaFragmentOp1ATI	glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP1ATIPROC __glewAlphaFragmentOp1ATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP1ATIPROC
__glewAlphaFragmentOp2ATI	glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP2ATIPROC __glewAlphaFragmentOp2ATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP2ATIPROC
__glewAlphaFragmentOp3ATI	glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP3ATIPROC __glewAlphaFragmentOp3ATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP3ATIPROC
__glewAlphaFuncx	glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFUNCXPROC __glewAlphaFuncx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFUNCXPROC
__glewApplyTextureEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLAPPLYTEXTUREEXTPROC __glewApplyTextureEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLAPPLYTEXTUREEXTPROC
__glewAreProgramsResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLAREPROGRAMSRESIDENTNVPROC __glewAreProgramsResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLAREPROGRAMSRESIDENTNVPROC
__glewAreTexturesResidentEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLARETEXTURESRESIDENTEXTPROC __glewAreTexturesResidentEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLARETEXTURESRESIDENTEXTPROC
__glewArrayElementEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLARRAYELEMENTEXTPROC __glewArrayElementEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLARRAYELEMENTEXTPROC
__glewArrayObjectATI	glew.h	/^GLEW_FUN_EXPORT PFNGLARRAYOBJECTATIPROC __glewArrayObjectATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLARRAYOBJECTATIPROC
__glewAsyncMarkerSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLASYNCMARKERSGIXPROC __glewAsyncMarkerSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLASYNCMARKERSGIXPROC
__glewAttachObjectARB	glew.h	/^GLEW_FUN_EXPORT PFNGLATTACHOBJECTARBPROC __glewAttachObjectARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLATTACHOBJECTARBPROC
__glewAttachShader	glew.h	/^GLEW_FUN_EXPORT PFNGLATTACHSHADERPROC __glewAttachShader;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLATTACHSHADERPROC
__glewBeginConditionalRender	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERPROC __glewBeginConditionalRender;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERPROC
__glewBeginConditionalRenderNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVPROC __glewBeginConditionalRenderNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVPROC
__glewBeginConditionalRenderNVX	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVXPROC __glewBeginConditionalRenderNVX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVXPROC
__glewBeginFragmentShaderATI	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINFRAGMENTSHADERATIPROC __glewBeginFragmentShaderATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINFRAGMENTSHADERATIPROC
__glewBeginOcclusionQueryNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINOCCLUSIONQUERYNVPROC __glewBeginOcclusionQueryNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINOCCLUSIONQUERYNVPROC
__glewBeginPerfMonitorAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINPERFMONITORAMDPROC __glewBeginPerfMonitorAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINPERFMONITORAMDPROC
__glewBeginPerfQueryINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINPERFQUERYINTELPROC __glewBeginPerfQueryINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINPERFQUERYINTELPROC
__glewBeginQuery	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYPROC __glewBeginQuery;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYPROC
__glewBeginQueryANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYANGLEPROC __glewBeginQueryANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYANGLEPROC
__glewBeginQueryARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYARBPROC __glewBeginQueryARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYARBPROC
__glewBeginQueryIndexed	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYINDEXEDPROC __glewBeginQueryIndexed;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYINDEXEDPROC
__glewBeginSceneEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINSCENEEXTPROC __glewBeginSceneEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINSCENEEXTPROC
__glewBeginTransformFeedback	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKPROC __glewBeginTransformFeedback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKPROC
__glewBeginTransformFeedbackEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKEXTPROC __glewBeginTransformFeedbackEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
__glewBeginTransformFeedbackNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKNVPROC __glewBeginTransformFeedbackNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKNVPROC
__glewBeginVertexShaderEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINVERTEXSHADEREXTPROC __glewBeginVertexShaderEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINVERTEXSHADEREXTPROC
__glewBeginVideoCaptureNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINVIDEOCAPTURENVPROC __glewBeginVideoCaptureNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINVIDEOCAPTURENVPROC
__glewBindAttribLocation	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONPROC __glewBindAttribLocation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONPROC
__glewBindAttribLocationARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONARBPROC __glewBindAttribLocationARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONARBPROC
__glewBindBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERPROC __glewBindBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERPROC
__glewBindBufferARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERARBPROC __glewBindBufferARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERARBPROC
__glewBindBufferBase	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEPROC __glewBindBufferBase;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEPROC
__glewBindBufferBaseEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEEXTPROC __glewBindBufferBaseEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEEXTPROC
__glewBindBufferBaseNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERBASENVPROC __glewBindBufferBaseNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERBASENVPROC
__glewBindBufferOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETEXTPROC __glewBindBufferOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETEXTPROC
__glewBindBufferOffsetNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETNVPROC __glewBindBufferOffsetNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETNVPROC
__glewBindBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEPROC __glewBindBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEPROC
__glewBindBufferRangeEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEEXTPROC __glewBindBufferRangeEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEEXTPROC
__glewBindBufferRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGENVPROC __glewBindBufferRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGENVPROC
__glewBindBuffersBase	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERSBASEPROC __glewBindBuffersBase;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERSBASEPROC
__glewBindBuffersRange	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERSRANGEPROC __glewBindBuffersRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERSRANGEPROC
__glewBindFragDataLocation	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONPROC __glewBindFragDataLocation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONPROC
__glewBindFragDataLocationEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONEXTPROC __glewBindFragDataLocationEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONEXTPROC
__glewBindFragDataLocationIndexed	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONINDEXEDPROC __glewBindFragDataLocationIndexed;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
__glewBindFragmentShaderATI	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGMENTSHADERATIPROC __glewBindFragmentShaderATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGMENTSHADERATIPROC
__glewBindFramebuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFERPROC __glewBindFramebuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFERPROC
__glewBindFramebufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFEREXTPROC __glewBindFramebufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFEREXTPROC
__glewBindImageTexture	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREPROC __glewBindImageTexture;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREPROC
__glewBindImageTextureEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREEXTPROC __glewBindImageTextureEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREEXTPROC
__glewBindImageTextures	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTURESPROC __glewBindImageTextures;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTURESPROC
__glewBindLightParameterEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDLIGHTPARAMETEREXTPROC __glewBindLightParameterEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDLIGHTPARAMETEREXTPROC
__glewBindMaterialParameterEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDMATERIALPARAMETEREXTPROC __glewBindMaterialParameterEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDMATERIALPARAMETEREXTPROC
__glewBindMultiTextureEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDMULTITEXTUREEXTPROC __glewBindMultiTextureEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDMULTITEXTUREEXTPROC
__glewBindParameterEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPARAMETEREXTPROC __glewBindParameterEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPARAMETEREXTPROC
__glewBindProgramARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPROGRAMARBPROC __glewBindProgramARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPROGRAMARBPROC
__glewBindProgramNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPROGRAMNVPROC __glewBindProgramNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPROGRAMNVPROC
__glewBindProgramPipeline	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPROGRAMPIPELINEPROC __glewBindProgramPipeline;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPROGRAMPIPELINEPROC
__glewBindRenderbuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFERPROC __glewBindRenderbuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFERPROC
__glewBindRenderbufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFEREXTPROC __glewBindRenderbufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFEREXTPROC
__glewBindSampler	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDSAMPLERPROC __glewBindSampler;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDSAMPLERPROC
__glewBindSamplers	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDSAMPLERSPROC __glewBindSamplers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDSAMPLERSPROC
__glewBindTexGenParameterEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXGENPARAMETEREXTPROC __glewBindTexGenParameterEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXGENPARAMETEREXTPROC
__glewBindTextureEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTUREEXTPROC __glewBindTextureEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTUREEXTPROC
__glewBindTextureUnit	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPROC __glewBindTextureUnit;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPROC
__glewBindTextureUnitParameterEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPARAMETEREXTPROC __glewBindTextureUnitParameterEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
__glewBindTextures	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTURESPROC __glewBindTextures;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTURESPROC
__glewBindTransformFeedback	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKPROC __glewBindTransformFeedback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKPROC
__glewBindTransformFeedbackNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKNVPROC __glewBindTransformFeedbackNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKNVPROC
__glewBindVertexArray	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYPROC __glewBindVertexArray;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYPROC
__glewBindVertexArrayAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYAPPLEPROC __glewBindVertexArrayAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYAPPLEPROC
__glewBindVertexBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERPROC __glewBindVertexBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERPROC
__glewBindVertexBuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERSPROC __glewBindVertexBuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERSPROC
__glewBindVertexShaderEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXSHADEREXTPROC __glewBindVertexShaderEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXSHADEREXTPROC
__glewBindVideoCaptureStreamBufferNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC __glewBindVideoCaptureStreamBufferNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
__glewBindVideoCaptureStreamTextureNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC __glewBindVideoCaptureStreamTextureNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
__glewBinormalPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBINORMALPOINTEREXTPROC __glewBinormalPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBINORMALPOINTEREXTPROC
__glewBlendBarrierKHR	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDBARRIERKHRPROC __glewBlendBarrierKHR;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDBARRIERKHRPROC
__glewBlendBarrierNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDBARRIERNVPROC __glewBlendBarrierNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDBARRIERNVPROC
__glewBlendColor	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDCOLORPROC __glewBlendColor;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDCOLORPROC
__glewBlendColorEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDCOLOREXTPROC __glewBlendColorEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDCOLOREXTPROC
__glewBlendEquation	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONPROC __glewBlendEquation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONPROC
__glewBlendEquationEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONEXTPROC __glewBlendEquationEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONEXTPROC
__glewBlendEquationIndexedAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONINDEXEDAMDPROC __glewBlendEquationIndexedAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONINDEXEDAMDPROC
__glewBlendEquationSeparate	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEPROC __glewBlendEquationSeparate;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEPROC
__glewBlendEquationSeparateEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEEXTPROC __glewBlendEquationSeparateEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEEXTPROC
__glewBlendEquationSeparateIndexedAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC __glewBlendEquationSeparateIndexedAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
__glewBlendEquationSeparatei	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIPROC __glewBlendEquationSeparatei;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIPROC
__glewBlendEquationSeparateiARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIARBPROC __glewBlendEquationSeparateiARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIARBPROC
__glewBlendEquationi	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIPROC __glewBlendEquationi;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIPROC
__glewBlendEquationiARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIARBPROC __glewBlendEquationiARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIARBPROC
__glewBlendFuncIndexedAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCINDEXEDAMDPROC __glewBlendFuncIndexedAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCINDEXEDAMDPROC
__glewBlendFuncSeparate	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEPROC __glewBlendFuncSeparate;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEPROC
__glewBlendFuncSeparateEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEEXTPROC __glewBlendFuncSeparateEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEEXTPROC
__glewBlendFuncSeparateIndexedAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC __glewBlendFuncSeparateIndexedAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
__glewBlendFuncSeparatei	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIPROC
__glewBlendFuncSeparateiARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIARBPROC __glewBlendFuncSeparateiARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIARBPROC
__glewBlendFunci	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCIPROC __glewBlendFunci;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCIPROC
__glewBlendFunciARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCIARBPROC __glewBlendFunciARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCIARBPROC
__glewBlendParameteriNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDPARAMETERINVPROC __glewBlendParameteriNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDPARAMETERINVPROC
__glewBlitFramebuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERPROC __glewBlitFramebuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERPROC
__glewBlitFramebufferANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERANGLEPROC __glewBlitFramebufferANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERANGLEPROC
__glewBlitFramebufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFEREXTPROC __glewBlitFramebufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFEREXTPROC
__glewBlitNamedFramebuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLBLITNAMEDFRAMEBUFFERPROC __glewBlitNamedFramebuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITNAMEDFRAMEBUFFERPROC
__glewBufferAddressRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERADDRESSRANGENVPROC __glewBufferAddressRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERADDRESSRANGENVPROC
__glewBufferData	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERDATAPROC __glewBufferData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERDATAPROC
__glewBufferDataARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERDATAARBPROC __glewBufferDataARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERDATAARBPROC
__glewBufferPageCommitmentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERPAGECOMMITMENTARBPROC __glewBufferPageCommitmentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERPAGECOMMITMENTARBPROC
__glewBufferParameteriAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERPARAMETERIAPPLEPROC __glewBufferParameteriAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERPARAMETERIAPPLEPROC
__glewBufferRegionEnabled	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERREGIONENABLEDPROC __glewBufferRegionEnabled;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERREGIONENABLEDPROC
__glewBufferStorage	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEPROC __glewBufferStorage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEPROC
__glewBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAPROC __glewBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAPROC
__glewBufferSubDataARB	glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAARBPROC __glewBufferSubDataARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAARBPROC
__glewCheckFramebufferStatus	glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSPROC __glewCheckFramebufferStatus;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSPROC
__glewCheckFramebufferStatusEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC __glewCheckFramebufferStatusEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
__glewCheckNamedFramebufferStatus	glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC __glewCheckNamedFramebufferStatus;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
__glewCheckNamedFramebufferStatusEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC __glewCheckNamedFramebufferStatusEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
__glewClampColor	glew.h	/^GLEW_FUN_EXPORT PFNGLCLAMPCOLORPROC __glewClampColor;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLAMPCOLORPROC
__glewClampColorARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCLAMPCOLORARBPROC __glewClampColorARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLAMPCOLORARBPROC
__glewClearBufferData	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERDATAPROC __glewClearBufferData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERDATAPROC
__glewClearBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERSUBDATAPROC __glewClearBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERSUBDATAPROC
__glewClearBufferfi	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERFIPROC __glewClearBufferfi;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERFIPROC
__glewClearBufferfv	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERFVPROC __glewClearBufferfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERFVPROC
__glewClearBufferiv	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERIVPROC __glewClearBufferiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERIVPROC
__glewClearBufferuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERUIVPROC __glewClearBufferuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERUIVPROC
__glewClearColorIiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARCOLORIIEXTPROC __glewClearColorIiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARCOLORIIEXTPROC
__glewClearColorIuiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARCOLORIUIEXTPROC __glewClearColorIuiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARCOLORIUIEXTPROC
__glewClearColorx	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARCOLORXPROC __glewClearColorx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARCOLORXPROC
__glewClearDepthdNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHDNVPROC __glewClearDepthdNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHDNVPROC
__glewClearDepthf	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHFPROC __glewClearDepthf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHFPROC
__glewClearDepthfOES	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHFOESPROC __glewClearDepthfOES;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHFOESPROC
__glewClearDepthx	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHXPROC __glewClearDepthx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHXPROC
__glewClearNamedBufferData	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAPROC __glewClearNamedBufferData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAPROC
__glewClearNamedBufferDataEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAEXTPROC __glewClearNamedBufferDataEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAEXTPROC
__glewClearNamedBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAPROC __glewClearNamedBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAPROC
__glewClearNamedBufferSubDataEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC __glewClearNamedBufferSubDataEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
__glewClearNamedFramebufferfi	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFIPROC __glewClearNamedFramebufferfi;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
__glewClearNamedFramebufferfv	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFVPROC __glewClearNamedFramebufferfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
__glewClearNamedFramebufferiv	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERIVPROC __glewClearNamedFramebufferiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
__glewClearNamedFramebufferuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC __glewClearNamedFramebufferuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
__glewClearTexImage	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARTEXIMAGEPROC __glewClearTexImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARTEXIMAGEPROC
__glewClearTexSubImage	glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARTEXSUBIMAGEPROC __glewClearTexSubImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARTEXSUBIMAGEPROC
__glewClientActiveTexture	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREPROC __glewClientActiveTexture;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREPROC
__glewClientActiveTextureARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREARBPROC __glewClientActiveTextureARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREARBPROC
__glewClientActiveVertexStreamATI	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC __glewClientActiveVertexStreamATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
__glewClientAttribDefaultEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTATTRIBDEFAULTEXTPROC __glewClientAttribDefaultEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTATTRIBDEFAULTEXTPROC
__glewClientWaitSync	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTWAITSYNCPROC __glewClientWaitSync;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTWAITSYNCPROC
__glewClipControl	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPCONTROLPROC __glewClipControl;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPCONTROLPROC
__glewClipPlanef	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPPLANEFPROC __glewClipPlanef;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPPLANEFPROC
__glewClipPlanefOES	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPPLANEFOESPROC __glewClipPlanefOES;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPPLANEFOESPROC
__glewClipPlanex	glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPPLANEXPROC __glewClipPlanex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPPLANEXPROC
__glewColor3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FSUNPROC __glewColor3fVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FSUNPROC
__glewColor3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FVSUNPROC __glewColor3fVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FVSUNPROC
__glewColor3hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3HNVPROC __glewColor3hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3HNVPROC
__glewColor3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3HVNVPROC __glewColor3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3HVNVPROC
__glewColor4fNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewColor4fNormal3fVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewColor4fNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewColor4fNormal3fVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewColor4hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4HNVPROC __glewColor4hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4HNVPROC
__glewColor4hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4HVNVPROC __glewColor4hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4HVNVPROC
__glewColor4ubVertex2fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FSUNPROC __glewColor4ubVertex2fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FSUNPROC
__glewColor4ubVertex2fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FVSUNPROC __glewColor4ubVertex2fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FVSUNPROC
__glewColor4ubVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FSUNPROC __glewColor4ubVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FSUNPROC
__glewColor4ubVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FVSUNPROC __glewColor4ubVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FVSUNPROC
__glewColor4x	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4XPROC __glewColor4x;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4XPROC
__glewColorFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFORMATNVPROC __glewColorFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFORMATNVPROC
__glewColorFragmentOp1ATI	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP1ATIPROC __glewColorFragmentOp1ATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP1ATIPROC
__glewColorFragmentOp2ATI	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP2ATIPROC __glewColorFragmentOp2ATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP2ATIPROC
__glewColorFragmentOp3ATI	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP3ATIPROC __glewColorFragmentOp3ATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP3ATIPROC
__glewColorMaskIndexedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORMASKINDEXEDEXTPROC __glewColorMaskIndexedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORMASKINDEXEDEXTPROC
__glewColorMaski	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORMASKIPROC __glewColorMaski;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORMASKIPROC
__glewColorP3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP3UIPROC __glewColorP3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP3UIPROC
__glewColorP3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP3UIVPROC __glewColorP3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP3UIVPROC
__glewColorP4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP4UIPROC __glewColorP4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP4UIPROC
__glewColorP4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP4UIVPROC __glewColorP4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP4UIVPROC
__glewColorPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORPOINTEREXTPROC __glewColorPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORPOINTEREXTPROC
__glewColorPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORPOINTERLISTIBMPROC __glewColorPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORPOINTERLISTIBMPROC
__glewColorPointervINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORPOINTERVINTELPROC __glewColorPointervINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORPOINTERVINTELPROC
__glewColorSubTable	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEPROC __glewColorSubTable;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEPROC
__glewColorSubTableEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEEXTPROC __glewColorSubTableEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEEXTPROC
__glewColorTable	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPROC __glewColorTable;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPROC
__glewColorTableEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEEXTPROC __glewColorTableEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEEXTPROC
__glewColorTableParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVPROC __glewColorTableParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVPROC
__glewColorTableParameterfvSGI	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVSGIPROC __glewColorTableParameterfvSGI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVSGIPROC
__glewColorTableParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVPROC __glewColorTableParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVPROC
__glewColorTableParameterivSGI	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVSGIPROC __glewColorTableParameterivSGI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVSGIPROC
__glewColorTableSGI	glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLESGIPROC __glewColorTableSGI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLESGIPROC
__glewCombinerInputNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERINPUTNVPROC __glewCombinerInputNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERINPUTNVPROC
__glewCombinerOutputNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINEROUTPUTNVPROC __glewCombinerOutputNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINEROUTPUTNVPROC
__glewCombinerParameterfNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFNVPROC __glewCombinerParameterfNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFNVPROC
__glewCombinerParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFVNVPROC __glewCombinerParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFVNVPROC
__glewCombinerParameteriNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERINVPROC __glewCombinerParameteriNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERINVPROC
__glewCombinerParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERIVNVPROC __glewCombinerParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERIVNVPROC
__glewCombinerStageParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERSTAGEPARAMETERFVNVPROC __glewCombinerStageParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
__glewCompileShader	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPILESHADERPROC __glewCompileShader;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPILESHADERPROC
__glewCompileShaderARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPILESHADERARBPROC __glewCompileShaderARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPILESHADERARBPROC
__glewCompileShaderIncludeARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPILESHADERINCLUDEARBPROC __glewCompileShaderIncludeARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPILESHADERINCLUDEARBPROC
__glewCompressedMultiTexImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC __glewCompressedMultiTexImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
__glewCompressedMultiTexImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC __glewCompressedMultiTexImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
__glewCompressedMultiTexImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC __glewCompressedMultiTexImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
__glewCompressedMultiTexSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC __glewCompressedMultiTexSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
__glewCompressedMultiTexSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC __glewCompressedMultiTexSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
__glewCompressedMultiTexSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC __glewCompressedMultiTexSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
__glewCompressedTexImage1D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DPROC __glewCompressedTexImage1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DPROC
__glewCompressedTexImage1DARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DARBPROC __glewCompressedTexImage1DARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
__glewCompressedTexImage2D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DPROC __glewCompressedTexImage2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DPROC
__glewCompressedTexImage2DARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DARBPROC __glewCompressedTexImage2DARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
__glewCompressedTexImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DPROC __glewCompressedTexImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DPROC
__glewCompressedTexImage3DARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DARBPROC __glewCompressedTexImage3DARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
__glewCompressedTexSubImage1D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC __glewCompressedTexSubImage1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
__glewCompressedTexSubImage1DARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC __glewCompressedTexSubImage1DARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
__glewCompressedTexSubImage2D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC __glewCompressedTexSubImage2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
__glewCompressedTexSubImage2DARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC __glewCompressedTexSubImage2DARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
__glewCompressedTexSubImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC __glewCompressedTexSubImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
__glewCompressedTexSubImage3DARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC __glewCompressedTexSubImage3DARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
__glewCompressedTextureImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC __glewCompressedTextureImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
__glewCompressedTextureImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC __glewCompressedTextureImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
__glewCompressedTextureImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC __glewCompressedTextureImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
__glewCompressedTextureSubImage1D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC __glewCompressedTextureSubImage1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
__glewCompressedTextureSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC __glewCompressedTextureSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
__glewCompressedTextureSubImage2D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC __glewCompressedTextureSubImage2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
__glewCompressedTextureSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC __glewCompressedTextureSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
__glewCompressedTextureSubImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC __glewCompressedTextureSubImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
__glewCompressedTextureSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC __glewCompressedTextureSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
__glewConvolutionFilter1D	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DPROC __glewConvolutionFilter1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DPROC
__glewConvolutionFilter1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DEXTPROC __glewConvolutionFilter1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DEXTPROC
__glewConvolutionFilter2D	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DPROC __glewConvolutionFilter2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DPROC
__glewConvolutionFilter2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DEXTPROC __glewConvolutionFilter2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DEXTPROC
__glewConvolutionParameterf	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFPROC __glewConvolutionParameterf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFPROC
__glewConvolutionParameterfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFEXTPROC __glewConvolutionParameterfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFEXTPROC
__glewConvolutionParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVPROC __glewConvolutionParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVPROC
__glewConvolutionParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVEXTPROC __glewConvolutionParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVEXTPROC
__glewConvolutionParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIPROC __glewConvolutionParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIPROC
__glewConvolutionParameteriEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIEXTPROC __glewConvolutionParameteriEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIEXTPROC
__glewConvolutionParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVPROC __glewConvolutionParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVPROC
__glewConvolutionParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVEXTPROC __glewConvolutionParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVEXTPROC
__glewCopyBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYBUFFERSUBDATAPROC __glewCopyBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYBUFFERSUBDATAPROC
__glewCopyColorSubTable	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEPROC __glewCopyColorSubTable;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEPROC
__glewCopyColorSubTableEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEEXTPROC __glewCopyColorSubTableEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEEXTPROC
__glewCopyColorTable	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLEPROC __glewCopyColorTable;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLEPROC
__glewCopyColorTableSGI	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLESGIPROC __glewCopyColorTableSGI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLESGIPROC
__glewCopyConvolutionFilter1D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DPROC __glewCopyConvolutionFilter1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DPROC
__glewCopyConvolutionFilter1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC __glewCopyConvolutionFilter1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
__glewCopyConvolutionFilter2D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DPROC __glewCopyConvolutionFilter2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DPROC
__glewCopyConvolutionFilter2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC __glewCopyConvolutionFilter2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
__glewCopyImageSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAPROC __glewCopyImageSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAPROC
__glewCopyImageSubDataNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATANVPROC __glewCopyImageSubDataNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATANVPROC
__glewCopyMultiTexImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE1DEXTPROC __glewCopyMultiTexImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE1DEXTPROC
__glewCopyMultiTexImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE2DEXTPROC __glewCopyMultiTexImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE2DEXTPROC
__glewCopyMultiTexSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC __glewCopyMultiTexSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
__glewCopyMultiTexSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC __glewCopyMultiTexSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
__glewCopyMultiTexSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC __glewCopyMultiTexSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
__glewCopyNamedBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYNAMEDBUFFERSUBDATAPROC __glewCopyNamedBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYNAMEDBUFFERSUBDATAPROC
__glewCopyPathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYPATHNVPROC __glewCopyPathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYPATHNVPROC
__glewCopyTexImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE1DEXTPROC __glewCopyTexImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE1DEXTPROC
__glewCopyTexImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE2DEXTPROC __glewCopyTexImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE2DEXTPROC
__glewCopyTexSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE1DEXTPROC __glewCopyTexSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE1DEXTPROC
__glewCopyTexSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE2DEXTPROC __glewCopyTexSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE2DEXTPROC
__glewCopyTexSubImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DPROC __glewCopyTexSubImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DPROC
__glewCopyTexSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DEXTPROC __glewCopyTexSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DEXTPROC
__glewCopyTextureImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE1DEXTPROC __glewCopyTextureImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE1DEXTPROC
__glewCopyTextureImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE2DEXTPROC __glewCopyTextureImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE2DEXTPROC
__glewCopyTextureSubImage1D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DPROC __glewCopyTextureSubImage1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DPROC
__glewCopyTextureSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC __glewCopyTextureSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
__glewCopyTextureSubImage2D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DPROC __glewCopyTextureSubImage2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DPROC
__glewCopyTextureSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC __glewCopyTextureSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
__glewCopyTextureSubImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DPROC __glewCopyTextureSubImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DPROC
__glewCopyTextureSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC __glewCopyTextureSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
__glewCoverFillPathInstancedNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERFILLPATHINSTANCEDNVPROC __glewCoverFillPathInstancedNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERFILLPATHINSTANCEDNVPROC
__glewCoverFillPathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERFILLPATHNVPROC __glewCoverFillPathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERFILLPATHNVPROC
__glewCoverStrokePathInstancedNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHINSTANCEDNVPROC __glewCoverStrokePathInstancedNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
__glewCoverStrokePathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHNVPROC __glewCoverStrokePathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHNVPROC
__glewCreateBuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEBUFFERSPROC __glewCreateBuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEBUFFERSPROC
__glewCreateFramebuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEFRAMEBUFFERSPROC __glewCreateFramebuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEFRAMEBUFFERSPROC
__glewCreatePerfQueryINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPERFQUERYINTELPROC __glewCreatePerfQueryINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPERFQUERYINTELPROC
__glewCreateProgram	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPROC __glewCreateProgram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPROC
__glewCreateProgramObjectARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPROGRAMOBJECTARBPROC __glewCreateProgramObjectARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPROGRAMOBJECTARBPROC
__glewCreateProgramPipelines	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPIPELINESPROC __glewCreateProgramPipelines;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPIPELINESPROC
__glewCreateQueries	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEQUERIESPROC __glewCreateQueries;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEQUERIESPROC
__glewCreateRenderbuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATERENDERBUFFERSPROC __glewCreateRenderbuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATERENDERBUFFERSPROC
__glewCreateSamplers	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESAMPLERSPROC __glewCreateSamplers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESAMPLERSPROC
__glewCreateShader	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADERPROC __glewCreateShader;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADERPROC
__glewCreateShaderObjectARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADEROBJECTARBPROC __glewCreateShaderObjectARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADEROBJECTARBPROC
__glewCreateShaderProgramEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMEXTPROC __glewCreateShaderProgramEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMEXTPROC
__glewCreateShaderProgramv	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMVPROC __glewCreateShaderProgramv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMVPROC
__glewCreateSyncFromCLeventARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESYNCFROMCLEVENTARBPROC __glewCreateSyncFromCLeventARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESYNCFROMCLEVENTARBPROC
__glewCreateTextures	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATETEXTURESPROC __glewCreateTextures;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATETEXTURESPROC
__glewCreateTransformFeedbacks	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATETRANSFORMFEEDBACKSPROC __glewCreateTransformFeedbacks;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATETRANSFORMFEEDBACKSPROC
__glewCreateVertexArrays	glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEVERTEXARRAYSPROC __glewCreateVertexArrays;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEVERTEXARRAYSPROC
__glewCullParameterdvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCULLPARAMETERDVEXTPROC __glewCullParameterdvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCULLPARAMETERDVEXTPROC
__glewCullParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLCULLPARAMETERFVEXTPROC __glewCullParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCULLPARAMETERFVEXTPROC
__glewCurrentPaletteMatrixARB	glew.h	/^GLEW_FUN_EXPORT PFNGLCURRENTPALETTEMATRIXARBPROC __glewCurrentPaletteMatrixARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLCURRENTPALETTEMATRIXARBPROC
__glewDebugMessageCallback	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKPROC __glewDebugMessageCallback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKPROC
__glewDebugMessageCallbackAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKAMDPROC __glewDebugMessageCallbackAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKAMDPROC
__glewDebugMessageCallbackARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKARBPROC __glewDebugMessageCallbackARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKARBPROC
__glewDebugMessageControl	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLPROC __glewDebugMessageControl;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLPROC
__glewDebugMessageControlARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLARBPROC __glewDebugMessageControlARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLARBPROC
__glewDebugMessageEnableAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEENABLEAMDPROC __glewDebugMessageEnableAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEENABLEAMDPROC
__glewDebugMessageInsert	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTPROC __glewDebugMessageInsert;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTPROC
__glewDebugMessageInsertAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTAMDPROC __glewDebugMessageInsertAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTAMDPROC
__glewDebugMessageInsertARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTARBPROC __glewDebugMessageInsertARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTARBPROC
__glewDeleteAsyncMarkersSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEASYNCMARKERSSGIXPROC __glewDeleteAsyncMarkersSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEASYNCMARKERSSGIXPROC
__glewDeleteBufferRegion	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEBUFFERREGIONPROC __glewDeleteBufferRegion;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEBUFFERREGIONPROC
__glewDeleteBuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEBUFFERSPROC __glewDeleteBuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEBUFFERSPROC
__glewDeleteBuffersARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEBUFFERSARBPROC __glewDeleteBuffersARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEBUFFERSARBPROC
__glewDeleteFencesAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFENCESAPPLEPROC __glewDeleteFencesAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFENCESAPPLEPROC
__glewDeleteFencesNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFENCESNVPROC __glewDeleteFencesNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFENCESNVPROC
__glewDeleteFragmentShaderATI	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFRAGMENTSHADERATIPROC __glewDeleteFragmentShaderATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFRAGMENTSHADERATIPROC
__glewDeleteFramebuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSPROC __glewDeleteFramebuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSPROC
__glewDeleteFramebuffersEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSEXTPROC __glewDeleteFramebuffersEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSEXTPROC
__glewDeleteNamedStringARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETENAMEDSTRINGARBPROC __glewDeleteNamedStringARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETENAMEDSTRINGARBPROC
__glewDeleteNamesAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETENAMESAMDPROC __glewDeleteNamesAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETENAMESAMDPROC
__glewDeleteObjectARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEOBJECTARBPROC __glewDeleteObjectARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEOBJECTARBPROC
__glewDeleteOcclusionQueriesNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEOCCLUSIONQUERIESNVPROC __glewDeleteOcclusionQueriesNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEOCCLUSIONQUERIESNVPROC
__glewDeletePathsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPATHSNVPROC __glewDeletePathsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPATHSNVPROC
__glewDeletePerfMonitorsAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPERFMONITORSAMDPROC __glewDeletePerfMonitorsAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPERFMONITORSAMDPROC
__glewDeletePerfQueryINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPERFQUERYINTELPROC __glewDeletePerfQueryINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPERFQUERYINTELPROC
__glewDeleteProgram	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPROC __glewDeleteProgram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPROC
__glewDeleteProgramPipelines	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPIPELINESPROC __glewDeleteProgramPipelines;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPIPELINESPROC
__glewDeleteProgramsARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSARBPROC __glewDeleteProgramsARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSARBPROC
__glewDeleteProgramsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSNVPROC __glewDeleteProgramsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSNVPROC
__glewDeleteQueries	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEQUERIESPROC __glewDeleteQueries;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEQUERIESPROC
__glewDeleteQueriesANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEQUERIESANGLEPROC __glewDeleteQueriesANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEQUERIESANGLEPROC
__glewDeleteQueriesARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEQUERIESARBPROC __glewDeleteQueriesARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEQUERIESARBPROC
__glewDeleteRenderbuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSPROC __glewDeleteRenderbuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSPROC
__glewDeleteRenderbuffersEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSEXTPROC __glewDeleteRenderbuffersEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSEXTPROC
__glewDeleteSamplers	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESAMPLERSPROC __glewDeleteSamplers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESAMPLERSPROC
__glewDeleteShader	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESHADERPROC __glewDeleteShader;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESHADERPROC
__glewDeleteSync	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESYNCPROC __glewDeleteSync;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESYNCPROC
__glewDeleteTexturesEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETETEXTURESEXTPROC __glewDeleteTexturesEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETETEXTURESEXTPROC
__glewDeleteTransformFeedbacks	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSPROC __glewDeleteTransformFeedbacks;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSPROC
__glewDeleteTransformFeedbacksNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSNVPROC __glewDeleteTransformFeedbacksNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSNVPROC
__glewDeleteVertexArrays	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSPROC __glewDeleteVertexArrays;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSPROC
__glewDeleteVertexArraysAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSAPPLEPROC __glewDeleteVertexArraysAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSAPPLEPROC
__glewDeleteVertexShaderEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXSHADEREXTPROC __glewDeleteVertexShaderEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXSHADEREXTPROC
__glewDepthBoundsEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSEXTPROC __glewDepthBoundsEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSEXTPROC
__glewDepthBoundsdNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSDNVPROC __glewDepthBoundsdNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSDNVPROC
__glewDepthRangeArrayv	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEARRAYVPROC __glewDepthRangeArrayv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEARRAYVPROC
__glewDepthRangeIndexed	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEINDEXEDPROC __glewDepthRangeIndexed;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEINDEXEDPROC
__glewDepthRangedNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEDNVPROC __glewDepthRangedNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEDNVPROC
__glewDepthRangef	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEFPROC __glewDepthRangef;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEFPROC
__glewDepthRangefOES	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEFOESPROC __glewDepthRangefOES;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEFOESPROC
__glewDepthRangex	glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEXPROC __glewDepthRangex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEXPROC
__glewDetachObjectARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDETACHOBJECTARBPROC __glewDetachObjectARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDETACHOBJECTARBPROC
__glewDetachShader	glew.h	/^GLEW_FUN_EXPORT PFNGLDETACHSHADERPROC __glewDetachShader;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDETACHSHADERPROC
__glewDetailTexFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLDETAILTEXFUNCSGISPROC __glewDetailTexFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDETAILTEXFUNCSGISPROC
__glewDisableClientStateIndexedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC __glewDisableClientStateIndexedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
__glewDisableClientStateiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEIEXTPROC __glewDisableClientStateiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEIEXTPROC
__glewDisableIndexedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEINDEXEDEXTPROC __glewDisableIndexedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEINDEXEDEXTPROC
__glewDisableVariantClientStateEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC __glewDisableVariantClientStateEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
__glewDisableVertexArrayAttrib	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBPROC __glewDisableVertexArrayAttrib;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBPROC
__glewDisableVertexArrayAttribEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC __glewDisableVertexArrayAttribEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC
__glewDisableVertexArrayEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYEXTPROC __glewDisableVertexArrayEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYEXTPROC
__glewDisableVertexAttribAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBAPPLEPROC __glewDisableVertexAttribAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBAPPLEPROC
__glewDisableVertexAttribArray	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYPROC __glewDisableVertexAttribArray;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYPROC
__glewDisableVertexAttribArrayARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYARBPROC __glewDisableVertexAttribArrayARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
__glewDisablei	glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEIPROC __glewDisablei;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEIPROC
__glewDispatchCompute	glew.h	/^GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEPROC __glewDispatchCompute;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEPROC
__glewDispatchComputeGroupSizeARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC __glewDispatchComputeGroupSizeARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC
__glewDispatchComputeIndirect	glew.h	/^GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEINDIRECTPROC __glewDispatchComputeIndirect;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEINDIRECTPROC
__glewDrawArraysEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSEXTPROC __glewDrawArraysEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSEXTPROC
__glewDrawArraysIndirect	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINDIRECTPROC __glewDrawArraysIndirect;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINDIRECTPROC
__glewDrawArraysInstanced	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDPROC __glewDrawArraysInstanced;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDPROC
__glewDrawArraysInstancedANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDANGLEPROC __glewDrawArraysInstancedANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDANGLEPROC
__glewDrawArraysInstancedARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDARBPROC __glewDrawArraysInstancedARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDARBPROC
__glewDrawArraysInstancedBaseInstance	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC __glewDrawArraysInstancedBaseInstance;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
__glewDrawArraysInstancedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDEXTPROC __glewDrawArraysInstancedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDEXTPROC
__glewDrawBufferRegion	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERREGIONPROC __glewDrawBufferRegion;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERREGIONPROC
__glewDrawBuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSPROC __glewDrawBuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSPROC
__glewDrawBuffersARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSARBPROC __glewDrawBuffersARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSARBPROC
__glewDrawBuffersATI	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSATIPROC __glewDrawBuffersATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSATIPROC
__glewDrawElementArrayAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYAPPLEPROC __glewDrawElementArrayAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYAPPLEPROC
__glewDrawElementArrayATI	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYATIPROC __glewDrawElementArrayATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYATIPROC
__glewDrawElementsBaseVertex	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSBASEVERTEXPROC __glewDrawElementsBaseVertex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSBASEVERTEXPROC
__glewDrawElementsIndirect	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINDIRECTPROC __glewDrawElementsIndirect;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINDIRECTPROC
__glewDrawElementsInstanced	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDPROC __glewDrawElementsInstanced;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDPROC
__glewDrawElementsInstancedANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDANGLEPROC __glewDrawElementsInstancedANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
__glewDrawElementsInstancedARB	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDARBPROC __glewDrawElementsInstancedARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDARBPROC
__glewDrawElementsInstancedBaseInstance	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC __glewDrawElementsInstancedBaseInstan/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
__glewDrawElementsInstancedBaseVertex	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __glewDrawElementsInstancedBaseVertex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
__glewDrawElementsInstancedBaseVertexBaseInstance	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC __glewDrawElementsInstanced/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
__glewDrawElementsInstancedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDEXTPROC __glewDrawElementsInstancedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDEXTPROC
__glewDrawRangeElementArrayAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC __glewDrawRangeElementArrayAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
__glewDrawRangeElementArrayATI	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYATIPROC __glewDrawRangeElementArrayATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYATIPROC
__glewDrawRangeElements	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSPROC __glewDrawRangeElements;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSPROC
__glewDrawRangeElementsBaseVertex	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC __glewDrawRangeElementsBaseVertex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
__glewDrawRangeElementsEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSEXTPROC __glewDrawRangeElementsEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSEXTPROC
__glewDrawTextureNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTEXTURENVPROC __glewDrawTextureNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTEXTURENVPROC
__glewDrawTransformFeedback	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKPROC __glewDrawTransformFeedback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKPROC
__glewDrawTransformFeedbackInstanced	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __glewDrawTransformFeedbackInstanced;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
__glewDrawTransformFeedbackNV	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKNVPROC __glewDrawTransformFeedbackNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKNVPROC
__glewDrawTransformFeedbackStream	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC __glewDrawTransformFeedbackStream;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
__glewDrawTransformFeedbackStreamInstanced	glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __glewDrawTransformFeedbackStreamI/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
__glewEdgeFlagFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLEDGEFLAGFORMATNVPROC __glewEdgeFlagFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLEDGEFLAGFORMATNVPROC
__glewEdgeFlagPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTEREXTPROC __glewEdgeFlagPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTEREXTPROC
__glewEdgeFlagPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTERLISTIBMPROC __glewEdgeFlagPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTERLISTIBMPROC
__glewElementPointerAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLELEMENTPOINTERAPPLEPROC __glewElementPointerAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLELEMENTPOINTERAPPLEPROC
__glewElementPointerATI	glew.h	/^GLEW_FUN_EXPORT PFNGLELEMENTPOINTERATIPROC __glewElementPointerATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLELEMENTPOINTERATIPROC
__glewEnableClientStateIndexedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEINDEXEDEXTPROC __glewEnableClientStateIndexedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
__glewEnableClientStateiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEIEXTPROC __glewEnableClientStateiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEIEXTPROC
__glewEnableIndexedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEINDEXEDEXTPROC __glewEnableIndexedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEINDEXEDEXTPROC
__glewEnableVariantClientStateEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVARIANTCLIENTSTATEEXTPROC __glewEnableVariantClientStateEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
__glewEnableVertexArrayAttrib	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBPROC __glewEnableVertexArrayAttrib;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBPROC
__glewEnableVertexArrayAttribEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBEXTPROC __glewEnableVertexArrayAttribEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBEXTPROC
__glewEnableVertexArrayEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYEXTPROC __glewEnableVertexArrayEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYEXTPROC
__glewEnableVertexAttribAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBAPPLEPROC __glewEnableVertexAttribAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBAPPLEPROC
__glewEnableVertexAttribArray	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYPROC __glewEnableVertexAttribArray;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYPROC
__glewEnableVertexAttribArrayARB	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYARBPROC __glewEnableVertexAttribArrayARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYARBPROC
__glewEnablei	glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEIPROC __glewEnablei;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEIPROC
__glewEndConditionalRender	glew.h	/^GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERPROC __glewEndConditionalRender;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERPROC
__glewEndConditionalRenderNV	glew.h	/^GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVPROC __glewEndConditionalRenderNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVPROC
__glewEndConditionalRenderNVX	glew.h	/^GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVXPROC __glewEndConditionalRenderNVX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVXPROC
__glewEndFragmentShaderATI	glew.h	/^GLEW_FUN_EXPORT PFNGLENDFRAGMENTSHADERATIPROC __glewEndFragmentShaderATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDFRAGMENTSHADERATIPROC
__glewEndOcclusionQueryNV	glew.h	/^GLEW_FUN_EXPORT PFNGLENDOCCLUSIONQUERYNVPROC __glewEndOcclusionQueryNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDOCCLUSIONQUERYNVPROC
__glewEndPerfMonitorAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLENDPERFMONITORAMDPROC __glewEndPerfMonitorAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDPERFMONITORAMDPROC
__glewEndPerfQueryINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLENDPERFQUERYINTELPROC __glewEndPerfQueryINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDPERFQUERYINTELPROC
__glewEndQuery	glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYPROC __glewEndQuery;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYPROC
__glewEndQueryANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYANGLEPROC __glewEndQueryANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYANGLEPROC
__glewEndQueryARB	glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYARBPROC __glewEndQueryARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYARBPROC
__glewEndQueryIndexed	glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYINDEXEDPROC __glewEndQueryIndexed;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYINDEXEDPROC
__glewEndSceneEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENDSCENEEXTPROC __glewEndSceneEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDSCENEEXTPROC
__glewEndTransformFeedback	glew.h	/^GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKPROC __glewEndTransformFeedback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKPROC
__glewEndTransformFeedbackEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKEXTPROC __glewEndTransformFeedbackEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKEXTPROC
__glewEndTransformFeedbackNV	glew.h	/^GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKNVPROC __glewEndTransformFeedbackNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKNVPROC
__glewEndVertexShaderEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLENDVERTEXSHADEREXTPROC __glewEndVertexShaderEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDVERTEXSHADEREXTPROC
__glewEndVideoCaptureNV	glew.h	/^GLEW_FUN_EXPORT PFNGLENDVIDEOCAPTURENVPROC __glewEndVideoCaptureNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLENDVIDEOCAPTURENVPROC
__glewErrorStringREGAL	glew.h	/^GLEW_FUN_EXPORT PFNGLERRORSTRINGREGALPROC __glewErrorStringREGAL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLERRORSTRINGREGALPROC
__glewEvalMapsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLEVALMAPSNVPROC __glewEvalMapsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLEVALMAPSNVPROC
__glewExecuteProgramNV	glew.h	/^GLEW_FUN_EXPORT PFNGLEXECUTEPROGRAMNVPROC __glewExecuteProgramNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLEXECUTEPROGRAMNVPROC
__glewExtractComponentEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLEXTRACTCOMPONENTEXTPROC __glewExtractComponentEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTRACTCOMPONENTEXTPROC
__glewFenceSync	glew.h	/^GLEW_FUN_EXPORT PFNGLFENCESYNCPROC __glewFenceSync;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFENCESYNCPROC
__glewFinalCombinerInputNV	glew.h	/^GLEW_FUN_EXPORT PFNGLFINALCOMBINERINPUTNVPROC __glewFinalCombinerInputNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFINALCOMBINERINPUTNVPROC
__glewFinishAsyncSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHASYNCSGIXPROC __glewFinishAsyncSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHASYNCSGIXPROC
__glewFinishFenceAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHFENCEAPPLEPROC __glewFinishFenceAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHFENCEAPPLEPROC
__glewFinishFenceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHFENCENVPROC __glewFinishFenceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHFENCENVPROC
__glewFinishObjectAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHOBJECTAPPLEPROC __glewFinishObjectAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHOBJECTAPPLEPROC
__glewFinishTextureSUNX	glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHTEXTURESUNXPROC __glewFinishTextureSUNX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHTEXTURESUNXPROC
__glewFlushMappedBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEPROC __glewFlushMappedBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEPROC
__glewFlushMappedBufferRangeAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC __glewFlushMappedBufferRangeAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
__glewFlushMappedNamedBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC __glewFlushMappedNamedBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
__glewFlushMappedNamedBufferRangeEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC __glewFlushMappedNamedBufferRangeEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
__glewFlushPixelDataRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHPIXELDATARANGENVPROC __glewFlushPixelDataRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHPIXELDATARANGENVPROC
__glewFlushRasterSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHRASTERSGIXPROC __glewFlushRasterSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHRASTERSGIXPROC
__glewFlushVertexArrayRangeAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC __glewFlushVertexArrayRangeAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
__glewFlushVertexArrayRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGENVPROC __glewFlushVertexArrayRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGENVPROC
__glewFogCoordFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFORMATNVPROC __glewFogCoordFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFORMATNVPROC
__glewFogCoordPointer	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERPROC __glewFogCoordPointer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERPROC
__glewFogCoordPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTEREXTPROC __glewFogCoordPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTEREXTPROC
__glewFogCoordPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERLISTIBMPROC __glewFogCoordPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERLISTIBMPROC
__glewFogCoordd	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDPROC __glewFogCoordd;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDPROC
__glewFogCoorddEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDEXTPROC __glewFogCoorddEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDEXTPROC
__glewFogCoorddv	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDVPROC __glewFogCoorddv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDVPROC
__glewFogCoorddvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDVEXTPROC __glewFogCoorddvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDVEXTPROC
__glewFogCoordf	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFPROC __glewFogCoordf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFPROC
__glewFogCoordfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFEXTPROC __glewFogCoordfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFEXTPROC
__glewFogCoordfv	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFVPROC __glewFogCoordfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFVPROC
__glewFogCoordfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFVEXTPROC __glewFogCoordfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFVEXTPROC
__glewFogCoordhNV	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDHNVPROC __glewFogCoordhNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDHNVPROC
__glewFogCoordhvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDHVNVPROC __glewFogCoordhvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDHVNVPROC
__glewFogFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGFUNCSGISPROC __glewFogFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGFUNCSGISPROC
__glewFogx	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGXPROC __glewFogx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGXPROC
__glewFogxv	glew.h	/^GLEW_FUN_EXPORT PFNGLFOGXVPROC __glewFogxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGXVPROC
__glewFragmentColorMaterialEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALEXTPROC __glewFragmentColorMaterialEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALEXTPROC
__glewFragmentColorMaterialSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALSGIXPROC __glewFragmentColorMaterialSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALSGIXPROC
__glewFragmentLightModelfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFEXTPROC __glewFragmentLightModelfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFEXTPROC
__glewFragmentLightModelfSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFSGIXPROC __glewFragmentLightModelfSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFSGIXPROC
__glewFragmentLightModelfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVEXTPROC __glewFragmentLightModelfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVEXTPROC
__glewFragmentLightModelfvSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVSGIXPROC __glewFragmentLightModelfvSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
__glewFragmentLightModeliEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIEXTPROC __glewFragmentLightModeliEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIEXTPROC
__glewFragmentLightModeliSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELISGIXPROC __glewFragmentLightModeliSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELISGIXPROC
__glewFragmentLightModelivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVEXTPROC __glewFragmentLightModelivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVEXTPROC
__glewFragmentLightModelivSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVSGIXPROC __glewFragmentLightModelivSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
__glewFragmentLightfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFEXTPROC __glewFragmentLightfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFEXTPROC
__glewFragmentLightfSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFSGIXPROC __glewFragmentLightfSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFSGIXPROC
__glewFragmentLightfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVEXTPROC __glewFragmentLightfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVEXTPROC
__glewFragmentLightfvSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVSGIXPROC __glewFragmentLightfvSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVSGIXPROC
__glewFragmentLightiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIEXTPROC __glewFragmentLightiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIEXTPROC
__glewFragmentLightiSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTISGIXPROC __glewFragmentLightiSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTISGIXPROC
__glewFragmentLightivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVEXTPROC __glewFragmentLightivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVEXTPROC
__glewFragmentLightivSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVSGIXPROC __glewFragmentLightivSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVSGIXPROC
__glewFragmentMaterialfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFEXTPROC __glewFragmentMaterialfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFEXTPROC
__glewFragmentMaterialfSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFSGIXPROC __glewFragmentMaterialfSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFSGIXPROC
__glewFragmentMaterialfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVEXTPROC __glewFragmentMaterialfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVEXTPROC
__glewFragmentMaterialfvSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVSGIXPROC __glewFragmentMaterialfvSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVSGIXPROC
__glewFragmentMaterialiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIEXTPROC __glewFragmentMaterialiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIEXTPROC
__glewFragmentMaterialiSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALISGIXPROC __glewFragmentMaterialiSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALISGIXPROC
__glewFragmentMaterialivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVEXTPROC __glewFragmentMaterialivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVEXTPROC
__glewFragmentMaterialivSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVSGIXPROC __glewFragmentMaterialivSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVSGIXPROC
__glewFrameTerminatorGREMEDY	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMETERMINATORGREMEDYPROC
__glewFrameZoomSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEZOOMSGIXPROC __glewFrameZoomSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEZOOMSGIXPROC
__glewFramebufferDrawBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC __glewFramebufferDrawBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
__glewFramebufferDrawBuffersEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC __glewFramebufferDrawBuffersEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
__glewFramebufferParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPARAMETERIPROC __glewFramebufferParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPARAMETERIPROC
__glewFramebufferReadBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERREADBUFFEREXTPROC __glewFramebufferReadBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERREADBUFFEREXTPROC
__glewFramebufferRenderbuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFERPROC __glewFramebufferRenderbuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFERPROC
__glewFramebufferRenderbufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC __glewFramebufferRenderbufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
__glewFramebufferTexture	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREPROC __glewFramebufferTexture;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREPROC
__glewFramebufferTexture1D	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DPROC __glewFramebufferTexture1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DPROC
__glewFramebufferTexture1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DEXTPROC __glewFramebufferTexture1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
__glewFramebufferTexture2D	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DPROC __glewFramebufferTexture2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DPROC
__glewFramebufferTexture2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DEXTPROC __glewFramebufferTexture2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
__glewFramebufferTexture3D	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DPROC __glewFramebufferTexture3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DPROC
__glewFramebufferTexture3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DEXTPROC __glewFramebufferTexture3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
__glewFramebufferTextureARB	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREARBPROC __glewFramebufferTextureARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREARBPROC
__glewFramebufferTextureEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREEXTPROC __glewFramebufferTextureEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREEXTPROC
__glewFramebufferTextureFaceARB	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEARBPROC __glewFramebufferTextureFaceARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
__glewFramebufferTextureFaceEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC __glewFramebufferTextureFaceEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
__glewFramebufferTextureLayer	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERPROC __glewFramebufferTextureLayer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERPROC
__glewFramebufferTextureLayerARB	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERARBPROC __glewFramebufferTextureLayerARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
__glewFramebufferTextureLayerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC __glewFramebufferTextureLayerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
__glewFreeObjectBufferATI	glew.h	/^GLEW_FUN_EXPORT PFNGLFREEOBJECTBUFFERATIPROC __glewFreeObjectBufferATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFREEOBJECTBUFFERATIPROC
__glewFrustumf	glew.h	/^GLEW_FUN_EXPORT PFNGLFRUSTUMFPROC __glewFrustumf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRUSTUMFPROC
__glewFrustumfOES	glew.h	/^GLEW_FUN_EXPORT PFNGLFRUSTUMFOESPROC __glewFrustumfOES;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRUSTUMFOESPROC
__glewFrustumx	glew.h	/^GLEW_FUN_EXPORT PFNGLFRUSTUMXPROC __glewFrustumx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLFRUSTUMXPROC
__glewGenAsyncMarkersSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLGENASYNCMARKERSSGIXPROC __glewGenAsyncMarkersSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENASYNCMARKERSSGIXPROC
__glewGenBuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLGENBUFFERSPROC __glewGenBuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENBUFFERSPROC
__glewGenBuffersARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGENBUFFERSARBPROC __glewGenBuffersARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENBUFFERSARBPROC
__glewGenFencesAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGENFENCESAPPLEPROC __glewGenFencesAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFENCESAPPLEPROC
__glewGenFencesNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGENFENCESNVPROC __glewGenFencesNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFENCESNVPROC
__glewGenFragmentShadersATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGENFRAGMENTSHADERSATIPROC __glewGenFragmentShadersATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFRAGMENTSHADERSATIPROC
__glewGenFramebuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSPROC __glewGenFramebuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSPROC
__glewGenFramebuffersEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSEXTPROC __glewGenFramebuffersEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSEXTPROC
__glewGenNamesAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGENNAMESAMDPROC __glewGenNamesAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENNAMESAMDPROC
__glewGenOcclusionQueriesNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGENOCCLUSIONQUERIESNVPROC __glewGenOcclusionQueriesNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENOCCLUSIONQUERIESNVPROC
__glewGenPathsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGENPATHSNVPROC __glewGenPathsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPATHSNVPROC
__glewGenPerfMonitorsAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGENPERFMONITORSAMDPROC __glewGenPerfMonitorsAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPERFMONITORSAMDPROC
__glewGenProgramPipelines	glew.h	/^GLEW_FUN_EXPORT PFNGLGENPROGRAMPIPELINESPROC __glewGenProgramPipelines;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPROGRAMPIPELINESPROC
__glewGenProgramsARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGENPROGRAMSARBPROC __glewGenProgramsARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPROGRAMSARBPROC
__glewGenProgramsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGENPROGRAMSNVPROC __glewGenProgramsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPROGRAMSNVPROC
__glewGenQueries	glew.h	/^GLEW_FUN_EXPORT PFNGLGENQUERIESPROC __glewGenQueries;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENQUERIESPROC
__glewGenQueriesANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGENQUERIESANGLEPROC __glewGenQueriesANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENQUERIESANGLEPROC
__glewGenQueriesARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGENQUERIESARBPROC __glewGenQueriesARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENQUERIESARBPROC
__glewGenRenderbuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSPROC __glewGenRenderbuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSPROC
__glewGenRenderbuffersEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSEXTPROC __glewGenRenderbuffersEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSEXTPROC
__glewGenSamplers	glew.h	/^GLEW_FUN_EXPORT PFNGLGENSAMPLERSPROC __glewGenSamplers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENSAMPLERSPROC
__glewGenSymbolsEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENSYMBOLSEXTPROC __glewGenSymbolsEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENSYMBOLSEXTPROC
__glewGenTexturesEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENTEXTURESEXTPROC __glewGenTexturesEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENTEXTURESEXTPROC
__glewGenTransformFeedbacks	glew.h	/^GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSPROC __glewGenTransformFeedbacks;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSPROC
__glewGenTransformFeedbacksNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSNVPROC __glewGenTransformFeedbacksNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSNVPROC
__glewGenVertexArrays	glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSPROC __glewGenVertexArrays;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSPROC
__glewGenVertexArraysAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSAPPLEPROC __glewGenVertexArraysAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSAPPLEPROC
__glewGenVertexShadersEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXSHADERSEXTPROC __glewGenVertexShadersEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXSHADERSEXTPROC
__glewGenerateMipmap	glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPPROC __glewGenerateMipmap;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPPROC
__glewGenerateMipmapEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPEXTPROC __glewGenerateMipmapEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPEXTPROC
__glewGenerateMultiTexMipmapEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATEMULTITEXMIPMAPEXTPROC __glewGenerateMultiTexMipmapEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATEMULTITEXMIPMAPEXTPROC
__glewGenerateTextureMipmap	glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPPROC __glewGenerateTextureMipmap;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPPROC
__glewGenerateTextureMipmapEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPEXTPROC __glewGenerateTextureMipmapEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPEXTPROC
__glewGetActiveAtomicCounterBufferiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC __glewGetActiveAtomicCounterBufferiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
__glewGetActiveAttrib	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBPROC __glewGetActiveAttrib;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBPROC
__glewGetActiveAttribARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBARBPROC __glewGetActiveAttribARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBARBPROC
__glewGetActiveSubroutineName	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINENAMEPROC __glewGetActiveSubroutineName;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINENAMEPROC
__glewGetActiveSubroutineUniformName	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __glewGetActiveSubroutineUniformName;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
__glewGetActiveSubroutineUniformiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC __glewGetActiveSubroutineUniformiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
__glewGetActiveUniform	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMPROC __glewGetActiveUniform;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMPROC
__glewGetActiveUniformARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMARBPROC __glewGetActiveUniformARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMARBPROC
__glewGetActiveUniformBlockName	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC __glewGetActiveUniformBlockName;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
__glewGetActiveUniformBlockiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKIVPROC __glewGetActiveUniformBlockiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKIVPROC
__glewGetActiveUniformName	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMNAMEPROC __glewGetActiveUniformName;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMNAMEPROC
__glewGetActiveUniformsiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMSIVPROC __glewGetActiveUniformsiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMSIVPROC
__glewGetActiveVaryingNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEVARYINGNVPROC __glewGetActiveVaryingNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEVARYINGNVPROC
__glewGetArrayObjectfvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTFVATIPROC __glewGetArrayObjectfvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTFVATIPROC
__glewGetArrayObjectivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTIVATIPROC __glewGetArrayObjectivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTIVATIPROC
__glewGetAttachedObjectsARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTACHEDOBJECTSARBPROC __glewGetAttachedObjectsARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTACHEDOBJECTSARBPROC
__glewGetAttachedShaders	glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTACHEDSHADERSPROC
__glewGetAttribLocation	glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONPROC
__glewGetAttribLocationARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONARBPROC __glewGetAttribLocationARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONARBPROC
__glewGetBooleanIndexedvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBOOLEANINDEXEDVEXTPROC __glewGetBooleanIndexedvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBOOLEANINDEXEDVEXTPROC
__glewGetBooleani_v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBOOLEANI_VPROC __glewGetBooleani_v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBOOLEANI_VPROC
__glewGetBufferParameteri64v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERI64VPROC __glewGetBufferParameteri64v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERI64VPROC
__glewGetBufferParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVPROC __glewGetBufferParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVPROC
__glewGetBufferParameterivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVARBPROC __glewGetBufferParameterivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVARBPROC
__glewGetBufferParameterui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERUI64VNVPROC __glewGetBufferParameterui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERUI64VNVPROC
__glewGetBufferPointerv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVPROC __glewGetBufferPointerv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVPROC
__glewGetBufferPointervARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVARBPROC __glewGetBufferPointervARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVARBPROC
__glewGetBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAPROC __glewGetBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAPROC
__glewGetBufferSubDataARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAARBPROC __glewGetBufferSubDataARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAARBPROC
__glewGetClipPlanef	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFPROC __glewGetClipPlanef;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFPROC
__glewGetClipPlanefOES	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFOESPROC __glewGetClipPlanefOES;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFOESPROC
__glewGetClipPlanex	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCLIPPLANEXPROC __glewGetClipPlanex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCLIPPLANEXPROC
__glewGetColorTable	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPROC __glewGetColorTable;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPROC
__glewGetColorTableEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEEXTPROC __glewGetColorTableEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEEXTPROC
__glewGetColorTableParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVPROC __glewGetColorTableParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVPROC
__glewGetColorTableParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVEXTPROC __glewGetColorTableParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
__glewGetColorTableParameterfvSGI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVSGIPROC __glewGetColorTableParameterfvSGI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
__glewGetColorTableParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVPROC __glewGetColorTableParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVPROC
__glewGetColorTableParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVEXTPROC __glewGetColorTableParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
__glewGetColorTableParameterivSGI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVSGIPROC __glewGetColorTableParameterivSGI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
__glewGetColorTableSGI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLESGIPROC __glewGetColorTableSGI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLESGIPROC
__glewGetCombinerInputParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC __glewGetCombinerInputParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
__glewGetCombinerInputParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC __glewGetCombinerInputParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
__glewGetCombinerOutputParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC __glewGetCombinerOutputParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
__glewGetCombinerOutputParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC __glewGetCombinerOutputParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
__glewGetCombinerStageParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC __glewGetCombinerStageParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
__glewGetCompressedMultiTexImageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC __glewGetCompressedMultiTexImageEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
__glewGetCompressedTexImage	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEPROC __glewGetCompressedTexImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEPROC
__glewGetCompressedTexImageARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEARBPROC __glewGetCompressedTexImageARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
__glewGetCompressedTextureImage	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC __glewGetCompressedTextureImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
__glewGetCompressedTextureImageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC __glewGetCompressedTextureImageEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
__glewGetCompressedTextureSubImage	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC __glewGetCompressedTextureSubImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
__glewGetConvolutionFilter	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTERPROC __glewGetConvolutionFilter;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTERPROC
__glewGetConvolutionFilterEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTEREXTPROC __glewGetConvolutionFilterEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTEREXTPROC
__glewGetConvolutionParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVPROC __glewGetConvolutionParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVPROC
__glewGetConvolutionParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC __glewGetConvolutionParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
__glewGetConvolutionParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVPROC __glewGetConvolutionParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVPROC
__glewGetConvolutionParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC __glewGetConvolutionParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
__glewGetDebugMessageLog	glew.h	/^GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGPROC __glewGetDebugMessageLog;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGPROC
__glewGetDebugMessageLogAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGAMDPROC __glewGetDebugMessageLogAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGAMDPROC
__glewGetDebugMessageLogARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGARBPROC __glewGetDebugMessageLogARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGARBPROC
__glewGetDetailTexFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLGETDETAILTEXFUNCSGISPROC __glewGetDetailTexFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDETAILTEXFUNCSGISPROC
__glewGetDoubleIndexedvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETDOUBLEINDEXEDVEXTPROC __glewGetDoubleIndexedvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDOUBLEINDEXEDVEXTPROC
__glewGetDoublei_v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VPROC __glewGetDoublei_v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VPROC
__glewGetDoublei_vEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VEXTPROC __glewGetDoublei_vEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VEXTPROC
__glewGetExtensionREGAL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETEXTENSIONREGALPROC __glewGetExtensionREGAL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETEXTENSIONREGALPROC
__glewGetFenceivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFENCEIVNVPROC __glewGetFenceivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFENCEIVNVPROC
__glewGetFinalCombinerInputParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC __glewGetFinalCombinerInputParameter/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
__glewGetFinalCombinerInputParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC __glewGetFinalCombinerInputParameter/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
__glewGetFirstPerfQueryIdINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFIRSTPERFQUERYIDINTELPROC __glewGetFirstPerfQueryIdINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFIRSTPERFQUERYIDINTELPROC
__glewGetFixedv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFIXEDVPROC __glewGetFixedv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFIXEDVPROC
__glewGetFloatIndexedvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFLOATINDEXEDVEXTPROC __glewGetFloatIndexedvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFLOATINDEXEDVEXTPROC
__glewGetFloati_v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFLOATI_VPROC __glewGetFloati_v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFLOATI_VPROC
__glewGetFloati_vEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFLOATI_VEXTPROC __glewGetFloati_vEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFLOATI_VEXTPROC
__glewGetFogFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFOGFUNCSGISPROC __glewGetFogFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFOGFUNCSGISPROC
__glewGetFragDataIndex	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGDATAINDEXPROC __glewGetFragDataIndex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGDATAINDEXPROC
__glewGetFragDataLocation	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONPROC __glewGetFragDataLocation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONPROC
__glewGetFragDataLocationEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONEXTPROC __glewGetFragDataLocationEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONEXTPROC
__glewGetFragmentLightfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVEXTPROC __glewGetFragmentLightfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVEXTPROC
__glewGetFragmentLightfvSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVSGIXPROC __glewGetFragmentLightfvSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVSGIXPROC
__glewGetFragmentLightivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVEXTPROC __glewGetFragmentLightivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVEXTPROC
__glewGetFragmentLightivSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVSGIXPROC __glewGetFragmentLightivSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVSGIXPROC
__glewGetFragmentMaterialfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVEXTPROC __glewGetFragmentMaterialfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVEXTPROC
__glewGetFragmentMaterialfvSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVSGIXPROC __glewGetFragmentMaterialfvSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVSGIXPROC
__glewGetFragmentMaterialivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVEXTPROC __glewGetFragmentMaterialivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVEXTPROC
__glewGetFragmentMaterialivSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVSGIXPROC __glewGetFragmentMaterialivSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVSGIXPROC
__glewGetFramebufferAttachmentParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetFramebufferAttachmentParam/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
__glewGetFramebufferAttachmentParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetFramebufferAttachmentPa/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
__glewGetFramebufferParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVPROC __glewGetFramebufferParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVPROC
__glewGetFramebufferParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC __glewGetFramebufferParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
__glewGetGraphicsResetStatusARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETGRAPHICSRESETSTATUSARBPROC __glewGetGraphicsResetStatusARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETGRAPHICSRESETSTATUSARBPROC
__glewGetHandleARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETHANDLEARBPROC __glewGetHandleARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHANDLEARBPROC
__glewGetHistogram	glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPROC __glewGetHistogram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPROC
__glewGetHistogramEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMEXTPROC __glewGetHistogramEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMEXTPROC
__glewGetHistogramParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVPROC
__glewGetHistogramParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
__glewGetHistogramParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVPROC
__glewGetHistogramParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
__glewGetImageHandleARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLEARBPROC __glewGetImageHandleARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLEARBPROC
__glewGetImageHandleNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLENVPROC __glewGetImageHandleNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLENVPROC
__glewGetImageTransformParameterfvHP	glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC __glewGetImageTransformParameterfvHP;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
__glewGetImageTransformParameterivHP	glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC __glewGetImageTransformParameterivHP;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
__glewGetInfoLogARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINFOLOGARBPROC __glewGetInfoLogARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINFOLOGARBPROC
__glewGetInteger64i_v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGER64I_VPROC __glewGetInteger64i_v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGER64I_VPROC
__glewGetInteger64v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGER64VPROC __glewGetInteger64v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGER64VPROC
__glewGetIntegerIndexedvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERINDEXEDVEXTPROC __glewGetIntegerIndexedvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERINDEXEDVEXTPROC
__glewGetIntegeri_v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERI_VPROC __glewGetIntegeri_v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERI_VPROC
__glewGetIntegerui64i_vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERUI64I_VNVPROC __glewGetIntegerui64i_vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERUI64I_VNVPROC
__glewGetIntegerui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERUI64VNVPROC __glewGetIntegerui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERUI64VNVPROC
__glewGetInternalformati64v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATI64VPROC __glewGetInternalformati64v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATI64VPROC
__glewGetInternalformativ	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATIVPROC __glewGetInternalformativ;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATIVPROC
__glewGetInvariantBooleanvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINVARIANTBOOLEANVEXTPROC __glewGetInvariantBooleanvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINVARIANTBOOLEANVEXTPROC
__glewGetInvariantFloatvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINVARIANTFLOATVEXTPROC __glewGetInvariantFloatvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINVARIANTFLOATVEXTPROC
__glewGetInvariantIntegervEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETINVARIANTINTEGERVEXTPROC __glewGetInvariantIntegervEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINVARIANTINTEGERVEXTPROC
__glewGetLightxv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETLIGHTXVPROC __glewGetLightxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLIGHTXVPROC
__glewGetLocalConstantBooleanvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC __glewGetLocalConstantBooleanvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
__glewGetLocalConstantFloatvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTFLOATVEXTPROC __glewGetLocalConstantFloatvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTFLOATVEXTPROC
__glewGetLocalConstantIntegervEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTINTEGERVEXTPROC __glewGetLocalConstantIntegervEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
__glewGetMapAttribParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERFVNVPROC __glewGetMapAttribParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERFVNVPROC
__glewGetMapAttribParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERIVNVPROC __glewGetMapAttribParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERIVNVPROC
__glewGetMapControlPointsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPCONTROLPOINTSNVPROC __glewGetMapControlPointsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPCONTROLPOINTSNVPROC
__glewGetMapParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERFVNVPROC __glewGetMapParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERFVNVPROC
__glewGetMapParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERIVNVPROC __glewGetMapParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERIVNVPROC
__glewGetMaterialxv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMATERIALXVPROC __glewGetMaterialxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMATERIALXVPROC
__glewGetMinmax	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPROC __glewGetMinmax;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPROC
__glewGetMinmaxEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXEXTPROC
__glewGetMinmaxParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVPROC
__glewGetMinmaxParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVEXTPROC
__glewGetMinmaxParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVPROC
__glewGetMinmaxParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVEXTPROC
__glewGetMultiTexEnvfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXENVFVEXTPROC __glewGetMultiTexEnvfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXENVFVEXTPROC
__glewGetMultiTexEnvivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXENVIVEXTPROC __glewGetMultiTexEnvivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXENVIVEXTPROC
__glewGetMultiTexGendvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXGENDVEXTPROC __glewGetMultiTexGendvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXGENDVEXTPROC
__glewGetMultiTexGenfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXGENFVEXTPROC __glewGetMultiTexGenfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXGENFVEXTPROC
__glewGetMultiTexGenivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXGENIVEXTPROC __glewGetMultiTexGenivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXGENIVEXTPROC
__glewGetMultiTexImageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXIMAGEEXTPROC __glewGetMultiTexImageEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXIMAGEEXTPROC
__glewGetMultiTexLevelParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC __glewGetMultiTexLevelParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
__glewGetMultiTexLevelParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC __glewGetMultiTexLevelParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
__glewGetMultiTexParameterIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIIVEXTPROC __glewGetMultiTexParameterIivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIIVEXTPROC
__glewGetMultiTexParameterIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIUIVEXTPROC __glewGetMultiTexParameterIuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
__glewGetMultiTexParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERFVEXTPROC __glewGetMultiTexParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERFVEXTPROC
__glewGetMultiTexParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIVEXTPROC __glewGetMultiTexParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIVEXTPROC
__glewGetMultisamplefv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVPROC __glewGetMultisamplefv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVPROC
__glewGetMultisamplefvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVNVPROC __glewGetMultisamplefvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVNVPROC
__glewGetNamedBufferParameteri64v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERI64VPROC __glewGetNamedBufferParameteri64v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
__glewGetNamedBufferParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVPROC __glewGetNamedBufferParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVPROC
__glewGetNamedBufferParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC __glewGetNamedBufferParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
__glewGetNamedBufferParameterui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC __glewGetNamedBufferParameterui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
__glewGetNamedBufferPointerv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVPROC __glewGetNamedBufferPointerv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVPROC
__glewGetNamedBufferPointervEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVEXTPROC __glewGetNamedBufferPointervEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
__glewGetNamedBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAPROC __glewGetNamedBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAPROC
__glewGetNamedBufferSubDataEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAEXTPROC __glewGetNamedBufferSubDataEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
__glewGetNamedFramebufferAttachmentParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetNamedFramebufferAttac/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
__glewGetNamedFramebufferAttachmentParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetNamedFramebufferAt/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
__glewGetNamedFramebufferParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC __glewGetNamedFramebufferParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
__glewGetNamedFramebufferParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC __glewGetNamedFramebufferParameterivE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
__glewGetNamedProgramLocalParameterIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC __glewGetNamedProgramLocalParameter/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
__glewGetNamedProgramLocalParameterIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC __glewGetNamedProgramLocalParamete/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
__glewGetNamedProgramLocalParameterdvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC __glewGetNamedProgramLocalParameterd/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
__glewGetNamedProgramLocalParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC __glewGetNamedProgramLocalParameterf/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
__glewGetNamedProgramStringEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMSTRINGEXTPROC __glewGetNamedProgramStringEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
__glewGetNamedProgramivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMIVEXTPROC __glewGetNamedProgramivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMIVEXTPROC
__glewGetNamedRenderbufferParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC __glewGetNamedRenderbufferParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
__glewGetNamedRenderbufferParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC __glewGetNamedRenderbufferParameteri/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
__glewGetNamedStringARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGARBPROC __glewGetNamedStringARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGARBPROC
__glewGetNamedStringivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGIVARBPROC __glewGetNamedStringivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGIVARBPROC
__glewGetNextPerfQueryIdINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNEXTPERFQUERYIDINTELPROC __glewGetNextPerfQueryIdINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNEXTPERFQUERYIDINTELPROC
__glewGetObjectBufferfvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERFVATIPROC __glewGetObjectBufferfvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERFVATIPROC
__glewGetObjectBufferivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERIVATIPROC __glewGetObjectBufferivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERIVATIPROC
__glewGetObjectLabel	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTLABELPROC __glewGetObjectLabel;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTLABELPROC
__glewGetObjectLabelEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTLABELEXTPROC __glewGetObjectLabelEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTLABELEXTPROC
__glewGetObjectParameterfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERFVARBPROC __glewGetObjectParameterfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERFVARBPROC
__glewGetObjectParameterivAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVAPPLEPROC __glewGetObjectParameterivAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVAPPLEPROC
__glewGetObjectParameterivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVARBPROC __glewGetObjectParameterivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVARBPROC
__glewGetObjectPtrLabel	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPTRLABELPROC __glewGetObjectPtrLabel;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPTRLABELPROC
__glewGetOcclusionQueryivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYIVNVPROC __glewGetOcclusionQueryivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYIVNVPROC
__glewGetOcclusionQueryuivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYUIVNVPROC __glewGetOcclusionQueryuivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYUIVNVPROC
__glewGetPathColorGenfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENFVNVPROC __glewGetPathColorGenfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENFVNVPROC
__glewGetPathColorGenivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENIVNVPROC __glewGetPathColorGenivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENIVNVPROC
__glewGetPathCommandsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOMMANDSNVPROC __glewGetPathCommandsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOMMANDSNVPROC
__glewGetPathCoordsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOORDSNVPROC __glewGetPathCoordsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOORDSNVPROC
__glewGetPathDashArrayNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHDASHARRAYNVPROC __glewGetPathDashArrayNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHDASHARRAYNVPROC
__glewGetPathLengthNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHLENGTHNVPROC __glewGetPathLengthNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHLENGTHNVPROC
__glewGetPathMetricRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHMETRICRANGENVPROC __glewGetPathMetricRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHMETRICRANGENVPROC
__glewGetPathMetricsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHMETRICSNVPROC __glewGetPathMetricsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHMETRICSNVPROC
__glewGetPathParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERFVNVPROC __glewGetPathParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERFVNVPROC
__glewGetPathParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERIVNVPROC __glewGetPathParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERIVNVPROC
__glewGetPathSpacingNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHSPACINGNVPROC __glewGetPathSpacingNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHSPACINGNVPROC
__glewGetPathTexGenfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHTEXGENFVNVPROC __glewGetPathTexGenfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHTEXGENFVNVPROC
__glewGetPathTexGenivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHTEXGENIVNVPROC __glewGetPathTexGenivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHTEXGENIVNVPROC
__glewGetPerfCounterInfoINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFCOUNTERINFOINTELPROC __glewGetPerfCounterInfoINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFCOUNTERINFOINTELPROC
__glewGetPerfMonitorCounterDataAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERDATAAMDPROC __glewGetPerfMonitorCounterDataAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
__glewGetPerfMonitorCounterInfoAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERINFOAMDPROC __glewGetPerfMonitorCounterInfoAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
__glewGetPerfMonitorCounterStringAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC __glewGetPerfMonitorCounterStringAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
__glewGetPerfMonitorCountersAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSAMDPROC __glewGetPerfMonitorCountersAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSAMDPROC
__glewGetPerfMonitorGroupStringAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSTRINGAMDPROC __glewGetPerfMonitorGroupStringAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
__glewGetPerfMonitorGroupsAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSAMDPROC __glewGetPerfMonitorGroupsAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSAMDPROC
__glewGetPerfQueryDataINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFQUERYDATAINTELPROC __glewGetPerfQueryDataINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFQUERYDATAINTELPROC
__glewGetPerfQueryIdByNameINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFQUERYIDBYNAMEINTELPROC __glewGetPerfQueryIdByNameINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFQUERYIDBYNAMEINTELPROC
__glewGetPerfQueryInfoINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFQUERYINFOINTELPROC __glewGetPerfQueryInfoINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFQUERYINFOINTELPROC
__glewGetPixelTransformParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC __glewGetPixelTransformParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC
__glewGetPixelTransformParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC __glewGetPixelTransformParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC
__glewGetPointerIndexedvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPOINTERINDEXEDVEXTPROC __glewGetPointerIndexedvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPOINTERINDEXEDVEXTPROC
__glewGetPointeri_vEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPOINTERI_VEXTPROC __glewGetPointeri_vEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPOINTERI_VEXTPROC
__glewGetProcAddressREGAL	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROCADDRESSREGALPROC __glewGetProcAddressREGAL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROCADDRESSREGALPROC
__glewGetProgramBinary	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMBINARYPROC __glewGetProgramBinary;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMBINARYPROC
__glewGetProgramEnvParameterdvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERDVARBPROC __glewGetProgramEnvParameterdvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERDVARBPROC
__glewGetProgramEnvParameterfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERFVARBPROC __glewGetProgramEnvParameterfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERFVARBPROC
__glewGetProgramInfoLog	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMINFOLOGPROC
__glewGetProgramInterfaceiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMINTERFACEIVPROC __glewGetProgramInterfaceiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMINTERFACEIVPROC
__glewGetProgramLocalParameterdvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC __glewGetProgramLocalParameterdvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
__glewGetProgramLocalParameterfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC __glewGetProgramLocalParameterfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
__glewGetProgramNamedParameterdvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC __glewGetProgramNamedParameterdvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
__glewGetProgramNamedParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC __glewGetProgramNamedParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
__glewGetProgramParameterdvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERDVNVPROC __glewGetProgramParameterdvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERDVNVPROC
__glewGetProgramParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERFVNVPROC __glewGetProgramParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERFVNVPROC
__glewGetProgramPipelineInfoLog	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEINFOLOGPROC __glewGetProgramPipelineInfoLog;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEINFOLOGPROC
__glewGetProgramPipelineiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEIVPROC __glewGetProgramPipelineiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEIVPROC
__glewGetProgramResourceIndex	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEINDEXPROC __glewGetProgramResourceIndex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEINDEXPROC
__glewGetProgramResourceLocation	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONPROC __glewGetProgramResourceLocation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONPROC
__glewGetProgramResourceLocationIndex	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC __glewGetProgramResourceLocationIndex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
__glewGetProgramResourceName	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCENAMEPROC __glewGetProgramResourceName;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCENAMEPROC
__glewGetProgramResourceiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEIVPROC __glewGetProgramResourceiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEIVPROC
__glewGetProgramStageiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMSTAGEIVPROC __glewGetProgramStageiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMSTAGEIVPROC
__glewGetProgramStringARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGARBPROC __glewGetProgramStringARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGARBPROC
__glewGetProgramStringNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGNVPROC __glewGetProgramStringNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGNVPROC
__glewGetProgramiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMIVPROC __glewGetProgramiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMIVPROC
__glewGetProgramivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMIVARBPROC __glewGetProgramivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMIVARBPROC
__glewGetProgramivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMIVNVPROC __glewGetProgramivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMIVNVPROC
__glewGetQueryIndexediv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYINDEXEDIVPROC __glewGetQueryIndexediv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYINDEXEDIVPROC
__glewGetQueryObjecti64v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VPROC __glewGetQueryObjecti64v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VPROC
__glewGetQueryObjecti64vANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VANGLEPROC __glewGetQueryObjecti64vANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VANGLEPROC
__glewGetQueryObjecti64vEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VEXTPROC __glewGetQueryObjecti64vEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VEXTPROC
__glewGetQueryObjectiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVPROC __glewGetQueryObjectiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVPROC
__glewGetQueryObjectivANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVANGLEPROC __glewGetQueryObjectivANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVANGLEPROC
__glewGetQueryObjectivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVARBPROC __glewGetQueryObjectivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVARBPROC
__glewGetQueryObjectui64v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VPROC __glewGetQueryObjectui64v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VPROC
__glewGetQueryObjectui64vANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VANGLEPROC __glewGetQueryObjectui64vANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VANGLEPROC
__glewGetQueryObjectui64vEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VEXTPROC __glewGetQueryObjectui64vEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VEXTPROC
__glewGetQueryObjectuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVPROC __glewGetQueryObjectuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVPROC
__glewGetQueryObjectuivANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVANGLEPROC __glewGetQueryObjectuivANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVANGLEPROC
__glewGetQueryObjectuivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVARBPROC __glewGetQueryObjectuivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVARBPROC
__glewGetQueryiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYIVPROC __glewGetQueryiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYIVPROC
__glewGetQueryivANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYIVANGLEPROC __glewGetQueryivANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYIVANGLEPROC
__glewGetQueryivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYIVARBPROC __glewGetQueryivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYIVARBPROC
__glewGetRenderbufferParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVPROC __glewGetRenderbufferParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVPROC
__glewGetRenderbufferParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC __glewGetRenderbufferParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
__glewGetSamplerParameterIiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVPROC __glewGetSamplerParameterIiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVPROC
__glewGetSamplerParameterIuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVPROC __glewGetSamplerParameterIuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVPROC
__glewGetSamplerParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERFVPROC __glewGetSamplerParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERFVPROC
__glewGetSamplerParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIVPROC __glewGetSamplerParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIVPROC
__glewGetSeparableFilter	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTERPROC
__glewGetSeparableFilterEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTEREXTPROC __glewGetSeparableFilterEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTEREXTPROC
__glewGetShaderInfoLog	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERINFOLOGPROC
__glewGetShaderPrecisionFormat	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERPRECISIONFORMATPROC __glewGetShaderPrecisionFormat;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERPRECISIONFORMATPROC
__glewGetShaderSource	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEPROC __glewGetShaderSource;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEPROC
__glewGetShaderSourceARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEARBPROC __glewGetShaderSourceARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEARBPROC
__glewGetShaderiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERIVPROC __glewGetShaderiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERIVPROC
__glewGetSharpenTexFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHARPENTEXFUNCSGISPROC __glewGetSharpenTexFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHARPENTEXFUNCSGISPROC
__glewGetStringi	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSTRINGIPROC __glewGetStringi;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSTRINGIPROC
__glewGetSubroutineIndex	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSUBROUTINEINDEXPROC __glewGetSubroutineIndex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSUBROUTINEINDEXPROC
__glewGetSubroutineUniformLocation	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC __glewGetSubroutineUniformLocation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
__glewGetSynciv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETSYNCIVPROC __glewGetSynciv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSYNCIVPROC
__glewGetTexBumpParameterfvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERFVATIPROC __glewGetTexBumpParameterfvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERFVATIPROC
__glewGetTexBumpParameterivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERIVATIPROC __glewGetTexBumpParameterivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERIVATIPROC
__glewGetTexEnvxv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXENVXVPROC __glewGetTexEnvxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXENVXVPROC
__glewGetTexFilterFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXFILTERFUNCSGISPROC __glewGetTexFilterFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXFILTERFUNCSGISPROC
__glewGetTexParameterIiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVPROC __glewGetTexParameterIiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVPROC
__glewGetTexParameterIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVEXTPROC __glewGetTexParameterIivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVEXTPROC
__glewGetTexParameterIuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVPROC __glewGetTexParameterIuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVPROC
__glewGetTexParameterIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVEXTPROC __glewGetTexParameterIuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVEXTPROC
__glewGetTexParameterPointervAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC __glewGetTexParameterPointervAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
__glewGetTexParameterxv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERXVPROC __glewGetTexParameterxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERXVPROC
__glewGetTextureHandleARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLEARBPROC __glewGetTextureHandleARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLEARBPROC
__glewGetTextureHandleNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLENVPROC __glewGetTextureHandleNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLENVPROC
__glewGetTextureImage	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEPROC __glewGetTextureImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEPROC
__glewGetTextureImageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEEXTPROC __glewGetTextureImageEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEEXTPROC
__glewGetTextureLevelParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVPROC __glewGetTextureLevelParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVPROC
__glewGetTextureLevelParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC __glewGetTextureLevelParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
__glewGetTextureLevelParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVPROC __glewGetTextureLevelParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVPROC
__glewGetTextureLevelParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC __glewGetTextureLevelParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
__glewGetTextureParameterIiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVPROC __glewGetTextureParameterIiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVPROC
__glewGetTextureParameterIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVEXTPROC __glewGetTextureParameterIivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVEXTPROC
__glewGetTextureParameterIuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVPROC __glewGetTextureParameterIuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVPROC
__glewGetTextureParameterIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVEXTPROC __glewGetTextureParameterIuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
__glewGetTextureParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVPROC __glewGetTextureParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVPROC
__glewGetTextureParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVEXTPROC __glewGetTextureParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVEXTPROC
__glewGetTextureParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVPROC __glewGetTextureParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVPROC
__glewGetTextureParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVEXTPROC __glewGetTextureParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVEXTPROC
__glewGetTextureSamplerHandleARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLEARBPROC __glewGetTextureSamplerHandleARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLEARBPROC
__glewGetTextureSamplerHandleNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLENVPROC __glewGetTextureSamplerHandleNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLENVPROC
__glewGetTextureSubImage	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURESUBIMAGEPROC __glewGetTextureSubImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURESUBIMAGEPROC
__glewGetTrackMatrixivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRACKMATRIXIVNVPROC __glewGetTrackMatrixivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRACKMATRIXIVNVPROC
__glewGetTransformFeedbackVarying	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGPROC __glewGetTransformFeedbackVarying;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
__glewGetTransformFeedbackVaryingEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC __glewGetTransformFeedbackVaryingEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
__glewGetTransformFeedbackVaryingNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC __glewGetTransformFeedbackVaryingNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
__glewGetTransformFeedbacki64_v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI64_VPROC __glewGetTransformFeedbacki64_v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI64_VPROC
__glewGetTransformFeedbacki_v	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI_VPROC __glewGetTransformFeedbacki_v;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI_VPROC
__glewGetTransformFeedbackiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKIVPROC __glewGetTransformFeedbackiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKIVPROC
__glewGetTranslatedShaderSourceANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC __glewGetTranslatedShaderSourceANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
__glewGetUniformBlockIndex	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMBLOCKINDEXPROC
__glewGetUniformBufferSizeEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMBUFFERSIZEEXTPROC __glewGetUniformBufferSizeEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMBUFFERSIZEEXTPROC
__glewGetUniformIndices	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMINDICESPROC
__glewGetUniformLocation	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONPROC __glewGetUniformLocation;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONPROC
__glewGetUniformLocationARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONARBPROC __glewGetUniformLocationARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONARBPROC
__glewGetUniformOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMOFFSETEXTPROC __glewGetUniformOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMOFFSETEXTPROC
__glewGetUniformSubroutineuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMSUBROUTINEUIVPROC __glewGetUniformSubroutineuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMSUBROUTINEUIVPROC
__glewGetUniformdv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMDVPROC __glewGetUniformdv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMDVPROC
__glewGetUniformfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMFVPROC __glewGetUniformfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMFVPROC
__glewGetUniformfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMFVARBPROC __glewGetUniformfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMFVARBPROC
__glewGetUniformi64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMI64VNVPROC __glewGetUniformi64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMI64VNVPROC
__glewGetUniformiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMIVPROC __glewGetUniformiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMIVPROC
__glewGetUniformivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMIVARBPROC __glewGetUniformivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMIVARBPROC
__glewGetUniformui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMUI64VNVPROC __glewGetUniformui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMUI64VNVPROC
__glewGetUniformuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVPROC __glewGetUniformuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVPROC
__glewGetUniformuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVEXTPROC __glewGetUniformuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVEXTPROC
__glewGetVariantArrayObjectfvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTFVATIPROC __glewGetVariantArrayObjectfvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTFVATIPROC
__glewGetVariantArrayObjectivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTIVATIPROC __glewGetVariantArrayObjectivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTIVATIPROC
__glewGetVariantBooleanvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTBOOLEANVEXTPROC __glewGetVariantBooleanvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTBOOLEANVEXTPROC
__glewGetVariantFloatvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTFLOATVEXTPROC __glewGetVariantFloatvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTFLOATVEXTPROC
__glewGetVariantIntegervEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTINTEGERVEXTPROC __glewGetVariantIntegervEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTINTEGERVEXTPROC
__glewGetVariantPointervEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTPOINTERVEXTPROC __glewGetVariantPointervEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTPOINTERVEXTPROC
__glewGetVaryingLocationNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARYINGLOCATIONNVPROC __glewGetVaryingLocationNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARYINGLOCATIONNVPROC
__glewGetVertexArrayIndexed64iv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXED64IVPROC __glewGetVertexArrayIndexed64iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXED64IVPROC
__glewGetVertexArrayIndexediv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXEDIVPROC __glewGetVertexArrayIndexediv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXEDIVPROC
__glewGetVertexArrayIntegeri_vEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC __glewGetVertexArrayIntegeri_vEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC
__glewGetVertexArrayIntegervEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERVEXTPROC __glewGetVertexArrayIntegervEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERVEXTPROC
__glewGetVertexArrayPointeri_vEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC __glewGetVertexArrayPointeri_vEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC
__glewGetVertexArrayPointervEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERVEXTPROC __glewGetVertexArrayPointervEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERVEXTPROC
__glewGetVertexArrayiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYIVPROC __glewGetVertexArrayiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYIVPROC
__glewGetVertexAttribArrayObjectfvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC __glewGetVertexAttribArrayObjectfvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
__glewGetVertexAttribArrayObjectivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC __glewGetVertexAttribArrayObjectivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
__glewGetVertexAttribIiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVPROC __glewGetVertexAttribIiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVPROC
__glewGetVertexAttribIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVEXTPROC __glewGetVertexAttribIivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVEXTPROC
__glewGetVertexAttribIuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVPROC __glewGetVertexAttribIuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVPROC
__glewGetVertexAttribIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVEXTPROC __glewGetVertexAttribIuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVEXTPROC
__glewGetVertexAttribLdv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVPROC __glewGetVertexAttribLdv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVPROC
__glewGetVertexAttribLdvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVEXTPROC __glewGetVertexAttribLdvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVEXTPROC
__glewGetVertexAttribLi64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLI64VNVPROC __glewGetVertexAttribLi64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLI64VNVPROC
__glewGetVertexAttribLui64vARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VARBPROC __glewGetVertexAttribLui64vARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VARBPROC
__glewGetVertexAttribLui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VNVPROC __glewGetVertexAttribLui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VNVPROC
__glewGetVertexAttribPointerv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVPROC __glewGetVertexAttribPointerv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVPROC
__glewGetVertexAttribPointervARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVARBPROC __glewGetVertexAttribPointervARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVARBPROC
__glewGetVertexAttribPointervNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVNVPROC __glewGetVertexAttribPointervNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVNVPROC
__glewGetVertexAttribdv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVPROC __glewGetVertexAttribdv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVPROC
__glewGetVertexAttribdvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVARBPROC __glewGetVertexAttribdvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVARBPROC
__glewGetVertexAttribdvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVNVPROC __glewGetVertexAttribdvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVNVPROC
__glewGetVertexAttribfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVPROC __glewGetVertexAttribfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVPROC
__glewGetVertexAttribfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVARBPROC __glewGetVertexAttribfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVARBPROC
__glewGetVertexAttribfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVNVPROC __glewGetVertexAttribfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVNVPROC
__glewGetVertexAttribiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVPROC __glewGetVertexAttribiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVPROC
__glewGetVertexAttribivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVARBPROC __glewGetVertexAttribivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVARBPROC
__glewGetVertexAttribivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVNVPROC __glewGetVertexAttribivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVNVPROC
__glewGetVideoCaptureStreamdvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMDVNVPROC __glewGetVideoCaptureStreamdvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
__glewGetVideoCaptureStreamfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMFVNVPROC __glewGetVideoCaptureStreamfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
__glewGetVideoCaptureStreamivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMIVNVPROC __glewGetVideoCaptureStreamivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
__glewGetVideoCaptureivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTUREIVNVPROC __glewGetVideoCaptureivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTUREIVNVPROC
__glewGetVideoi64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOI64VNVPROC __glewGetVideoi64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOI64VNVPROC
__glewGetVideoivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOIVNVPROC __glewGetVideoivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOIVNVPROC
__glewGetVideoui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOUI64VNVPROC __glewGetVideoui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOUI64VNVPROC
__glewGetVideouivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOUIVNVPROC __glewGetVideouivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOUIVNVPROC
__glewGetnColorTableARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNCOLORTABLEARBPROC __glewGetnColorTableARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNCOLORTABLEARBPROC
__glewGetnCompressedTexImageARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC __glewGetnCompressedTexImageARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
__glewGetnConvolutionFilterARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNCONVOLUTIONFILTERARBPROC __glewGetnConvolutionFilterARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNCONVOLUTIONFILTERARBPROC
__glewGetnHistogramARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNHISTOGRAMARBPROC __glewGetnHistogramARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNHISTOGRAMARBPROC
__glewGetnMapdvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMAPDVARBPROC __glewGetnMapdvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMAPDVARBPROC
__glewGetnMapfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMAPFVARBPROC
__glewGetnMapivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMAPIVARBPROC __glewGetnMapivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMAPIVARBPROC
__glewGetnMinmaxARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMINMAXARBPROC
__glewGetnPixelMapfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPIXELMAPFVARBPROC
__glewGetnPixelMapuivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUIVARBPROC
__glewGetnPixelMapusvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUSVARBPROC __glewGetnPixelMapusvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUSVARBPROC
__glewGetnPolygonStippleARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPOLYGONSTIPPLEARBPROC __glewGetnPolygonStippleARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPOLYGONSTIPPLEARBPROC
__glewGetnSeparableFilterARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNSEPARABLEFILTERARBPROC __glewGetnSeparableFilterARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNSEPARABLEFILTERARBPROC
__glewGetnTexImageARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNTEXIMAGEARBPROC __glewGetnTexImageARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNTEXIMAGEARBPROC
__glewGetnUniformdvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMDVARBPROC __glewGetnUniformdvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMDVARBPROC
__glewGetnUniformfv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVPROC __glewGetnUniformfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVPROC
__glewGetnUniformfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVARBPROC __glewGetnUniformfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVARBPROC
__glewGetnUniformiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVPROC __glewGetnUniformiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVPROC
__glewGetnUniformivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVARBPROC __glewGetnUniformivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVARBPROC
__glewGetnUniformuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVPROC __glewGetnUniformuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVPROC
__glewGetnUniformuivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVARBPROC __glewGetnUniformuivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVARBPROC
__glewGlobalAlphaFactorbSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORBSUNPROC __glewGlobalAlphaFactorbSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORBSUNPROC
__glewGlobalAlphaFactordSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORDSUNPROC __glewGlobalAlphaFactordSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORDSUNPROC
__glewGlobalAlphaFactorfSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORFSUNPROC __glewGlobalAlphaFactorfSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORFSUNPROC
__glewGlobalAlphaFactoriSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORISUNPROC __glewGlobalAlphaFactoriSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORISUNPROC
__glewGlobalAlphaFactorsSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORSSUNPROC __glewGlobalAlphaFactorsSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORSSUNPROC
__glewGlobalAlphaFactorubSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUBSUNPROC __glewGlobalAlphaFactorubSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUBSUNPROC
__glewGlobalAlphaFactoruiSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUISUNPROC __glewGlobalAlphaFactoruiSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUISUNPROC
__glewGlobalAlphaFactorusSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUSSUNPROC __glewGlobalAlphaFactorusSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUSSUNPROC
__glewHistogram	glew.h	/^GLEW_FUN_EXPORT PFNGLHISTOGRAMPROC __glewHistogram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLHISTOGRAMPROC
__glewHistogramEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLHISTOGRAMEXTPROC __glewHistogramEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLHISTOGRAMEXTPROC
__glewImageTransformParameterfHP	glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFHPPROC __glewImageTransformParameterfHP;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFHPPROC
__glewImageTransformParameterfvHP	glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFVHPPROC __glewImageTransformParameterfvHP;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
__glewImageTransformParameteriHP	glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIHPPROC __glewImageTransformParameteriHP;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIHPPROC
__glewImageTransformParameterivHP	glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIVHPPROC __glewImageTransformParameterivHP;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
__glewImportSyncEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTSYNCEXTPROC __glewImportSyncEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTSYNCEXTPROC
__glewIndexFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXFORMATNVPROC __glewIndexFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXFORMATNVPROC
__glewIndexFuncEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXFUNCEXTPROC
__glewIndexMaterialEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXMATERIALEXTPROC __glewIndexMaterialEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXMATERIALEXTPROC
__glewIndexPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXPOINTEREXTPROC __glewIndexPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXPOINTEREXTPROC
__glewIndexPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXPOINTERLISTIBMPROC __glewIndexPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXPOINTERLISTIBMPROC
__glewInsertComponentEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLINSERTCOMPONENTEXTPROC __glewInsertComponentEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINSERTCOMPONENTEXTPROC
__glewInsertEventMarkerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLINSERTEVENTMARKEREXTPROC __glewInsertEventMarkerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINSERTEVENTMARKEREXTPROC
__glewInterpolatePathsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLINTERPOLATEPATHSNVPROC __glewInterpolatePathsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINTERPOLATEPATHSNVPROC
__glewInvalidateBufferData	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERDATAPROC __glewInvalidateBufferData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERDATAPROC
__glewInvalidateBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERSUBDATAPROC __glewInvalidateBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERSUBDATAPROC
__glewInvalidateFramebuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATEFRAMEBUFFERPROC __glewInvalidateFramebuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATEFRAMEBUFFERPROC
__glewInvalidateNamedFramebufferData	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC __glewInvalidateNamedFramebufferData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
__glewInvalidateNamedFramebufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC __glewInvalidateNamedFramebufferSubDa/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
__glewInvalidateSubFramebuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATESUBFRAMEBUFFERPROC __glewInvalidateSubFramebuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATESUBFRAMEBUFFERPROC
__glewInvalidateTexImage	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATETEXIMAGEPROC __glewInvalidateTexImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATETEXIMAGEPROC
__glewInvalidateTexSubImage	glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATETEXSUBIMAGEPROC __glewInvalidateTexSubImage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATETEXSUBIMAGEPROC
__glewIsAsyncMarkerSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLISASYNCMARKERSGIXPROC __glewIsAsyncMarkerSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISASYNCMARKERSGIXPROC
__glewIsBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLISBUFFERPROC __glewIsBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISBUFFERPROC
__glewIsBufferARB	glew.h	/^GLEW_FUN_EXPORT PFNGLISBUFFERARBPROC __glewIsBufferARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISBUFFERARBPROC
__glewIsBufferResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISBUFFERRESIDENTNVPROC __glewIsBufferResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISBUFFERRESIDENTNVPROC
__glewIsEnabledIndexedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLISENABLEDINDEXEDEXTPROC __glewIsEnabledIndexedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISENABLEDINDEXEDEXTPROC
__glewIsEnabledi	glew.h	/^GLEW_FUN_EXPORT PFNGLISENABLEDIPROC __glewIsEnabledi;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISENABLEDIPROC
__glewIsFenceAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLISFENCEAPPLEPROC __glewIsFenceAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISFENCEAPPLEPROC
__glewIsFenceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISFENCENVPROC __glewIsFenceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISFENCENVPROC
__glewIsFramebuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLISFRAMEBUFFERPROC __glewIsFramebuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISFRAMEBUFFERPROC
__glewIsFramebufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLISFRAMEBUFFEREXTPROC __glewIsFramebufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISFRAMEBUFFEREXTPROC
__glewIsImageHandleResidentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTARBPROC __glewIsImageHandleResidentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTARBPROC
__glewIsImageHandleResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTNVPROC __glewIsImageHandleResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTNVPROC
__glewIsNameAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLISNAMEAMDPROC __glewIsNameAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISNAMEAMDPROC
__glewIsNamedBufferResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISNAMEDBUFFERRESIDENTNVPROC __glewIsNamedBufferResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISNAMEDBUFFERRESIDENTNVPROC
__glewIsNamedStringARB	glew.h	/^GLEW_FUN_EXPORT PFNGLISNAMEDSTRINGARBPROC __glewIsNamedStringARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISNAMEDSTRINGARBPROC
__glewIsObjectBufferATI	glew.h	/^GLEW_FUN_EXPORT PFNGLISOBJECTBUFFERATIPROC __glewIsObjectBufferATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISOBJECTBUFFERATIPROC
__glewIsOcclusionQueryNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISOCCLUSIONQUERYNVPROC __glewIsOcclusionQueryNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISOCCLUSIONQUERYNVPROC
__glewIsPathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISPATHNVPROC __glewIsPathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISPATHNVPROC
__glewIsPointInFillPathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISPOINTINFILLPATHNVPROC __glewIsPointInFillPathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISPOINTINFILLPATHNVPROC
__glewIsPointInStrokePathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISPOINTINSTROKEPATHNVPROC __glewIsPointInStrokePathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISPOINTINSTROKEPATHNVPROC
__glewIsProgram	glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMPROC __glewIsProgram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMPROC
__glewIsProgramARB	glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMARBPROC __glewIsProgramARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMARBPROC
__glewIsProgramNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMNVPROC __glewIsProgramNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMNVPROC
__glewIsProgramPipeline	glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMPIPELINEPROC __glewIsProgramPipeline;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMPIPELINEPROC
__glewIsQuery	glew.h	/^GLEW_FUN_EXPORT PFNGLISQUERYPROC __glewIsQuery;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISQUERYPROC
__glewIsQueryANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLISQUERYANGLEPROC __glewIsQueryANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISQUERYANGLEPROC
__glewIsQueryARB	glew.h	/^GLEW_FUN_EXPORT PFNGLISQUERYARBPROC __glewIsQueryARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISQUERYARBPROC
__glewIsRenderbuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLISRENDERBUFFERPROC __glewIsRenderbuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISRENDERBUFFERPROC
__glewIsRenderbufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLISRENDERBUFFEREXTPROC __glewIsRenderbufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISRENDERBUFFEREXTPROC
__glewIsSampler	glew.h	/^GLEW_FUN_EXPORT PFNGLISSAMPLERPROC __glewIsSampler;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISSAMPLERPROC
__glewIsShader	glew.h	/^GLEW_FUN_EXPORT PFNGLISSHADERPROC __glewIsShader;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISSHADERPROC
__glewIsSupportedREGAL	glew.h	/^GLEW_FUN_EXPORT PFNGLISSUPPORTEDREGALPROC __glewIsSupportedREGAL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISSUPPORTEDREGALPROC
__glewIsSync	glew.h	/^GLEW_FUN_EXPORT PFNGLISSYNCPROC __glewIsSync;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISSYNCPROC
__glewIsTextureEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLISTEXTUREEXTPROC __glewIsTextureEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISTEXTUREEXTPROC
__glewIsTextureHandleResidentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTARBPROC __glewIsTextureHandleResidentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTARBPROC
__glewIsTextureHandleResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTNVPROC __glewIsTextureHandleResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTNVPROC
__glewIsTransformFeedback	glew.h	/^GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKPROC __glewIsTransformFeedback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKPROC
__glewIsTransformFeedbackNV	glew.h	/^GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKNVPROC __glewIsTransformFeedbackNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKNVPROC
__glewIsVariantEnabledEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLISVARIANTENABLEDEXTPROC __glewIsVariantEnabledEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISVARIANTENABLEDEXTPROC
__glewIsVertexArray	glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXARRAYPROC __glewIsVertexArray;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXARRAYPROC
__glewIsVertexArrayAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXARRAYAPPLEPROC __glewIsVertexArrayAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXARRAYAPPLEPROC
__glewIsVertexAttribEnabledAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXATTRIBENABLEDAPPLEPROC __glewIsVertexAttribEnabledAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
__glewLabelObjectEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLLABELOBJECTEXTPROC __glewLabelObjectEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLABELOBJECTEXTPROC
__glewLightEnviEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTENVIEXTPROC __glewLightEnviEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTENVIEXTPROC
__glewLightModelx	glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTMODELXPROC __glewLightModelx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTMODELXPROC
__glewLightModelxv	glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTMODELXVPROC __glewLightModelxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTMODELXVPROC
__glewLightx	glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTXPROC __glewLightx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTXPROC
__glewLightxv	glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTXVPROC __glewLightxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTXVPROC
__glewLineWidthx	glew.h	/^GLEW_FUN_EXPORT PFNGLLINEWIDTHXPROC __glewLineWidthx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLINEWIDTHXPROC
__glewLinkProgram	glew.h	/^GLEW_FUN_EXPORT PFNGLLINKPROGRAMPROC __glewLinkProgram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLINKPROGRAMPROC
__glewLinkProgramARB	glew.h	/^GLEW_FUN_EXPORT PFNGLLINKPROGRAMARBPROC __glewLinkProgramARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLINKPROGRAMARBPROC
__glewLoadMatrixx	glew.h	/^GLEW_FUN_EXPORT PFNGLLOADMATRIXXPROC __glewLoadMatrixx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADMATRIXXPROC
__glewLoadProgramNV	glew.h	/^GLEW_FUN_EXPORT PFNGLLOADPROGRAMNVPROC __glewLoadProgramNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADPROGRAMNVPROC
__glewLoadTransposeMatrixd	glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDPROC __glewLoadTransposeMatrixd;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDPROC
__glewLoadTransposeMatrixdARB	glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDARBPROC
__glewLoadTransposeMatrixf	glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFPROC __glewLoadTransposeMatrixf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFPROC
__glewLoadTransposeMatrixfARB	glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFARBPROC __glewLoadTransposeMatrixfARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFARBPROC
__glewLockArraysEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLLOCKARRAYSEXTPROC __glewLockArraysEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOCKARRAYSEXTPROC
__glewLogMessageCallbackREGAL	glew.h	/^GLEW_FUN_EXPORT PFNGLLOGMESSAGECALLBACKREGALPROC __glewLogMessageCallbackREGAL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLLOGMESSAGECALLBACKREGALPROC
__glewMakeBufferNonResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEBUFFERNONRESIDENTNVPROC __glewMakeBufferNonResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEBUFFERNONRESIDENTNVPROC
__glewMakeBufferResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEBUFFERRESIDENTNVPROC __glewMakeBufferResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEBUFFERRESIDENTNVPROC
__glewMakeImageHandleNonResidentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC __glewMakeImageHandleNonResidentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC
__glewMakeImageHandleNonResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC __glewMakeImageHandleNonResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
__glewMakeImageHandleResidentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTARBPROC __glewMakeImageHandleResidentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTARBPROC
__glewMakeImageHandleResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTNVPROC __glewMakeImageHandleResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
__glewMakeNamedBufferNonResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC __glewMakeNamedBufferNonResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
__glewMakeNamedBufferResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERRESIDENTNVPROC __glewMakeNamedBufferResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
__glewMakeTextureHandleNonResidentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC __glewMakeTextureHandleNonResidentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC
__glewMakeTextureHandleNonResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC __glewMakeTextureHandleNonResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
__glewMakeTextureHandleResidentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTARBPROC __glewMakeTextureHandleResidentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTARBPROC
__glewMakeTextureHandleResidentNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTNVPROC __glewMakeTextureHandleResidentNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
__glewMapBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFERPROC __glewMapBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFERPROC
__glewMapBufferARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFERARBPROC __glewMapBufferARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFERARBPROC
__glewMapBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFERRANGEPROC __glewMapBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFERRANGEPROC
__glewMapControlPointsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPCONTROLPOINTSNVPROC __glewMapControlPointsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPCONTROLPOINTSNVPROC
__glewMapNamedBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERPROC __glewMapNamedBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERPROC
__glewMapNamedBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFEREXTPROC __glewMapNamedBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFEREXTPROC
__glewMapNamedBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEPROC __glewMapNamedBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEPROC
__glewMapNamedBufferRangeEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEEXTPROC __glewMapNamedBufferRangeEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEEXTPROC
__glewMapObjectBufferATI	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPOBJECTBUFFERATIPROC __glewMapObjectBufferATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPOBJECTBUFFERATIPROC
__glewMapParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPPARAMETERFVNVPROC __glewMapParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPPARAMETERFVNVPROC
__glewMapParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPPARAMETERIVNVPROC __glewMapParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPPARAMETERIVNVPROC
__glewMapTexture2DINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPTEXTURE2DINTELPROC __glewMapTexture2DINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPTEXTURE2DINTELPROC
__glewMapVertexAttrib1dAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1DAPPLEPROC __glewMapVertexAttrib1dAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1DAPPLEPROC
__glewMapVertexAttrib1fAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1FAPPLEPROC __glewMapVertexAttrib1fAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1FAPPLEPROC
__glewMapVertexAttrib2dAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2DAPPLEPROC __glewMapVertexAttrib2dAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2DAPPLEPROC
__glewMapVertexAttrib2fAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2FAPPLEPROC __glewMapVertexAttrib2fAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2FAPPLEPROC
__glewMaterialx	glew.h	/^GLEW_FUN_EXPORT PFNGLMATERIALXPROC __glewMaterialx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATERIALXPROC
__glewMaterialxv	glew.h	/^GLEW_FUN_EXPORT PFNGLMATERIALXVPROC __glewMaterialxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATERIALXVPROC
__glewMatrixFrustumEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXFRUSTUMEXTPROC __glewMatrixFrustumEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXFRUSTUMEXTPROC
__glewMatrixIndexPointerARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXPOINTERARBPROC __glewMatrixIndexPointerARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXPOINTERARBPROC
__glewMatrixIndexubvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXUBVARBPROC __glewMatrixIndexubvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXUBVARBPROC
__glewMatrixIndexuivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXUIVARBPROC __glewMatrixIndexuivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXUIVARBPROC
__glewMatrixIndexusvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXUSVARBPROC __glewMatrixIndexusvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXUSVARBPROC
__glewMatrixLoadIdentityEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADIDENTITYEXTPROC __glewMatrixLoadIdentityEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADIDENTITYEXTPROC
__glewMatrixLoadTransposedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEDEXTPROC __glewMatrixLoadTransposedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEDEXTPROC
__glewMatrixLoadTransposefEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEFEXTPROC __glewMatrixLoadTransposefEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEFEXTPROC
__glewMatrixLoaddEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADDEXTPROC __glewMatrixLoaddEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADDEXTPROC
__glewMatrixLoadfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADFEXTPROC __glewMatrixLoadfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADFEXTPROC
__glewMatrixMultTransposedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEDEXTPROC __glewMatrixMultTransposedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEDEXTPROC
__glewMatrixMultTransposefEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEFEXTPROC __glewMatrixMultTransposefEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEFEXTPROC
__glewMatrixMultdEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTDEXTPROC __glewMatrixMultdEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTDEXTPROC
__glewMatrixMultfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTFEXTPROC __glewMatrixMultfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTFEXTPROC
__glewMatrixOrthoEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXORTHOEXTPROC __glewMatrixOrthoEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXORTHOEXTPROC
__glewMatrixPopEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXPOPEXTPROC __glewMatrixPopEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXPOPEXTPROC
__glewMatrixPushEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXPUSHEXTPROC __glewMatrixPushEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXPUSHEXTPROC
__glewMatrixRotatedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXROTATEDEXTPROC __glewMatrixRotatedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXROTATEDEXTPROC
__glewMatrixRotatefEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXROTATEFEXTPROC __glewMatrixRotatefEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXROTATEFEXTPROC
__glewMatrixScaledEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXSCALEDEXTPROC __glewMatrixScaledEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXSCALEDEXTPROC
__glewMatrixScalefEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXSCALEFEXTPROC __glewMatrixScalefEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXSCALEFEXTPROC
__glewMatrixTranslatedEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEDEXTPROC __glewMatrixTranslatedEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEDEXTPROC
__glewMatrixTranslatefEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEFEXTPROC __glewMatrixTranslatefEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEFEXTPROC
__glewMemoryBarrier	glew.h	/^GLEW_FUN_EXPORT PFNGLMEMORYBARRIERPROC __glewMemoryBarrier;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMEMORYBARRIERPROC
__glewMemoryBarrierByRegion	glew.h	/^GLEW_FUN_EXPORT PFNGLMEMORYBARRIERBYREGIONPROC __glewMemoryBarrierByRegion;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMEMORYBARRIERBYREGIONPROC
__glewMemoryBarrierEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMEMORYBARRIEREXTPROC __glewMemoryBarrierEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMEMORYBARRIEREXTPROC
__glewMinSampleShading	glew.h	/^GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGPROC
__glewMinSampleShadingARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGARBPROC
__glewMinmax	glew.h	/^GLEW_FUN_EXPORT PFNGLMINMAXPROC __glewMinmax;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMINMAXPROC
__glewMinmaxEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMINMAXEXTPROC __glewMinmaxEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMINMAXEXTPROC
__glewMultMatrixx	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTMATRIXXPROC __glewMultMatrixx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTMATRIXXPROC
__glewMultTransposeMatrixd	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDPROC __glewMultTransposeMatrixd;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDPROC
__glewMultTransposeMatrixdARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDARBPROC __glewMultTransposeMatrixdARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDARBPROC
__glewMultTransposeMatrixf	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFPROC __glewMultTransposeMatrixf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFPROC
__glewMultTransposeMatrixfARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFARBPROC __glewMultTransposeMatrixfARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFARBPROC
__glewMultiDrawArrays	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSPROC __glewMultiDrawArrays;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSPROC
__glewMultiDrawArraysEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSEXTPROC __glewMultiDrawArraysEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSEXTPROC
__glewMultiDrawArraysIndirect	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTPROC __glewMultiDrawArraysIndirect;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTPROC
__glewMultiDrawArraysIndirectAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC __glewMultiDrawArraysIndirectAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
__glewMultiDrawArraysIndirectBindlessCountNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC __glewMultiDrawArraysIndirectBin/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC
__glewMultiDrawArraysIndirectBindlessNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC __glewMultiDrawArraysIndirectBindless/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC
__glewMultiDrawArraysIndirectCountARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC __glewMultiDrawArraysIndirectCountARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC
__glewMultiDrawElementArrayAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC __glewMultiDrawElementArrayAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
__glewMultiDrawElements	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSPROC __glewMultiDrawElements;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSPROC
__glewMultiDrawElementsBaseVertex	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC __glewMultiDrawElementsBaseVertex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
__glewMultiDrawElementsEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSEXTPROC __glewMultiDrawElementsEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSEXTPROC
__glewMultiDrawElementsIndirect	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTPROC __glewMultiDrawElementsIndirect;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTPROC
__glewMultiDrawElementsIndirectAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC __glewMultiDrawElementsIndirectAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
__glewMultiDrawElementsIndirectBindlessCountNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC __glewMultiDrawElementsIndirec/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC
__glewMultiDrawElementsIndirectBindlessNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC __glewMultiDrawElementsIndirectBind/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC
__glewMultiDrawElementsIndirectCountARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC __glewMultiDrawElementsIndirectCountA/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC
__glewMultiDrawRangeElementArrayAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC __glewMultiDrawRangeElementArrayAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
__glewMultiModeDrawArraysIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWARRAYSIBMPROC __glewMultiModeDrawArraysIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWARRAYSIBMPROC
__glewMultiModeDrawElementsIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWELEMENTSIBMPROC __glewMultiModeDrawElementsIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWELEMENTSIBMPROC
__glewMultiTexBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXBUFFEREXTPROC __glewMultiTexBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXBUFFEREXTPROC
__glewMultiTexCoord1d	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DPROC __glewMultiTexCoord1d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DPROC
__glewMultiTexCoord1dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DARBPROC __glewMultiTexCoord1dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DARBPROC
__glewMultiTexCoord1dv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVPROC __glewMultiTexCoord1dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVPROC
__glewMultiTexCoord1dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVARBPROC __glewMultiTexCoord1dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVARBPROC
__glewMultiTexCoord1f	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FPROC __glewMultiTexCoord1f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FPROC
__glewMultiTexCoord1fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FARBPROC __glewMultiTexCoord1fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FARBPROC
__glewMultiTexCoord1fv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVPROC __glewMultiTexCoord1fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVPROC
__glewMultiTexCoord1fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVARBPROC __glewMultiTexCoord1fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVARBPROC
__glewMultiTexCoord1hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HNVPROC __glewMultiTexCoord1hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HNVPROC
__glewMultiTexCoord1hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HVNVPROC __glewMultiTexCoord1hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HVNVPROC
__glewMultiTexCoord1i	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IPROC __glewMultiTexCoord1i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IPROC
__glewMultiTexCoord1iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IARBPROC __glewMultiTexCoord1iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IARBPROC
__glewMultiTexCoord1iv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVPROC __glewMultiTexCoord1iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVPROC
__glewMultiTexCoord1ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVARBPROC __glewMultiTexCoord1ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVARBPROC
__glewMultiTexCoord1s	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SPROC __glewMultiTexCoord1s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SPROC
__glewMultiTexCoord1sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SARBPROC __glewMultiTexCoord1sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SARBPROC
__glewMultiTexCoord1sv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVPROC __glewMultiTexCoord1sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVPROC
__glewMultiTexCoord1svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVARBPROC __glewMultiTexCoord1svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVARBPROC
__glewMultiTexCoord2d	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DPROC __glewMultiTexCoord2d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DPROC
__glewMultiTexCoord2dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DARBPROC __glewMultiTexCoord2dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DARBPROC
__glewMultiTexCoord2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVPROC __glewMultiTexCoord2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVPROC
__glewMultiTexCoord2dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVARBPROC __glewMultiTexCoord2dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVARBPROC
__glewMultiTexCoord2f	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FPROC __glewMultiTexCoord2f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FPROC
__glewMultiTexCoord2fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FARBPROC __glewMultiTexCoord2fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FARBPROC
__glewMultiTexCoord2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVPROC __glewMultiTexCoord2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVPROC
__glewMultiTexCoord2fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVARBPROC __glewMultiTexCoord2fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVARBPROC
__glewMultiTexCoord2hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HNVPROC __glewMultiTexCoord2hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HNVPROC
__glewMultiTexCoord2hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HVNVPROC __glewMultiTexCoord2hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HVNVPROC
__glewMultiTexCoord2i	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IPROC __glewMultiTexCoord2i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IPROC
__glewMultiTexCoord2iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IARBPROC __glewMultiTexCoord2iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IARBPROC
__glewMultiTexCoord2iv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVPROC __glewMultiTexCoord2iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVPROC
__glewMultiTexCoord2ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVARBPROC __glewMultiTexCoord2ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVARBPROC
__glewMultiTexCoord2s	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SPROC __glewMultiTexCoord2s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SPROC
__glewMultiTexCoord2sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SARBPROC __glewMultiTexCoord2sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SARBPROC
__glewMultiTexCoord2sv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVPROC __glewMultiTexCoord2sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVPROC
__glewMultiTexCoord2svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVARBPROC __glewMultiTexCoord2svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVARBPROC
__glewMultiTexCoord3d	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DPROC __glewMultiTexCoord3d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DPROC
__glewMultiTexCoord3dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DARBPROC __glewMultiTexCoord3dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DARBPROC
__glewMultiTexCoord3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVPROC __glewMultiTexCoord3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVPROC
__glewMultiTexCoord3dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVARBPROC __glewMultiTexCoord3dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVARBPROC
__glewMultiTexCoord3f	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FPROC __glewMultiTexCoord3f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FPROC
__glewMultiTexCoord3fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FARBPROC __glewMultiTexCoord3fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FARBPROC
__glewMultiTexCoord3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVPROC __glewMultiTexCoord3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVPROC
__glewMultiTexCoord3fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVARBPROC __glewMultiTexCoord3fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVARBPROC
__glewMultiTexCoord3hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HNVPROC __glewMultiTexCoord3hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HNVPROC
__glewMultiTexCoord3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HVNVPROC __glewMultiTexCoord3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HVNVPROC
__glewMultiTexCoord3i	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IPROC __glewMultiTexCoord3i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IPROC
__glewMultiTexCoord3iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IARBPROC __glewMultiTexCoord3iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IARBPROC
__glewMultiTexCoord3iv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVPROC __glewMultiTexCoord3iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVPROC
__glewMultiTexCoord3ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVARBPROC __glewMultiTexCoord3ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVARBPROC
__glewMultiTexCoord3s	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SPROC __glewMultiTexCoord3s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SPROC
__glewMultiTexCoord3sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SARBPROC __glewMultiTexCoord3sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SARBPROC
__glewMultiTexCoord3sv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVPROC __glewMultiTexCoord3sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVPROC
__glewMultiTexCoord3svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVARBPROC __glewMultiTexCoord3svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVARBPROC
__glewMultiTexCoord4d	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DPROC __glewMultiTexCoord4d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DPROC
__glewMultiTexCoord4dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DARBPROC __glewMultiTexCoord4dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DARBPROC
__glewMultiTexCoord4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVPROC __glewMultiTexCoord4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVPROC
__glewMultiTexCoord4dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVARBPROC __glewMultiTexCoord4dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVARBPROC
__glewMultiTexCoord4f	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FPROC __glewMultiTexCoord4f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FPROC
__glewMultiTexCoord4fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FARBPROC __glewMultiTexCoord4fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FARBPROC
__glewMultiTexCoord4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVPROC __glewMultiTexCoord4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVPROC
__glewMultiTexCoord4fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVARBPROC __glewMultiTexCoord4fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVARBPROC
__glewMultiTexCoord4hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HNVPROC __glewMultiTexCoord4hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HNVPROC
__glewMultiTexCoord4hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HVNVPROC __glewMultiTexCoord4hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HVNVPROC
__glewMultiTexCoord4i	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IPROC __glewMultiTexCoord4i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IPROC
__glewMultiTexCoord4iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IARBPROC __glewMultiTexCoord4iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IARBPROC
__glewMultiTexCoord4iv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVPROC __glewMultiTexCoord4iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVPROC
__glewMultiTexCoord4ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVARBPROC __glewMultiTexCoord4ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVARBPROC
__glewMultiTexCoord4s	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SPROC __glewMultiTexCoord4s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SPROC
__glewMultiTexCoord4sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SARBPROC __glewMultiTexCoord4sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SARBPROC
__glewMultiTexCoord4sv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVPROC __glewMultiTexCoord4sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVPROC
__glewMultiTexCoord4svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVARBPROC __glewMultiTexCoord4svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVARBPROC
__glewMultiTexCoord4x	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4XPROC __glewMultiTexCoord4x;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4XPROC
__glewMultiTexCoordP1ui	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIPROC __glewMultiTexCoordP1ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIPROC
__glewMultiTexCoordP1uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIVPROC __glewMultiTexCoordP1uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIVPROC
__glewMultiTexCoordP2ui	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIPROC __glewMultiTexCoordP2ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIPROC
__glewMultiTexCoordP2uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIVPROC __glewMultiTexCoordP2uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIVPROC
__glewMultiTexCoordP3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIPROC __glewMultiTexCoordP3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIPROC
__glewMultiTexCoordP3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIVPROC __glewMultiTexCoordP3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIVPROC
__glewMultiTexCoordP4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIPROC __glewMultiTexCoordP4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIPROC
__glewMultiTexCoordP4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIVPROC __glewMultiTexCoordP4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIVPROC
__glewMultiTexCoordPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDPOINTEREXTPROC __glewMultiTexCoordPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDPOINTEREXTPROC
__glewMultiTexEnvfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVFEXTPROC __glewMultiTexEnvfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVFEXTPROC
__glewMultiTexEnvfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVFVEXTPROC __glewMultiTexEnvfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVFVEXTPROC
__glewMultiTexEnviEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVIEXTPROC __glewMultiTexEnviEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVIEXTPROC
__glewMultiTexEnvivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVIVEXTPROC __glewMultiTexEnvivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVIVEXTPROC
__glewMultiTexGendEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENDEXTPROC __glewMultiTexGendEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENDEXTPROC
__glewMultiTexGendvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENDVEXTPROC __glewMultiTexGendvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENDVEXTPROC
__glewMultiTexGenfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENFEXTPROC __glewMultiTexGenfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENFEXTPROC
__glewMultiTexGenfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENFVEXTPROC __glewMultiTexGenfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENFVEXTPROC
__glewMultiTexGeniEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENIEXTPROC __glewMultiTexGeniEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENIEXTPROC
__glewMultiTexGenivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENIVEXTPROC __glewMultiTexGenivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENIVEXTPROC
__glewMultiTexImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE1DEXTPROC __glewMultiTexImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE1DEXTPROC
__glewMultiTexImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE2DEXTPROC __glewMultiTexImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE2DEXTPROC
__glewMultiTexImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE3DEXTPROC __glewMultiTexImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE3DEXTPROC
__glewMultiTexParameterIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIIVEXTPROC __glewMultiTexParameterIivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIIVEXTPROC
__glewMultiTexParameterIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIUIVEXTPROC __glewMultiTexParameterIuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIUIVEXTPROC
__glewMultiTexParameterfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFEXTPROC __glewMultiTexParameterfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFEXTPROC
__glewMultiTexParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFVEXTPROC __glewMultiTexParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFVEXTPROC
__glewMultiTexParameteriEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIEXTPROC __glewMultiTexParameteriEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIEXTPROC
__glewMultiTexParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIVEXTPROC __glewMultiTexParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIVEXTPROC
__glewMultiTexRenderbufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXRENDERBUFFEREXTPROC __glewMultiTexRenderbufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXRENDERBUFFEREXTPROC
__glewMultiTexSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE1DEXTPROC __glewMultiTexSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE1DEXTPROC
__glewMultiTexSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE2DEXTPROC __glewMultiTexSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE2DEXTPROC
__glewMultiTexSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE3DEXTPROC __glewMultiTexSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE3DEXTPROC
__glewNamedBufferData	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAPROC __glewNamedBufferData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAPROC
__glewNamedBufferDataEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAEXTPROC __glewNamedBufferDataEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAEXTPROC
__glewNamedBufferStorage	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEPROC __glewNamedBufferStorage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEPROC
__glewNamedBufferStorageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEEXTPROC __glewNamedBufferStorageEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEEXTPROC
__glewNamedBufferSubData	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAPROC __glewNamedBufferSubData;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAPROC
__glewNamedBufferSubDataEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAEXTPROC __glewNamedBufferSubDataEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAEXTPROC
__glewNamedCopyBufferSubDataEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC __glewNamedCopyBufferSubDataEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
__glewNamedFramebufferDrawBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC __glewNamedFramebufferDrawBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
__glewNamedFramebufferDrawBuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC __glewNamedFramebufferDrawBuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
__glewNamedFramebufferParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC __glewNamedFramebufferParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
__glewNamedFramebufferParameteriEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC __glewNamedFramebufferParameteriEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
__glewNamedFramebufferReadBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC __glewNamedFramebufferReadBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
__glewNamedFramebufferRenderbuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC __glewNamedFramebufferRenderbuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
__glewNamedFramebufferRenderbufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC __glewNamedFramebufferRenderbufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
__glewNamedFramebufferTexture	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREPROC __glewNamedFramebufferTexture;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
__glewNamedFramebufferTexture1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC __glewNamedFramebufferTexture1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
__glewNamedFramebufferTexture2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC __glewNamedFramebufferTexture2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
__glewNamedFramebufferTexture3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC __glewNamedFramebufferTexture3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
__glewNamedFramebufferTextureEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC __glewNamedFramebufferTextureEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
__glewNamedFramebufferTextureFaceEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC __glewNamedFramebufferTextureFaceEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
__glewNamedFramebufferTextureLayer	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC __glewNamedFramebufferTextureLayer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
__glewNamedFramebufferTextureLayerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC __glewNamedFramebufferTextureLayerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
__glewNamedProgramLocalParameter4dEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC __glewNamedProgramLocalParameter4dEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
__glewNamedProgramLocalParameter4dvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC __glewNamedProgramLocalParameter4dvEXT/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
__glewNamedProgramLocalParameter4fEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC __glewNamedProgramLocalParameter4fEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
__glewNamedProgramLocalParameter4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC __glewNamedProgramLocalParameter4fvEXT/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
__glewNamedProgramLocalParameterI4iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC __glewNamedProgramLocalParameterI4iEXT/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
__glewNamedProgramLocalParameterI4ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC __glewNamedProgramLocalParameterI4ivE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
__glewNamedProgramLocalParameterI4uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC __glewNamedProgramLocalParameterI4uiE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
__glewNamedProgramLocalParameterI4uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC __glewNamedProgramLocalParameterI4ui/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
__glewNamedProgramLocalParameters4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC __glewNamedProgramLocalParameters4fvE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
__glewNamedProgramLocalParametersI4ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC __glewNamedProgramLocalParametersI4i/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
__glewNamedProgramLocalParametersI4uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC __glewNamedProgramLocalParametersI4/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
__glewNamedProgramStringEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMSTRINGEXTPROC __glewNamedProgramStringEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMSTRINGEXTPROC
__glewNamedRenderbufferStorage	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEPROC __glewNamedRenderbufferStorage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEPROC
__glewNamedRenderbufferStorageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC __glewNamedRenderbufferStorageEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
__glewNamedRenderbufferStorageMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewNamedRenderbufferStorageMulti/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
__glewNamedRenderbufferStorageMultisampleCoverageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC __glewNamedRenderbufferS/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
__glewNamedRenderbufferStorageMultisampleEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewNamedRenderbufferStorageMu/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
__glewNamedStringARB	glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDSTRINGARBPROC __glewNamedStringARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDSTRINGARBPROC
__glewNewBufferRegion	glew.h	/^GLEW_FUN_EXPORT PFNGLNEWBUFFERREGIONPROC __glewNewBufferRegion;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNEWBUFFERREGIONPROC
__glewNewObjectBufferATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNEWOBJECTBUFFERATIPROC __glewNewObjectBufferATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNEWOBJECTBUFFERATIPROC
__glewNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FSUNPROC __glewNormal3fVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FSUNPROC
__glewNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FVSUNPROC __glewNormal3fVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FVSUNPROC
__glewNormal3hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3HNVPROC __glewNormal3hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3HNVPROC
__glewNormal3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3HVNVPROC __glewNormal3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3HVNVPROC
__glewNormal3x	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3XPROC __glewNormal3x;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3XPROC
__glewNormalFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALFORMATNVPROC __glewNormalFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALFORMATNVPROC
__glewNormalP3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALP3UIPROC __glewNormalP3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALP3UIPROC
__glewNormalP3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALP3UIVPROC __glewNormalP3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALP3UIVPROC
__glewNormalPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALPOINTEREXTPROC __glewNormalPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALPOINTEREXTPROC
__glewNormalPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALPOINTERLISTIBMPROC __glewNormalPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALPOINTERLISTIBMPROC
__glewNormalPointervINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALPOINTERVINTELPROC __glewNormalPointervINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALPOINTERVINTELPROC
__glewNormalStream3bATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BATIPROC __glewNormalStream3bATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BATIPROC
__glewNormalStream3bvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BVATIPROC __glewNormalStream3bvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BVATIPROC
__glewNormalStream3dATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DATIPROC __glewNormalStream3dATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DATIPROC
__glewNormalStream3dvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DVATIPROC __glewNormalStream3dvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DVATIPROC
__glewNormalStream3fATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FATIPROC __glewNormalStream3fATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FATIPROC
__glewNormalStream3fvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FVATIPROC __glewNormalStream3fvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FVATIPROC
__glewNormalStream3iATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IATIPROC __glewNormalStream3iATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IATIPROC
__glewNormalStream3ivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IVATIPROC __glewNormalStream3ivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IVATIPROC
__glewNormalStream3sATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SATIPROC __glewNormalStream3sATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SATIPROC
__glewNormalStream3svATI	glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SVATIPROC __glewNormalStream3svATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SVATIPROC
__glewObjectLabel	glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTLABELPROC __glewObjectLabel;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTLABELPROC
__glewObjectPtrLabel	glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTPTRLABELPROC __glewObjectPtrLabel;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTPTRLABELPROC
__glewObjectPurgeableAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTPURGEABLEAPPLEPROC __glewObjectPurgeableAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTPURGEABLEAPPLEPROC
__glewObjectUnpurgeableAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTUNPURGEABLEAPPLEPROC __glewObjectUnpurgeableAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTUNPURGEABLEAPPLEPROC
__glewOrthof	glew.h	/^GLEW_FUN_EXPORT PFNGLORTHOFPROC __glewOrthof;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLORTHOFPROC
__glewOrthofOES	glew.h	/^GLEW_FUN_EXPORT PFNGLORTHOFOESPROC __glewOrthofOES;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLORTHOFOESPROC
__glewOrthox	glew.h	/^GLEW_FUN_EXPORT PFNGLORTHOXPROC __glewOrthox;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLORTHOXPROC
__glewPNTrianglesfATI	glew.h	/^GLEW_FUN_EXPORT PFNGLPNTRIANGLESFATIPROC __glewPNTrianglesfATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPNTRIANGLESFATIPROC
__glewPNTrianglesiATI	glew.h	/^GLEW_FUN_EXPORT PFNGLPNTRIANGLESIATIPROC __glewPNTrianglesiATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPNTRIANGLESIATIPROC
__glewPassTexCoordATI	glew.h	/^GLEW_FUN_EXPORT PFNGLPASSTEXCOORDATIPROC __glewPassTexCoordATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPASSTEXCOORDATIPROC
__glewPatchParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLPATCHPARAMETERFVPROC __glewPatchParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATCHPARAMETERFVPROC
__glewPatchParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLPATCHPARAMETERIPROC __glewPatchParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATCHPARAMETERIPROC
__glewPathColorGenNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOLORGENNVPROC __glewPathColorGenNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOLORGENNVPROC
__glewPathCommandsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOMMANDSNVPROC __glewPathCommandsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOMMANDSNVPROC
__glewPathCoordsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOORDSNVPROC __glewPathCoordsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOORDSNVPROC
__glewPathCoverDepthFuncNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOVERDEPTHFUNCNVPROC __glewPathCoverDepthFuncNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOVERDEPTHFUNCNVPROC
__glewPathDashArrayNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHDASHARRAYNVPROC __glewPathDashArrayNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHDASHARRAYNVPROC
__glewPathFogGenNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHFOGGENNVPROC __glewPathFogGenNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHFOGGENNVPROC
__glewPathGlyphRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHGLYPHRANGENVPROC __glewPathGlyphRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHGLYPHRANGENVPROC
__glewPathGlyphsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHGLYPHSNVPROC __glewPathGlyphsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHGLYPHSNVPROC
__glewPathParameterfNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERFNVPROC __glewPathParameterfNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERFNVPROC
__glewPathParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERFVNVPROC __glewPathParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERFVNVPROC
__glewPathParameteriNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERINVPROC __glewPathParameteriNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERINVPROC
__glewPathParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERIVNVPROC __glewPathParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERIVNVPROC
__glewPathStencilDepthOffsetNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSTENCILDEPTHOFFSETNVPROC __glewPathStencilDepthOffsetNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSTENCILDEPTHOFFSETNVPROC
__glewPathStencilFuncNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSTENCILFUNCNVPROC __glewPathStencilFuncNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSTENCILFUNCNVPROC
__glewPathStringNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSTRINGNVPROC __glewPathStringNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSTRINGNVPROC
__glewPathSubCommandsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSUBCOMMANDSNVPROC __glewPathSubCommandsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSUBCOMMANDSNVPROC
__glewPathSubCoordsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSUBCOORDSNVPROC __glewPathSubCoordsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSUBCOORDSNVPROC
__glewPathTexGenNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPATHTEXGENNVPROC __glewPathTexGenNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHTEXGENNVPROC
__glewPauseTransformFeedback	glew.h	/^GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKPROC __glewPauseTransformFeedback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKPROC
__glewPauseTransformFeedbackNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKNVPROC __glewPauseTransformFeedbackNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKNVPROC
__glewPixelDataRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELDATARANGENVPROC __glewPixelDataRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELDATARANGENVPROC
__glewPixelTexGenSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTEXGENSGIXPROC __glewPixelTexGenSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTEXGENSGIXPROC
__glewPixelTransformParameterfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFEXTPROC __glewPixelTransformParameterfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
__glewPixelTransformParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC __glewPixelTransformParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
__glewPixelTransformParameteriEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIEXTPROC __glewPixelTransformParameteriEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
__glewPixelTransformParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC __glewPixelTransformParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
__glewPointAlongPathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTALONGPATHNVPROC __glewPointAlongPathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTALONGPATHNVPROC
__glewPointParameterf	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFPROC __glewPointParameterf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFPROC
__glewPointParameterfARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFARBPROC __glewPointParameterfARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFARBPROC
__glewPointParameterfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFEXTPROC __glewPointParameterfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFEXTPROC
__glewPointParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVPROC __glewPointParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVPROC
__glewPointParameterfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVARBPROC
__glewPointParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVEXTPROC __glewPointParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVEXTPROC
__glewPointParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIPROC __glewPointParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIPROC
__glewPointParameteriNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERINVPROC __glewPointParameteriNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERINVPROC
__glewPointParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVPROC __glewPointParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVPROC
__glewPointParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVNVPROC __glewPointParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVNVPROC
__glewPointParameterx	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXPROC __glewPointParameterx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXPROC
__glewPointParameterxv	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXVPROC __glewPointParameterxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXVPROC
__glewPointSizePointerOES	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTSIZEPOINTEROESPROC __glewPointSizePointerOES;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTSIZEPOINTEROESPROC
__glewPointSizex	glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTSIZEXPROC __glewPointSizex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTSIZEXPROC
__glewPollAsyncSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLPOLLASYNCSGIXPROC __glewPollAsyncSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLLASYNCSGIXPROC
__glewPolygonOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETEXTPROC __glewPolygonOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETEXTPROC
__glewPolygonOffsetx	glew.h	/^GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETXPROC __glewPolygonOffsetx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETXPROC
__glewPopDebugGroup	glew.h	/^GLEW_FUN_EXPORT PFNGLPOPDEBUGGROUPPROC __glewPopDebugGroup;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOPDEBUGGROUPPROC
__glewPopGroupMarkerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPOPGROUPMARKEREXTPROC __glewPopGroupMarkerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPOPGROUPMARKEREXTPROC
__glewPresentFrameDualFillNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPRESENTFRAMEDUALFILLNVPROC __glewPresentFrameDualFillNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPRESENTFRAMEDUALFILLNVPROC
__glewPresentFrameKeyedNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPRESENTFRAMEKEYEDNVPROC __glewPresentFrameKeyedNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPRESENTFRAMEKEYEDNVPROC
__glewPrimitiveRestartIndex	glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXPROC __glewPrimitiveRestartIndex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXPROC
__glewPrimitiveRestartIndexNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXNVPROC __glewPrimitiveRestartIndexNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXNVPROC
__glewPrimitiveRestartNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTNVPROC __glewPrimitiveRestartNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTNVPROC
__glewPrioritizeTexturesEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPRIORITIZETEXTURESEXTPROC __glewPrioritizeTexturesEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIORITIZETEXTURESEXTPROC
__glewProgramBinary	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBINARYPROC __glewProgramBinary;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBINARYPROC
__glewProgramBufferParametersIivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC __glewProgramBufferParametersIivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
__glewProgramBufferParametersIuivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC __glewProgramBufferParametersIuivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
__glewProgramBufferParametersfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC __glewProgramBufferParametersfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
__glewProgramEnvParameter4dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DARBPROC __glewProgramEnvParameter4dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DARBPROC
__glewProgramEnvParameter4dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DVARBPROC __glewProgramEnvParameter4dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DVARBPROC
__glewProgramEnvParameter4fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FARBPROC __glewProgramEnvParameter4fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FARBPROC
__glewProgramEnvParameter4fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FVARBPROC __glewProgramEnvParameter4fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FVARBPROC
__glewProgramEnvParameterI4iNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4INVPROC __glewProgramEnvParameterI4iNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4INVPROC
__glewProgramEnvParameterI4ivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4IVNVPROC __glewProgramEnvParameterI4ivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4IVNVPROC
__glewProgramEnvParameterI4uiNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UINVPROC __glewProgramEnvParameterI4uiNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UINVPROC
__glewProgramEnvParameterI4uivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UIVNVPROC __glewProgramEnvParameterI4uivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
__glewProgramEnvParameters4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERS4FVEXTPROC __glewProgramEnvParameters4fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
__glewProgramEnvParametersI4ivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4IVNVPROC __glewProgramEnvParametersI4ivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
__glewProgramEnvParametersI4uivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC __glewProgramEnvParametersI4uivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
__glewProgramLocalParameter4dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DARBPROC __glewProgramLocalParameter4dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DARBPROC
__glewProgramLocalParameter4dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DVARBPROC __glewProgramLocalParameter4dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
__glewProgramLocalParameter4fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FARBPROC __glewProgramLocalParameter4fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FARBPROC
__glewProgramLocalParameter4fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FVARBPROC __glewProgramLocalParameter4fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
__glewProgramLocalParameterI4iNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4INVPROC __glewProgramLocalParameterI4iNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4INVPROC
__glewProgramLocalParameterI4ivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC __glewProgramLocalParameterI4ivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
__glewProgramLocalParameterI4uiNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UINVPROC __glewProgramLocalParameterI4uiNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
__glewProgramLocalParameterI4uivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC __glewProgramLocalParameterI4uivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
__glewProgramLocalParameters4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC __glewProgramLocalParameters4fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
__glewProgramLocalParametersI4ivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC __glewProgramLocalParametersI4ivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
__glewProgramLocalParametersI4uivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC __glewProgramLocalParametersI4uivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
__glewProgramNamedParameter4dNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DNVPROC __glewProgramNamedParameter4dNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
__glewProgramNamedParameter4dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC __glewProgramNamedParameter4dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
__glewProgramNamedParameter4fNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FNVPROC __glewProgramNamedParameter4fNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
__glewProgramNamedParameter4fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC __glewProgramNamedParameter4fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
__glewProgramParameter4dNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DNVPROC __glewProgramParameter4dNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DNVPROC
__glewProgramParameter4dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DVNVPROC __glewProgramParameter4dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DVNVPROC
__glewProgramParameter4fNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FNVPROC __glewProgramParameter4fNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FNVPROC
__glewProgramParameter4fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FVNVPROC __glewProgramParameter4fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FVNVPROC
__glewProgramParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIPROC __glewProgramParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIPROC
__glewProgramParameteriARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIARBPROC __glewProgramParameteriARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIARBPROC
__glewProgramParameteriEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIEXTPROC __glewProgramParameteriEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIEXTPROC
__glewProgramParameters4dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4DVNVPROC __glewProgramParameters4dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4DVNVPROC
__glewProgramParameters4fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4FVNVPROC __glewProgramParameters4fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4FVNVPROC
__glewProgramStringARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMSTRINGARBPROC __glewProgramStringARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMSTRINGARBPROC
__glewProgramUniform1d	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DPROC __glewProgramUniform1d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DPROC
__glewProgramUniform1dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DVPROC __glewProgramUniform1dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DVPROC
__glewProgramUniform1f	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FPROC __glewProgramUniform1f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FPROC
__glewProgramUniform1fEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FEXTPROC __glewProgramUniform1fEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FEXTPROC
__glewProgramUniform1fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVPROC __glewProgramUniform1fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVPROC
__glewProgramUniform1fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVEXTPROC __glewProgramUniform1fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVEXTPROC
__glewProgramUniform1i	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IPROC __glewProgramUniform1i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IPROC
__glewProgramUniform1i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64NVPROC __glewProgramUniform1i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64NVPROC
__glewProgramUniform1i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64VNVPROC __glewProgramUniform1i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64VNVPROC
__glewProgramUniform1iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IEXTPROC __glewProgramUniform1iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IEXTPROC
__glewProgramUniform1iv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVPROC __glewProgramUniform1iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVPROC
__glewProgramUniform1ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVEXTPROC __glewProgramUniform1ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVEXTPROC
__glewProgramUniform1ui	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIPROC __glewProgramUniform1ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIPROC
__glewProgramUniform1ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64NVPROC __glewProgramUniform1ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64NVPROC
__glewProgramUniform1ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64VNVPROC __glewProgramUniform1ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64VNVPROC
__glewProgramUniform1uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIEXTPROC __glewProgramUniform1uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIEXTPROC
__glewProgramUniform1uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVPROC __glewProgramUniform1uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVPROC
__glewProgramUniform1uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVEXTPROC __glewProgramUniform1uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVEXTPROC
__glewProgramUniform2d	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DPROC __glewProgramUniform2d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DPROC
__glewProgramUniform2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DVPROC __glewProgramUniform2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DVPROC
__glewProgramUniform2f	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FPROC __glewProgramUniform2f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FPROC
__glewProgramUniform2fEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FEXTPROC __glewProgramUniform2fEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FEXTPROC
__glewProgramUniform2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVPROC __glewProgramUniform2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVPROC
__glewProgramUniform2fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVEXTPROC __glewProgramUniform2fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVEXTPROC
__glewProgramUniform2i	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IPROC __glewProgramUniform2i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IPROC
__glewProgramUniform2i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64NVPROC __glewProgramUniform2i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64NVPROC
__glewProgramUniform2i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64VNVPROC __glewProgramUniform2i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64VNVPROC
__glewProgramUniform2iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IEXTPROC __glewProgramUniform2iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IEXTPROC
__glewProgramUniform2iv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVPROC __glewProgramUniform2iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVPROC
__glewProgramUniform2ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVEXTPROC __glewProgramUniform2ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVEXTPROC
__glewProgramUniform2ui	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIPROC __glewProgramUniform2ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIPROC
__glewProgramUniform2ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64NVPROC __glewProgramUniform2ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64NVPROC
__glewProgramUniform2ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64VNVPROC __glewProgramUniform2ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64VNVPROC
__glewProgramUniform2uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIEXTPROC __glewProgramUniform2uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIEXTPROC
__glewProgramUniform2uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVPROC __glewProgramUniform2uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVPROC
__glewProgramUniform2uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVEXTPROC __glewProgramUniform2uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVEXTPROC
__glewProgramUniform3d	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DPROC __glewProgramUniform3d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DPROC
__glewProgramUniform3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DVPROC __glewProgramUniform3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DVPROC
__glewProgramUniform3f	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FPROC __glewProgramUniform3f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FPROC
__glewProgramUniform3fEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FEXTPROC __glewProgramUniform3fEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FEXTPROC
__glewProgramUniform3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVPROC __glewProgramUniform3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVPROC
__glewProgramUniform3fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVEXTPROC __glewProgramUniform3fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVEXTPROC
__glewProgramUniform3i	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IPROC __glewProgramUniform3i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IPROC
__glewProgramUniform3i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64NVPROC __glewProgramUniform3i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64NVPROC
__glewProgramUniform3i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64VNVPROC __glewProgramUniform3i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64VNVPROC
__glewProgramUniform3iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IEXTPROC __glewProgramUniform3iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IEXTPROC
__glewProgramUniform3iv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVPROC __glewProgramUniform3iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVPROC
__glewProgramUniform3ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVEXTPROC __glewProgramUniform3ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVEXTPROC
__glewProgramUniform3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIPROC __glewProgramUniform3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIPROC
__glewProgramUniform3ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64NVPROC __glewProgramUniform3ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64NVPROC
__glewProgramUniform3ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64VNVPROC __glewProgramUniform3ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64VNVPROC
__glewProgramUniform3uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIEXTPROC __glewProgramUniform3uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIEXTPROC
__glewProgramUniform3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVPROC __glewProgramUniform3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVPROC
__glewProgramUniform3uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVEXTPROC __glewProgramUniform3uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVEXTPROC
__glewProgramUniform4d	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DPROC __glewProgramUniform4d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DPROC
__glewProgramUniform4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DVPROC __glewProgramUniform4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DVPROC
__glewProgramUniform4f	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FPROC __glewProgramUniform4f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FPROC
__glewProgramUniform4fEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FEXTPROC __glewProgramUniform4fEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FEXTPROC
__glewProgramUniform4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVPROC __glewProgramUniform4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVPROC
__glewProgramUniform4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVEXTPROC __glewProgramUniform4fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVEXTPROC
__glewProgramUniform4i	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IPROC __glewProgramUniform4i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IPROC
__glewProgramUniform4i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64NVPROC __glewProgramUniform4i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64NVPROC
__glewProgramUniform4i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64VNVPROC __glewProgramUniform4i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64VNVPROC
__glewProgramUniform4iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IEXTPROC __glewProgramUniform4iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IEXTPROC
__glewProgramUniform4iv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVPROC __glewProgramUniform4iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVPROC
__glewProgramUniform4ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVEXTPROC __glewProgramUniform4ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVEXTPROC
__glewProgramUniform4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIPROC __glewProgramUniform4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIPROC
__glewProgramUniform4ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64NVPROC __glewProgramUniform4ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64NVPROC
__glewProgramUniform4ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64VNVPROC __glewProgramUniform4ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64VNVPROC
__glewProgramUniform4uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIEXTPROC __glewProgramUniform4uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIEXTPROC
__glewProgramUniform4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVPROC __glewProgramUniform4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVPROC
__glewProgramUniform4uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVEXTPROC __glewProgramUniform4uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVEXTPROC
__glewProgramUniformHandleui64ARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC __glewProgramUniformHandleui64ARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC
__glewProgramUniformHandleui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC __glewProgramUniformHandleui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
__glewProgramUniformHandleui64vARB	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC __glewProgramUniformHandleui64vARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC
__glewProgramUniformHandleui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC __glewProgramUniformHandleui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
__glewProgramUniformMatrix2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2DVPROC __glewProgramUniformMatrix2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2DVPROC
__glewProgramUniformMatrix2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVPROC __glewProgramUniformMatrix2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVPROC
__glewProgramUniformMatrix2fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC __glewProgramUniformMatrix2fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
__glewProgramUniformMatrix2x3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC __glewProgramUniformMatrix2x3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
__glewProgramUniformMatrix2x3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC __glewProgramUniformMatrix2x3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
__glewProgramUniformMatrix2x3fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC __glewProgramUniformMatrix2x3fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
__glewProgramUniformMatrix2x4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC __glewProgramUniformMatrix2x4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
__glewProgramUniformMatrix2x4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC __glewProgramUniformMatrix2x4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
__glewProgramUniformMatrix2x4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC __glewProgramUniformMatrix2x4fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
__glewProgramUniformMatrix3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3DVPROC __glewProgramUniformMatrix3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3DVPROC
__glewProgramUniformMatrix3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVPROC __glewProgramUniformMatrix3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVPROC
__glewProgramUniformMatrix3fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC __glewProgramUniformMatrix3fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
__glewProgramUniformMatrix3x2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC __glewProgramUniformMatrix3x2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
__glewProgramUniformMatrix3x2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC __glewProgramUniformMatrix3x2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
__glewProgramUniformMatrix3x2fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC __glewProgramUniformMatrix3x2fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
__glewProgramUniformMatrix3x4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC __glewProgramUniformMatrix3x4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
__glewProgramUniformMatrix3x4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC __glewProgramUniformMatrix3x4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
__glewProgramUniformMatrix3x4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC __glewProgramUniformMatrix3x4fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
__glewProgramUniformMatrix4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4DVPROC __glewProgramUniformMatrix4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4DVPROC
__glewProgramUniformMatrix4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVPROC __glewProgramUniformMatrix4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVPROC
__glewProgramUniformMatrix4fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC __glewProgramUniformMatrix4fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
__glewProgramUniformMatrix4x2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC __glewProgramUniformMatrix4x2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
__glewProgramUniformMatrix4x2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC __glewProgramUniformMatrix4x2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
__glewProgramUniformMatrix4x2fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC __glewProgramUniformMatrix4x2fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
__glewProgramUniformMatrix4x3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC __glewProgramUniformMatrix4x3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
__glewProgramUniformMatrix4x3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC __glewProgramUniformMatrix4x3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
__glewProgramUniformMatrix4x3fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC __glewProgramUniformMatrix4x3fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
__glewProgramUniformui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64NVPROC __glewProgramUniformui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64NVPROC
__glewProgramUniformui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64VNVPROC __glewProgramUniformui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64VNVPROC
__glewProgramVertexLimitNV	glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMVERTEXLIMITNVPROC __glewProgramVertexLimitNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMVERTEXLIMITNVPROC
__glewProvokingVertex	glew.h	/^GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXPROC __glewProvokingVertex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXPROC
__glewProvokingVertexEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXEXTPROC __glewProvokingVertexEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXEXTPROC
__glewPushClientAttribDefaultEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC __glewPushClientAttribDefaultEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
__glewPushDebugGroup	glew.h	/^GLEW_FUN_EXPORT PFNGLPUSHDEBUGGROUPPROC __glewPushDebugGroup;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPUSHDEBUGGROUPPROC
__glewPushGroupMarkerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLPUSHGROUPMARKEREXTPROC __glewPushGroupMarkerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLPUSHGROUPMARKEREXTPROC
__glewQueryCounter	glew.h	/^GLEW_FUN_EXPORT PFNGLQUERYCOUNTERPROC __glewQueryCounter;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLQUERYCOUNTERPROC
__glewQueryCounterANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLQUERYCOUNTERANGLEPROC __glewQueryCounterANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLQUERYCOUNTERANGLEPROC
__glewQueryObjectParameteruiAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLQUERYOBJECTPARAMETERUIAMDPROC __glewQueryObjectParameteruiAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLQUERYOBJECTPARAMETERUIAMDPROC
__glewReadBufferRegion	glew.h	/^GLEW_FUN_EXPORT PFNGLREADBUFFERREGIONPROC __glewReadBufferRegion;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREADBUFFERREGIONPROC
__glewReadVideoPixelsSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREADVIDEOPIXELSSUNPROC __glewReadVideoPixelsSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREADVIDEOPIXELSSUNPROC
__glewReadnPixels	glew.h	/^GLEW_FUN_EXPORT PFNGLREADNPIXELSPROC __glewReadnPixels;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREADNPIXELSPROC
__glewReadnPixelsARB	glew.h	/^GLEW_FUN_EXPORT PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREADNPIXELSARBPROC
__glewReferencePlaneSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLREFERENCEPLANESGIXPROC __glewReferencePlaneSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREFERENCEPLANESGIXPROC
__glewReleaseShaderCompiler	glew.h	/^GLEW_FUN_EXPORT PFNGLRELEASESHADERCOMPILERPROC __glewReleaseShaderCompiler;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRELEASESHADERCOMPILERPROC
__glewRenderbufferStorage	glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEPROC __glewRenderbufferStorage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEPROC
__glewRenderbufferStorageEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEEXTPROC __glewRenderbufferStorageEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEEXTPROC
__glewRenderbufferStorageMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewRenderbufferStorageMultisample;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
__glewRenderbufferStorageMultisampleANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC __glewRenderbufferStorageMultisampl/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
__glewRenderbufferStorageMultisampleCoverageNV	glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC __glewRenderbufferStorageMulti/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
__glewRenderbufferStorageMultisampleEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewRenderbufferStorageMultisampleE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
__glewReplacementCodePointerSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEPOINTERSUNPROC __glewReplacementCodePointerSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEPOINTERSUNPROC
__glewReplacementCodeubSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBSUNPROC __glewReplacementCodeubSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBSUNPROC
__glewReplacementCodeubvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBVSUNPROC __glewReplacementCodeubvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBVSUNPROC
__glewReplacementCodeuiColor3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC __glewReplacementCodeuiColor3fVerte/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
__glewReplacementCodeuiColor3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor3fVert/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
__glewReplacementCodeuiColor4fNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiColo/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiCol/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiColor4ubVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC __glewReplacementCodeuiColor4ubVer/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
__glewReplacementCodeuiColor4ubVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC __glewReplacementCodeuiColor4ubVe/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
__glewReplacementCodeuiNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiNormal3fVer/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiNormal3fVe/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUISUNPROC __glewReplacementCodeuiSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUISUNPROC
__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacement/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacemen/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiT/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeui/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiTexCoord2fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
__glewReplacementCodeuiTexCoord2fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
__glewReplacementCodeuiVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC __glewReplacementCodeuiVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
__glewReplacementCodeuiVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC __glewReplacementCodeuiVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
__glewReplacementCodeuivSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVSUNPROC __glewReplacementCodeuivSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVSUNPROC
__glewReplacementCodeusSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSSUNPROC __glewReplacementCodeusSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSSUNPROC
__glewReplacementCodeusvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSVSUNPROC __glewReplacementCodeusvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSVSUNPROC
__glewRequestResidentProgramsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLREQUESTRESIDENTPROGRAMSNVPROC __glewRequestResidentProgramsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLREQUESTRESIDENTPROGRAMSNVPROC
__glewResetHistogram	glew.h	/^GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMPROC __glewResetHistogram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMPROC
__glewResetHistogramEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMEXTPROC
__glewResetMinmax	glew.h	/^GLEW_FUN_EXPORT PFNGLRESETMINMAXPROC __glewResetMinmax;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETMINMAXPROC
__glewResetMinmaxEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETMINMAXEXTPROC
__glewResizeBuffersMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLRESIZEBUFFERSMESAPROC __glewResizeBuffersMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRESIZEBUFFERSMESAPROC
__glewResumeTransformFeedback	glew.h	/^GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKPROC __glewResumeTransformFeedback;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKPROC
__glewResumeTransformFeedbackNV	glew.h	/^GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKNVPROC __glewResumeTransformFeedbackNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKNVPROC
__glewRotatex	glew.h	/^GLEW_FUN_EXPORT PFNGLROTATEXPROC __glewRotatex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLROTATEXPROC
__glewSampleCoverage	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEPROC __glewSampleCoverage;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEPROC
__glewSampleCoverageARB	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEARBPROC __glewSampleCoverageARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEARBPROC
__glewSampleCoveragex	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEXPROC __glewSampleCoveragex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEXPROC
__glewSampleMapATI	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMAPATIPROC __glewSampleMapATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMAPATIPROC
__glewSampleMaskEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKEXTPROC __glewSampleMaskEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKEXTPROC
__glewSampleMaskIndexedNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKINDEXEDNVPROC __glewSampleMaskIndexedNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKINDEXEDNVPROC
__glewSampleMaskSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKSGISPROC __glewSampleMaskSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKSGISPROC
__glewSampleMaski	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKIPROC __glewSampleMaski;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKIPROC
__glewSamplePatternEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNEXTPROC __glewSamplePatternEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNEXTPROC
__glewSamplePatternSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNSGISPROC __glewSamplePatternSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNSGISPROC
__glewSamplerParameterIiv	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVPROC __glewSamplerParameterIiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVPROC
__glewSamplerParameterIuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVPROC __glewSamplerParameterIuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVPROC
__glewSamplerParameterf	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFPROC __glewSamplerParameterf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFPROC
__glewSamplerParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFVPROC __glewSamplerParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFVPROC
__glewSamplerParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIPROC __glewSamplerParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIPROC
__glewSamplerParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIVPROC __glewSamplerParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIVPROC
__glewScalex	glew.h	/^GLEW_FUN_EXPORT PFNGLSCALEXPROC __glewScalex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSCALEXPROC
__glewScissorArrayv	glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORARRAYVPROC __glewScissorArrayv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORARRAYVPROC
__glewScissorIndexed	glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDPROC __glewScissorIndexed;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDPROC
__glewScissorIndexedv	glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDVPROC __glewScissorIndexedv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDVPROC
__glewSecondaryColor3b	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BPROC __glewSecondaryColor3b;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BPROC
__glewSecondaryColor3bEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BEXTPROC __glewSecondaryColor3bEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BEXTPROC
__glewSecondaryColor3bv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVPROC __glewSecondaryColor3bv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVPROC
__glewSecondaryColor3bvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVEXTPROC __glewSecondaryColor3bvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVEXTPROC
__glewSecondaryColor3d	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DPROC __glewSecondaryColor3d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DPROC
__glewSecondaryColor3dEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DEXTPROC __glewSecondaryColor3dEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DEXTPROC
__glewSecondaryColor3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVPROC __glewSecondaryColor3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVPROC
__glewSecondaryColor3dvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVEXTPROC __glewSecondaryColor3dvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVEXTPROC
__glewSecondaryColor3f	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FPROC __glewSecondaryColor3f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FPROC
__glewSecondaryColor3fEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FEXTPROC __glewSecondaryColor3fEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FEXTPROC
__glewSecondaryColor3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVPROC __glewSecondaryColor3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVPROC
__glewSecondaryColor3fvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVEXTPROC __glewSecondaryColor3fvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVEXTPROC
__glewSecondaryColor3hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HNVPROC __glewSecondaryColor3hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HNVPROC
__glewSecondaryColor3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HVNVPROC __glewSecondaryColor3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HVNVPROC
__glewSecondaryColor3i	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IPROC __glewSecondaryColor3i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IPROC
__glewSecondaryColor3iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IEXTPROC __glewSecondaryColor3iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IEXTPROC
__glewSecondaryColor3iv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVPROC __glewSecondaryColor3iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVPROC
__glewSecondaryColor3ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVEXTPROC __glewSecondaryColor3ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVEXTPROC
__glewSecondaryColor3s	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SPROC __glewSecondaryColor3s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SPROC
__glewSecondaryColor3sEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SEXTPROC __glewSecondaryColor3sEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SEXTPROC
__glewSecondaryColor3sv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVPROC __glewSecondaryColor3sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVPROC
__glewSecondaryColor3svEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVEXTPROC __glewSecondaryColor3svEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVEXTPROC
__glewSecondaryColor3ub	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBPROC __glewSecondaryColor3ub;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBPROC
__glewSecondaryColor3ubEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBEXTPROC __glewSecondaryColor3ubEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBEXTPROC
__glewSecondaryColor3ubv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVPROC __glewSecondaryColor3ubv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVPROC
__glewSecondaryColor3ubvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVEXTPROC __glewSecondaryColor3ubvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVEXTPROC
__glewSecondaryColor3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIPROC __glewSecondaryColor3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIPROC
__glewSecondaryColor3uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIEXTPROC __glewSecondaryColor3uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIEXTPROC
__glewSecondaryColor3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVPROC __glewSecondaryColor3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVPROC
__glewSecondaryColor3uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVEXTPROC __glewSecondaryColor3uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVEXTPROC
__glewSecondaryColor3us	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USPROC __glewSecondaryColor3us;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USPROC
__glewSecondaryColor3usEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USEXTPROC __glewSecondaryColor3usEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USEXTPROC
__glewSecondaryColor3usv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVPROC __glewSecondaryColor3usv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVPROC
__glewSecondaryColor3usvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVEXTPROC __glewSecondaryColor3usvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVEXTPROC
__glewSecondaryColorFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORFORMATNVPROC __glewSecondaryColorFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORFORMATNVPROC
__glewSecondaryColorP3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIPROC __glewSecondaryColorP3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIPROC
__glewSecondaryColorP3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIVPROC __glewSecondaryColorP3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIVPROC
__glewSecondaryColorPointer	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERPROC __glewSecondaryColorPointer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERPROC
__glewSecondaryColorPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTEREXTPROC __glewSecondaryColorPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTEREXTPROC
__glewSecondaryColorPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERLISTIBMPROC __glewSecondaryColorPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
__glewSelectPerfMonitorCountersAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLSELECTPERFMONITORCOUNTERSAMDPROC __glewSelectPerfMonitorCountersAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
__glewSeparableFilter2D	glew.h	/^GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DPROC
__glewSeparableFilter2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DEXTPROC __glewSeparableFilter2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DEXTPROC
__glewSetFenceAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLSETFENCEAPPLEPROC __glewSetFenceAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSETFENCEAPPLEPROC
__glewSetFenceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSETFENCENVPROC __glewSetFenceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSETFENCENVPROC
__glewSetFragmentShaderConstantATI	glew.h	/^GLEW_FUN_EXPORT PFNGLSETFRAGMENTSHADERCONSTANTATIPROC __glewSetFragmentShaderConstantATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
__glewSetInvariantEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSETINVARIANTEXTPROC __glewSetInvariantEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSETINVARIANTEXTPROC
__glewSetLocalConstantEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSETLOCALCONSTANTEXTPROC __glewSetLocalConstantEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSETLOCALCONSTANTEXTPROC
__glewSetMultisamplefvAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLSETMULTISAMPLEFVAMDPROC __glewSetMultisamplefvAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSETMULTISAMPLEFVAMDPROC
__glewShaderBinary	glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERBINARYPROC __glewShaderBinary;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERBINARYPROC
__glewShaderOp1EXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSHADEROP1EXTPROC __glewShaderOp1EXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADEROP1EXTPROC
__glewShaderOp2EXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSHADEROP2EXTPROC __glewShaderOp2EXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADEROP2EXTPROC
__glewShaderOp3EXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSHADEROP3EXTPROC __glewShaderOp3EXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADEROP3EXTPROC
__glewShaderSource	glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERSOURCEPROC __glewShaderSource;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERSOURCEPROC
__glewShaderSourceARB	glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERSOURCEARBPROC __glewShaderSourceARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERSOURCEARBPROC
__glewShaderStorageBlockBinding	glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERSTORAGEBLOCKBINDINGPROC __glewShaderStorageBlockBinding;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERSTORAGEBLOCKBINDINGPROC
__glewSharpenTexFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLSHARPENTEXFUNCSGISPROC __glewSharpenTexFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSHARPENTEXFUNCSGISPROC
__glewSpriteParameterfSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFSGIXPROC __glewSpriteParameterfSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFSGIXPROC
__glewSpriteParameterfvSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFVSGIXPROC __glewSpriteParameterfvSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFVSGIXPROC
__glewSpriteParameteriSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERISGIXPROC __glewSpriteParameteriSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERISGIXPROC
__glewSpriteParameterivSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERIVSGIXPROC __glewSpriteParameterivSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERIVSGIXPROC
__glewStencilFillPathInstancedNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHINSTANCEDNVPROC __glewStencilFillPathInstancedNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHINSTANCEDNVPROC
__glewStencilFillPathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHNVPROC __glewStencilFillPathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHNVPROC
__glewStencilFuncSeparate	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEPROC __glewStencilFuncSeparate;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEPROC
__glewStencilFuncSeparateATI	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEATIPROC __glewStencilFuncSeparateATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEATIPROC
__glewStencilMaskSeparate	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILMASKSEPARATEPROC __glewStencilMaskSeparate;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILMASKSEPARATEPROC
__glewStencilOpSeparate	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEPROC __glewStencilOpSeparate;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEPROC
__glewStencilOpSeparateATI	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEATIPROC __glewStencilOpSeparateATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEATIPROC
__glewStencilOpValueAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILOPVALUEAMDPROC __glewStencilOpValueAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILOPVALUEAMDPROC
__glewStencilStrokePathInstancedNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC __glewStencilStrokePathInstancedNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
__glewStencilStrokePathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHNVPROC __glewStencilStrokePathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHNVPROC
__glewStringMarkerGREMEDY	glew.h	/^GLEW_FUN_EXPORT PFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSTRINGMARKERGREMEDYPROC
__glewSwizzleEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLSWIZZLEEXTPROC __glewSwizzleEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSWIZZLEEXTPROC
__glewSyncTextureINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLSYNCTEXTUREINTELPROC __glewSyncTextureINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLSYNCTEXTUREINTELPROC
__glewTagSampleBufferSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLTAGSAMPLEBUFFERSGIXPROC __glewTagSampleBufferSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTAGSAMPLEBUFFERSGIXPROC
__glewTangentPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTANGENTPOINTEREXTPROC __glewTangentPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTANGENTPOINTEREXTPROC
__glewTbufferMask3DFX	glew.h	/^GLEW_FUN_EXPORT PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTBUFFERMASK3DFXPROC
__glewTessellationFactorAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLTESSELLATIONFACTORAMDPROC __glewTessellationFactorAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTESSELLATIONFACTORAMDPROC
__glewTessellationModeAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLTESSELLATIONMODEAMDPROC __glewTessellationModeAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTESSELLATIONMODEAMDPROC
__glewTestFenceAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLTESTFENCEAPPLEPROC __glewTestFenceAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTESTFENCEAPPLEPROC
__glewTestFenceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTESTFENCENVPROC __glewTestFenceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTESTFENCENVPROC
__glewTestObjectAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLTESTOBJECTAPPLEPROC __glewTestObjectAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTESTOBJECTAPPLEPROC
__glewTexBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFERPROC __glewTexBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFERPROC
__glewTexBufferARB	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFERARBPROC __glewTexBufferARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFERARBPROC
__glewTexBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFEREXTPROC __glewTexBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFEREXTPROC
__glewTexBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFERRANGEPROC __glewTexBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFERRANGEPROC
__glewTexBumpParameterfvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERFVATIPROC __glewTexBumpParameterfvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERFVATIPROC
__glewTexBumpParameterivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERIVATIPROC __glewTexBumpParameterivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERIVATIPROC
__glewTexCoord1hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD1HNVPROC __glewTexCoord1hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD1HNVPROC
__glewTexCoord1hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD1HVNVPROC __glewTexCoord1hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD1HVNVPROC
__glewTexCoord2fColor3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC __glewTexCoord2fColor3fVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
__glewTexCoord2fColor3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC __glewTexCoord2fColor3fVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
__glewTexCoord2fColor4fNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fColor4fNormal3fVer/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewTexCoord2fColor4fNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fColor4fNormal3fVe/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewTexCoord2fColor4ubVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC __glewTexCoord2fColor4ubVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
__glewTexCoord2fColor4ubVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC __glewTexCoord2fColor4ubVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
__glewTexCoord2fNormal3fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fNormal3fVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
__glewTexCoord2fNormal3fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fNormal3fVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
__glewTexCoord2fVertex3fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FSUNPROC __glewTexCoord2fVertex3fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FSUNPROC
__glewTexCoord2fVertex3fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FVSUNPROC __glewTexCoord2fVertex3fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FVSUNPROC
__glewTexCoord2hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2HNVPROC __glewTexCoord2hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2HNVPROC
__glewTexCoord2hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2HVNVPROC __glewTexCoord2hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2HVNVPROC
__glewTexCoord3hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD3HNVPROC __glewTexCoord3hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD3HNVPROC
__glewTexCoord3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD3HVNVPROC __glewTexCoord3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD3HVNVPROC
__glewTexCoord4fColor4fNormal3fVertex4fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC __glewTexCoord4fColor4fNormal3fVer/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
__glewTexCoord4fColor4fNormal3fVertex4fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC __glewTexCoord4fColor4fNormal3fVe/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
__glewTexCoord4fVertex4fSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FSUNPROC __glewTexCoord4fVertex4fSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FSUNPROC
__glewTexCoord4fVertex4fvSUN	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FVSUNPROC __glewTexCoord4fVertex4fvSUN;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FVSUNPROC
__glewTexCoord4hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4HNVPROC __glewTexCoord4hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4HNVPROC
__glewTexCoord4hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4HVNVPROC __glewTexCoord4hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4HVNVPROC
__glewTexCoordFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDFORMATNVPROC __glewTexCoordFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDFORMATNVPROC
__glewTexCoordP1ui	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIPROC __glewTexCoordP1ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIPROC
__glewTexCoordP1uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIVPROC __glewTexCoordP1uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIVPROC
__glewTexCoordP2ui	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIPROC __glewTexCoordP2ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIPROC
__glewTexCoordP2uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIVPROC __glewTexCoordP2uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIVPROC
__glewTexCoordP3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIPROC __glewTexCoordP3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIPROC
__glewTexCoordP3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIVPROC __glewTexCoordP3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIVPROC
__glewTexCoordP4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIPROC __glewTexCoordP4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIPROC
__glewTexCoordP4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIVPROC __glewTexCoordP4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIVPROC
__glewTexCoordPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTEREXTPROC __glewTexCoordPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTEREXTPROC
__glewTexCoordPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERLISTIBMPROC __glewTexCoordPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERLISTIBMPROC
__glewTexCoordPointervINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERVINTELPROC __glewTexCoordPointervINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERVINTELPROC
__glewTexEnvx	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXENVXPROC __glewTexEnvx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXENVXPROC
__glewTexEnvxv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXENVXVPROC __glewTexEnvxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXENVXVPROC
__glewTexFilterFuncSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXFILTERFUNCSGISPROC __glewTexFilterFuncSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXFILTERFUNCSGISPROC
__glewTexImage2DMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLEPROC __glewTexImage2DMultisample;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLEPROC
__glewTexImage2DMultisampleCoverageNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTexImage2DMultisampleCoverageNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
__glewTexImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DPROC __glewTexImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DPROC
__glewTexImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DEXTPROC __glewTexImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DEXTPROC
__glewTexImage3DMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLEPROC __glewTexImage3DMultisample;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLEPROC
__glewTexImage3DMultisampleCoverageNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTexImage3DMultisampleCoverageNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
__glewTexImage4DSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE4DSGISPROC __glewTexImage4DSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE4DSGISPROC
__glewTexPageCommitmentARB	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPAGECOMMITMENTARBPROC __glewTexPageCommitmentARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPAGECOMMITMENTARBPROC
__glewTexParameterIiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVPROC __glewTexParameterIiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVPROC
__glewTexParameterIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVEXTPROC __glewTexParameterIivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVEXTPROC
__glewTexParameterIuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVPROC __glewTexParameterIuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVPROC
__glewTexParameterIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVEXTPROC __glewTexParameterIuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVEXTPROC
__glewTexParameterx	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERXPROC __glewTexParameterx;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERXPROC
__glewTexParameterxv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERXVPROC __glewTexParameterxv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERXVPROC
__glewTexRenderbufferNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXRENDERBUFFERNVPROC __glewTexRenderbufferNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXRENDERBUFFERNVPROC
__glewTexScissorFuncINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSCISSORFUNCINTELPROC __glewTexScissorFuncINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSCISSORFUNCINTELPROC
__glewTexScissorINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSCISSORINTELPROC __glewTexScissorINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSCISSORINTELPROC
__glewTexStorage1D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE1DPROC __glewTexStorage1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE1DPROC
__glewTexStorage2D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DPROC __glewTexStorage2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DPROC
__glewTexStorage2DMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DMULTISAMPLEPROC __glewTexStorage2DMultisample;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DMULTISAMPLEPROC
__glewTexStorage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DPROC __glewTexStorage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DPROC
__glewTexStorage3DMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DMULTISAMPLEPROC __glewTexStorage3DMultisample;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DMULTISAMPLEPROC
__glewTexStorageSparseAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGESPARSEAMDPROC __glewTexStorageSparseAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGESPARSEAMDPROC
__glewTexSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE1DEXTPROC __glewTexSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE1DEXTPROC
__glewTexSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE2DEXTPROC __glewTexSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE2DEXTPROC
__glewTexSubImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DPROC __glewTexSubImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DPROC
__glewTexSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DEXTPROC __glewTexSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DEXTPROC
__glewTexSubImage4DSGIS	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE4DSGISPROC __glewTexSubImage4DSGIS;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE4DSGISPROC
__glewTextureBarrier	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERPROC __glewTextureBarrier;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERPROC
__glewTextureBarrierNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERNVPROC __glewTextureBarrierNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERNVPROC
__glewTextureBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERPROC __glewTextureBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERPROC
__glewTextureBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFEREXTPROC __glewTextureBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFEREXTPROC
__glewTextureBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEPROC __glewTextureBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEPROC
__glewTextureBufferRangeEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEEXTPROC __glewTextureBufferRangeEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEEXTPROC
__glewTextureFogSGIX	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREFOGSGIXPROC __glewTextureFogSGIX;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREFOGSGIXPROC
__glewTextureImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE1DEXTPROC __glewTextureImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE1DEXTPROC
__glewTextureImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DEXTPROC __glewTextureImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DEXTPROC
__glewTextureImage2DMultisampleCoverageNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTextureImage2DMultisampleCove/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
__glewTextureImage2DMultisampleNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC __glewTextureImage2DMultisampleNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
__glewTextureImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DEXTPROC __glewTextureImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DEXTPROC
__glewTextureImage3DMultisampleCoverageNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTextureImage3DMultisampleCove/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
__glewTextureImage3DMultisampleNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC __glewTextureImage3DMultisampleNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
__glewTextureLightEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURELIGHTEXTPROC __glewTextureLightEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURELIGHTEXTPROC
__glewTextureMaterialEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREMATERIALEXTPROC __glewTextureMaterialEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREMATERIALEXTPROC
__glewTextureNormalEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURENORMALEXTPROC __glewTextureNormalEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURENORMALEXTPROC
__glewTexturePageCommitmentEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPAGECOMMITMENTEXTPROC __glewTexturePageCommitmentEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPAGECOMMITMENTEXTPROC
__glewTextureParameterIiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVPROC __glewTextureParameterIiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVPROC
__glewTextureParameterIivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVEXTPROC __glewTextureParameterIivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVEXTPROC
__glewTextureParameterIuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVPROC __glewTextureParameterIuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVPROC
__glewTextureParameterIuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVEXTPROC __glewTextureParameterIuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVEXTPROC
__glewTextureParameterf	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFPROC __glewTextureParameterf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFPROC
__glewTextureParameterfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFEXTPROC __glewTextureParameterfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFEXTPROC
__glewTextureParameterfv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVPROC __glewTextureParameterfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVPROC
__glewTextureParameterfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVEXTPROC __glewTextureParameterfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVEXTPROC
__glewTextureParameteri	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIPROC __glewTextureParameteri;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIPROC
__glewTextureParameteriEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIEXTPROC __glewTextureParameteriEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIEXTPROC
__glewTextureParameteriv	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVPROC __glewTextureParameteriv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVPROC
__glewTextureParameterivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVEXTPROC __glewTextureParameterivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVEXTPROC
__glewTextureRangeAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURERANGEAPPLEPROC __glewTextureRangeAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURERANGEAPPLEPROC
__glewTextureRenderbufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURERENDERBUFFEREXTPROC __glewTextureRenderbufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURERENDERBUFFEREXTPROC
__glewTextureStorage1D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DPROC __glewTextureStorage1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DPROC
__glewTextureStorage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DEXTPROC __glewTextureStorage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DEXTPROC
__glewTextureStorage2D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DPROC __glewTextureStorage2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DPROC
__glewTextureStorage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DEXTPROC __glewTextureStorage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DEXTPROC
__glewTextureStorage2DMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC __glewTextureStorage2DMultisample;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
__glewTextureStorage2DMultisampleEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC __glewTextureStorage2DMultisampleEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
__glewTextureStorage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DPROC __glewTextureStorage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DPROC
__glewTextureStorage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DEXTPROC __glewTextureStorage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DEXTPROC
__glewTextureStorage3DMultisample	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC __glewTextureStorage3DMultisample;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
__glewTextureStorage3DMultisampleEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC __glewTextureStorage3DMultisampleEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
__glewTextureStorageSparseAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGESPARSEAMDPROC __glewTextureStorageSparseAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGESPARSEAMDPROC
__glewTextureSubImage1D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DPROC __glewTextureSubImage1D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DPROC
__glewTextureSubImage1DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DEXTPROC __glewTextureSubImage1DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DEXTPROC
__glewTextureSubImage2D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DPROC __glewTextureSubImage2D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DPROC
__glewTextureSubImage2DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DEXTPROC __glewTextureSubImage2DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DEXTPROC
__glewTextureSubImage3D	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DPROC __glewTextureSubImage3D;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DPROC
__glewTextureSubImage3DEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DEXTPROC __glewTextureSubImage3DEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DEXTPROC
__glewTextureView	glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREVIEWPROC __glewTextureView;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREVIEWPROC
__glewTrackMatrixNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTRACKMATRIXNVPROC __glewTrackMatrixNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRACKMATRIXNVPROC
__glewTransformFeedbackAttribsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC __glewTransformFeedbackAttribsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
__glewTransformFeedbackBufferBase	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC __glewTransformFeedbackBufferBase;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
__glewTransformFeedbackBufferRange	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC __glewTransformFeedbackBufferRange;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
__glewTransformFeedbackVaryings	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSPROC __glewTransformFeedbackVaryings;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSPROC
__glewTransformFeedbackVaryingsEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC __glewTransformFeedbackVaryingsEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
__glewTransformFeedbackVaryingsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC __glewTransformFeedbackVaryingsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
__glewTransformPathNV	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMPATHNVPROC __glewTransformPathNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMPATHNVPROC
__glewTranslatex	glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSLATEXPROC __glewTranslatex;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSLATEXPROC
__glewUniform1d	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1DPROC __glewUniform1d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1DPROC
__glewUniform1dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1DVPROC __glewUniform1dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1DVPROC
__glewUniform1f	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FPROC __glewUniform1f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FPROC
__glewUniform1fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FARBPROC __glewUniform1fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FARBPROC
__glewUniform1fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FVPROC __glewUniform1fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FVPROC
__glewUniform1fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FVARBPROC __glewUniform1fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FVARBPROC
__glewUniform1i	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IPROC __glewUniform1i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IPROC
__glewUniform1i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1I64NVPROC __glewUniform1i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1I64NVPROC
__glewUniform1i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1I64VNVPROC __glewUniform1i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1I64VNVPROC
__glewUniform1iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IARBPROC __glewUniform1iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IARBPROC
__glewUniform1iv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IVPROC __glewUniform1iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IVPROC
__glewUniform1ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IVARBPROC __glewUniform1ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IVARBPROC
__glewUniform1ui	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIPROC __glewUniform1ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIPROC
__glewUniform1ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UI64NVPROC __glewUniform1ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UI64NVPROC
__glewUniform1ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UI64VNVPROC __glewUniform1ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UI64VNVPROC
__glewUniform1uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIEXTPROC __glewUniform1uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIEXTPROC
__glewUniform1uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIVPROC __glewUniform1uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIVPROC
__glewUniform1uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIVEXTPROC __glewUniform1uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIVEXTPROC
__glewUniform2d	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2DPROC __glewUniform2d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2DPROC
__glewUniform2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2DVPROC __glewUniform2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2DVPROC
__glewUniform2f	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FPROC __glewUniform2f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FPROC
__glewUniform2fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FARBPROC __glewUniform2fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FARBPROC
__glewUniform2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FVPROC __glewUniform2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FVPROC
__glewUniform2fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FVARBPROC __glewUniform2fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FVARBPROC
__glewUniform2i	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IPROC __glewUniform2i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IPROC
__glewUniform2i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2I64NVPROC __glewUniform2i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2I64NVPROC
__glewUniform2i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2I64VNVPROC __glewUniform2i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2I64VNVPROC
__glewUniform2iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IARBPROC __glewUniform2iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IARBPROC
__glewUniform2iv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IVPROC __glewUniform2iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IVPROC
__glewUniform2ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IVARBPROC __glewUniform2ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IVARBPROC
__glewUniform2ui	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIPROC __glewUniform2ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIPROC
__glewUniform2ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UI64NVPROC __glewUniform2ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UI64NVPROC
__glewUniform2ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UI64VNVPROC __glewUniform2ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UI64VNVPROC
__glewUniform2uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIEXTPROC __glewUniform2uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIEXTPROC
__glewUniform2uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIVPROC __glewUniform2uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIVPROC
__glewUniform2uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIVEXTPROC __glewUniform2uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIVEXTPROC
__glewUniform3d	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3DPROC __glewUniform3d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3DPROC
__glewUniform3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3DVPROC __glewUniform3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3DVPROC
__glewUniform3f	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FPROC __glewUniform3f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FPROC
__glewUniform3fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FARBPROC __glewUniform3fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FARBPROC
__glewUniform3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FVPROC __glewUniform3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FVPROC
__glewUniform3fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FVARBPROC __glewUniform3fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FVARBPROC
__glewUniform3i	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IPROC __glewUniform3i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IPROC
__glewUniform3i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3I64NVPROC __glewUniform3i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3I64NVPROC
__glewUniform3i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3I64VNVPROC __glewUniform3i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3I64VNVPROC
__glewUniform3iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IARBPROC __glewUniform3iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IARBPROC
__glewUniform3iv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IVPROC __glewUniform3iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IVPROC
__glewUniform3ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IVARBPROC __glewUniform3ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IVARBPROC
__glewUniform3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIPROC __glewUniform3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIPROC
__glewUniform3ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UI64NVPROC __glewUniform3ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UI64NVPROC
__glewUniform3ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UI64VNVPROC __glewUniform3ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UI64VNVPROC
__glewUniform3uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIEXTPROC __glewUniform3uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIEXTPROC
__glewUniform3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIVPROC __glewUniform3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIVPROC
__glewUniform3uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIVEXTPROC __glewUniform3uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIVEXTPROC
__glewUniform4d	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4DPROC __glewUniform4d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4DPROC
__glewUniform4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4DVPROC __glewUniform4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4DVPROC
__glewUniform4f	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FPROC __glewUniform4f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FPROC
__glewUniform4fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FARBPROC __glewUniform4fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FARBPROC
__glewUniform4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FVPROC __glewUniform4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FVPROC
__glewUniform4fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FVARBPROC __glewUniform4fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FVARBPROC
__glewUniform4i	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IPROC __glewUniform4i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IPROC
__glewUniform4i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4I64NVPROC __glewUniform4i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4I64NVPROC
__glewUniform4i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4I64VNVPROC __glewUniform4i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4I64VNVPROC
__glewUniform4iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IARBPROC __glewUniform4iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IARBPROC
__glewUniform4iv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IVPROC __glewUniform4iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IVPROC
__glewUniform4ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IVARBPROC __glewUniform4ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IVARBPROC
__glewUniform4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIPROC __glewUniform4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIPROC
__glewUniform4ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UI64NVPROC __glewUniform4ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UI64NVPROC
__glewUniform4ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UI64VNVPROC __glewUniform4ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UI64VNVPROC
__glewUniform4uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIEXTPROC __glewUniform4uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIEXTPROC
__glewUniform4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIVPROC __glewUniform4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIVPROC
__glewUniform4uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIVEXTPROC __glewUniform4uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIVEXTPROC
__glewUniformBlockBinding	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMBLOCKBINDINGPROC
__glewUniformBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMBUFFEREXTPROC __glewUniformBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMBUFFEREXTPROC
__glewUniformHandleui64ARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64ARBPROC __glewUniformHandleui64ARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64ARBPROC
__glewUniformHandleui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64NVPROC __glewUniformHandleui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64NVPROC
__glewUniformHandleui64vARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VARBPROC __glewUniformHandleui64vARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VARBPROC
__glewUniformHandleui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VNVPROC __glewUniformHandleui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VNVPROC
__glewUniformMatrix2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2DVPROC __glewUniformMatrix2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2DVPROC
__glewUniformMatrix2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVPROC __glewUniformMatrix2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVPROC
__glewUniformMatrix2fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVARBPROC __glewUniformMatrix2fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVARBPROC
__glewUniformMatrix2x3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3DVPROC __glewUniformMatrix2x3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3DVPROC
__glewUniformMatrix2x3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3FVPROC __glewUniformMatrix2x3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3FVPROC
__glewUniformMatrix2x4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4DVPROC __glewUniformMatrix2x4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4DVPROC
__glewUniformMatrix2x4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4FVPROC __glewUniformMatrix2x4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4FVPROC
__glewUniformMatrix3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3DVPROC __glewUniformMatrix3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3DVPROC
__glewUniformMatrix3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVPROC __glewUniformMatrix3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVPROC
__glewUniformMatrix3fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVARBPROC __glewUniformMatrix3fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVARBPROC
__glewUniformMatrix3x2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2DVPROC __glewUniformMatrix3x2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2DVPROC
__glewUniformMatrix3x2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2FVPROC __glewUniformMatrix3x2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2FVPROC
__glewUniformMatrix3x4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4DVPROC __glewUniformMatrix3x4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4DVPROC
__glewUniformMatrix3x4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4FVPROC __glewUniformMatrix3x4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4FVPROC
__glewUniformMatrix4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4DVPROC __glewUniformMatrix4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4DVPROC
__glewUniformMatrix4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVPROC __glewUniformMatrix4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVPROC
__glewUniformMatrix4fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVARBPROC __glewUniformMatrix4fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVARBPROC
__glewUniformMatrix4x2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2DVPROC __glewUniformMatrix4x2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2DVPROC
__glewUniformMatrix4x2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2FVPROC __glewUniformMatrix4x2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2FVPROC
__glewUniformMatrix4x3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3DVPROC __glewUniformMatrix4x3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3DVPROC
__glewUniformMatrix4x3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3FVPROC __glewUniformMatrix4x3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3FVPROC
__glewUniformSubroutinesuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMSUBROUTINESUIVPROC __glewUniformSubroutinesuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMSUBROUTINESUIVPROC
__glewUniformui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMUI64NVPROC __glewUniformui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMUI64NVPROC
__glewUniformui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMUI64VNVPROC __glewUniformui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMUI64VNVPROC
__glewUnlockArraysEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNLOCKARRAYSEXTPROC __glewUnlockArraysEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNLOCKARRAYSEXTPROC
__glewUnmapBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPBUFFERPROC __glewUnmapBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPBUFFERPROC
__glewUnmapBufferARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPBUFFERARBPROC __glewUnmapBufferARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPBUFFERARBPROC
__glewUnmapNamedBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFERPROC __glewUnmapNamedBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFERPROC
__glewUnmapNamedBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFEREXTPROC __glewUnmapNamedBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFEREXTPROC
__glewUnmapObjectBufferATI	glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPOBJECTBUFFERATIPROC __glewUnmapObjectBufferATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPOBJECTBUFFERATIPROC
__glewUnmapTexture2DINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPTEXTURE2DINTELPROC __glewUnmapTexture2DINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPTEXTURE2DINTELPROC
__glewUpdateObjectBufferATI	glew.h	/^GLEW_FUN_EXPORT PFNGLUPDATEOBJECTBUFFERATIPROC __glewUpdateObjectBufferATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUPDATEOBJECTBUFFERATIPROC
__glewUseProgram	glew.h	/^GLEW_FUN_EXPORT PFNGLUSEPROGRAMPROC __glewUseProgram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUSEPROGRAMPROC
__glewUseProgramObjectARB	glew.h	/^GLEW_FUN_EXPORT PFNGLUSEPROGRAMOBJECTARBPROC __glewUseProgramObjectARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUSEPROGRAMOBJECTARBPROC
__glewUseProgramStages	glew.h	/^GLEW_FUN_EXPORT PFNGLUSEPROGRAMSTAGESPROC __glewUseProgramStages;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUSEPROGRAMSTAGESPROC
__glewUseShaderProgramEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLUSESHADERPROGRAMEXTPROC __glewUseShaderProgramEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLUSESHADERPROGRAMEXTPROC
__glewVDPAUFiniNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUFININVPROC __glewVDPAUFiniNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUFININVPROC
__glewVDPAUGetSurfaceivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUGETSURFACEIVNVPROC __glewVDPAUGetSurfaceivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUGETSURFACEIVNVPROC
__glewVDPAUInitNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUINITNVPROC __glewVDPAUInitNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUINITNVPROC
__glewVDPAUIsSurfaceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUISSURFACENVPROC __glewVDPAUIsSurfaceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUISSURFACENVPROC
__glewVDPAUMapSurfacesNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUMAPSURFACESNVPROC __glewVDPAUMapSurfacesNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUMAPSURFACESNVPROC
__glewVDPAURegisterOutputSurfaceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC __glewVDPAURegisterOutputSurfaceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
__glewVDPAURegisterVideoSurfaceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUREGISTERVIDEOSURFACENVPROC __glewVDPAURegisterVideoSurfaceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
__glewVDPAUSurfaceAccessNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUSURFACEACCESSNVPROC __glewVDPAUSurfaceAccessNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUSURFACEACCESSNVPROC
__glewVDPAUUnmapSurfacesNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUUNMAPSURFACESNVPROC __glewVDPAUUnmapSurfacesNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUUNMAPSURFACESNVPROC
__glewVDPAUUnregisterSurfaceNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUUNREGISTERSURFACENVPROC __glewVDPAUUnregisterSurfaceNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUUNREGISTERSURFACENVPROC
__glewValidateProgram	glew.h	/^GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPROC __glewValidateProgram;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPROC
__glewValidateProgramARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMARBPROC __glewValidateProgramARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMARBPROC
__glewValidateProgramPipeline	glew.h	/^GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPIPELINEPROC __glewValidateProgramPipeline;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPIPELINEPROC
__glewVariantArrayObjectATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTARRAYOBJECTATIPROC __glewVariantArrayObjectATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTARRAYOBJECTATIPROC
__glewVariantPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTPOINTEREXTPROC __glewVariantPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTPOINTEREXTPROC
__glewVariantbvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTBVEXTPROC __glewVariantbvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTBVEXTPROC
__glewVariantdvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTDVEXTPROC __glewVariantdvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTDVEXTPROC
__glewVariantfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTFVEXTPROC __glewVariantfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTFVEXTPROC
__glewVariantivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTIVEXTPROC __glewVariantivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTIVEXTPROC
__glewVariantsvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTSVEXTPROC __glewVariantsvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTSVEXTPROC
__glewVariantubvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTUBVEXTPROC __glewVariantubvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTUBVEXTPROC
__glewVariantuivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTUIVEXTPROC __glewVariantuivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTUIVEXTPROC
__glewVariantusvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTUSVEXTPROC __glewVariantusvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTUSVEXTPROC
__glewVertex2hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX2HNVPROC __glewVertex2hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX2HNVPROC
__glewVertex2hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX2HVNVPROC __glewVertex2hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX2HVNVPROC
__glewVertex3hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX3HNVPROC __glewVertex3hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX3HNVPROC
__glewVertex3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX3HVNVPROC __glewVertex3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX3HVNVPROC
__glewVertex4hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX4HNVPROC __glewVertex4hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX4HNVPROC
__glewVertex4hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX4HVNVPROC __glewVertex4hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX4HVNVPROC
__glewVertexArrayAttribBinding	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBBINDINGPROC __glewVertexArrayAttribBinding;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBBINDINGPROC
__glewVertexArrayAttribFormat	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBFORMATPROC __glewVertexArrayAttribFormat;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBFORMATPROC
__glewVertexArrayAttribIFormat	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBIFORMATPROC __glewVertexArrayAttribIFormat;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBIFORMATPROC
__glewVertexArrayAttribLFormat	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBLFORMATPROC __glewVertexArrayAttribLFormat;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBLFORMATPROC
__glewVertexArrayBindVertexBufferEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC __glewVertexArrayBindVertexBufferEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
__glewVertexArrayBindingDivisor	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDINGDIVISORPROC __glewVertexArrayBindingDivisor;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDINGDIVISORPROC
__glewVertexArrayColorOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYCOLOROFFSETEXTPROC __glewVertexArrayColorOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYCOLOROFFSETEXTPROC
__glewVertexArrayEdgeFlagOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC __glewVertexArrayEdgeFlagOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC
__glewVertexArrayElementBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYELEMENTBUFFERPROC __glewVertexArrayElementBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYELEMENTBUFFERPROC
__glewVertexArrayFogCoordOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC __glewVertexArrayFogCoordOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC
__glewVertexArrayIndexOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYINDEXOFFSETEXTPROC __glewVertexArrayIndexOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYINDEXOFFSETEXTPROC
__glewVertexArrayMultiTexCoordOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC __glewVertexArrayMultiTexCoordOffsetE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC
__glewVertexArrayNormalOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYNORMALOFFSETEXTPROC __glewVertexArrayNormalOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYNORMALOFFSETEXTPROC
__glewVertexArrayParameteriAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYPARAMETERIAPPLEPROC __glewVertexArrayParameteriAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
__glewVertexArrayRangeAPPLE	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGEAPPLEPROC __glewVertexArrayRangeAPPLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGEAPPLEPROC
__glewVertexArrayRangeNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGENVPROC __glewVertexArrayRangeNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGENVPROC
__glewVertexArraySecondaryColorOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC __glewVertexArraySecondaryColorOffse/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC
__glewVertexArrayTexCoordOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC __glewVertexArrayTexCoordOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC
__glewVertexArrayVertexAttribBindingEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC __glewVertexArrayVertexAttribBindingE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
__glewVertexArrayVertexAttribDivisorEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC __glewVertexArrayVertexAttribDivisorE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC
__glewVertexArrayVertexAttribFormatEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC __glewVertexArrayVertexAttribFormatEXT/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
__glewVertexArrayVertexAttribIFormatEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC __glewVertexArrayVertexAttribIFormatE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
__glewVertexArrayVertexAttribIOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC __glewVertexArrayVertexAttribIOffsetE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC
__glewVertexArrayVertexAttribLFormatEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC __glewVertexArrayVertexAttribLFormatE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
__glewVertexArrayVertexAttribLOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC __glewVertexArrayVertexAttribLOffsetE/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
__glewVertexArrayVertexAttribOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC __glewVertexArrayVertexAttribOffsetEXT/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC
__glewVertexArrayVertexBindingDivisorEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC __glewVertexArrayVertexBindingDiviso/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
__glewVertexArrayVertexBuffer	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERPROC __glewVertexArrayVertexBuffer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERPROC
__glewVertexArrayVertexBuffers	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERSPROC __glewVertexArrayVertexBuffers;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERSPROC
__glewVertexArrayVertexOffsetEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC __glewVertexArrayVertexOffsetEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC
__glewVertexAttrib1d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DPROC __glewVertexAttrib1d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DPROC
__glewVertexAttrib1dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DARBPROC __glewVertexAttrib1dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DARBPROC
__glewVertexAttrib1dNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DNVPROC __glewVertexAttrib1dNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DNVPROC
__glewVertexAttrib1dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVPROC __glewVertexAttrib1dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVPROC
__glewVertexAttrib1dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVARBPROC __glewVertexAttrib1dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVARBPROC
__glewVertexAttrib1dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVNVPROC __glewVertexAttrib1dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVNVPROC
__glewVertexAttrib1f	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FPROC __glewVertexAttrib1f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FPROC
__glewVertexAttrib1fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FARBPROC __glewVertexAttrib1fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FARBPROC
__glewVertexAttrib1fNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FNVPROC __glewVertexAttrib1fNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FNVPROC
__glewVertexAttrib1fv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVPROC __glewVertexAttrib1fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVPROC
__glewVertexAttrib1fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVARBPROC __glewVertexAttrib1fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVARBPROC
__glewVertexAttrib1fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVNVPROC __glewVertexAttrib1fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVNVPROC
__glewVertexAttrib1hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HNVPROC __glewVertexAttrib1hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HNVPROC
__glewVertexAttrib1hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HVNVPROC __glewVertexAttrib1hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HVNVPROC
__glewVertexAttrib1s	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SPROC __glewVertexAttrib1s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SPROC
__glewVertexAttrib1sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SARBPROC __glewVertexAttrib1sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SARBPROC
__glewVertexAttrib1sNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SNVPROC __glewVertexAttrib1sNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SNVPROC
__glewVertexAttrib1sv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVPROC __glewVertexAttrib1sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVPROC
__glewVertexAttrib1svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVARBPROC __glewVertexAttrib1svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVARBPROC
__glewVertexAttrib1svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVNVPROC __glewVertexAttrib1svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVNVPROC
__glewVertexAttrib2d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DPROC __glewVertexAttrib2d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DPROC
__glewVertexAttrib2dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DARBPROC __glewVertexAttrib2dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DARBPROC
__glewVertexAttrib2dNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DNVPROC __glewVertexAttrib2dNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DNVPROC
__glewVertexAttrib2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVPROC __glewVertexAttrib2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVPROC
__glewVertexAttrib2dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVARBPROC __glewVertexAttrib2dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVARBPROC
__glewVertexAttrib2dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVNVPROC __glewVertexAttrib2dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVNVPROC
__glewVertexAttrib2f	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FPROC __glewVertexAttrib2f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FPROC
__glewVertexAttrib2fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FARBPROC __glewVertexAttrib2fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FARBPROC
__glewVertexAttrib2fNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FNVPROC __glewVertexAttrib2fNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FNVPROC
__glewVertexAttrib2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVPROC __glewVertexAttrib2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVPROC
__glewVertexAttrib2fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVARBPROC __glewVertexAttrib2fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVARBPROC
__glewVertexAttrib2fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVNVPROC __glewVertexAttrib2fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVNVPROC
__glewVertexAttrib2hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HNVPROC __glewVertexAttrib2hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HNVPROC
__glewVertexAttrib2hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HVNVPROC __glewVertexAttrib2hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HVNVPROC
__glewVertexAttrib2s	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SPROC __glewVertexAttrib2s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SPROC
__glewVertexAttrib2sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SARBPROC __glewVertexAttrib2sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SARBPROC
__glewVertexAttrib2sNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SNVPROC __glewVertexAttrib2sNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SNVPROC
__glewVertexAttrib2sv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVPROC __glewVertexAttrib2sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVPROC
__glewVertexAttrib2svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVARBPROC __glewVertexAttrib2svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVARBPROC
__glewVertexAttrib2svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVNVPROC __glewVertexAttrib2svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVNVPROC
__glewVertexAttrib3d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DPROC __glewVertexAttrib3d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DPROC
__glewVertexAttrib3dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DARBPROC __glewVertexAttrib3dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DARBPROC
__glewVertexAttrib3dNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DNVPROC __glewVertexAttrib3dNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DNVPROC
__glewVertexAttrib3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVPROC __glewVertexAttrib3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVPROC
__glewVertexAttrib3dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVARBPROC __glewVertexAttrib3dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVARBPROC
__glewVertexAttrib3dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVNVPROC __glewVertexAttrib3dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVNVPROC
__glewVertexAttrib3f	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FPROC __glewVertexAttrib3f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FPROC
__glewVertexAttrib3fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FARBPROC __glewVertexAttrib3fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FARBPROC
__glewVertexAttrib3fNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FNVPROC __glewVertexAttrib3fNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FNVPROC
__glewVertexAttrib3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVPROC __glewVertexAttrib3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVPROC
__glewVertexAttrib3fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVARBPROC __glewVertexAttrib3fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVARBPROC
__glewVertexAttrib3fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVNVPROC __glewVertexAttrib3fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVNVPROC
__glewVertexAttrib3hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HNVPROC __glewVertexAttrib3hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HNVPROC
__glewVertexAttrib3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HVNVPROC __glewVertexAttrib3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HVNVPROC
__glewVertexAttrib3s	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SPROC __glewVertexAttrib3s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SPROC
__glewVertexAttrib3sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SARBPROC __glewVertexAttrib3sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SARBPROC
__glewVertexAttrib3sNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SNVPROC __glewVertexAttrib3sNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SNVPROC
__glewVertexAttrib3sv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVPROC __glewVertexAttrib3sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVPROC
__glewVertexAttrib3svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVARBPROC __glewVertexAttrib3svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVARBPROC
__glewVertexAttrib3svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVNVPROC __glewVertexAttrib3svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVNVPROC
__glewVertexAttrib4Nbv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVPROC __glewVertexAttrib4Nbv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVPROC
__glewVertexAttrib4NbvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVARBPROC __glewVertexAttrib4NbvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVARBPROC
__glewVertexAttrib4Niv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVPROC __glewVertexAttrib4Niv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVPROC
__glewVertexAttrib4NivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVARBPROC __glewVertexAttrib4NivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVARBPROC
__glewVertexAttrib4Nsv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVPROC __glewVertexAttrib4Nsv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVPROC
__glewVertexAttrib4NsvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVARBPROC __glewVertexAttrib4NsvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVARBPROC
__glewVertexAttrib4Nub	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBPROC __glewVertexAttrib4Nub;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBPROC
__glewVertexAttrib4NubARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBARBPROC __glewVertexAttrib4NubARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBARBPROC
__glewVertexAttrib4Nubv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVPROC __glewVertexAttrib4Nubv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVPROC
__glewVertexAttrib4NubvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVARBPROC __glewVertexAttrib4NubvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVARBPROC
__glewVertexAttrib4Nuiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVPROC __glewVertexAttrib4Nuiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVPROC
__glewVertexAttrib4NuivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVARBPROC __glewVertexAttrib4NuivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVARBPROC
__glewVertexAttrib4Nusv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVPROC __glewVertexAttrib4Nusv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVPROC
__glewVertexAttrib4NusvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVARBPROC __glewVertexAttrib4NusvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVARBPROC
__glewVertexAttrib4bv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVPROC __glewVertexAttrib4bv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVPROC
__glewVertexAttrib4bvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVARBPROC __glewVertexAttrib4bvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVARBPROC
__glewVertexAttrib4d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DPROC __glewVertexAttrib4d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DPROC
__glewVertexAttrib4dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DARBPROC __glewVertexAttrib4dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DARBPROC
__glewVertexAttrib4dNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DNVPROC __glewVertexAttrib4dNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DNVPROC
__glewVertexAttrib4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVPROC __glewVertexAttrib4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVPROC
__glewVertexAttrib4dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVARBPROC __glewVertexAttrib4dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVARBPROC
__glewVertexAttrib4dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVNVPROC __glewVertexAttrib4dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVNVPROC
__glewVertexAttrib4f	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FPROC __glewVertexAttrib4f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FPROC
__glewVertexAttrib4fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FARBPROC __glewVertexAttrib4fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FARBPROC
__glewVertexAttrib4fNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FNVPROC __glewVertexAttrib4fNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FNVPROC
__glewVertexAttrib4fv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVPROC __glewVertexAttrib4fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVPROC
__glewVertexAttrib4fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVARBPROC __glewVertexAttrib4fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVARBPROC
__glewVertexAttrib4fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVNVPROC __glewVertexAttrib4fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVNVPROC
__glewVertexAttrib4hNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HNVPROC __glewVertexAttrib4hNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HNVPROC
__glewVertexAttrib4hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HVNVPROC __glewVertexAttrib4hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HVNVPROC
__glewVertexAttrib4iv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVPROC __glewVertexAttrib4iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVPROC
__glewVertexAttrib4ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVARBPROC __glewVertexAttrib4ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVARBPROC
__glewVertexAttrib4s	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SPROC __glewVertexAttrib4s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SPROC
__glewVertexAttrib4sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SARBPROC __glewVertexAttrib4sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SARBPROC
__glewVertexAttrib4sNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SNVPROC __glewVertexAttrib4sNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SNVPROC
__glewVertexAttrib4sv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVPROC __glewVertexAttrib4sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVPROC
__glewVertexAttrib4svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVARBPROC __glewVertexAttrib4svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVARBPROC
__glewVertexAttrib4svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVNVPROC __glewVertexAttrib4svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVNVPROC
__glewVertexAttrib4ubNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBNVPROC __glewVertexAttrib4ubNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBNVPROC
__glewVertexAttrib4ubv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVPROC __glewVertexAttrib4ubv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVPROC
__glewVertexAttrib4ubvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVARBPROC __glewVertexAttrib4ubvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVARBPROC
__glewVertexAttrib4ubvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVNVPROC __glewVertexAttrib4ubvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVNVPROC
__glewVertexAttrib4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVPROC __glewVertexAttrib4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVPROC
__glewVertexAttrib4uivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVARBPROC __glewVertexAttrib4uivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVARBPROC
__glewVertexAttrib4usv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVPROC __glewVertexAttrib4usv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVPROC
__glewVertexAttrib4usvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVARBPROC __glewVertexAttrib4usvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVARBPROC
__glewVertexAttribArrayObjectATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBARRAYOBJECTATIPROC __glewVertexAttribArrayObjectATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
__glewVertexAttribBinding	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBBINDINGPROC __glewVertexAttribBinding;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBBINDINGPROC
__glewVertexAttribDivisor	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORPROC __glewVertexAttribDivisor;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORPROC
__glewVertexAttribDivisorANGLE	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORANGLEPROC __glewVertexAttribDivisorANGLE;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORANGLEPROC
__glewVertexAttribDivisorARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORARBPROC __glewVertexAttribDivisorARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORARBPROC
__glewVertexAttribFormat	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATPROC __glewVertexAttribFormat;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATPROC
__glewVertexAttribFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATNVPROC __glewVertexAttribFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATNVPROC
__glewVertexAttribI1i	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IPROC __glewVertexAttribI1i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IPROC
__glewVertexAttribI1iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IEXTPROC __glewVertexAttribI1iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IEXTPROC
__glewVertexAttribI1iv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVPROC __glewVertexAttribI1iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVPROC
__glewVertexAttribI1ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVEXTPROC __glewVertexAttribI1ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVEXTPROC
__glewVertexAttribI1ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIPROC __glewVertexAttribI1ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIPROC
__glewVertexAttribI1uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIEXTPROC __glewVertexAttribI1uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIEXTPROC
__glewVertexAttribI1uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVPROC __glewVertexAttribI1uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVPROC
__glewVertexAttribI1uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVEXTPROC __glewVertexAttribI1uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVEXTPROC
__glewVertexAttribI2i	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IPROC __glewVertexAttribI2i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IPROC
__glewVertexAttribI2iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IEXTPROC __glewVertexAttribI2iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IEXTPROC
__glewVertexAttribI2iv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVPROC __glewVertexAttribI2iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVPROC
__glewVertexAttribI2ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVEXTPROC __glewVertexAttribI2ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVEXTPROC
__glewVertexAttribI2ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIPROC __glewVertexAttribI2ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIPROC
__glewVertexAttribI2uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIEXTPROC __glewVertexAttribI2uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIEXTPROC
__glewVertexAttribI2uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVPROC __glewVertexAttribI2uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVPROC
__glewVertexAttribI2uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVEXTPROC __glewVertexAttribI2uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVEXTPROC
__glewVertexAttribI3i	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IPROC __glewVertexAttribI3i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IPROC
__glewVertexAttribI3iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IEXTPROC __glewVertexAttribI3iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IEXTPROC
__glewVertexAttribI3iv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVPROC __glewVertexAttribI3iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVPROC
__glewVertexAttribI3ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVEXTPROC __glewVertexAttribI3ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVEXTPROC
__glewVertexAttribI3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIPROC __glewVertexAttribI3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIPROC
__glewVertexAttribI3uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIEXTPROC __glewVertexAttribI3uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIEXTPROC
__glewVertexAttribI3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVPROC __glewVertexAttribI3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVPROC
__glewVertexAttribI3uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVEXTPROC __glewVertexAttribI3uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVEXTPROC
__glewVertexAttribI4bv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVPROC __glewVertexAttribI4bv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVPROC
__glewVertexAttribI4bvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVEXTPROC __glewVertexAttribI4bvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVEXTPROC
__glewVertexAttribI4i	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IPROC __glewVertexAttribI4i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IPROC
__glewVertexAttribI4iEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IEXTPROC __glewVertexAttribI4iEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IEXTPROC
__glewVertexAttribI4iv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVPROC __glewVertexAttribI4iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVPROC
__glewVertexAttribI4ivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVEXTPROC __glewVertexAttribI4ivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVEXTPROC
__glewVertexAttribI4sv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVPROC __glewVertexAttribI4sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVPROC
__glewVertexAttribI4svEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVEXTPROC __glewVertexAttribI4svEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVEXTPROC
__glewVertexAttribI4ubv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVPROC __glewVertexAttribI4ubv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVPROC
__glewVertexAttribI4ubvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVEXTPROC __glewVertexAttribI4ubvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVEXTPROC
__glewVertexAttribI4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIPROC __glewVertexAttribI4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIPROC
__glewVertexAttribI4uiEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIEXTPROC __glewVertexAttribI4uiEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIEXTPROC
__glewVertexAttribI4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVPROC __glewVertexAttribI4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVPROC
__glewVertexAttribI4uivEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVEXTPROC __glewVertexAttribI4uivEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVEXTPROC
__glewVertexAttribI4usv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVPROC __glewVertexAttribI4usv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVPROC
__glewVertexAttribI4usvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVEXTPROC __glewVertexAttribI4usvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVEXTPROC
__glewVertexAttribIFormat	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATPROC __glewVertexAttribIFormat;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATPROC
__glewVertexAttribIFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATNVPROC __glewVertexAttribIFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATNVPROC
__glewVertexAttribIPointer	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTERPROC
__glewVertexAttribIPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTEREXTPROC __glewVertexAttribIPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTEREXTPROC
__glewVertexAttribL1d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DPROC __glewVertexAttribL1d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DPROC
__glewVertexAttribL1dEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DEXTPROC __glewVertexAttribL1dEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DEXTPROC
__glewVertexAttribL1dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVPROC __glewVertexAttribL1dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVPROC
__glewVertexAttribL1dvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVEXTPROC __glewVertexAttribL1dvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVEXTPROC
__glewVertexAttribL1i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64NVPROC __glewVertexAttribL1i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64NVPROC
__glewVertexAttribL1i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64VNVPROC __glewVertexAttribL1i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64VNVPROC
__glewVertexAttribL1ui64ARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64ARBPROC __glewVertexAttribL1ui64ARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64ARBPROC
__glewVertexAttribL1ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64NVPROC __glewVertexAttribL1ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64NVPROC
__glewVertexAttribL1ui64vARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VARBPROC __glewVertexAttribL1ui64vARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VARBPROC
__glewVertexAttribL1ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VNVPROC __glewVertexAttribL1ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VNVPROC
__glewVertexAttribL2d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DPROC __glewVertexAttribL2d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DPROC
__glewVertexAttribL2dEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DEXTPROC __glewVertexAttribL2dEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DEXTPROC
__glewVertexAttribL2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVPROC __glewVertexAttribL2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVPROC
__glewVertexAttribL2dvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVEXTPROC __glewVertexAttribL2dvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVEXTPROC
__glewVertexAttribL2i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64NVPROC __glewVertexAttribL2i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64NVPROC
__glewVertexAttribL2i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64VNVPROC __glewVertexAttribL2i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64VNVPROC
__glewVertexAttribL2ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64NVPROC __glewVertexAttribL2ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64NVPROC
__glewVertexAttribL2ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64VNVPROC __glewVertexAttribL2ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64VNVPROC
__glewVertexAttribL3d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DPROC __glewVertexAttribL3d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DPROC
__glewVertexAttribL3dEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DEXTPROC __glewVertexAttribL3dEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DEXTPROC
__glewVertexAttribL3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVPROC __glewVertexAttribL3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVPROC
__glewVertexAttribL3dvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVEXTPROC __glewVertexAttribL3dvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVEXTPROC
__glewVertexAttribL3i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64NVPROC __glewVertexAttribL3i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64NVPROC
__glewVertexAttribL3i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64VNVPROC __glewVertexAttribL3i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64VNVPROC
__glewVertexAttribL3ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64NVPROC __glewVertexAttribL3ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64NVPROC
__glewVertexAttribL3ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64VNVPROC __glewVertexAttribL3ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64VNVPROC
__glewVertexAttribL4d	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DPROC __glewVertexAttribL4d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DPROC
__glewVertexAttribL4dEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DEXTPROC __glewVertexAttribL4dEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DEXTPROC
__glewVertexAttribL4dv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVPROC __glewVertexAttribL4dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVPROC
__glewVertexAttribL4dvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVEXTPROC __glewVertexAttribL4dvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVEXTPROC
__glewVertexAttribL4i64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64NVPROC __glewVertexAttribL4i64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64NVPROC
__glewVertexAttribL4i64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64VNVPROC __glewVertexAttribL4i64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64VNVPROC
__glewVertexAttribL4ui64NV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64NVPROC __glewVertexAttribL4ui64NV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64NVPROC
__glewVertexAttribL4ui64vNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64VNVPROC __glewVertexAttribL4ui64vNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64VNVPROC
__glewVertexAttribLFormat	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATPROC __glewVertexAttribLFormat;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATPROC
__glewVertexAttribLFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATNVPROC __glewVertexAttribLFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATNVPROC
__glewVertexAttribLPointer	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTERPROC __glewVertexAttribLPointer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTERPROC
__glewVertexAttribLPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTEREXTPROC __glewVertexAttribLPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTEREXTPROC
__glewVertexAttribP1ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIPROC __glewVertexAttribP1ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIPROC
__glewVertexAttribP1uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIVPROC __glewVertexAttribP1uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIVPROC
__glewVertexAttribP2ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIPROC __glewVertexAttribP2ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIPROC
__glewVertexAttribP2uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIVPROC __glewVertexAttribP2uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIVPROC
__glewVertexAttribP3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIPROC __glewVertexAttribP3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIPROC
__glewVertexAttribP3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIVPROC __glewVertexAttribP3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIVPROC
__glewVertexAttribP4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIPROC __glewVertexAttribP4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIPROC
__glewVertexAttribP4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIVPROC __glewVertexAttribP4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIVPROC
__glewVertexAttribParameteriAMD	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPARAMETERIAMDPROC __glewVertexAttribParameteriAMD;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPARAMETERIAMDPROC
__glewVertexAttribPointer	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERPROC __glewVertexAttribPointer;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERPROC
__glewVertexAttribPointerARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERARBPROC __glewVertexAttribPointerARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERARBPROC
__glewVertexAttribPointerNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERNVPROC __glewVertexAttribPointerNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERNVPROC
__glewVertexAttribs1dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1DVNVPROC __glewVertexAttribs1dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1DVNVPROC
__glewVertexAttribs1fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1FVNVPROC __glewVertexAttribs1fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1FVNVPROC
__glewVertexAttribs1hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1HVNVPROC __glewVertexAttribs1hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1HVNVPROC
__glewVertexAttribs1svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1SVNVPROC __glewVertexAttribs1svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1SVNVPROC
__glewVertexAttribs2dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2DVNVPROC __glewVertexAttribs2dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2DVNVPROC
__glewVertexAttribs2fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2FVNVPROC __glewVertexAttribs2fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2FVNVPROC
__glewVertexAttribs2hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2HVNVPROC __glewVertexAttribs2hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2HVNVPROC
__glewVertexAttribs2svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2SVNVPROC __glewVertexAttribs2svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2SVNVPROC
__glewVertexAttribs3dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3DVNVPROC __glewVertexAttribs3dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3DVNVPROC
__glewVertexAttribs3fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3FVNVPROC __glewVertexAttribs3fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3FVNVPROC
__glewVertexAttribs3hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3HVNVPROC __glewVertexAttribs3hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3HVNVPROC
__glewVertexAttribs3svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3SVNVPROC __glewVertexAttribs3svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3SVNVPROC
__glewVertexAttribs4dvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4DVNVPROC __glewVertexAttribs4dvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4DVNVPROC
__glewVertexAttribs4fvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4FVNVPROC __glewVertexAttribs4fvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4FVNVPROC
__glewVertexAttribs4hvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4HVNVPROC __glewVertexAttribs4hvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4HVNVPROC
__glewVertexAttribs4svNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4SVNVPROC __glewVertexAttribs4svNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4SVNVPROC
__glewVertexAttribs4ubvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4UBVNVPROC __glewVertexAttribs4ubvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4UBVNVPROC
__glewVertexBindingDivisor	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBINDINGDIVISORPROC __glewVertexBindingDivisor;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBINDINGDIVISORPROC
__glewVertexBlendARB	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBLENDARBPROC __glewVertexBlendARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBLENDARBPROC
__glewVertexBlendEnvfATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVFATIPROC __glewVertexBlendEnvfATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVFATIPROC
__glewVertexBlendEnviATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVIATIPROC __glewVertexBlendEnviATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVIATIPROC
__glewVertexFormatNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXFORMATNVPROC __glewVertexFormatNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXFORMATNVPROC
__glewVertexP2ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP2UIPROC __glewVertexP2ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP2UIPROC
__glewVertexP2uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP2UIVPROC __glewVertexP2uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP2UIVPROC
__glewVertexP3ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP3UIPROC __glewVertexP3ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP3UIPROC
__glewVertexP3uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP3UIVPROC __glewVertexP3uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP3UIVPROC
__glewVertexP4ui	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP4UIPROC __glewVertexP4ui;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP4UIPROC
__glewVertexP4uiv	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP4UIVPROC __glewVertexP4uiv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP4UIVPROC
__glewVertexPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXPOINTEREXTPROC __glewVertexPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXPOINTEREXTPROC
__glewVertexPointerListIBM	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXPOINTERLISTIBMPROC __glewVertexPointerListIBM;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXPOINTERLISTIBMPROC
__glewVertexPointervINTEL	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXPOINTERVINTELPROC __glewVertexPointervINTEL;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXPOINTERVINTELPROC
__glewVertexStream1dATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DATIPROC __glewVertexStream1dATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DATIPROC
__glewVertexStream1dvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DVATIPROC __glewVertexStream1dvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DVATIPROC
__glewVertexStream1fATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FATIPROC __glewVertexStream1fATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FATIPROC
__glewVertexStream1fvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FVATIPROC __glewVertexStream1fvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FVATIPROC
__glewVertexStream1iATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IATIPROC __glewVertexStream1iATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IATIPROC
__glewVertexStream1ivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IVATIPROC __glewVertexStream1ivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IVATIPROC
__glewVertexStream1sATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SATIPROC __glewVertexStream1sATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SATIPROC
__glewVertexStream1svATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SVATIPROC __glewVertexStream1svATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SVATIPROC
__glewVertexStream2dATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DATIPROC __glewVertexStream2dATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DATIPROC
__glewVertexStream2dvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DVATIPROC __glewVertexStream2dvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DVATIPROC
__glewVertexStream2fATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FATIPROC __glewVertexStream2fATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FATIPROC
__glewVertexStream2fvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FVATIPROC __glewVertexStream2fvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FVATIPROC
__glewVertexStream2iATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IATIPROC __glewVertexStream2iATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IATIPROC
__glewVertexStream2ivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IVATIPROC __glewVertexStream2ivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IVATIPROC
__glewVertexStream2sATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SATIPROC __glewVertexStream2sATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SATIPROC
__glewVertexStream2svATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SVATIPROC __glewVertexStream2svATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SVATIPROC
__glewVertexStream3dATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DATIPROC __glewVertexStream3dATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DATIPROC
__glewVertexStream3dvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DVATIPROC __glewVertexStream3dvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DVATIPROC
__glewVertexStream3fATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FATIPROC __glewVertexStream3fATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FATIPROC
__glewVertexStream3fvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FVATIPROC __glewVertexStream3fvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FVATIPROC
__glewVertexStream3iATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IATIPROC __glewVertexStream3iATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IATIPROC
__glewVertexStream3ivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IVATIPROC __glewVertexStream3ivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IVATIPROC
__glewVertexStream3sATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SATIPROC __glewVertexStream3sATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SATIPROC
__glewVertexStream3svATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SVATIPROC __glewVertexStream3svATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SVATIPROC
__glewVertexStream4dATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DATIPROC __glewVertexStream4dATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DATIPROC
__glewVertexStream4dvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DVATIPROC __glewVertexStream4dvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DVATIPROC
__glewVertexStream4fATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FATIPROC __glewVertexStream4fATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FATIPROC
__glewVertexStream4fvATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FVATIPROC __glewVertexStream4fvATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FVATIPROC
__glewVertexStream4iATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IATIPROC __glewVertexStream4iATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IATIPROC
__glewVertexStream4ivATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IVATIPROC __glewVertexStream4ivATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IVATIPROC
__glewVertexStream4sATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SATIPROC __glewVertexStream4sATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SATIPROC
__glewVertexStream4svATI	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SVATIPROC __glewVertexStream4svATI;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SVATIPROC
__glewVertexWeightPointerEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTPOINTEREXTPROC __glewVertexWeightPointerEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTPOINTEREXTPROC
__glewVertexWeightfEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFEXTPROC __glewVertexWeightfEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFEXTPROC
__glewVertexWeightfvEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFVEXTPROC __glewVertexWeightfvEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFVEXTPROC
__glewVertexWeighthNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHNVPROC __glewVertexWeighthNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHNVPROC
__glewVertexWeighthvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHVNVPROC __glewVertexWeighthvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHVNVPROC
__glewVideoCaptureNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURENVPROC __glewVideoCaptureNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURENVPROC
__glewVideoCaptureStreamParameterdvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC __glewVideoCaptureStreamParameterdvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
__glewVideoCaptureStreamParameterfvNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC __glewVideoCaptureStreamParameterfvNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
__glewVideoCaptureStreamParameterivNV	glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC __glewVideoCaptureStreamParameterivNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
__glewViewportArrayv	glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTARRAYVPROC __glewViewportArrayv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTARRAYVPROC
__glewViewportIndexedf	glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFPROC __glewViewportIndexedf;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFPROC
__glewViewportIndexedfv	glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFVPROC __glewViewportIndexedfv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFVPROC
__glewWaitSync	glew.h	/^GLEW_FUN_EXPORT PFNGLWAITSYNCPROC __glewWaitSync;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWAITSYNCPROC
__glewWeightPathsNV	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTPATHSNVPROC __glewWeightPathsNV;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTPATHSNVPROC
__glewWeightPointerARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTPOINTERARBPROC __glewWeightPointerARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTPOINTERARBPROC
__glewWeightbvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTBVARBPROC __glewWeightbvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTBVARBPROC
__glewWeightdvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTDVARBPROC __glewWeightdvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTDVARBPROC
__glewWeightfvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTFVARBPROC __glewWeightfvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTFVARBPROC
__glewWeightivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTIVARBPROC __glewWeightivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTIVARBPROC
__glewWeightsvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTSVARBPROC __glewWeightsvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTSVARBPROC
__glewWeightubvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTUBVARBPROC __glewWeightubvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTUBVARBPROC
__glewWeightuivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTUIVARBPROC __glewWeightuivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTUIVARBPROC
__glewWeightusvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTUSVARBPROC __glewWeightusvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTUSVARBPROC
__glewWindowPos2d	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DPROC __glewWindowPos2d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DPROC
__glewWindowPos2dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DARBPROC
__glewWindowPos2dMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DMESAPROC __glewWindowPos2dMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DMESAPROC
__glewWindowPos2dv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVPROC __glewWindowPos2dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVPROC
__glewWindowPos2dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVARBPROC __glewWindowPos2dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVARBPROC
__glewWindowPos2dvMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVMESAPROC __glewWindowPos2dvMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVMESAPROC
__glewWindowPos2f	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FPROC __glewWindowPos2f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FPROC
__glewWindowPos2fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FARBPROC __glewWindowPos2fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FARBPROC
__glewWindowPos2fMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FMESAPROC __glewWindowPos2fMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FMESAPROC
__glewWindowPos2fv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVPROC __glewWindowPos2fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVPROC
__glewWindowPos2fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVARBPROC __glewWindowPos2fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVARBPROC
__glewWindowPos2fvMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVMESAPROC __glewWindowPos2fvMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVMESAPROC
__glewWindowPos2i	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IPROC __glewWindowPos2i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IPROC
__glewWindowPos2iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IARBPROC __glewWindowPos2iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IARBPROC
__glewWindowPos2iMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IMESAPROC __glewWindowPos2iMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IMESAPROC
__glewWindowPos2iv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVPROC __glewWindowPos2iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVPROC
__glewWindowPos2ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVARBPROC __glewWindowPos2ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVARBPROC
__glewWindowPos2ivMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVMESAPROC __glewWindowPos2ivMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVMESAPROC
__glewWindowPos2s	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SPROC __glewWindowPos2s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SPROC
__glewWindowPos2sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SARBPROC __glewWindowPos2sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SARBPROC
__glewWindowPos2sMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SMESAPROC __glewWindowPos2sMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SMESAPROC
__glewWindowPos2sv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVPROC __glewWindowPos2sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVPROC
__glewWindowPos2svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVARBPROC __glewWindowPos2svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVARBPROC
__glewWindowPos2svMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVMESAPROC __glewWindowPos2svMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVMESAPROC
__glewWindowPos3d	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DPROC __glewWindowPos3d;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DPROC
__glewWindowPos3dARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DARBPROC __glewWindowPos3dARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DARBPROC
__glewWindowPos3dMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DMESAPROC __glewWindowPos3dMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DMESAPROC
__glewWindowPos3dv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVPROC __glewWindowPos3dv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVPROC
__glewWindowPos3dvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVARBPROC __glewWindowPos3dvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVARBPROC
__glewWindowPos3dvMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVMESAPROC __glewWindowPos3dvMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVMESAPROC
__glewWindowPos3f	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FPROC __glewWindowPos3f;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FPROC
__glewWindowPos3fARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FARBPROC __glewWindowPos3fARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FARBPROC
__glewWindowPos3fMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FMESAPROC __glewWindowPos3fMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FMESAPROC
__glewWindowPos3fv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVPROC __glewWindowPos3fv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVPROC
__glewWindowPos3fvARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVARBPROC __glewWindowPos3fvARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVARBPROC
__glewWindowPos3fvMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVMESAPROC __glewWindowPos3fvMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVMESAPROC
__glewWindowPos3i	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IPROC __glewWindowPos3i;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IPROC
__glewWindowPos3iARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IARBPROC __glewWindowPos3iARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IARBPROC
__glewWindowPos3iMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IMESAPROC __glewWindowPos3iMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IMESAPROC
__glewWindowPos3iv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVPROC __glewWindowPos3iv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVPROC
__glewWindowPos3ivARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVARBPROC __glewWindowPos3ivARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVARBPROC
__glewWindowPos3ivMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVMESAPROC __glewWindowPos3ivMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVMESAPROC
__glewWindowPos3s	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SPROC __glewWindowPos3s;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SPROC
__glewWindowPos3sARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SARBPROC __glewWindowPos3sARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SARBPROC
__glewWindowPos3sMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SMESAPROC __glewWindowPos3sMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SMESAPROC
__glewWindowPos3sv	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVPROC __glewWindowPos3sv;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVPROC
__glewWindowPos3svARB	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVARBPROC __glewWindowPos3svARB;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVARBPROC
__glewWindowPos3svMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVMESAPROC __glewWindowPos3svMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVMESAPROC
__glewWindowPos4dMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4DMESAPROC __glewWindowPos4dMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4DMESAPROC
__glewWindowPos4dvMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4DVMESAPROC __glewWindowPos4dvMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4DVMESAPROC
__glewWindowPos4fMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4FMESAPROC __glewWindowPos4fMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4FMESAPROC
__glewWindowPos4fvMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4FVMESAPROC __glewWindowPos4fvMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4FVMESAPROC
__glewWindowPos4iMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4IMESAPROC __glewWindowPos4iMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4IMESAPROC
__glewWindowPos4ivMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4IVMESAPROC __glewWindowPos4ivMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4IVMESAPROC
__glewWindowPos4sMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4SMESAPROC __glewWindowPos4sMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4SMESAPROC
__glewWindowPos4svMESA	glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4SVMESAPROC __glewWindowPos4svMESA;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4SVMESAPROC
__glewWriteMaskEXT	glew.h	/^GLEW_FUN_EXPORT PFNGLWRITEMASKEXTPROC __glewWriteMaskEXT;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEW_FUN_EXPORT PFNGLWRITEMASKEXTPROC
__glew_h__	glew.h	/^#define __glew_h__$/;"	d
__glext_h_	glew.h	/^#define __glext_h_$/;"	d
__gltypes_h_	glew.h	/^#define __gltypes_h_$/;"	d
__has_feature	glm/detail/setup.hpp	/^#	define __has_feature(/;"	d
_apply_op	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void _apply_op(const VecType& that, T op)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
_buffer	glm/detail/_swizzle.hpp	/^		char    _buffer[1];$/;"	m	struct:glm::detail::_swizzle_base0	typeref:typename:char[1]
_epi32_0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_0 = _mm_set_ps1(0);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_1 = _mm_set_ps1(1);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_127	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_127 = _mm_set_ps1(127);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_2 = _mm_set_ps1(2);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_3 = _mm_set_ps1(3);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_4	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_4 = _mm_set_ps1(4);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_5	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_5 = _mm_set_ps1(5);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_6	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_6 = _mm_set_ps1(6);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_7	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_7 = _mm_set_ps1(7);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_8	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_8 = _mm_set_ps1(8);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_9	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_9 = _mm_set_ps1(9);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_epi32_sign_mask	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _epi32_sign_mask = _mm_castsi128_ps(_mm_set1_epi32(static_cast/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_m128_deg_ps	glm/detail/intrinsic_matrix.inl	/^static const __m128 GLM_VAR_USED _m128_deg_ps = _mm_set_ps1(180.f \/ 3.1415926535897932384626433/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_m128_rad_ps	glm/detail/intrinsic_matrix.inl	/^static const __m128 GLM_VAR_USED _m128_rad_ps = _mm_set_ps1(3.141592653589793238462643383279f \//;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_mm_bit_interleave_si128	glm/detail/intrinsic_integer.inl	/^	inline __m128i _mm_bit_interleave_si128(__m128i x)$/;"	f	namespace:glm::detail	typeref:typename:__m128i
_mm_bit_interleave_si128	glm/detail/intrinsic_integer.inl	/^	inline __m128i _mm_bit_interleave_si128(__m128i x, __m128i y)$/;"	f	namespace:glm::detail	typeref:typename:__m128i
_mm_castpd_ps	glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	f	typeref:typename:__m128
_mm_castps_pd	glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	f	typeref:typename:__m128d
_mm_castps_si128	glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	f	typeref:typename:__m128i
_mm_castsi128_ps	glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	f	typeref:typename:__m128
_mm_cvtss_f32	glm/detail/setup.hpp	/^		inline float _mm_cvtss_f32(__m128 A) { return A.m128_f32[0]; }$/;"	f	typeref:typename:float
_ps_0_0_0_1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0_0_0_1 = _mm_set_ps(0.0f, 0.0f, 0.0f, 1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_0_0_1_0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0_0_1_0 = _mm_set_ps(0.0f, 0.0f, 1.0f, 0.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_0_1_0_0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0_1_0_0 = _mm_set_ps(0.0f, 1.0f, 0.0f, 0.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_0p5	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_0p5 = _mm_set_ps1(0.5f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_1 = _mm_set_ps1(1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_127	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_127 = _mm_set_ps1(127.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_1_0_0_0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_1_0_0_0 = _mm_set_ps(1.0f, 0.0f, 0.0f, 0.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_1_3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_1_3 = _mm_set_ps1(0.33333333333333333333333333333333f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_2 = _mm_set_ps1(2.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_255	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_255 = _mm_set_ps1(255.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_2_pi	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_2_pi = _mm_set_ps1(0.63661977236758134307553505349006f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_2pow23	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_2pow23 = _mm_set_ps1(8388608.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_3 = _mm_set_ps1(3.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_4_pi	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_4_pi = _mm_set_ps1(1.2732395447351626861510701069801f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s0 = _mm_set_ps1(0.12797564625607904396e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s1 = _mm_set_ps1(0.21972168858277355914e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s2 = _mm_set_ps1(0.68193064729268275701e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_s3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_s3 = _mm_set_ps1(0.28205206687035841409e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t0 = _mm_set_ps1(-0.91646118527267623468e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t1 = _mm_set_ps1(-0.13956945682312098640e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t2 = _mm_set_ps1(-0.94393926122725531747e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_atan_t3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_atan_t3 = _mm_set_ps1(0.12888383034157279340e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_hi	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_hi = _mm_set_ps1(127.4999961853f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_lo	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_lo = _mm_set_ps1(-127.4999961853f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_p0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_p0 = _mm_set_ps1(2.30933477057345225087e-2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_p1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_p1 = _mm_set_ps1(2.02020656693165307700e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_p2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_p2 = _mm_set_ps1(1.51390680115615096133e3f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_q0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_q0 = _mm_set_ps1(2.33184211722314911771e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp2_q1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp2_q1 = _mm_set_ps1(4.36821166879210612817e3f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_c1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_c1 = _mm_set_ps1(6.93145751953125e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_c2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_c2 = _mm_set_ps1(1.42860682030941723212e-6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_hi	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_hi = _mm_set_ps1(88.3762626647949f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_lo	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_lo = _mm_set_ps1(-88.3762626647949f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_p0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_p0 = _mm_set_ps1(1.26177193074810590878e-4f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_p1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_p1 = _mm_set_ps1(3.02994407707441961300e-2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q0 = _mm_set_ps1(3.00198505138664455042e-6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q1 = _mm_set_ps1(2.52448340349684104192e-3f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q2 = _mm_set_ps1(2.27265548208155028766e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_q3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_q3 = _mm_set_ps1(2.00000000000000000009e0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_exp_rln2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_exp_rln2 = _mm_set_ps1(1.4426950408889634073599f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log2_c0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log2_c0 = _mm_set_ps1(1.44269504088896340735992f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_c0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_c0 = _mm_set_ps1(0.693147180559945f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_p0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_p0 = _mm_set_ps1(-7.89580278884799154124e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_p1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_p1 = _mm_set_ps1(1.63866645699558079767e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_p2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_p2 = _mm_set_ps1(-6.41409952958715622951e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_q0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_q0 = _mm_set_ps1(-3.56722798256324312549e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_q1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_q1 = _mm_set_ps1(3.12093766372244180303e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_log_q2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_log_q2 = _mm_set_ps1(-7.69691943550460008604e2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_m1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_m1 = _mm_set_ps1(-1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi = _mm_set_ps1(3.1415926535897932384626433832795f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi2 = _mm_set_ps1(6.283185307179586476925286766560f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi_2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi_2 = _mm_set_ps1(1.5707963267948966192313216916398f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_pi_4	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_pi_4 = _mm_set_ps1(0.78539816339744830961566084581988f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p0 = _mm_set_ps1(0.15707963267948963959e1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p1 = _mm_set_ps1(-0.64596409750621907082e0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p2 = _mm_set_ps1(0.7969262624561800806e-1f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_sincos_p3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_sincos_p3 = _mm_set_ps1(-0.468175413106023168e-2f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_p0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_p0 = _mm_set_ps1(-1.79565251976484877988e7f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_p1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_p1 = _mm_set_ps1(1.15351664838587416140e6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_p2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_p2 = _mm_set_ps1(-1.30936939181383777646e4f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_poleval	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_poleval = _mm_set_ps1(3.68935e19f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q0	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q0 = _mm_set_ps1(-5.38695755929454629881e7f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q1	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q1 = _mm_set_ps1(2.50083801823357915839e7f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q2	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q2 = _mm_set_ps1(-1.32089234440210967447e6f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_ps_tan_q3	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED _ps_tan_q3 = _mm_set_ps1(1.36812963470692954678e4f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
_swizzle	glm/detail/_swizzle.hpp	/^	struct _swizzle : public _swizzle_base2<ValueType, P, VecType, N, E0, E1, E2, E3, (E0==E1||E0==/;"	s	namespace:glm::detail
_swizzle_base0	glm/detail/_swizzle.hpp	/^	struct _swizzle_base0$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1 : public _swizzle_base0<T, N>$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<T, P, V,E0,E1,-1,-2,2> : public _swizzle_base0<T, 2>$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<T, P, V,E0,E1,E2,-1,3> : public _swizzle_base0<T, 3>$/;"	s	namespace:glm::detail
_swizzle_base1	glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<T, P, V,E0,E1,E2,E3,4> : public _swizzle_base0<T, 4>$/;"	s	namespace:glm::detail
_swizzle_base2	glm/detail/_swizzle.hpp	/^	struct _swizzle_base2 : public _swizzle_base1<ValueType, P, VecType,E0,E1,E2,E3,N>$/;"	s	namespace:glm::detail
_swizzle_base2	glm/detail/_swizzle.hpp	/^	struct _swizzle_base2<ValueType, P, VecType,N,E0,E1,E2,E3,1> : public _swizzle_base1<ValueType,/;"	s	namespace:glm::detail
a	bmptotexture.cpp	/^			unsigned char r, g, b, a;$/;"	m	struct:BmpToTexture::rgba32	typeref:typename:unsigned char	file:
a	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
a	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon0c24fa7f080a	typeref:typename:T
abs	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genFIType abs(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genFIType
abs	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER int32 abs(int32 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
abs	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> abs(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
abs	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD abs$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
abs4Mask	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED abs4Mask = _mm_set_ps1(absMask.f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
absMask	glm/detail/intrinsic_common.inl	/^	static const ieee754_QNAN absMask;$/;"	v	namespace:glm::detail	typeref:typename:const ieee754_QNAN	file:
acos	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acos(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acosh	glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType acosh(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acosh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acosh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acot(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acot(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acoth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acoth(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acoth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acoth(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acsc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acsc(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
acsch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsch(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> acsch(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
affineInverse	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> affineInverse(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
affineInverse	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> affineInverse(tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
all	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER bool all(vecType<bool, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
all	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool all$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
ambient	glm/detail/dummy.cpp	/^	glm::vec4 ambient; \/\/ Acli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
ambient	glm/detail/dummy.cpp	/^	glm::vec4 ambient; \/\/ Acm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
angle	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T angle(tquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T angle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER genType angle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
angleAxis	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> angleAxis(T const & angle, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
angleAxisSIMD	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD angleAxisSIMD$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
any	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER bool any(vecType<bool, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
any	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool any$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areCollinear	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areCollinear$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthogonal	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthogonal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthonormal	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthonormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
asec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asec(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asec(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
asech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asech(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asech(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
asin	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asin(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
asinh	glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType asinh(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asinh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> asinh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER tvec2<U, P> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<U,P>
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vecType<T, P> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
associatedMax	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vecType<U, P> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<U,P>
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER tvec2<U, P> associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<U,P>
associatedMin	glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vecType<U, P> associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<U,P>
atan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType atan(genType const & y, genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> atan(vecType<T, P> const & a, vecType<T, P> const & b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
atan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> atan(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
atan2	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T atan2(T x, T y){return atan(x, y);}				/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
atan2	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> atan2(const tvec2<T, P>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
atan2	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> atan2(const tvec3<T, P>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
atan2	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> atan2(const tvec4<T, P>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
atanh	glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType atanh(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atanh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> atanh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
axis	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> axis(tquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
axisAngle	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER void axisAngle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
axisAngleMatrix	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> axisAngleMatrix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
b	bmptotexture.cpp	/^			unsigned char r, g, b, a;$/;"	m	struct:BmpToTexture::rgba32	typeref:typename:unsigned char	file:
b	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0308	typeref:typename:T
b	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon0c12e1fe070a	typeref:typename:T
b	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
b	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon0c24fa7f070a	typeref:typename:T
ballRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> ballRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
base	glm/detail/type_gentype.inl	/^base<vT, cT, rT, pT>::base$/;"	f	class:glm::detail::base
base	glm/detail/type_gentype.inl	/^base<vT, cT, rT, pT>::base()$/;"	f	class:glm::detail::base
base_type	glm/detail/_swizzle.hpp	/^		typedef _swizzle_base2<ValueType, P, VecType,N,E0,E1,E2,E3,(E0==E1||E0==E2||E0==E3||E1==E2||E1/;"	t	struct:glm::detail::_swizzle
basic_format_saver	glm/gtx/io.hpp	/^		class basic_format_saver$/;"	c	namespace:glm::io
basic_format_saver	glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER basic_format_saver<CTy,CTr>::basic_format_saver(std::basic_/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
basic_state_saver	glm/gtx/io.hpp	/^		class basic_state_saver {$/;"	c	namespace:glm::io
basic_state_saver	glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER basic_state_saver<CTy,CTr>::basic_state_saver(std::basic_io/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
begin	glm/gtx/range.hpp	/^	const typename genType::value_type * begin(genType const & v){$/;"	f	namespace:glm	typeref:typename:const typename genType::value_type *
begin	glm/gtx/range.hpp	/^	typename genType::value_type * begin(genType& v){$/;"	f	namespace:glm	typeref:typename:genType::value_type *
bfOffBytes	bmptotexture.cpp	/^	int bfOffBytes;		\/\/ # bytes to get to the start of the per-pixel data$/;"	m	struct:bmfh	typeref:typename:int	file:
bfReserved1	bmptotexture.cpp	/^	short bfReserved1;$/;"	m	struct:bmfh	typeref:typename:short	file:
bfReserved2	bmptotexture.cpp	/^	short bfReserved2;$/;"	m	struct:bmfh	typeref:typename:short	file:
bfSize	bmptotexture.cpp	/^	int bfSize;		\/\/ size of this file in bytes$/;"	m	struct:bmfh	typeref:typename:int	file:
bfType	bmptotexture.cpp	/^	short bfType;		\/\/ BMP_MAGIC_NUMBER = "BM"$/;"	m	struct:bmfh	typeref:typename:short	file:
biBitCount	bmptotexture.cpp	/^	short biBitCount;	\/\/ #bits\/pixel, should be 1, 4, 8, 16, 24, 32$/;"	m	struct:bmih	typeref:typename:short	file:
biClrImportant	bmptotexture.cpp	/^	int biClrImportant;$/;"	m	struct:bmih	typeref:typename:int	file:
biClrUsed	bmptotexture.cpp	/^	int biClrUsed;		\/\/ # colors in the palette$/;"	m	struct:bmih	typeref:typename:int	file:
biCompression	bmptotexture.cpp	/^	int biCompression;	\/\/ BI_RGB, BI_RLE4, BI_RLE8$/;"	m	struct:bmih	typeref:typename:int	file:
biHeight	bmptotexture.cpp	/^	int biHeight;		\/\/ image height$/;"	m	struct:bmih	typeref:typename:int	file:
biPlanes	bmptotexture.cpp	/^	short biPlanes;		\/\/ #color planes, should be 1$/;"	m	struct:bmih	typeref:typename:short	file:
biSize	bmptotexture.cpp	/^	int biSize;		\/\/ info header size, should be 40$/;"	m	struct:bmih	typeref:typename:int	file:
biSizeImage	bmptotexture.cpp	/^	int biSizeImage;$/;"	m	struct:bmih	typeref:typename:int	file:
biWidth	bmptotexture.cpp	/^	int biWidth;		\/\/ image width$/;"	m	struct:bmih	typeref:typename:int	file:
biXPixelsPerMeter	bmptotexture.cpp	/^	int biXPixelsPerMeter;$/;"	m	struct:bmih	typeref:typename:int	file:
biYPixelsPerMeter	bmptotexture.cpp	/^	int biYPixelsPerMeter;$/;"	m	struct:bmih	typeref:typename:int	file:
bitCount	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int bitCount(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitCount	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> bitCount(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
bitfieldExtract	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldExtract(genIUType Value, int Offset, int Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldExtract	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldExtract(vecType<T, P> const & Value, int Offset, int B/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldFillOne	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillOne(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillOne	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldFillOne(vecType<T, P> const & Value, int FirstBit, int/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldFillZero	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillZero(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillZero	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldFillZero(vecType<T, P> const & Value, int FirstBit, in/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldInsert	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldInsert(genIUType const & Base, genIUType const & Insert, i/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldInsert	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldInsert(vecType<T, P> const & Base, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 bitfieldInterleave(glm::uint8 x, glm::uint8 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint16 x, glm::uint16 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z, glm/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z, /;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y, glm::uint32 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int16 bitfieldInterleave(int8 x, int8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int16
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int16 x, int16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z, int8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z, int16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y, int32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint16 bitfieldInterleave(uint8 x, uint8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint16 x, uint16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z, uint8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z, uint16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y, uint32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldReverse	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genType bitfieldReverse(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bitfieldReverse	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldReverse(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldRotateLeft	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateLeft(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateLeft	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldRotateLeft(vecType<T, P> const & In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bitfieldRotateRight	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateRight(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateRight	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> bitfieldRotateRight(vecType<T, P> const & In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
bmfh	bmptotexture.cpp	/^struct bmfh$/;"	s	file:
bmih	bmptotexture.cpp	/^struct bmih$/;"	s	file:
bool1	glm/gtx/compatibility.hpp	/^	typedef bool						bool1;			\/\/!< \\brief boolean type with 1 component. (From GLM_GTX_compatib/;"	t	namespace:glm	typeref:typename:bool
bool1x1	glm/gtx/compatibility.hpp	/^	typedef bool						bool1x1;		\/\/!< \\brief boolean matrix with 1 x 1 component. (From GLM_GTX_c/;"	t	namespace:glm	typeref:typename:bool
bool2	glm/gtx/compatibility.hpp	/^	typedef tvec2<bool, highp>			bool2;			\/\/!< \\brief boolean type with 2 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec2<bool,highp>
bool2x2	glm/gtx/compatibility.hpp	/^	typedef tmat2x2<bool, highp>		bool2x2;		\/\/!< \\brief boolean matrix with 2 x 2 components. (F/;"	t	namespace:glm	typeref:typename:tmat2x2<bool,highp>
bool2x3	glm/gtx/compatibility.hpp	/^	typedef tmat2x3<bool, highp>		bool2x3;		\/\/!< \\brief boolean matrix with 2 x 3 components. (F/;"	t	namespace:glm	typeref:typename:tmat2x3<bool,highp>
bool2x4	glm/gtx/compatibility.hpp	/^	typedef tmat2x4<bool, highp>		bool2x4;		\/\/!< \\brief boolean matrix with 2 x 4 components. (F/;"	t	namespace:glm	typeref:typename:tmat2x4<bool,highp>
bool3	glm/gtx/compatibility.hpp	/^	typedef tvec3<bool, highp>			bool3;			\/\/!< \\brief boolean type with 3 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec3<bool,highp>
bool3x2	glm/gtx/compatibility.hpp	/^	typedef tmat3x2<bool, highp>		bool3x2;		\/\/!< \\brief boolean matrix with 3 x 2 components. (F/;"	t	namespace:glm	typeref:typename:tmat3x2<bool,highp>
bool3x3	glm/gtx/compatibility.hpp	/^	typedef tmat3x3<bool, highp>		bool3x3;		\/\/!< \\brief boolean matrix with 3 x 3 components. (F/;"	t	namespace:glm	typeref:typename:tmat3x3<bool,highp>
bool3x4	glm/gtx/compatibility.hpp	/^	typedef tmat3x4<bool, highp>		bool3x4;		\/\/!< \\brief boolean matrix with 3 x 4 components. (F/;"	t	namespace:glm	typeref:typename:tmat3x4<bool,highp>
bool4	glm/gtx/compatibility.hpp	/^	typedef tvec4<bool, highp>			bool4;			\/\/!< \\brief boolean type with 4 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec4<bool,highp>
bool4x2	glm/gtx/compatibility.hpp	/^	typedef tmat4x2<bool, highp>		bool4x2;		\/\/!< \\brief boolean matrix with 4 x 2 components. (F/;"	t	namespace:glm	typeref:typename:tmat4x2<bool,highp>
bool4x3	glm/gtx/compatibility.hpp	/^	typedef tmat4x3<bool, highp>		bool4x3;		\/\/!< \\brief boolean matrix with 4 x 3 components. (F/;"	t	namespace:glm	typeref:typename:tmat4x3<bool,highp>
bool4x4	glm/gtx/compatibility.hpp	/^	typedef tmat4x4<bool, highp>		bool4x4;		\/\/!< \\brief boolean matrix with 4 x 4 components. (F/;"	t	namespace:glm	typeref:typename:tmat4x4<bool,highp>
bool_type	glm/detail/type_gentype.hpp	/^		typedef TYPE<bool> bool_type;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<bool>
bool_type	glm/detail/type_vec1.hpp	/^		typedef tvec1<bool, P> bool_type;$/;"	t	struct:glm::tvec1	typeref:typename:tvec1<bool,P>
bool_type	glm/detail/type_vec2.hpp	/^		typedef tvec2<bool, P> bool_type;$/;"	t	struct:glm::tvec2	typeref:typename:tvec2<bool,P>
bool_type	glm/detail/type_vec3.hpp	/^		typedef tvec3<bool, P> bool_type;$/;"	t	struct:glm::tvec3	typeref:typename:tvec3<bool,P>
bool_type	glm/detail/type_vec4.hpp	/^		typedef tvec4<bool, P> bool_type;$/;"	t	struct:glm::tvec4	typeref:typename:tvec4<bool,P>
bool_type	glm/gtx/simd_quat.hpp	/^		typedef tquat<bool, defaultp> bool_type;$/;"	t	namespace:glm::detail	typeref:typename:tquat<bool,defaultp>
bool_type	glm/gtx/simd_vec4.hpp	/^		typedef tvec4<bool, highp> bool_type;$/;"	t	namespace:glm::detail	typeref:typename:tvec4<bool,highp>
bss_	glm/gtx/io.hpp	/^			basic_state_saver<CTy> const bss_;$/;"	m	class:glm::io::basic_format_saver	typeref:typename:basic_state_saver<CTy> const
bvec1	glm/gtc/vec1.hpp	/^	typedef highp_bvec1				bvec1;$/;"	t	namespace:glm	typeref:typename:highp_bvec1
bvec1	glm/gtc/vec1.hpp	/^	typedef lowp_bvec1				bvec1;$/;"	t	namespace:glm	typeref:typename:lowp_bvec1
bvec1	glm/gtc/vec1.hpp	/^	typedef mediump_bvec1			bvec1;$/;"	t	namespace:glm	typeref:typename:mediump_bvec1
bvec2	glm/detail/type_vec.hpp	/^	typedef highp_bvec2			bvec2;$/;"	t	namespace:glm	typeref:typename:highp_bvec2
bvec2	glm/detail/type_vec.hpp	/^	typedef lowp_bvec2			bvec2;$/;"	t	namespace:glm	typeref:typename:lowp_bvec2
bvec2	glm/detail/type_vec.hpp	/^	typedef mediump_bvec2		bvec2;$/;"	t	namespace:glm	typeref:typename:mediump_bvec2
bvec3	glm/detail/type_vec.hpp	/^	typedef highp_bvec3			bvec3;$/;"	t	namespace:glm	typeref:typename:highp_bvec3
bvec3	glm/detail/type_vec.hpp	/^	typedef lowp_bvec3			bvec3;$/;"	t	namespace:glm	typeref:typename:lowp_bvec3
bvec3	glm/detail/type_vec.hpp	/^	typedef mediump_bvec3		bvec3;$/;"	t	namespace:glm	typeref:typename:mediump_bvec3
bvec4	glm/detail/type_vec.hpp	/^	typedef highp_bvec4			bvec4;$/;"	t	namespace:glm	typeref:typename:highp_bvec4
bvec4	glm/detail/type_vec.hpp	/^	typedef lowp_bvec4			bvec4;$/;"	t	namespace:glm	typeref:typename:lowp_bvec4
bvec4	glm/detail/type_vec.hpp	/^	typedef mediump_bvec4		bvec4;$/;"	t	namespace:glm	typeref:typename:mediump_bvec4
byte	glm/gtx/raw_data.hpp	/^	typedef detail::uint8		byte;$/;"	t	namespace:glm	typeref:typename:detail::uint8
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<R, P> call(R (*Func) (T x), tvec1<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<R,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, tvec1</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<R, P> call(R (*Func) (T x), tvec2<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec2<R,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, tvec2</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<R, P> call(R (*Func) (T x), tvec3<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec3<R,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, tvec3</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<R, P> call(R (*Func) (T x), tvec4<T, P> const & v)$/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER tvec4<R,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
call	glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, tvec4</;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static T call(T const & x, T const & y, U const & a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static T call(T const & x, T const & y, bool const & a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static genFIType call(genFIType x)$/;"	f	struct:glm::detail::compute_abs	typeref:typename:GLM_FUNC_QUALIFIER genFIType	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & a, genType const & b)$/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_sign	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, vecType<T, P> const & y,/;"	f	struct:glm::detail::compute_mix_scalar	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, vecType<T, P> const & y,/;"	f	struct:glm::detail::compute_mix_vector	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & vec)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, lowp> call(vecType<float, lowp> const & x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,lowp>	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec1<T, P> const & a, tvec1<T, P> const & b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec2<T, P> const & x, tvec2<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec3<T, P> const & x, tvec3<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(tvec4<T, P> const & x, tvec4<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static vecType<int, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, T Shift)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x, T)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<int, P> call(vecType<T, P> const & vec)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(tmat2x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(tmat3x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(tmat4x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat2x2<T, P> call(tmat2x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat2x3<T, P> call(tmat3x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat2x4<T, P> call(tmat4x2<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat3x2<T, P> call(tmat2x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat3x3<T, P> call(tmat3x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat3x4<T, P> call(tmat4x3<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat4x2<T, P> call(tmat2x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat4x3<T, P> call(tmat3x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>	file:
call	glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static tmat4x4<T, P> call(tmat4x4<T, P> const & m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>	file:
call	glm/gtc/integer.inl	/^			GLM_FUNC_QUALIFIER static tvec4<int, P> call(tvec4<int, P> const & vec)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER tvec4<int,P>	file:
call	glm/gtc/integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & a, genType const & b)$/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/gtc/integer.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & vec)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/gtc/quaternion.inl	/^		static GLM_FUNC_QUALIFIER T call(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec1<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec1<uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec2<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec2<uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec3<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec3<uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static tvec4<uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER tvec4<uint8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<double, highp> call(vecType<double, highp> const & Min, vecT/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<double,highp>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<double, lowp> call(vecType<double, lowp> const & Min, vecTyp/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<double,lowp>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<double, mediump> call(vecType<double, mediump> const & Min, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<double,mediump>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, highp> call(vecType<float, highp> const & Min, vecTyp/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,highp>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, lowp> call(vecType<float, lowp> const & Min, vecType</;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,lowp>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<float, mediump> call(vecType<float, mediump> const & Min, ve/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,mediump>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int16, P> call(vecType<int16, P> const & Min, vecType<int16,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int16,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int32, P> call(vecType<int32, P> const & Min, vecType<int32,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int32,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int64, P> call(vecType<int64, P> const & Min, vecType<int64,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int64,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<int8, P> call(vecType<int8, P> const & Min, vecType<int8, P>/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<int8,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<long double, highp> call(vecType<long double, highp> const &/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<long double,highp>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<long double, lowp> call(vecType<long double, lowp> const & M/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<long double,lowp>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<long double, mediump> call(vecType<long double, mediump> con/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<long double,mediump>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint16, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint16,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint16, P> call(vecType<uint16, P> const & Min, vecType<uint/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint16,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint32, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint32,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint32, P> call(vecType<uint32, P> const & Min, vecType<uint/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint32,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint64, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint64,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint64, P> call(vecType<uint64, P> const & Min, vecType<uint/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint64,P>	file:
call	glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vecType<uint8, P> call(vecType<uint8, P> const & Min, vecType<uint8,/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint8,P>	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_ceilMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_floorMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_roundMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T Shift)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & v, T)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static vecType<T, P> call(vecType<T, P> const & x)$/;"	f	struct:glm::detail::compute_ceilPowerOfTwo	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat2x2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat2x3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat2x4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat3x2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat3x3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat3x4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat4x2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat4x3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tmat4x4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec1<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec1<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec2<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec2<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec3<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec3<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec4<T, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tvec4<bool, P> const & x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(tvec2<T, P> const & v0, tvec2<T, P> const & v1, T const & /;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(tvec3<T, P> const & v0, tvec3<T, P> const & v1, T const & /;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(tvec4<T, P> const & v0, tvec4<T, P> const & v1, T const & /;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static tvec2<bool, P> call(tvec2<T, P> const & v, T const & epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER tvec2<bool,P>	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static tvec3<bool, P> call(tvec3<T, P> const & v, T const & epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER tvec3<bool,P>	file:
call	glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static tvec4<bool, P> call(tvec4<T, P> const & v, T const & epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>	file:
catmullRom	glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType catmullRom$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceil	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> ceil(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
ceil	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD ceil$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
ceilMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> ceilMultiple(vecType<T, P> const & Source, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
ceilPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> ceilPowerOfTwo(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
char_type	glm/gtx/io.hpp	/^			typedef CTy char_type;$/;"	t	class:glm::io::format_punct	typeref:typename:CTy
char_type	glm/gtx/io.hpp	/^			typedef typename state_type::char_type char_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:state_type::char_type
circularRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> circularRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
cl_context	glew.h	/^typedef struct _cl_context *cl_context;$/;"	t	typeref:struct:_cl_context *
cl_event	glew.h	/^typedef struct _cl_event *cl_event;$/;"	t	typeref:struct:_cl_event *
clamp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType clamp(genType x, genType minVal, genType maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
clamp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> clamp(vecType<T, P> const & x, T minVal, T maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
clamp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> clamp(vecType<T, P> const & x, vecType<T, P> const & minVal, v/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
clamp	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
clamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
clamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
clamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
clamp	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> clamp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
closestPointOnLine	glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
closestPointOnLine	glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
colMajor2	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> colMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
colMajor3	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> colMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
colMajor4	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> colMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
col_size	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::size_type base<vT, cT, rT, pT>::col_size()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::size_type
col_type	glm/detail/type_mat2x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tvec2<T,P>
col_type	glm/detail/type_mat2x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tvec3<T,P>
col_type	glm/detail/type_mat2x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tvec4<T,P>
col_type	glm/detail/type_mat3x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tvec2<T,P>
col_type	glm/detail/type_mat3x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tvec3<T,P>
col_type	glm/detail/type_mat3x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tvec4<T,P>
col_type	glm/detail/type_mat4x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tvec2<T,P>
col_type	glm/detail/type_mat4x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tvec3<T,P>
col_type	glm/detail/type_mat4x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tvec4<T,P>
col_type	glm/gtx/simd_mat4.hpp	/^		typedef fvec4SIMD col_type;$/;"	t	namespace:glm::detail	typeref:typename:fvec4SIMD
column	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
column	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::col_type column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::col_type
column_major	glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
combine	glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> combine($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
comp	glm/gtx/simd_vec4.hpp	/^	enum comp$/;"	g	namespace:glm
compAdd	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compAdd(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMax	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMax(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMin	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMin(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMul	glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMul(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
component_count	glm/detail/setup.hpp	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR component_count_t component_count(genType const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR component_count_t
component_count_t	glm/detail/setup.hpp	/^		typedef size_t component_count_t;$/;"	t	namespace:glm::detail	typeref:typename:size_t
computeNormal	glm/detail/dummy.cpp	/^glm::vec3 computeNormal$/;"	f	typeref:typename:glm::vec3
compute_abs	glm/detail/func_common.inl	/^	struct compute_abs$/;"	s	namespace:glm::detail	file:
compute_abs	glm/detail/func_common.inl	/^	struct compute_abs<genFIType, false>$/;"	s	namespace:glm::detail	file:
compute_abs	glm/detail/func_common.inl	/^	struct compute_abs<genFIType, true>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear<T, P, tvec2>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear<T, P, tvec3>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear<T, P, tvec4>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	glm/gtx/vector_query.inl	/^	struct compute_areCollinear{};$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep<true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep<true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	glm/gtc/round.inl	/^	struct compute_ceilMultiple{};$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	glm/gtc/round.inl	/^	struct compute_ceilPowerOfTwo$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	glm/gtc/round.inl	/^	struct compute_ceilPowerOfTwo<T, P, vecType, false>$/;"	s	namespace:glm::detail	file:
compute_ceilShift	glm/gtc/round.inl	/^	struct compute_ceilShift$/;"	s	namespace:glm::detail	file:
compute_ceilShift	glm/gtc/round.inl	/^	struct compute_ceilShift<T, P, vecType, true>$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant<tmat2x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant<tmat3x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant<tmat4x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_determinant	glm/detail/func_matrix.inl	/^	struct compute_determinant{};$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<tvec1, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<tvec2, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<tvec3, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot<tvec4, T, P>$/;"	s	namespace:glm::detail	file:
compute_dot	glm/detail/func_geometric.inl	/^	struct compute_dot{};$/;"	s	namespace:glm::detail	file:
compute_dot	glm/gtc/quaternion.inl	/^	struct compute_dot<tquat, T, P>$/;"	s	namespace:glm::detail	file:
compute_findLSB	glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 32>$/;"	s	namespace:glm::detail	file:
compute_findLSB	glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 64>$/;"	s	namespace:glm::detail	file:
compute_findLSB	glm/detail/func_integer.inl	/^	struct compute_findLSB$/;"	s	namespace:glm::detail	file:
compute_findMSB_32	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_32(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_64	glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_64(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_step_vec	glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec$/;"	s	namespace:glm::detail	file:
compute_findMSB_step_vec	glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec<T, P, vecType, false>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<T, P, vecType, 32>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<T, P, vecType, 64>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	glm/detail/func_integer.inl	/^	struct compute_findMSB_vec$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	glm/gtc/round.inl	/^	struct compute_floorMultiple{};$/;"	s	namespace:glm::detail	file:
compute_inverse	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> compute_inverse(tmat2x2<T, P> const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
compute_inverse	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> compute_inverse(tmat3x3<T, P> const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
compute_inverse	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> compute_inverse(tmat4x4<T, P> const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
compute_inversesqrt	glm/detail/func_exponential.inl	/^	struct compute_inversesqrt$/;"	s	namespace:glm::detail	file:
compute_inversesqrt	glm/detail/func_exponential.inl	/^	struct compute_inversesqrt<vecType, float, lowp>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull<T, P, tvec2>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull<T, P, tvec3>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull<T, P, tvec4>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	glm/gtx/vector_query.inl	/^	struct compute_isCompNull{};$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<double, highp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<double, lowp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<double, mediump, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<float, highp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<float, lowp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<float, mediump, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<int16, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<int32, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<int64, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<int8, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<long double, highp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<long double, lowp, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<long double, mediump, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<uint16, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<uint32, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<uint64, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_linearRand	glm/gtc/random.inl	/^	struct compute_linearRand<uint8, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_log2	glm/detail/func_exponential.inl	/^	struct compute_log2$/;"	s	namespace:glm::detail	file:
compute_log2	glm/gtc/integer.inl	/^		struct compute_log2<int, P, tvec4, false>$/;"	s	namespace:glm::detail	file:
compute_log2	glm/gtc/integer.inl	/^	struct compute_log2<T, P, vecType, false>$/;"	s	namespace:glm::detail	file:
compute_mix	glm/detail/func_common.inl	/^	struct compute_mix$/;"	s	namespace:glm::detail	file:
compute_mix	glm/detail/func_common.inl	/^	struct compute_mix<T, bool>$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	glm/detail/func_common.inl	/^	struct compute_mix_scalar$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	glm/detail/func_common.inl	/^	struct compute_mix_scalar<T, bool, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_mix_vector	glm/detail/func_common.inl	/^	struct compute_mix_vector$/;"	s	namespace:glm::detail	file:
compute_mix_vector	glm/detail/func_common.inl	/^	struct compute_mix_vector<T, bool, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_mod	glm/detail/func_common.inl	/^	struct compute_mod$/;"	s	namespace:glm::detail	file:
compute_mod	glm/gtc/integer.inl	/^	struct compute_mod<T, P, vecType, genType, false>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<uint16, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<uint32, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<uint64, P, vecType>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec1>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec2>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec3>$/;"	s	namespace:glm::detail	file:
compute_rand	glm/gtc/random.inl	/^	struct compute_rand<uint8, P, tvec4>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	glm/gtc/round.inl	/^	struct compute_roundMultiple{};$/;"	s	namespace:glm::detail	file:
compute_sign	glm/detail/func_common.inl	/^	struct compute_sign$/;"	s	namespace:glm::detail	file:
compute_sign	glm/detail/func_common.inl	/^	struct compute_sign<T, P, vecType, false, false>$/;"	s	namespace:glm::detail	file:
compute_sign	glm/detail/func_common.inl	/^	struct compute_sign<T, P, vecType, false, true>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat2x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat2x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat2x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat3x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat3x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat3x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat4x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat4x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tmat4x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec1, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec1, bool, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec2, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec2, bool, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec3, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec3, bool, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec4, T, P>$/;"	s	namespace:glm::detail	file:
compute_to_string	glm/gtx/string_cast.inl	/^	struct compute_to_string<tvec4, bool, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat2x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat2x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat2x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat3x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat3x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat3x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat4x2, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat4x3, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose<tmat4x4, T, P>$/;"	s	namespace:glm::detail	file:
compute_transpose	glm/detail/func_matrix.inl	/^	struct compute_transpose{};$/;"	s	namespace:glm::detail	file:
conjugate	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> conjugate(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
conjugate	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD conjugate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
const_pointer	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const_pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const *
const_pointer_const	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const const_pointer_const;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const * const
const_reference	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & const_reference;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const &
constantAttenuation	glm/detail/dummy.cpp	/^	float constantAttenuation; \/\/ K0$/;"	m	struct:light	typeref:typename:float	file:
cos	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cos(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
cos_52s	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T cos_52s(T x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
cos_52s	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cos_52s(vecType<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
cosh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cosh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
cot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType cot(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cot	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> cot(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
coth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType coth(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
coth	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> coth(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
countof	glm/detail/setup.hpp	/^		constexpr std::size_t countof(T const (&)[N])$/;"	f	namespace:glm	typeref:typename:std::size_t
cross	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> cross(tvec3<T, P> const & x, tvec3<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
cross	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> cross(tquat<T, P> const & q1, tquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
cross	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> cross$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
cross	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD cross$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
csc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csc(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csc	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> csc(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
csch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csch(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csch	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> csch(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
ctor	glm/detail/setup.hpp	/^	enum ctor{uninitialize};$/;"	g	namespace:glm
ctor	glm/detail/type_gentype.hpp	/^		enum ctor{null};$/;"	g	struct:glm::detail::genType
cubic	glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType cubic$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
data	glm/detail/type_vec4.hpp	/^				typename detail::simd<T>::type data;$/;"	m	union:glm::tvec4::__anon0c24fa7f010a	typeref:typename:detail::simd<T>::type
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::i10i10i10i2	typeref:struct:glm::detail::i10i10i10i2::__anon1165e74f0208	file:
data	glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u10u10u10u2	typeref:struct:glm::detail::u10u10u10u2::__anon1165e74f0108	file:
ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef highp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:highp_ddualquat
ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef lowp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:lowp_ddualquat
ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef mediump_ddualquat		ddualquat;$/;"	t	namespace:glm	typeref:typename:mediump_ddualquat
decompose	glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER bool decompose(tmat4x4<T, P> const & ModelMatrix, tvec3<T, P> & Scale, tquat/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
defaultp	glm/detail/precision.hpp	/^		defaultp = highp$/;"	e	enum:glm::precision
degrees	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType degrees(genType radians)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
degrees	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> degrees(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
delim_left	glm/gtx/io.hpp	/^			char_type  delim_left;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delim_right	glm/gtx/io.hpp	/^			char_type  delim_right;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delimeter	glm/gtx/io.hpp	/^		struct delimeter$/;"	s	namespace:glm::io
delimeter	glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER delimeter<CTy>::delimeter(CTy a, CTy b, CTy c)$/;"	f	class:glm::io::delimeter	typeref:typename:GLM_FUNC_QUALIFIER
detail	glm/detail/_noise.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/_swizzle.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	glm/detail/_swizzle.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/_vectorize.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/func_common.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_exponential.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_geometric.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_matrix.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/func_matrix.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/func_noise.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/intrinsic_common.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/intrinsic_common.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	glm/detail/intrinsic_exponential.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/intrinsic_geometric.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/intrinsic_geometric.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	glm/detail/intrinsic_integer.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/intrinsic_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/intrinsic_matrix.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/intrinsic_matrix.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	glm/detail/intrinsic_trigonometric.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/intrinsic_vector_relational.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/setup.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_float.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_gentype.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_gentype.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	glm/detail/type_half.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_half.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_int.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_mat.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_mat2x2.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_mat3x3.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_mat4x4.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_vec4.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/detail/type_vec4_avx.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_vec4_avx2.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/detail/type_vec4_sse2.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/bitfield.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/packing.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/quaternion.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/random.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/round.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtc/ulp.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/fast_trigonometry.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/range.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/gtx/simd_mat4.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/gtx/simd_mat4.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	glm/gtx/simd_quat.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/gtx/simd_quat.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	glm/gtx/simd_vec4.hpp	/^namespace detail$/;"	n	namespace:glm
detail	glm/gtx/simd_vec4.inl	/^namespace detail{$/;"	n	namespace:glm	file:
detail	glm/gtx/string_cast.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	glm/gtx/vector_query.inl	/^namespace detail$/;"	n	namespace:glm	file:
determinant	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER T determinant(matType<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
determinant	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER float determinant(detail::fmat4x4SIMD const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
diagonal2x2	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> diagonal2x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
diagonal2x3	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> diagonal2x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
diagonal2x4	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> diagonal2x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
diagonal3x2	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> diagonal3x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
diagonal3x3	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> diagonal3x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
diagonal3x4	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> diagonal3x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
diagonal4x2	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> diagonal4x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
diagonal4x3	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> diagonal4x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
diagonal4x4	glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> diagonal4x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
diffuse	glm/detail/dummy.cpp	/^	glm::vec4 diffuse; \/\/ Dcli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
diffuse	glm/detail/dummy.cpp	/^	glm::vec4 diffuse; \/\/ Dcm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
diskRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> diskRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
distance	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T distance(vecType<T, P> const & p0, vecType<T, P> const & p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType distance(genType const & p0, genType const & p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
distance	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float distance$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
distance2	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T distance2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance4	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD distance4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
dmat2	glm/detail/type_mat.hpp	/^	typedef highp_dmat2x2		dmat2;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x2
dmat2x2	glm/detail/type_mat.hpp	/^	typedef highp_dmat2x2		dmat2x2;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x2
dmat2x2	glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x2		dmat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_dmat2x2
dmat2x2	glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x2		dmat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_dmat2x2
dmat2x3	glm/detail/type_mat.hpp	/^	typedef highp_dmat2x3		dmat2x3;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x3
dmat2x3	glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x3		dmat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_dmat2x3
dmat2x3	glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x3		dmat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_dmat2x3
dmat2x4	glm/detail/type_mat.hpp	/^	typedef highp_dmat2x4		dmat2x4;$/;"	t	namespace:glm	typeref:typename:highp_dmat2x4
dmat2x4	glm/detail/type_mat.hpp	/^	typedef lowp_dmat2x4		dmat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_dmat2x4
dmat2x4	glm/detail/type_mat.hpp	/^	typedef mediump_dmat2x4		dmat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_dmat2x4
dmat3	glm/detail/type_mat.hpp	/^	typedef highp_dmat3x3		dmat3;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x3
dmat3x2	glm/detail/type_mat.hpp	/^	typedef highp_dmat3x2		dmat3x2;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x2
dmat3x2	glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x2		dmat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_dmat3x2
dmat3x2	glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x2		dmat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_dmat3x2
dmat3x3	glm/detail/type_mat.hpp	/^	typedef highp_dmat3x3		dmat3x3;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x3
dmat3x3	glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x3		dmat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_dmat3x3
dmat3x3	glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x3		dmat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_dmat3x3
dmat3x4	glm/detail/type_mat.hpp	/^	typedef highp_dmat3x4		dmat3x4;$/;"	t	namespace:glm	typeref:typename:highp_dmat3x4
dmat3x4	glm/detail/type_mat.hpp	/^	typedef lowp_dmat3x4		dmat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_dmat3x4
dmat3x4	glm/detail/type_mat.hpp	/^	typedef mediump_dmat3x4		dmat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_dmat3x4
dmat4	glm/detail/type_mat.hpp	/^	typedef highp_dmat4x4		dmat4;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x4
dmat4x2	glm/detail/type_mat.hpp	/^	typedef highp_dmat4x2		dmat4x2;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x2
dmat4x2	glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x2		dmat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_dmat4x2
dmat4x2	glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x2		dmat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_dmat4x2
dmat4x3	glm/detail/type_mat.hpp	/^	typedef highp_dmat4x3		dmat4x3;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x3
dmat4x3	glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x3		dmat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_dmat4x3
dmat4x3	glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x3		dmat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_dmat4x3
dmat4x4	glm/detail/type_mat.hpp	/^	typedef highp_dmat4x4		dmat4x4;$/;"	t	namespace:glm	typeref:typename:highp_dmat4x4
dmat4x4	glm/detail/type_mat.hpp	/^	typedef lowp_dmat4x4		dmat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_dmat4x4
dmat4x4	glm/detail/type_mat.hpp	/^	typedef mediump_dmat4x4		dmat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_dmat4x4
dot	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T dot(T x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dot	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T dot(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dot	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER float dot$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
dot	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float dot$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
dot4	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD dot4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
double1	glm/gtx/compatibility.hpp	/^	typedef double						double1;		\/\/!< \\brief double-precision floating-point vector with 1 comp/;"	t	namespace:glm	typeref:typename:double
double1x1	glm/gtx/compatibility.hpp	/^	typedef double						double1x1;		\/\/!< \\brief double-precision floating-point matrix with 1 co/;"	t	namespace:glm	typeref:typename:double
double2	glm/gtx/compatibility.hpp	/^	typedef tvec2<double, highp>		double2;		\/\/!< \\brief double-precision floating-point vector w/;"	t	namespace:glm	typeref:typename:tvec2<double,highp>
double2x2	glm/gtx/compatibility.hpp	/^	typedef tmat2x2<double, highp>		double2x2;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat2x2<double,highp>
double2x3	glm/gtx/compatibility.hpp	/^	typedef tmat2x3<double, highp>		double2x3;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat2x3<double,highp>
double2x4	glm/gtx/compatibility.hpp	/^	typedef tmat2x4<double, highp>		double2x4;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat2x4<double,highp>
double3	glm/gtx/compatibility.hpp	/^	typedef tvec3<double, highp>		double3;		\/\/!< \\brief double-precision floating-point vector w/;"	t	namespace:glm	typeref:typename:tvec3<double,highp>
double3x2	glm/gtx/compatibility.hpp	/^	typedef tmat3x2<double, highp>		double3x2;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat3x2<double,highp>
double3x3	glm/gtx/compatibility.hpp	/^	typedef tmat3x3<double, highp>		double3x3;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat3x3<double,highp>
double3x4	glm/gtx/compatibility.hpp	/^	typedef tmat3x4<double, highp>		double3x4;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat3x4<double,highp>
double4	glm/gtx/compatibility.hpp	/^	typedef tvec4<double, highp>		double4;		\/\/!< \\brief double-precision floating-point vector w/;"	t	namespace:glm	typeref:typename:tvec4<double,highp>
double4x2	glm/gtx/compatibility.hpp	/^	typedef tmat4x2<double, highp>		double4x2;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat4x2<double,highp>
double4x3	glm/gtx/compatibility.hpp	/^	typedef tmat4x3<double, highp>		double4x3;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat4x3<double,highp>
double4x4	glm/gtx/compatibility.hpp	/^	typedef tmat4x4<double, highp>		double4x4;		\/\/!< \\brief double-precision floating-point matr/;"	t	namespace:glm	typeref:typename:tmat4x4<double,highp>
dquat	glm/fwd.hpp	/^	typedef highp_dquat			dquat;$/;"	t	namespace:glm	typeref:typename:highp_dquat
dquat	glm/fwd.hpp	/^	typedef lowp_dquat			dquat;$/;"	t	namespace:glm	typeref:typename:lowp_dquat
dquat	glm/fwd.hpp	/^	typedef mediump_dquat		dquat;$/;"	t	namespace:glm	typeref:typename:mediump_dquat
dual	glm/gtx/dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:glm::tquat<T,P>
dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		dualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
dualquat_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> dualquat_cast(tmat2x4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
dualquat_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> dualquat_cast(tmat3x4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
dvec1	glm/gtc/vec1.hpp	/^	typedef highp_dvec1				dvec1;$/;"	t	namespace:glm	typeref:typename:highp_dvec1
dvec1	glm/gtc/vec1.hpp	/^	typedef lowp_dvec1				dvec1;$/;"	t	namespace:glm	typeref:typename:lowp_dvec1
dvec1	glm/gtc/vec1.hpp	/^	typedef mediump_dvec1			dvec1;$/;"	t	namespace:glm	typeref:typename:mediump_dvec1
dvec2	glm/detail/type_vec.hpp	/^	typedef highp_dvec2			dvec2;$/;"	t	namespace:glm	typeref:typename:highp_dvec2
dvec2	glm/detail/type_vec.hpp	/^	typedef lowp_dvec2			dvec2;$/;"	t	namespace:glm	typeref:typename:lowp_dvec2
dvec2	glm/detail/type_vec.hpp	/^	typedef mediump_dvec2		dvec2;$/;"	t	namespace:glm	typeref:typename:mediump_dvec2
dvec3	glm/detail/type_vec.hpp	/^	typedef highp_dvec3			dvec3;$/;"	t	namespace:glm	typeref:typename:highp_dvec3
dvec3	glm/detail/type_vec.hpp	/^	typedef lowp_dvec3			dvec3;$/;"	t	namespace:glm	typeref:typename:lowp_dvec3
dvec3	glm/detail/type_vec.hpp	/^	typedef mediump_dvec3		dvec3;$/;"	t	namespace:glm	typeref:typename:mediump_dvec3
dvec4	glm/detail/type_vec.hpp	/^	typedef highp_dvec4			dvec4;$/;"	t	namespace:glm	typeref:typename:highp_dvec4
dvec4	glm/detail/type_vec.hpp	/^	typedef lowp_dvec4			dvec4;$/;"	t	namespace:glm	typeref:typename:lowp_dvec4
dvec4	glm/detail/type_vec.hpp	/^	typedef mediump_dvec4		dvec4;$/;"	t	namespace:glm	typeref:typename:mediump_dvec4
dword	glm/gtx/raw_data.hpp	/^	typedef detail::uint32		dword;$/;"	t	namespace:glm	typeref:typename:detail::uint32
e	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType e()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
elem	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER const value_type&   elem   (size_t i) const { return (reinterpret_cast<cons/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER const value_type &
elem	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER value_type&         elem   (size_t i)       { return (reinterpret_cast<valu/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER value_type &
emission	glm/detail/dummy.cpp	/^	glm::vec4 emission; \/\/ Ecm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
end	glm/gtx/range.hpp	/^	const typename genType::value_type * end(genType const & v){$/;"	f	namespace:glm	typeref:typename:const typename genType::value_type *
end	glm/gtx/range.hpp	/^	typename genType::value_type * end(genType& v){$/;"	f	namespace:glm	typeref:typename:genType::value_type *
epsilon	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType epsilon()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
epsilonEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
epsilonEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
epsilonNotEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonNotEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonNotEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> epsilonNotEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
epsilonNotEqual	glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> epsilonNotEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
equal	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> equal(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
equal	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> equal(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
equal	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool equal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
euclidean	glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> euclidean$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
euler	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType euler()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
eulerAngleX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleXY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleXZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleYX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleYXZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleYXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleYZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleZ	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleZX	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngleZY	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> eulerAngleZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
eulerAngles	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> eulerAngles(tquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
exp	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> exp(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
exp	glm/detail/intrinsic_common.inl	/^			const unsigned int mantissa:23, exp:8, sign:1;$/;"	m	struct:glm::detail::ieee754_QNAN::i	typeref:typename:const unsigned int:8	file:
exp	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> exp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
exp2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType exp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exp2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> exp2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER genType extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
extend	glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
extension	glslprogram.cpp	/^	char *extension;$/;"	m	struct:GLshadertype	typeref:typename:char *	file:
extractMatrixRotation	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> extractMatrixRotation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
extractRealComponent	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER T extractRealComponent$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
f	glm/detail/intrinsic_common.inl	/^		const float f;$/;"	m	union:glm::detail::ieee754_QNAN	typeref:typename:const float	file:
f	glm/detail/type_half.inl	/^		float f;$/;"	m	union:glm::detail::uif32	typeref:typename:float	file:
f32	glm/fwd.hpp	/^	typedef highp_float32_t f32;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
f32	glm/fwd.hpp	/^	typedef lowp_f32 f32;$/;"	t	namespace:glm	typeref:typename:lowp_f32
f32	glm/fwd.hpp	/^	typedef mediump_float32 f32;$/;"	t	namespace:glm	typeref:typename:mediump_float32
f32	glm/gtc/type_precision.hpp	/^	typedef float32 f32;$/;"	t	namespace:glm	typeref:typename:float32
f32mat1	glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm::gtx	typeref:typename:f32
f32mat1x1	glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1x1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm::gtx	typeref:typename:f32
f32mat2	glm/fwd.hpp	/^	typedef f32mat2x2				f32mat2;$/;"	t	namespace:glm	typeref:typename:f32mat2x2
f32mat2	glm/fwd.hpp	/^	typedef lowp_f32mat2			f32mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2
f32mat2	glm/fwd.hpp	/^	typedef mediump_f32mat2			f32mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2
f32mat2	glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
f32mat2x2	glm/fwd.hpp	/^	typedef highp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
f32mat2x2	glm/fwd.hpp	/^	typedef lowp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
f32mat2x2	glm/fwd.hpp	/^	typedef mediump_f32mat2x2		f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
f32mat2x2	glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
f32mat2x3	glm/fwd.hpp	/^	typedef highp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x3
f32mat2x3	glm/fwd.hpp	/^	typedef lowp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x3
f32mat2x3	glm/fwd.hpp	/^	typedef mediump_f32mat2x3		f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x3
f32mat2x3	glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,defaultp>
f32mat2x4	glm/fwd.hpp	/^	typedef highp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x4
f32mat2x4	glm/fwd.hpp	/^	typedef lowp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x4
f32mat2x4	glm/fwd.hpp	/^	typedef mediump_f32mat2x4		f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x4
f32mat2x4	glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,defaultp>
f32mat3	glm/fwd.hpp	/^	typedef f32mat3x3				f32mat3;$/;"	t	namespace:glm	typeref:typename:f32mat3x3
f32mat3	glm/fwd.hpp	/^	typedef lowp_f32mat3			f32mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3
f32mat3	glm/fwd.hpp	/^	typedef mediump_f32mat3			f32mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3
f32mat3	glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
f32mat3x2	glm/fwd.hpp	/^	typedef highp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x2
f32mat3x2	glm/fwd.hpp	/^	typedef lowp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x2
f32mat3x2	glm/fwd.hpp	/^	typedef mediump_f32mat3x2		f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x2
f32mat3x2	glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,defaultp>
f32mat3x3	glm/fwd.hpp	/^	typedef highp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
f32mat3x3	glm/fwd.hpp	/^	typedef lowp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
f32mat3x3	glm/fwd.hpp	/^	typedef mediump_f32mat3x3		f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
f32mat3x3	glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
f32mat3x4	glm/fwd.hpp	/^	typedef highp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x4
f32mat3x4	glm/fwd.hpp	/^	typedef lowp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x4
f32mat3x4	glm/fwd.hpp	/^	typedef mediump_f32mat3x4		f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x4
f32mat3x4	glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,defaultp>
f32mat4	glm/fwd.hpp	/^	typedef f32mat4x4				f32mat4;$/;"	t	namespace:glm	typeref:typename:f32mat4x4
f32mat4	glm/fwd.hpp	/^	typedef lowp_f32mat4			f32mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4
f32mat4	glm/fwd.hpp	/^	typedef mediump_f32mat4			f32mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4
f32mat4	glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
f32mat4x2	glm/fwd.hpp	/^	typedef highp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x2
f32mat4x2	glm/fwd.hpp	/^	typedef lowp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x2
f32mat4x2	glm/fwd.hpp	/^	typedef mediump_f32mat4x2		f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x2
f32mat4x2	glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,defaultp>
f32mat4x3	glm/fwd.hpp	/^	typedef highp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x3
f32mat4x3	glm/fwd.hpp	/^	typedef lowp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x3
f32mat4x3	glm/fwd.hpp	/^	typedef mediump_f32mat4x3		f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x3
f32mat4x3	glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,defaultp>
f32mat4x4	glm/fwd.hpp	/^	typedef highp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
f32mat4x4	glm/fwd.hpp	/^	typedef lowp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
f32mat4x4	glm/fwd.hpp	/^	typedef mediump_f32mat4x4		f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
f32mat4x4	glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
f32quat	glm/fwd.hpp	/^	typedef highp_f32quat			f32quat;$/;"	t	namespace:glm	typeref:typename:highp_f32quat
f32quat	glm/fwd.hpp	/^	typedef lowp_f32quat			f32quat;$/;"	t	namespace:glm	typeref:typename:lowp_f32quat
f32quat	glm/fwd.hpp	/^	typedef mediump_f32quat			f32quat;$/;"	t	namespace:glm	typeref:typename:mediump_f32quat
f32quat	glm/gtc/type_precision.hpp	/^	typedef tquat<f32, defaultp> f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,defaultp>
f32vec1	glm/fwd.hpp	/^	typedef highp_f32vec1			f32vec1;$/;"	t	namespace:glm	typeref:typename:highp_f32vec1
f32vec1	glm/fwd.hpp	/^	typedef lowp_f32vec1			f32vec1;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec1
f32vec1	glm/fwd.hpp	/^	typedef mediump_f32vec1			f32vec1;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec1
f32vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<f32, defaultp> f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,defaultp>
f32vec1	glm/gtx/number_precision.hpp	/^	typedef f32			f32vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_/;"	t	namespace:glm::gtx	typeref:typename:f32
f32vec2	glm/fwd.hpp	/^	typedef highp_f32vec2			f32vec2;$/;"	t	namespace:glm	typeref:typename:highp_f32vec2
f32vec2	glm/fwd.hpp	/^	typedef lowp_f32vec2			f32vec2;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec2
f32vec2	glm/fwd.hpp	/^	typedef mediump_f32vec2			f32vec2;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec2
f32vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<f32, defaultp> f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,defaultp>
f32vec3	glm/fwd.hpp	/^	typedef highp_f32vec3			f32vec3;$/;"	t	namespace:glm	typeref:typename:highp_f32vec3
f32vec3	glm/fwd.hpp	/^	typedef lowp_f32vec3			f32vec3;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec3
f32vec3	glm/fwd.hpp	/^	typedef mediump_f32vec3			f32vec3;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec3
f32vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<f32, defaultp> f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,defaultp>
f32vec4	glm/fwd.hpp	/^	typedef highp_f32vec4			f32vec4;$/;"	t	namespace:glm	typeref:typename:highp_f32vec4
f32vec4	glm/fwd.hpp	/^	typedef lowp_f32vec4			f32vec4;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec4
f32vec4	glm/fwd.hpp	/^	typedef mediump_f32vec4			f32vec4;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec4
f32vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<f32, defaultp> f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,defaultp>
f64	glm/fwd.hpp	/^	typedef highp_float64_t f64;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
f64	glm/fwd.hpp	/^	typedef lowp_f64 f64;$/;"	t	namespace:glm	typeref:typename:lowp_f64
f64	glm/fwd.hpp	/^	typedef mediump_float64 f64;$/;"	t	namespace:glm	typeref:typename:mediump_float64
f64	glm/gtc/type_precision.hpp	/^	typedef float64 f64;$/;"	t	namespace:glm	typeref:typename:float64
f64mat1	glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm::gtx	typeref:typename:f64
f64mat1x1	glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1x1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm::gtx	typeref:typename:f64
f64mat2	glm/fwd.hpp	/^	typedef f64mat2x2				f64mat2;$/;"	t	namespace:glm	typeref:typename:f64mat2x2
f64mat2	glm/fwd.hpp	/^	typedef lowp_f64mat2			f64mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2
f64mat2	glm/fwd.hpp	/^	typedef mediump_f64mat2			f64mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2
f64mat2	glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,defaultp>
f64mat2x2	glm/fwd.hpp	/^	typedef highp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x2
f64mat2x2	glm/fwd.hpp	/^	typedef lowp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x2
f64mat2x2	glm/fwd.hpp	/^	typedef mediump_f64mat2x2		f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x2
f64mat2x2	glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,defaultp>
f64mat2x3	glm/fwd.hpp	/^	typedef highp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x3
f64mat2x3	glm/fwd.hpp	/^	typedef lowp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x3
f64mat2x3	glm/fwd.hpp	/^	typedef mediump_f64mat2x3		f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x3
f64mat2x3	glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f64, defaultp> f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,defaultp>
f64mat2x4	glm/fwd.hpp	/^	typedef highp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x4
f64mat2x4	glm/fwd.hpp	/^	typedef lowp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x4
f64mat2x4	glm/fwd.hpp	/^	typedef mediump_f64mat2x4		f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x4
f64mat2x4	glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f64, defaultp> f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,defaultp>
f64mat3	glm/fwd.hpp	/^	typedef f64mat3x3				f64mat3;$/;"	t	namespace:glm	typeref:typename:f64mat3x3
f64mat3	glm/fwd.hpp	/^	typedef lowp_f64mat3			f64mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3
f64mat3	glm/fwd.hpp	/^	typedef mediump_f64mat3			f64mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3
f64mat3	glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,defaultp>
f64mat3x2	glm/fwd.hpp	/^	typedef highp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x2
f64mat3x2	glm/fwd.hpp	/^	typedef lowp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x2
f64mat3x2	glm/fwd.hpp	/^	typedef mediump_f64mat3x2		f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x2
f64mat3x2	glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f64, defaultp> f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,defaultp>
f64mat3x3	glm/fwd.hpp	/^	typedef highp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x3
f64mat3x3	glm/fwd.hpp	/^	typedef lowp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x3
f64mat3x3	glm/fwd.hpp	/^	typedef mediump_f64mat3x3		f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x3
f64mat3x3	glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,defaultp>
f64mat3x4	glm/fwd.hpp	/^	typedef highp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x4
f64mat3x4	glm/fwd.hpp	/^	typedef lowp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x4
f64mat3x4	glm/fwd.hpp	/^	typedef mediump_f64mat3x4		f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x4
f64mat3x4	glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f64, defaultp> f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,defaultp>
f64mat4	glm/fwd.hpp	/^	typedef f64mat4x4				f64mat4;$/;"	t	namespace:glm	typeref:typename:f64mat4x4
f64mat4	glm/fwd.hpp	/^	typedef lowp_f64mat4			f64mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4
f64mat4	glm/fwd.hpp	/^	typedef mediump_f64mat4			f64mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4
f64mat4	glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,defaultp>
f64mat4x2	glm/fwd.hpp	/^	typedef highp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x2
f64mat4x2	glm/fwd.hpp	/^	typedef lowp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x2
f64mat4x2	glm/fwd.hpp	/^	typedef mediump_f64mat4x2		f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x2
f64mat4x2	glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f64, defaultp> f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,defaultp>
f64mat4x3	glm/fwd.hpp	/^	typedef highp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x3
f64mat4x3	glm/fwd.hpp	/^	typedef lowp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x3
f64mat4x3	glm/fwd.hpp	/^	typedef mediump_f64mat4x3		f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x3
f64mat4x3	glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f64, defaultp> f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,defaultp>
f64mat4x4	glm/fwd.hpp	/^	typedef highp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x4
f64mat4x4	glm/fwd.hpp	/^	typedef lowp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x4
f64mat4x4	glm/fwd.hpp	/^	typedef mediump_f64mat4x4		f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x4
f64mat4x4	glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,defaultp>
f64quat	glm/fwd.hpp	/^	typedef highp_f64quat			f64quat;$/;"	t	namespace:glm	typeref:typename:highp_f64quat
f64quat	glm/fwd.hpp	/^	typedef lowp_f64quat			f64quat;$/;"	t	namespace:glm	typeref:typename:lowp_f64quat
f64quat	glm/fwd.hpp	/^	typedef mediump_f64quat			f64quat;$/;"	t	namespace:glm	typeref:typename:mediump_f64quat
f64quat	glm/gtc/type_precision.hpp	/^	typedef tquat<f64, defaultp> f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,defaultp>
f64vec1	glm/fwd.hpp	/^	typedef highp_f64vec1			f64vec1;$/;"	t	namespace:glm	typeref:typename:highp_f64vec1
f64vec1	glm/fwd.hpp	/^	typedef lowp_f64vec1			f64vec1;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec1
f64vec1	glm/fwd.hpp	/^	typedef mediump_f64vec1			f64vec1;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec1
f64vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<f64, defaultp> f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,defaultp>
f64vec1	glm/gtx/number_precision.hpp	/^	typedef f64			f64vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_/;"	t	namespace:glm::gtx	typeref:typename:f64
f64vec2	glm/fwd.hpp	/^	typedef highp_f64vec2			f64vec2;$/;"	t	namespace:glm	typeref:typename:highp_f64vec2
f64vec2	glm/fwd.hpp	/^	typedef lowp_f64vec2			f64vec2;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec2
f64vec2	glm/fwd.hpp	/^	typedef mediump_f64vec2			f64vec2;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec2
f64vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<f64, defaultp> f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,defaultp>
f64vec3	glm/fwd.hpp	/^	typedef highp_f64vec3			f64vec3;$/;"	t	namespace:glm	typeref:typename:highp_f64vec3
f64vec3	glm/fwd.hpp	/^	typedef lowp_f64vec3			f64vec3;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec3
f64vec3	glm/fwd.hpp	/^	typedef mediump_f64vec3			f64vec3;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec3
f64vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<f64, defaultp> f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,defaultp>
f64vec4	glm/fwd.hpp	/^	typedef highp_f64vec4			f64vec4;$/;"	t	namespace:glm	typeref:typename:highp_f64vec4
f64vec4	glm/fwd.hpp	/^	typedef lowp_f64vec4			f64vec4;$/;"	t	namespace:glm	typeref:typename:lowp_f64vec4
f64vec4	glm/fwd.hpp	/^	typedef mediump_f64vec4			f64vec4;$/;"	t	namespace:glm	typeref:typename:mediump_f64vec4
f64vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<f64, defaultp> f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,defaultp>
face	loadobjfile.cpp	/^struct face$/;"	s	file:
faceforward	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType faceforward(genType const & N, genType const & I, genType const & Nr/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
faceforward	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> faceforward(vecType<T, P> const & N, vecType<T, P> const & I, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
faceforward	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD faceforward$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER genType factorial(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
factorial	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
fade	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> fade(tvec2<T, P> const & t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
fade	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> fade(tvec3<T, P> const & t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
fade	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> fade(tvec4<T, P> const & t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
fast	glm/detail/type_gentype.hpp	/^		fast,$/;"	e	enum:glm::profile
fastAcos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAcos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAcos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAcos(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastAsin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAsin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAsin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAsin(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T y, T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAtan(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastAtan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastAtan(vecType<T, P> const & y, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastCos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastCos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastCos	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastCos(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastDistance	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastDistance(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastDistance	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastDistance(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastExp(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastExp	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastExp(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastExp2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastExp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastExp2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastInverseSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastInverseSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastInverseSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastInverseSqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastInversesqrt	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastInversesqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastLength	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastLength(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastLength	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastLength(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLength	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float fastLength$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
fastLength4	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastLength4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastLog	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastLog(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastLog2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog2	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastLog2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastMix	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> fastMix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
fastMix	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD fastMix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
fastNormalize	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastNormalize(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastNormalize	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastNormalize(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastNormalize	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastNormalize$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastNormalizeDot	glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T fastNormalizeDot(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastPow(T x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastPow(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastPow(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastPow	glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastPow(vecType<T, P> const & x, vecType<int, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastSin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastSin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastSin	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastSin(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastSin	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER __m128 fastSin(__m128 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER __m128
fastSlerp	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD fastSlerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
fastSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastSqrt	glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastSqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fastSqrt	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fastSqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fastTan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastTan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastTan	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fastTan(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		fdualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
fill_	glm/gtx/io.hpp	/^			char_type       fill_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:char_type
findLSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findLSB(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findLSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> findLSB(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
findMSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findMSB(genIUType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findMSB	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> findMSB(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
flags_	glm/gtx/io.hpp	/^			flags_type      flags_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:flags_type
flags_type	glm/gtx/io.hpp	/^			typedef ::std::ios_base::fmtflags      flags_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::ios_base::fmtflags
float1	glm/gtx/compatibility.hpp	/^	typedef float						float1;			\/\/!< \\brief single-precision floating-point vector with 1 compo/;"	t	namespace:glm	typeref:typename:float
float1x1	glm/gtx/compatibility.hpp	/^	typedef float						float1x1;		\/\/!< \\brief single-precision floating-point matrix with 1 comp/;"	t	namespace:glm	typeref:typename:float
float2	glm/gtx/compatibility.hpp	/^	typedef tvec2<float, highp>		float2;			\/\/!< \\brief single-precision floating-point vector wi/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
float2half	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 float2half(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
float2packed10	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed10(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2packed11	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed11(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2x2	glm/gtx/compatibility.hpp	/^	typedef tmat2x2<float, highp>		float2x2;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
float2x3	glm/gtx/compatibility.hpp	/^	typedef tmat2x3<float, highp>		float2x3;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat2x3<float,highp>
float2x4	glm/gtx/compatibility.hpp	/^	typedef tmat2x4<float, highp>		float2x4;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat2x4<float,highp>
float3	glm/gtx/compatibility.hpp	/^	typedef tvec3<float, highp>		float3;			\/\/!< \\brief single-precision floating-point vector wi/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
float32	glm/detail/type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm	typeref:typename:float
float32	glm/detail/type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm::detail	typeref:typename:float
float32	glm/fwd.hpp	/^	typedef highp_float32 float32;$/;"	t	namespace:glm	typeref:typename:highp_float32
float32	glm/fwd.hpp	/^	typedef lowp_float32 float32;$/;"	t	namespace:glm	typeref:typename:lowp_float32
float32	glm/fwd.hpp	/^	typedef mediump_float32 float32;$/;"	t	namespace:glm	typeref:typename:mediump_float32
float32	glm/gtc/type_precision.hpp	/^	typedef detail::float32 float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
float32_t	glm/fwd.hpp	/^	typedef highp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
float32_t	glm/fwd.hpp	/^	typedef lowp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:lowp_float32_t
float32_t	glm/fwd.hpp	/^	typedef mediump_float32 float32_t;$/;"	t	namespace:glm	typeref:typename:mediump_float32
float32_t	glm/gtc/type_precision.hpp	/^	typedef detail::float32 float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
float3x2	glm/gtx/compatibility.hpp	/^	typedef tmat3x2<float, highp>		float3x2;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat3x2<float,highp>
float3x3	glm/gtx/compatibility.hpp	/^	typedef tmat3x3<float, highp>		float3x3;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
float3x4	glm/gtx/compatibility.hpp	/^	typedef tmat3x4<float, highp>		float3x4;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat3x4<float,highp>
float4	glm/gtx/compatibility.hpp	/^	typedef tvec4<float, highp>		float4;			\/\/!< \\brief single-precision floating-point vector wi/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
float4x2	glm/gtx/compatibility.hpp	/^	typedef tmat4x2<float, highp>		float4x2;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat4x2<float,highp>
float4x3	glm/gtx/compatibility.hpp	/^	typedef tmat4x3<float, highp>		float4x3;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat4x3<float,highp>
float4x4	glm/gtx/compatibility.hpp	/^	typedef tmat4x4<float, highp>		float4x4;		\/\/!< \\brief single-precision floating-point matrix/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
float64	glm/detail/type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm	typeref:typename:double
float64	glm/detail/type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm::detail	typeref:typename:double
float64	glm/fwd.hpp	/^	typedef highp_float64 float64;$/;"	t	namespace:glm	typeref:typename:highp_float64
float64	glm/fwd.hpp	/^	typedef lowp_float64 float64;$/;"	t	namespace:glm	typeref:typename:lowp_float64
float64	glm/fwd.hpp	/^	typedef mediump_float64 float64;$/;"	t	namespace:glm	typeref:typename:mediump_float64
float64	glm/gtc/type_precision.hpp	/^	typedef detail::float64 float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
float64_t	glm/fwd.hpp	/^	typedef highp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
float64_t	glm/fwd.hpp	/^	typedef lowp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:lowp_float64_t
float64_t	glm/fwd.hpp	/^	typedef mediump_float64 float64_t;$/;"	t	namespace:glm	typeref:typename:mediump_float64
float64_t	glm/gtc/type_precision.hpp	/^	typedef detail::float64 float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
floatBitsToInt	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER int floatBitsToInt(float const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
floatBitsToInt	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<int, P> floatBitsToInt(vecType<float, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<int,P>
floatBitsToUint	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER uint floatBitsToUint(float const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
floatBitsToUint	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> floatBitsToUint(vecType<float, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
floatTo10bit	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo10bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
floatTo11bit	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo11bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
float_distance	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER uint float_distance(T const & x, T const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
float_distance	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> float_distance(vecType<T, P> const & x, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
float_t	glm/detail/type_float.hpp	/^	typedef highp_float			float_t;$/;"	t	namespace:glm	typeref:typename:highp_float
float_t	glm/detail/type_float.hpp	/^	typedef lowp_float			float_t;$/;"	t	namespace:glm	typeref:typename:lowp_float
float_t	glm/detail/type_float.hpp	/^	typedef mediump_float		float_t;$/;"	t	namespace:glm	typeref:typename:mediump_float
floor	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> floor(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
floor	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD floor$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
floorMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> floorMultiple(vecType<T, P> const & Source, vecType<T, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
floorPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> floorPowerOfTwo(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fma	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType fma(genType const & a, genType const & b, genType const & c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fma	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fma$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
fmat2	glm/fwd.hpp	/^	typedef fmat2x2					fmat2;$/;"	t	namespace:glm	typeref:typename:fmat2x2
fmat2	glm/fwd.hpp	/^	typedef lowp_f32mat2			fmat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2
fmat2	glm/fwd.hpp	/^	typedef mediump_f32mat2			fmat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2
fmat2	glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
fmat2x2	glm/fwd.hpp	/^	typedef highp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
fmat2x2	glm/fwd.hpp	/^	typedef lowp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
fmat2x2	glm/fwd.hpp	/^	typedef mediump_f32mat2x2		fmat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
fmat2x2	glm/gtc/type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,defaultp>
fmat2x3	glm/fwd.hpp	/^	typedef highp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x3
fmat2x3	glm/fwd.hpp	/^	typedef lowp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x3
fmat2x3	glm/fwd.hpp	/^	typedef mediump_f32mat2x3		fmat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x3
fmat2x3	glm/gtc/type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,defaultp>
fmat2x4	glm/fwd.hpp	/^	typedef highp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x4
fmat2x4	glm/fwd.hpp	/^	typedef lowp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x4
fmat2x4	glm/fwd.hpp	/^	typedef mediump_f32mat2x4		fmat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x4
fmat2x4	glm/gtc/type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,defaultp>
fmat3	glm/fwd.hpp	/^	typedef fmat3x3					fmat3;$/;"	t	namespace:glm	typeref:typename:fmat3x3
fmat3	glm/fwd.hpp	/^	typedef lowp_f32mat3			fmat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3
fmat3	glm/fwd.hpp	/^	typedef mediump_f32mat3			fmat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3
fmat3	glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
fmat3x2	glm/fwd.hpp	/^	typedef highp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x2
fmat3x2	glm/fwd.hpp	/^	typedef lowp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x2
fmat3x2	glm/fwd.hpp	/^	typedef mediump_f32mat3x2		fmat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x2
fmat3x2	glm/gtc/type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,defaultp>
fmat3x3	glm/fwd.hpp	/^	typedef highp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
fmat3x3	glm/fwd.hpp	/^	typedef lowp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
fmat3x3	glm/fwd.hpp	/^	typedef mediump_f32mat3x3		fmat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
fmat3x3	glm/gtc/type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,defaultp>
fmat3x4	glm/fwd.hpp	/^	typedef highp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x4
fmat3x4	glm/fwd.hpp	/^	typedef lowp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x4
fmat3x4	glm/fwd.hpp	/^	typedef mediump_f32mat3x4		fmat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x4
fmat3x4	glm/gtc/type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,defaultp>
fmat4	glm/fwd.hpp	/^	typedef fmat4x4					fmat4;$/;"	t	namespace:glm	typeref:typename:fmat4x4
fmat4	glm/fwd.hpp	/^	typedef lowp_f32mat4			fmat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4
fmat4	glm/fwd.hpp	/^	typedef mediump_f32mat4			fmat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4
fmat4	glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
fmat4x2	glm/fwd.hpp	/^	typedef highp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x2
fmat4x2	glm/fwd.hpp	/^	typedef lowp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x2
fmat4x2	glm/fwd.hpp	/^	typedef mediump_f32mat4x2		fmat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x2
fmat4x2	glm/gtc/type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,defaultp>
fmat4x3	glm/fwd.hpp	/^	typedef highp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x3
fmat4x3	glm/fwd.hpp	/^	typedef lowp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x3
fmat4x3	glm/fwd.hpp	/^	typedef mediump_f32mat4x3		fmat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x3
fmat4x3	glm/gtc/type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,defaultp>
fmat4x4	glm/fwd.hpp	/^	typedef highp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
fmat4x4	glm/fwd.hpp	/^	typedef lowp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
fmat4x4	glm/fwd.hpp	/^	typedef mediump_f32mat4x4		fmat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
fmat4x4	glm/gtc/type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,defaultp>
fmat4x4SIMD	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD::fmat4x4SIMD$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fmat4x4SIMD	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD::fmat4x4SIMD()$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fmat4x4SIMD	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD::fmat4x4SIMD(float const & s)$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
format	glm/gtx/string_cast.inl	/^	GLM_FUNC_QUALIFIER std::string format(const char* msg, ...)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::string
format_punct	glm/gtx/io.hpp	/^		class format_punct : public std::locale::facet$/;"	c	namespace:glm::io
format_punct	glm/gtx/io.inl	/^	format_punct<CTy>::format_punct(format_punct const& a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_punct	glm/gtx/io.inl	/^	format_punct<CTy>::format_punct(size_t a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_saver	glm/gtx/io.hpp	/^		typedef basic_format_saver<char>     format_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<char>
formatted	glm/gtx/io.hpp	/^			bool       formatted;$/;"	m	class:glm::io::format_punct	typeref:typename:bool
formatted	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr>& formatted(std::basic_ios<CTy,CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
four_over_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType four_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fquat	glm/fwd.hpp	/^	typedef highp_fquat				fquat;$/;"	t	namespace:glm	typeref:typename:highp_fquat
fquat	glm/fwd.hpp	/^	typedef lowp_f32quat			fquat;$/;"	t	namespace:glm	typeref:typename:lowp_f32quat
fquat	glm/fwd.hpp	/^	typedef mediump_f32quat			fquat;$/;"	t	namespace:glm	typeref:typename:mediump_f32quat
fquat	glm/fwd.hpp	/^	typedef quat				fquat;$/;"	t	namespace:glm	typeref:typename:quat
fquatSIMD	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD()$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(__m128 const & Data) :$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(float const & w, float const & x, float const & y, float/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(fquatSIMD const & q) :$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(quat const & q) :$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fquatSIMD	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD::fquatSIMD(vec3 const & eulerAngles)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER
fract	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType fract(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fract	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> fract(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
fract	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD fract$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
frexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType frexp(genType x, int & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
frexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> frexp(tvec1<T, P> const & x, tvec1<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
frexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> frexp(tvec2<T, P> const & x, tvec2<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
frexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> frexp(tvec3<T, P> const & x, tvec3<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
frexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> frexp(tvec4<T, P> const & x, tvec4<int, P> & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
frustum	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> frustum$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
func	glm/detail/dummy.cpp	/^void func(GLuint LocationMVP, float Translate, glm::vec2 const & Rotate)$/;"	f	typeref:typename:void
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec1>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec2>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec3>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1<R, T, P, tvec4>$/;"	s	namespace:glm::detail
functor1	glm/detail/_vectorize.hpp	/^	struct functor1{};$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2	glm/detail/_vectorize.hpp	/^	struct functor2{};$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2_vec_sca	glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca{};$/;"	s	namespace:glm::detail
fvec1	glm/fwd.hpp	/^	typedef highp_f32vec1			fvec1;$/;"	t	namespace:glm	typeref:typename:highp_f32vec1
fvec1	glm/fwd.hpp	/^	typedef lowp_f32vec1			fvec1;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec1
fvec1	glm/fwd.hpp	/^	typedef mediump_f32vec1			fvec1;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec1
fvec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<float, defaultp> fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,defaultp>
fvec2	glm/fwd.hpp	/^	typedef highp_f32vec2			fvec2;$/;"	t	namespace:glm	typeref:typename:highp_f32vec2
fvec2	glm/fwd.hpp	/^	typedef lowp_f32vec2			fvec2;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec2
fvec2	glm/fwd.hpp	/^	typedef mediump_f32vec2			fvec2;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec2
fvec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<float, defaultp> fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,defaultp>
fvec3	glm/fwd.hpp	/^	typedef highp_f32vec3			fvec3;$/;"	t	namespace:glm	typeref:typename:highp_f32vec3
fvec3	glm/fwd.hpp	/^	typedef lowp_f32vec3			fvec3;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec3
fvec3	glm/fwd.hpp	/^	typedef mediump_f32vec3			fvec3;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec3
fvec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<float, defaultp> fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,defaultp>
fvec4	glm/fwd.hpp	/^	typedef highp_f32vec4			fvec4;$/;"	t	namespace:glm	typeref:typename:highp_f32vec4
fvec4	glm/fwd.hpp	/^	typedef lowp_f32vec4			fvec4;$/;"	t	namespace:glm	typeref:typename:lowp_f32vec4
fvec4	glm/fwd.hpp	/^	typedef mediump_f32vec4			fvec4;$/;"	t	namespace:glm	typeref:typename:mediump_f32vec4
fvec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<float, defaultp> fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,defaultp>
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(__m128 const & Data) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s, vec3 const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s1, float const & s2, vec2 const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & s1, vec2 const & v, float const & s2) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(float const & x, float const & y, float const & z, float/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(fvec4SIMD const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec2 const & v, float const & s1, float const & s2) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec2 const & v1, vec2 const & v2) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec3 const & v, float const & s) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
fvec4SIMD	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD::fvec4SIMD(vec4 const & v) :$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER
g	bmptotexture.cpp	/^			unsigned char r, g, b, a;$/;"	m	struct:BmpToTexture::rgba32	typeref:typename:unsigned char	file:
g	glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon0c00c97d010a::__anon0c00c97d0308	typeref:typename:T
g	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon0c00c97d060a	typeref:typename:T
g	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0308	typeref:typename:T
g	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon0c12e1fe060a	typeref:typename:T
g	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
g	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon0c24fa7f060a	typeref:typename:T
gaussRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType gaussRand(genType Mean, genType Deviation)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
gaussRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> gaussRand(vecType<T, P> const & Mean, vecType<T, P> const & De/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
genType	glm/detail/type_gentype.hpp	/^	struct genType$/;"	s	namespace:glm::detail
get_facet	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER FTy const& get_facet(std::basic_ios<CTy,CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER FTy const &
glActiveProgramEXT	glew.h	/^#define glActiveProgramEXT /;"	d
glActiveShaderProgram	glew.h	/^#define glActiveShaderProgram /;"	d
glActiveStencilFaceEXT	glew.h	/^#define glActiveStencilFaceEXT /;"	d
glActiveTexture	glew.h	/^#define glActiveTexture /;"	d
glActiveTextureARB	glew.h	/^#define glActiveTextureARB /;"	d
glActiveVaryingNV	glew.h	/^#define glActiveVaryingNV /;"	d
glAddSwapHintRectWIN	glew.h	/^#define glAddSwapHintRectWIN /;"	d
glAlphaFragmentOp1ATI	glew.h	/^#define glAlphaFragmentOp1ATI /;"	d
glAlphaFragmentOp2ATI	glew.h	/^#define glAlphaFragmentOp2ATI /;"	d
glAlphaFragmentOp3ATI	glew.h	/^#define glAlphaFragmentOp3ATI /;"	d
glAlphaFuncx	glew.h	/^#define glAlphaFuncx /;"	d
glApplyTextureEXT	glew.h	/^#define glApplyTextureEXT /;"	d
glAreProgramsResidentNV	glew.h	/^#define glAreProgramsResidentNV /;"	d
glAreTexturesResidentEXT	glew.h	/^#define glAreTexturesResidentEXT /;"	d
glArrayElementEXT	glew.h	/^#define glArrayElementEXT /;"	d
glArrayObjectATI	glew.h	/^#define glArrayObjectATI /;"	d
glAsyncMarkerSGIX	glew.h	/^#define glAsyncMarkerSGIX /;"	d
glAttachObjectARB	glew.h	/^#define glAttachObjectARB /;"	d
glAttachShader	glew.h	/^#define glAttachShader /;"	d
glBeginConditionalRender	glew.h	/^#define glBeginConditionalRender /;"	d
glBeginConditionalRenderNV	glew.h	/^#define glBeginConditionalRenderNV /;"	d
glBeginConditionalRenderNVX	glew.h	/^#define glBeginConditionalRenderNVX /;"	d
glBeginFragmentShaderATI	glew.h	/^#define glBeginFragmentShaderATI /;"	d
glBeginOcclusionQueryNV	glew.h	/^#define glBeginOcclusionQueryNV /;"	d
glBeginPerfMonitorAMD	glew.h	/^#define glBeginPerfMonitorAMD /;"	d
glBeginPerfQueryINTEL	glew.h	/^#define glBeginPerfQueryINTEL /;"	d
glBeginQuery	glew.h	/^#define glBeginQuery /;"	d
glBeginQueryANGLE	glew.h	/^#define glBeginQueryANGLE /;"	d
glBeginQueryARB	glew.h	/^#define glBeginQueryARB /;"	d
glBeginQueryIndexed	glew.h	/^#define glBeginQueryIndexed /;"	d
glBeginSceneEXT	glew.h	/^#define glBeginSceneEXT /;"	d
glBeginTransformFeedback	glew.h	/^#define glBeginTransformFeedback /;"	d
glBeginTransformFeedbackEXT	glew.h	/^#define glBeginTransformFeedbackEXT /;"	d
glBeginTransformFeedbackNV	glew.h	/^#define glBeginTransformFeedbackNV /;"	d
glBeginVertexShaderEXT	glew.h	/^#define glBeginVertexShaderEXT /;"	d
glBeginVideoCaptureNV	glew.h	/^#define glBeginVideoCaptureNV /;"	d
glBindAttribLocation	glew.h	/^#define glBindAttribLocation /;"	d
glBindAttribLocationARB	glew.h	/^#define glBindAttribLocationARB /;"	d
glBindBuffer	glew.h	/^#define glBindBuffer /;"	d
glBindBufferARB	glew.h	/^#define glBindBufferARB /;"	d
glBindBufferBase	glew.h	/^#define glBindBufferBase /;"	d
glBindBufferBaseEXT	glew.h	/^#define glBindBufferBaseEXT /;"	d
glBindBufferBaseNV	glew.h	/^#define glBindBufferBaseNV /;"	d
glBindBufferOffsetEXT	glew.h	/^#define glBindBufferOffsetEXT /;"	d
glBindBufferOffsetNV	glew.h	/^#define glBindBufferOffsetNV /;"	d
glBindBufferRange	glew.h	/^#define glBindBufferRange /;"	d
glBindBufferRangeEXT	glew.h	/^#define glBindBufferRangeEXT /;"	d
glBindBufferRangeNV	glew.h	/^#define glBindBufferRangeNV /;"	d
glBindBuffersBase	glew.h	/^#define glBindBuffersBase /;"	d
glBindBuffersRange	glew.h	/^#define glBindBuffersRange /;"	d
glBindFragDataLocation	glew.h	/^#define glBindFragDataLocation /;"	d
glBindFragDataLocationEXT	glew.h	/^#define glBindFragDataLocationEXT /;"	d
glBindFragDataLocationIndexed	glew.h	/^#define glBindFragDataLocationIndexed /;"	d
glBindFragmentShaderATI	glew.h	/^#define glBindFragmentShaderATI /;"	d
glBindFramebuffer	glew.h	/^#define glBindFramebuffer /;"	d
glBindFramebufferEXT	glew.h	/^#define glBindFramebufferEXT /;"	d
glBindImageTexture	glew.h	/^#define glBindImageTexture /;"	d
glBindImageTextureEXT	glew.h	/^#define glBindImageTextureEXT /;"	d
glBindImageTextures	glew.h	/^#define glBindImageTextures /;"	d
glBindLightParameterEXT	glew.h	/^#define glBindLightParameterEXT /;"	d
glBindMaterialParameterEXT	glew.h	/^#define glBindMaterialParameterEXT /;"	d
glBindMultiTextureEXT	glew.h	/^#define glBindMultiTextureEXT /;"	d
glBindParameterEXT	glew.h	/^#define glBindParameterEXT /;"	d
glBindProgramARB	glew.h	/^#define glBindProgramARB /;"	d
glBindProgramNV	glew.h	/^#define glBindProgramNV /;"	d
glBindProgramPipeline	glew.h	/^#define glBindProgramPipeline /;"	d
glBindRenderbuffer	glew.h	/^#define glBindRenderbuffer /;"	d
glBindRenderbufferEXT	glew.h	/^#define glBindRenderbufferEXT /;"	d
glBindSampler	glew.h	/^#define glBindSampler /;"	d
glBindSamplers	glew.h	/^#define glBindSamplers /;"	d
glBindTexGenParameterEXT	glew.h	/^#define glBindTexGenParameterEXT /;"	d
glBindTextureEXT	glew.h	/^#define glBindTextureEXT /;"	d
glBindTextureUnit	glew.h	/^#define glBindTextureUnit /;"	d
glBindTextureUnitParameterEXT	glew.h	/^#define glBindTextureUnitParameterEXT /;"	d
glBindTextures	glew.h	/^#define glBindTextures /;"	d
glBindTransformFeedback	glew.h	/^#define glBindTransformFeedback /;"	d
glBindTransformFeedbackNV	glew.h	/^#define glBindTransformFeedbackNV /;"	d
glBindVertexArray	glew.h	/^#define glBindVertexArray /;"	d
glBindVertexArrayAPPLE	glew.h	/^#define glBindVertexArrayAPPLE /;"	d
glBindVertexBuffer	glew.h	/^#define glBindVertexBuffer /;"	d
glBindVertexBuffers	glew.h	/^#define glBindVertexBuffers /;"	d
glBindVertexShaderEXT	glew.h	/^#define glBindVertexShaderEXT /;"	d
glBindVideoCaptureStreamBufferNV	glew.h	/^#define glBindVideoCaptureStreamBufferNV /;"	d
glBindVideoCaptureStreamTextureNV	glew.h	/^#define glBindVideoCaptureStreamTextureNV /;"	d
glBinormalPointerEXT	glew.h	/^#define glBinormalPointerEXT /;"	d
glBlendBarrierKHR	glew.h	/^#define glBlendBarrierKHR /;"	d
glBlendBarrierNV	glew.h	/^#define glBlendBarrierNV /;"	d
glBlendColor	glew.h	/^#define glBlendColor /;"	d
glBlendColorEXT	glew.h	/^#define glBlendColorEXT /;"	d
glBlendEquation	glew.h	/^#define glBlendEquation /;"	d
glBlendEquationEXT	glew.h	/^#define glBlendEquationEXT /;"	d
glBlendEquationIndexedAMD	glew.h	/^#define glBlendEquationIndexedAMD /;"	d
glBlendEquationSeparate	glew.h	/^#define glBlendEquationSeparate /;"	d
glBlendEquationSeparateEXT	glew.h	/^#define glBlendEquationSeparateEXT /;"	d
glBlendEquationSeparateIndexedAMD	glew.h	/^#define glBlendEquationSeparateIndexedAMD /;"	d
glBlendEquationSeparatei	glew.h	/^#define glBlendEquationSeparatei /;"	d
glBlendEquationSeparateiARB	glew.h	/^#define glBlendEquationSeparateiARB /;"	d
glBlendEquationi	glew.h	/^#define glBlendEquationi /;"	d
glBlendEquationiARB	glew.h	/^#define glBlendEquationiARB /;"	d
glBlendFuncIndexedAMD	glew.h	/^#define glBlendFuncIndexedAMD /;"	d
glBlendFuncSeparate	glew.h	/^#define glBlendFuncSeparate /;"	d
glBlendFuncSeparateEXT	glew.h	/^#define glBlendFuncSeparateEXT /;"	d
glBlendFuncSeparateIndexedAMD	glew.h	/^#define glBlendFuncSeparateIndexedAMD /;"	d
glBlendFuncSeparatei	glew.h	/^#define glBlendFuncSeparatei /;"	d
glBlendFuncSeparateiARB	glew.h	/^#define glBlendFuncSeparateiARB /;"	d
glBlendFunci	glew.h	/^#define glBlendFunci /;"	d
glBlendFunciARB	glew.h	/^#define glBlendFunciARB /;"	d
glBlendParameteriNV	glew.h	/^#define glBlendParameteriNV /;"	d
glBlitFramebuffer	glew.h	/^#define glBlitFramebuffer /;"	d
glBlitFramebufferANGLE	glew.h	/^#define glBlitFramebufferANGLE /;"	d
glBlitFramebufferEXT	glew.h	/^#define glBlitFramebufferEXT /;"	d
glBlitNamedFramebuffer	glew.h	/^#define glBlitNamedFramebuffer /;"	d
glBufferAddressRangeNV	glew.h	/^#define glBufferAddressRangeNV /;"	d
glBufferData	glew.h	/^#define glBufferData /;"	d
glBufferDataARB	glew.h	/^#define glBufferDataARB /;"	d
glBufferPageCommitmentARB	glew.h	/^#define glBufferPageCommitmentARB /;"	d
glBufferParameteriAPPLE	glew.h	/^#define glBufferParameteriAPPLE /;"	d
glBufferRegionEnabled	glew.h	/^#define glBufferRegionEnabled /;"	d
glBufferStorage	glew.h	/^#define glBufferStorage /;"	d
glBufferSubData	glew.h	/^#define glBufferSubData /;"	d
glBufferSubDataARB	glew.h	/^#define glBufferSubDataARB /;"	d
glCheckFramebufferStatus	glew.h	/^#define glCheckFramebufferStatus /;"	d
glCheckFramebufferStatusEXT	glew.h	/^#define glCheckFramebufferStatusEXT /;"	d
glCheckNamedFramebufferStatus	glew.h	/^#define glCheckNamedFramebufferStatus /;"	d
glCheckNamedFramebufferStatusEXT	glew.h	/^#define glCheckNamedFramebufferStatusEXT /;"	d
glClampColor	glew.h	/^#define glClampColor /;"	d
glClampColorARB	glew.h	/^#define glClampColorARB /;"	d
glClearBufferData	glew.h	/^#define glClearBufferData /;"	d
glClearBufferSubData	glew.h	/^#define glClearBufferSubData /;"	d
glClearBufferfi	glew.h	/^#define glClearBufferfi /;"	d
glClearBufferfv	glew.h	/^#define glClearBufferfv /;"	d
glClearBufferiv	glew.h	/^#define glClearBufferiv /;"	d
glClearBufferuiv	glew.h	/^#define glClearBufferuiv /;"	d
glClearColorIiEXT	glew.h	/^#define glClearColorIiEXT /;"	d
glClearColorIuiEXT	glew.h	/^#define glClearColorIuiEXT /;"	d
glClearColorx	glew.h	/^#define glClearColorx /;"	d
glClearDepthdNV	glew.h	/^#define glClearDepthdNV /;"	d
glClearDepthf	glew.h	/^#define glClearDepthf /;"	d
glClearDepthfOES	glew.h	/^#define glClearDepthfOES /;"	d
glClearDepthx	glew.h	/^#define glClearDepthx /;"	d
glClearNamedBufferData	glew.h	/^#define glClearNamedBufferData /;"	d
glClearNamedBufferDataEXT	glew.h	/^#define glClearNamedBufferDataEXT /;"	d
glClearNamedBufferSubData	glew.h	/^#define glClearNamedBufferSubData /;"	d
glClearNamedBufferSubDataEXT	glew.h	/^#define glClearNamedBufferSubDataEXT /;"	d
glClearNamedFramebufferfi	glew.h	/^#define glClearNamedFramebufferfi /;"	d
glClearNamedFramebufferfv	glew.h	/^#define glClearNamedFramebufferfv /;"	d
glClearNamedFramebufferiv	glew.h	/^#define glClearNamedFramebufferiv /;"	d
glClearNamedFramebufferuiv	glew.h	/^#define glClearNamedFramebufferuiv /;"	d
glClearTexImage	glew.h	/^#define glClearTexImage /;"	d
glClearTexSubImage	glew.h	/^#define glClearTexSubImage /;"	d
glClientActiveTexture	glew.h	/^#define glClientActiveTexture /;"	d
glClientActiveTextureARB	glew.h	/^#define glClientActiveTextureARB /;"	d
glClientActiveVertexStreamATI	glew.h	/^#define glClientActiveVertexStreamATI /;"	d
glClientAttribDefaultEXT	glew.h	/^#define glClientAttribDefaultEXT /;"	d
glClientWaitSync	glew.h	/^#define glClientWaitSync /;"	d
glClipControl	glew.h	/^#define glClipControl /;"	d
glClipPlanef	glew.h	/^#define glClipPlanef /;"	d
glClipPlanefOES	glew.h	/^#define glClipPlanefOES /;"	d
glClipPlanex	glew.h	/^#define glClipPlanex /;"	d
glColor3fVertex3fSUN	glew.h	/^#define glColor3fVertex3fSUN /;"	d
glColor3fVertex3fvSUN	glew.h	/^#define glColor3fVertex3fvSUN /;"	d
glColor3hNV	glew.h	/^#define glColor3hNV /;"	d
glColor3hvNV	glew.h	/^#define glColor3hvNV /;"	d
glColor4fNormal3fVertex3fSUN	glew.h	/^#define glColor4fNormal3fVertex3fSUN /;"	d
glColor4fNormal3fVertex3fvSUN	glew.h	/^#define glColor4fNormal3fVertex3fvSUN /;"	d
glColor4hNV	glew.h	/^#define glColor4hNV /;"	d
glColor4hvNV	glew.h	/^#define glColor4hvNV /;"	d
glColor4ubVertex2fSUN	glew.h	/^#define glColor4ubVertex2fSUN /;"	d
glColor4ubVertex2fvSUN	glew.h	/^#define glColor4ubVertex2fvSUN /;"	d
glColor4ubVertex3fSUN	glew.h	/^#define glColor4ubVertex3fSUN /;"	d
glColor4ubVertex3fvSUN	glew.h	/^#define glColor4ubVertex3fvSUN /;"	d
glColor4x	glew.h	/^#define glColor4x /;"	d
glColorFormatNV	glew.h	/^#define glColorFormatNV /;"	d
glColorFragmentOp1ATI	glew.h	/^#define glColorFragmentOp1ATI /;"	d
glColorFragmentOp2ATI	glew.h	/^#define glColorFragmentOp2ATI /;"	d
glColorFragmentOp3ATI	glew.h	/^#define glColorFragmentOp3ATI /;"	d
glColorMaskIndexedEXT	glew.h	/^#define glColorMaskIndexedEXT /;"	d
glColorMaski	glew.h	/^#define glColorMaski /;"	d
glColorP3ui	glew.h	/^#define glColorP3ui /;"	d
glColorP3uiv	glew.h	/^#define glColorP3uiv /;"	d
glColorP4ui	glew.h	/^#define glColorP4ui /;"	d
glColorP4uiv	glew.h	/^#define glColorP4uiv /;"	d
glColorPointerEXT	glew.h	/^#define glColorPointerEXT /;"	d
glColorPointerListIBM	glew.h	/^#define glColorPointerListIBM /;"	d
glColorPointervINTEL	glew.h	/^#define glColorPointervINTEL /;"	d
glColorSubTable	glew.h	/^#define glColorSubTable /;"	d
glColorSubTableEXT	glew.h	/^#define glColorSubTableEXT /;"	d
glColorTable	glew.h	/^#define glColorTable /;"	d
glColorTableEXT	glew.h	/^#define glColorTableEXT /;"	d
glColorTableParameterfv	glew.h	/^#define glColorTableParameterfv /;"	d
glColorTableParameterfvSGI	glew.h	/^#define glColorTableParameterfvSGI /;"	d
glColorTableParameteriv	glew.h	/^#define glColorTableParameteriv /;"	d
glColorTableParameterivSGI	glew.h	/^#define glColorTableParameterivSGI /;"	d
glColorTableSGI	glew.h	/^#define glColorTableSGI /;"	d
glCombinerInputNV	glew.h	/^#define glCombinerInputNV /;"	d
glCombinerOutputNV	glew.h	/^#define glCombinerOutputNV /;"	d
glCombinerParameterfNV	glew.h	/^#define glCombinerParameterfNV /;"	d
glCombinerParameterfvNV	glew.h	/^#define glCombinerParameterfvNV /;"	d
glCombinerParameteriNV	glew.h	/^#define glCombinerParameteriNV /;"	d
glCombinerParameterivNV	glew.h	/^#define glCombinerParameterivNV /;"	d
glCombinerStageParameterfvNV	glew.h	/^#define glCombinerStageParameterfvNV /;"	d
glCompileShader	glew.h	/^#define glCompileShader /;"	d
glCompileShaderARB	glew.h	/^#define glCompileShaderARB /;"	d
glCompileShaderIncludeARB	glew.h	/^#define glCompileShaderIncludeARB /;"	d
glCompressedMultiTexImage1DEXT	glew.h	/^#define glCompressedMultiTexImage1DEXT /;"	d
glCompressedMultiTexImage2DEXT	glew.h	/^#define glCompressedMultiTexImage2DEXT /;"	d
glCompressedMultiTexImage3DEXT	glew.h	/^#define glCompressedMultiTexImage3DEXT /;"	d
glCompressedMultiTexSubImage1DEXT	glew.h	/^#define glCompressedMultiTexSubImage1DEXT /;"	d
glCompressedMultiTexSubImage2DEXT	glew.h	/^#define glCompressedMultiTexSubImage2DEXT /;"	d
glCompressedMultiTexSubImage3DEXT	glew.h	/^#define glCompressedMultiTexSubImage3DEXT /;"	d
glCompressedTexImage1D	glew.h	/^#define glCompressedTexImage1D /;"	d
glCompressedTexImage1DARB	glew.h	/^#define glCompressedTexImage1DARB /;"	d
glCompressedTexImage2D	glew.h	/^#define glCompressedTexImage2D /;"	d
glCompressedTexImage2DARB	glew.h	/^#define glCompressedTexImage2DARB /;"	d
glCompressedTexImage3D	glew.h	/^#define glCompressedTexImage3D /;"	d
glCompressedTexImage3DARB	glew.h	/^#define glCompressedTexImage3DARB /;"	d
glCompressedTexSubImage1D	glew.h	/^#define glCompressedTexSubImage1D /;"	d
glCompressedTexSubImage1DARB	glew.h	/^#define glCompressedTexSubImage1DARB /;"	d
glCompressedTexSubImage2D	glew.h	/^#define glCompressedTexSubImage2D /;"	d
glCompressedTexSubImage2DARB	glew.h	/^#define glCompressedTexSubImage2DARB /;"	d
glCompressedTexSubImage3D	glew.h	/^#define glCompressedTexSubImage3D /;"	d
glCompressedTexSubImage3DARB	glew.h	/^#define glCompressedTexSubImage3DARB /;"	d
glCompressedTextureImage1DEXT	glew.h	/^#define glCompressedTextureImage1DEXT /;"	d
glCompressedTextureImage2DEXT	glew.h	/^#define glCompressedTextureImage2DEXT /;"	d
glCompressedTextureImage3DEXT	glew.h	/^#define glCompressedTextureImage3DEXT /;"	d
glCompressedTextureSubImage1D	glew.h	/^#define glCompressedTextureSubImage1D /;"	d
glCompressedTextureSubImage1DEXT	glew.h	/^#define glCompressedTextureSubImage1DEXT /;"	d
glCompressedTextureSubImage2D	glew.h	/^#define glCompressedTextureSubImage2D /;"	d
glCompressedTextureSubImage2DEXT	glew.h	/^#define glCompressedTextureSubImage2DEXT /;"	d
glCompressedTextureSubImage3D	glew.h	/^#define glCompressedTextureSubImage3D /;"	d
glCompressedTextureSubImage3DEXT	glew.h	/^#define glCompressedTextureSubImage3DEXT /;"	d
glConvolutionFilter1D	glew.h	/^#define glConvolutionFilter1D /;"	d
glConvolutionFilter1DEXT	glew.h	/^#define glConvolutionFilter1DEXT /;"	d
glConvolutionFilter2D	glew.h	/^#define glConvolutionFilter2D /;"	d
glConvolutionFilter2DEXT	glew.h	/^#define glConvolutionFilter2DEXT /;"	d
glConvolutionParameterf	glew.h	/^#define glConvolutionParameterf /;"	d
glConvolutionParameterfEXT	glew.h	/^#define glConvolutionParameterfEXT /;"	d
glConvolutionParameterfv	glew.h	/^#define glConvolutionParameterfv /;"	d
glConvolutionParameterfvEXT	glew.h	/^#define glConvolutionParameterfvEXT /;"	d
glConvolutionParameteri	glew.h	/^#define glConvolutionParameteri /;"	d
glConvolutionParameteriEXT	glew.h	/^#define glConvolutionParameteriEXT /;"	d
glConvolutionParameteriv	glew.h	/^#define glConvolutionParameteriv /;"	d
glConvolutionParameterivEXT	glew.h	/^#define glConvolutionParameterivEXT /;"	d
glCopyBufferSubData	glew.h	/^#define glCopyBufferSubData /;"	d
glCopyColorSubTable	glew.h	/^#define glCopyColorSubTable /;"	d
glCopyColorSubTableEXT	glew.h	/^#define glCopyColorSubTableEXT /;"	d
glCopyColorTable	glew.h	/^#define glCopyColorTable /;"	d
glCopyColorTableSGI	glew.h	/^#define glCopyColorTableSGI /;"	d
glCopyConvolutionFilter1D	glew.h	/^#define glCopyConvolutionFilter1D /;"	d
glCopyConvolutionFilter1DEXT	glew.h	/^#define glCopyConvolutionFilter1DEXT /;"	d
glCopyConvolutionFilter2D	glew.h	/^#define glCopyConvolutionFilter2D /;"	d
glCopyConvolutionFilter2DEXT	glew.h	/^#define glCopyConvolutionFilter2DEXT /;"	d
glCopyImageSubData	glew.h	/^#define glCopyImageSubData /;"	d
glCopyImageSubDataNV	glew.h	/^#define glCopyImageSubDataNV /;"	d
glCopyMultiTexImage1DEXT	glew.h	/^#define glCopyMultiTexImage1DEXT /;"	d
glCopyMultiTexImage2DEXT	glew.h	/^#define glCopyMultiTexImage2DEXT /;"	d
glCopyMultiTexSubImage1DEXT	glew.h	/^#define glCopyMultiTexSubImage1DEXT /;"	d
glCopyMultiTexSubImage2DEXT	glew.h	/^#define glCopyMultiTexSubImage2DEXT /;"	d
glCopyMultiTexSubImage3DEXT	glew.h	/^#define glCopyMultiTexSubImage3DEXT /;"	d
glCopyNamedBufferSubData	glew.h	/^#define glCopyNamedBufferSubData /;"	d
glCopyPathNV	glew.h	/^#define glCopyPathNV /;"	d
glCopyTexImage1DEXT	glew.h	/^#define glCopyTexImage1DEXT /;"	d
glCopyTexImage2DEXT	glew.h	/^#define glCopyTexImage2DEXT /;"	d
glCopyTexSubImage1DEXT	glew.h	/^#define glCopyTexSubImage1DEXT /;"	d
glCopyTexSubImage2DEXT	glew.h	/^#define glCopyTexSubImage2DEXT /;"	d
glCopyTexSubImage3D	glew.h	/^#define glCopyTexSubImage3D /;"	d
glCopyTexSubImage3DEXT	glew.h	/^#define glCopyTexSubImage3DEXT /;"	d
glCopyTextureImage1DEXT	glew.h	/^#define glCopyTextureImage1DEXT /;"	d
glCopyTextureImage2DEXT	glew.h	/^#define glCopyTextureImage2DEXT /;"	d
glCopyTextureSubImage1D	glew.h	/^#define glCopyTextureSubImage1D /;"	d
glCopyTextureSubImage1DEXT	glew.h	/^#define glCopyTextureSubImage1DEXT /;"	d
glCopyTextureSubImage2D	glew.h	/^#define glCopyTextureSubImage2D /;"	d
glCopyTextureSubImage2DEXT	glew.h	/^#define glCopyTextureSubImage2DEXT /;"	d
glCopyTextureSubImage3D	glew.h	/^#define glCopyTextureSubImage3D /;"	d
glCopyTextureSubImage3DEXT	glew.h	/^#define glCopyTextureSubImage3DEXT /;"	d
glCoverFillPathInstancedNV	glew.h	/^#define glCoverFillPathInstancedNV /;"	d
glCoverFillPathNV	glew.h	/^#define glCoverFillPathNV /;"	d
glCoverStrokePathInstancedNV	glew.h	/^#define glCoverStrokePathInstancedNV /;"	d
glCoverStrokePathNV	glew.h	/^#define glCoverStrokePathNV /;"	d
glCreateBuffers	glew.h	/^#define glCreateBuffers /;"	d
glCreateFramebuffers	glew.h	/^#define glCreateFramebuffers /;"	d
glCreatePerfQueryINTEL	glew.h	/^#define glCreatePerfQueryINTEL /;"	d
glCreateProgram	glew.h	/^#define glCreateProgram /;"	d
glCreateProgramObjectARB	glew.h	/^#define glCreateProgramObjectARB /;"	d
glCreateProgramPipelines	glew.h	/^#define glCreateProgramPipelines /;"	d
glCreateQueries	glew.h	/^#define glCreateQueries /;"	d
glCreateRenderbuffers	glew.h	/^#define glCreateRenderbuffers /;"	d
glCreateSamplers	glew.h	/^#define glCreateSamplers /;"	d
glCreateShader	glew.h	/^#define glCreateShader /;"	d
glCreateShaderObjectARB	glew.h	/^#define glCreateShaderObjectARB /;"	d
glCreateShaderProgramEXT	glew.h	/^#define glCreateShaderProgramEXT /;"	d
glCreateShaderProgramv	glew.h	/^#define glCreateShaderProgramv /;"	d
glCreateSyncFromCLeventARB	glew.h	/^#define glCreateSyncFromCLeventARB /;"	d
glCreateTextures	glew.h	/^#define glCreateTextures /;"	d
glCreateTransformFeedbacks	glew.h	/^#define glCreateTransformFeedbacks /;"	d
glCreateVertexArrays	glew.h	/^#define glCreateVertexArrays /;"	d
glCullParameterdvEXT	glew.h	/^#define glCullParameterdvEXT /;"	d
glCullParameterfvEXT	glew.h	/^#define glCullParameterfvEXT /;"	d
glCurrentPaletteMatrixARB	glew.h	/^#define glCurrentPaletteMatrixARB /;"	d
glDebugMessageCallback	glew.h	/^#define glDebugMessageCallback /;"	d
glDebugMessageCallbackAMD	glew.h	/^#define glDebugMessageCallbackAMD /;"	d
glDebugMessageCallbackARB	glew.h	/^#define glDebugMessageCallbackARB /;"	d
glDebugMessageControl	glew.h	/^#define glDebugMessageControl /;"	d
glDebugMessageControlARB	glew.h	/^#define glDebugMessageControlARB /;"	d
glDebugMessageEnableAMD	glew.h	/^#define glDebugMessageEnableAMD /;"	d
glDebugMessageInsert	glew.h	/^#define glDebugMessageInsert /;"	d
glDebugMessageInsertAMD	glew.h	/^#define glDebugMessageInsertAMD /;"	d
glDebugMessageInsertARB	glew.h	/^#define glDebugMessageInsertARB /;"	d
glDeleteAsyncMarkersSGIX	glew.h	/^#define glDeleteAsyncMarkersSGIX /;"	d
glDeleteBufferRegion	glew.h	/^#define glDeleteBufferRegion /;"	d
glDeleteBuffers	glew.h	/^#define glDeleteBuffers /;"	d
glDeleteBuffersARB	glew.h	/^#define glDeleteBuffersARB /;"	d
glDeleteFencesAPPLE	glew.h	/^#define glDeleteFencesAPPLE /;"	d
glDeleteFencesNV	glew.h	/^#define glDeleteFencesNV /;"	d
glDeleteFragmentShaderATI	glew.h	/^#define glDeleteFragmentShaderATI /;"	d
glDeleteFramebuffers	glew.h	/^#define glDeleteFramebuffers /;"	d
glDeleteFramebuffersEXT	glew.h	/^#define glDeleteFramebuffersEXT /;"	d
glDeleteNamedStringARB	glew.h	/^#define glDeleteNamedStringARB /;"	d
glDeleteNamesAMD	glew.h	/^#define glDeleteNamesAMD /;"	d
glDeleteObjectARB	glew.h	/^#define glDeleteObjectARB /;"	d
glDeleteOcclusionQueriesNV	glew.h	/^#define glDeleteOcclusionQueriesNV /;"	d
glDeletePathsNV	glew.h	/^#define glDeletePathsNV /;"	d
glDeletePerfMonitorsAMD	glew.h	/^#define glDeletePerfMonitorsAMD /;"	d
glDeletePerfQueryINTEL	glew.h	/^#define glDeletePerfQueryINTEL /;"	d
glDeleteProgram	glew.h	/^#define glDeleteProgram /;"	d
glDeleteProgramPipelines	glew.h	/^#define glDeleteProgramPipelines /;"	d
glDeleteProgramsARB	glew.h	/^#define glDeleteProgramsARB /;"	d
glDeleteProgramsNV	glew.h	/^#define glDeleteProgramsNV /;"	d
glDeleteQueries	glew.h	/^#define glDeleteQueries /;"	d
glDeleteQueriesANGLE	glew.h	/^#define glDeleteQueriesANGLE /;"	d
glDeleteQueriesARB	glew.h	/^#define glDeleteQueriesARB /;"	d
glDeleteRenderbuffers	glew.h	/^#define glDeleteRenderbuffers /;"	d
glDeleteRenderbuffersEXT	glew.h	/^#define glDeleteRenderbuffersEXT /;"	d
glDeleteSamplers	glew.h	/^#define glDeleteSamplers /;"	d
glDeleteShader	glew.h	/^#define glDeleteShader /;"	d
glDeleteSync	glew.h	/^#define glDeleteSync /;"	d
glDeleteTexturesEXT	glew.h	/^#define glDeleteTexturesEXT /;"	d
glDeleteTransformFeedbacks	glew.h	/^#define glDeleteTransformFeedbacks /;"	d
glDeleteTransformFeedbacksNV	glew.h	/^#define glDeleteTransformFeedbacksNV /;"	d
glDeleteVertexArrays	glew.h	/^#define glDeleteVertexArrays /;"	d
glDeleteVertexArraysAPPLE	glew.h	/^#define glDeleteVertexArraysAPPLE /;"	d
glDeleteVertexShaderEXT	glew.h	/^#define glDeleteVertexShaderEXT /;"	d
glDepthBoundsEXT	glew.h	/^#define glDepthBoundsEXT /;"	d
glDepthBoundsdNV	glew.h	/^#define glDepthBoundsdNV /;"	d
glDepthRangeArrayv	glew.h	/^#define glDepthRangeArrayv /;"	d
glDepthRangeIndexed	glew.h	/^#define glDepthRangeIndexed /;"	d
glDepthRangedNV	glew.h	/^#define glDepthRangedNV /;"	d
glDepthRangef	glew.h	/^#define glDepthRangef /;"	d
glDepthRangefOES	glew.h	/^#define glDepthRangefOES /;"	d
glDepthRangex	glew.h	/^#define glDepthRangex /;"	d
glDetachObjectARB	glew.h	/^#define glDetachObjectARB /;"	d
glDetachShader	glew.h	/^#define glDetachShader /;"	d
glDetailTexFuncSGIS	glew.h	/^#define glDetailTexFuncSGIS /;"	d
glDisableClientStateIndexedEXT	glew.h	/^#define glDisableClientStateIndexedEXT /;"	d
glDisableClientStateiEXT	glew.h	/^#define glDisableClientStateiEXT /;"	d
glDisableIndexedEXT	glew.h	/^#define glDisableIndexedEXT /;"	d
glDisableVariantClientStateEXT	glew.h	/^#define glDisableVariantClientStateEXT /;"	d
glDisableVertexArrayAttrib	glew.h	/^#define glDisableVertexArrayAttrib /;"	d
glDisableVertexArrayAttribEXT	glew.h	/^#define glDisableVertexArrayAttribEXT /;"	d
glDisableVertexArrayEXT	glew.h	/^#define glDisableVertexArrayEXT /;"	d
glDisableVertexAttribAPPLE	glew.h	/^#define glDisableVertexAttribAPPLE /;"	d
glDisableVertexAttribArray	glew.h	/^#define glDisableVertexAttribArray /;"	d
glDisableVertexAttribArrayARB	glew.h	/^#define glDisableVertexAttribArrayARB /;"	d
glDisablei	glew.h	/^#define glDisablei /;"	d
glDispatchCompute	glew.h	/^#define glDispatchCompute /;"	d
glDispatchComputeGroupSizeARB	glew.h	/^#define glDispatchComputeGroupSizeARB /;"	d
glDispatchComputeIndirect	glew.h	/^#define glDispatchComputeIndirect /;"	d
glDrawArraysEXT	glew.h	/^#define glDrawArraysEXT /;"	d
glDrawArraysIndirect	glew.h	/^#define glDrawArraysIndirect /;"	d
glDrawArraysInstanced	glew.h	/^#define glDrawArraysInstanced /;"	d
glDrawArraysInstancedANGLE	glew.h	/^#define glDrawArraysInstancedANGLE /;"	d
glDrawArraysInstancedARB	glew.h	/^#define glDrawArraysInstancedARB /;"	d
glDrawArraysInstancedBaseInstance	glew.h	/^#define glDrawArraysInstancedBaseInstance /;"	d
glDrawArraysInstancedEXT	glew.h	/^#define glDrawArraysInstancedEXT /;"	d
glDrawBufferRegion	glew.h	/^#define glDrawBufferRegion /;"	d
glDrawBuffers	glew.h	/^#define glDrawBuffers /;"	d
glDrawBuffersARB	glew.h	/^#define glDrawBuffersARB /;"	d
glDrawBuffersATI	glew.h	/^#define glDrawBuffersATI /;"	d
glDrawElementArrayAPPLE	glew.h	/^#define glDrawElementArrayAPPLE /;"	d
glDrawElementArrayATI	glew.h	/^#define glDrawElementArrayATI /;"	d
glDrawElementsBaseVertex	glew.h	/^#define glDrawElementsBaseVertex /;"	d
glDrawElementsIndirect	glew.h	/^#define glDrawElementsIndirect /;"	d
glDrawElementsInstanced	glew.h	/^#define glDrawElementsInstanced /;"	d
glDrawElementsInstancedANGLE	glew.h	/^#define glDrawElementsInstancedANGLE /;"	d
glDrawElementsInstancedARB	glew.h	/^#define glDrawElementsInstancedARB /;"	d
glDrawElementsInstancedBaseInstance	glew.h	/^#define glDrawElementsInstancedBaseInstance /;"	d
glDrawElementsInstancedBaseVertex	glew.h	/^#define glDrawElementsInstancedBaseVertex /;"	d
glDrawElementsInstancedBaseVertexBaseInstance	glew.h	/^#define glDrawElementsInstancedBaseVertexBaseInstance /;"	d
glDrawElementsInstancedEXT	glew.h	/^#define glDrawElementsInstancedEXT /;"	d
glDrawRangeElementArrayAPPLE	glew.h	/^#define glDrawRangeElementArrayAPPLE /;"	d
glDrawRangeElementArrayATI	glew.h	/^#define glDrawRangeElementArrayATI /;"	d
glDrawRangeElements	glew.h	/^#define glDrawRangeElements /;"	d
glDrawRangeElementsBaseVertex	glew.h	/^#define glDrawRangeElementsBaseVertex /;"	d
glDrawRangeElementsEXT	glew.h	/^#define glDrawRangeElementsEXT /;"	d
glDrawTextureNV	glew.h	/^#define glDrawTextureNV /;"	d
glDrawTransformFeedback	glew.h	/^#define glDrawTransformFeedback /;"	d
glDrawTransformFeedbackInstanced	glew.h	/^#define glDrawTransformFeedbackInstanced /;"	d
glDrawTransformFeedbackNV	glew.h	/^#define glDrawTransformFeedbackNV /;"	d
glDrawTransformFeedbackStream	glew.h	/^#define glDrawTransformFeedbackStream /;"	d
glDrawTransformFeedbackStreamInstanced	glew.h	/^#define glDrawTransformFeedbackStreamInstanced /;"	d
glEdgeFlagFormatNV	glew.h	/^#define glEdgeFlagFormatNV /;"	d
glEdgeFlagPointerEXT	glew.h	/^#define glEdgeFlagPointerEXT /;"	d
glEdgeFlagPointerListIBM	glew.h	/^#define glEdgeFlagPointerListIBM /;"	d
glElementPointerAPPLE	glew.h	/^#define glElementPointerAPPLE /;"	d
glElementPointerATI	glew.h	/^#define glElementPointerATI /;"	d
glEnableClientStateIndexedEXT	glew.h	/^#define glEnableClientStateIndexedEXT /;"	d
glEnableClientStateiEXT	glew.h	/^#define glEnableClientStateiEXT /;"	d
glEnableIndexedEXT	glew.h	/^#define glEnableIndexedEXT /;"	d
glEnableVariantClientStateEXT	glew.h	/^#define glEnableVariantClientStateEXT /;"	d
glEnableVertexArrayAttrib	glew.h	/^#define glEnableVertexArrayAttrib /;"	d
glEnableVertexArrayAttribEXT	glew.h	/^#define glEnableVertexArrayAttribEXT /;"	d
glEnableVertexArrayEXT	glew.h	/^#define glEnableVertexArrayEXT /;"	d
glEnableVertexAttribAPPLE	glew.h	/^#define glEnableVertexAttribAPPLE /;"	d
glEnableVertexAttribArray	glew.h	/^#define glEnableVertexAttribArray /;"	d
glEnableVertexAttribArrayARB	glew.h	/^#define glEnableVertexAttribArrayARB /;"	d
glEnablei	glew.h	/^#define glEnablei /;"	d
glEndConditionalRender	glew.h	/^#define glEndConditionalRender /;"	d
glEndConditionalRenderNV	glew.h	/^#define glEndConditionalRenderNV /;"	d
glEndConditionalRenderNVX	glew.h	/^#define glEndConditionalRenderNVX /;"	d
glEndFragmentShaderATI	glew.h	/^#define glEndFragmentShaderATI /;"	d
glEndOcclusionQueryNV	glew.h	/^#define glEndOcclusionQueryNV /;"	d
glEndPerfMonitorAMD	glew.h	/^#define glEndPerfMonitorAMD /;"	d
glEndPerfQueryINTEL	glew.h	/^#define glEndPerfQueryINTEL /;"	d
glEndQuery	glew.h	/^#define glEndQuery /;"	d
glEndQueryANGLE	glew.h	/^#define glEndQueryANGLE /;"	d
glEndQueryARB	glew.h	/^#define glEndQueryARB /;"	d
glEndQueryIndexed	glew.h	/^#define glEndQueryIndexed /;"	d
glEndSceneEXT	glew.h	/^#define glEndSceneEXT /;"	d
glEndTransformFeedback	glew.h	/^#define glEndTransformFeedback /;"	d
glEndTransformFeedbackEXT	glew.h	/^#define glEndTransformFeedbackEXT /;"	d
glEndTransformFeedbackNV	glew.h	/^#define glEndTransformFeedbackNV /;"	d
glEndVertexShaderEXT	glew.h	/^#define glEndVertexShaderEXT /;"	d
glEndVideoCaptureNV	glew.h	/^#define glEndVideoCaptureNV /;"	d
glErrorStringREGAL	glew.h	/^#define glErrorStringREGAL /;"	d
glEvalMapsNV	glew.h	/^#define glEvalMapsNV /;"	d
glExecuteProgramNV	glew.h	/^#define glExecuteProgramNV /;"	d
glExtractComponentEXT	glew.h	/^#define glExtractComponentEXT /;"	d
glFenceSync	glew.h	/^#define glFenceSync /;"	d
glFinalCombinerInputNV	glew.h	/^#define glFinalCombinerInputNV /;"	d
glFinishAsyncSGIX	glew.h	/^#define glFinishAsyncSGIX /;"	d
glFinishFenceAPPLE	glew.h	/^#define glFinishFenceAPPLE /;"	d
glFinishFenceNV	glew.h	/^#define glFinishFenceNV /;"	d
glFinishObjectAPPLE	glew.h	/^#define glFinishObjectAPPLE /;"	d
glFinishTextureSUNX	glew.h	/^#define glFinishTextureSUNX /;"	d
glFlushMappedBufferRange	glew.h	/^#define glFlushMappedBufferRange /;"	d
glFlushMappedBufferRangeAPPLE	glew.h	/^#define glFlushMappedBufferRangeAPPLE /;"	d
glFlushMappedNamedBufferRange	glew.h	/^#define glFlushMappedNamedBufferRange /;"	d
glFlushMappedNamedBufferRangeEXT	glew.h	/^#define glFlushMappedNamedBufferRangeEXT /;"	d
glFlushPixelDataRangeNV	glew.h	/^#define glFlushPixelDataRangeNV /;"	d
glFlushRasterSGIX	glew.h	/^#define glFlushRasterSGIX /;"	d
glFlushVertexArrayRangeAPPLE	glew.h	/^#define glFlushVertexArrayRangeAPPLE /;"	d
glFlushVertexArrayRangeNV	glew.h	/^#define glFlushVertexArrayRangeNV /;"	d
glFogCoordFormatNV	glew.h	/^#define glFogCoordFormatNV /;"	d
glFogCoordPointer	glew.h	/^#define glFogCoordPointer /;"	d
glFogCoordPointerEXT	glew.h	/^#define glFogCoordPointerEXT /;"	d
glFogCoordPointerListIBM	glew.h	/^#define glFogCoordPointerListIBM /;"	d
glFogCoordd	glew.h	/^#define glFogCoordd /;"	d
glFogCoorddEXT	glew.h	/^#define glFogCoorddEXT /;"	d
glFogCoorddv	glew.h	/^#define glFogCoorddv /;"	d
glFogCoorddvEXT	glew.h	/^#define glFogCoorddvEXT /;"	d
glFogCoordf	glew.h	/^#define glFogCoordf /;"	d
glFogCoordfEXT	glew.h	/^#define glFogCoordfEXT /;"	d
glFogCoordfv	glew.h	/^#define glFogCoordfv /;"	d
glFogCoordfvEXT	glew.h	/^#define glFogCoordfvEXT /;"	d
glFogCoordhNV	glew.h	/^#define glFogCoordhNV /;"	d
glFogCoordhvNV	glew.h	/^#define glFogCoordhvNV /;"	d
glFogFuncSGIS	glew.h	/^#define glFogFuncSGIS /;"	d
glFogx	glew.h	/^#define glFogx /;"	d
glFogxv	glew.h	/^#define glFogxv /;"	d
glFragmentColorMaterialEXT	glew.h	/^#define glFragmentColorMaterialEXT /;"	d
glFragmentColorMaterialSGIX	glew.h	/^#define glFragmentColorMaterialSGIX /;"	d
glFragmentLightModelfEXT	glew.h	/^#define glFragmentLightModelfEXT /;"	d
glFragmentLightModelfSGIX	glew.h	/^#define glFragmentLightModelfSGIX /;"	d
glFragmentLightModelfvEXT	glew.h	/^#define glFragmentLightModelfvEXT /;"	d
glFragmentLightModelfvSGIX	glew.h	/^#define glFragmentLightModelfvSGIX /;"	d
glFragmentLightModeliEXT	glew.h	/^#define glFragmentLightModeliEXT /;"	d
glFragmentLightModeliSGIX	glew.h	/^#define glFragmentLightModeliSGIX /;"	d
glFragmentLightModelivEXT	glew.h	/^#define glFragmentLightModelivEXT /;"	d
glFragmentLightModelivSGIX	glew.h	/^#define glFragmentLightModelivSGIX /;"	d
glFragmentLightfEXT	glew.h	/^#define glFragmentLightfEXT /;"	d
glFragmentLightfSGIX	glew.h	/^#define glFragmentLightfSGIX /;"	d
glFragmentLightfvEXT	glew.h	/^#define glFragmentLightfvEXT /;"	d
glFragmentLightfvSGIX	glew.h	/^#define glFragmentLightfvSGIX /;"	d
glFragmentLightiEXT	glew.h	/^#define glFragmentLightiEXT /;"	d
glFragmentLightiSGIX	glew.h	/^#define glFragmentLightiSGIX /;"	d
glFragmentLightivEXT	glew.h	/^#define glFragmentLightivEXT /;"	d
glFragmentLightivSGIX	glew.h	/^#define glFragmentLightivSGIX /;"	d
glFragmentMaterialfEXT	glew.h	/^#define glFragmentMaterialfEXT /;"	d
glFragmentMaterialfSGIX	glew.h	/^#define glFragmentMaterialfSGIX /;"	d
glFragmentMaterialfvEXT	glew.h	/^#define glFragmentMaterialfvEXT /;"	d
glFragmentMaterialfvSGIX	glew.h	/^#define glFragmentMaterialfvSGIX /;"	d
glFragmentMaterialiEXT	glew.h	/^#define glFragmentMaterialiEXT /;"	d
glFragmentMaterialiSGIX	glew.h	/^#define glFragmentMaterialiSGIX /;"	d
glFragmentMaterialivEXT	glew.h	/^#define glFragmentMaterialivEXT /;"	d
glFragmentMaterialivSGIX	glew.h	/^#define glFragmentMaterialivSGIX /;"	d
glFrameTerminatorGREMEDY	glew.h	/^#define glFrameTerminatorGREMEDY /;"	d
glFrameZoomSGIX	glew.h	/^#define glFrameZoomSGIX /;"	d
glFramebufferDrawBufferEXT	glew.h	/^#define glFramebufferDrawBufferEXT /;"	d
glFramebufferDrawBuffersEXT	glew.h	/^#define glFramebufferDrawBuffersEXT /;"	d
glFramebufferParameteri	glew.h	/^#define glFramebufferParameteri /;"	d
glFramebufferReadBufferEXT	glew.h	/^#define glFramebufferReadBufferEXT /;"	d
glFramebufferRenderbuffer	glew.h	/^#define glFramebufferRenderbuffer /;"	d
glFramebufferRenderbufferEXT	glew.h	/^#define glFramebufferRenderbufferEXT /;"	d
glFramebufferTexture	glew.h	/^#define glFramebufferTexture /;"	d
glFramebufferTexture1D	glew.h	/^#define glFramebufferTexture1D /;"	d
glFramebufferTexture1DEXT	glew.h	/^#define glFramebufferTexture1DEXT /;"	d
glFramebufferTexture2D	glew.h	/^#define glFramebufferTexture2D /;"	d
glFramebufferTexture2DEXT	glew.h	/^#define glFramebufferTexture2DEXT /;"	d
glFramebufferTexture3D	glew.h	/^#define glFramebufferTexture3D /;"	d
glFramebufferTexture3DEXT	glew.h	/^#define glFramebufferTexture3DEXT /;"	d
glFramebufferTextureARB	glew.h	/^#define glFramebufferTextureARB /;"	d
glFramebufferTextureEXT	glew.h	/^#define glFramebufferTextureEXT /;"	d
glFramebufferTextureFaceARB	glew.h	/^#define glFramebufferTextureFaceARB /;"	d
glFramebufferTextureFaceEXT	glew.h	/^#define glFramebufferTextureFaceEXT /;"	d
glFramebufferTextureLayer	glew.h	/^#define glFramebufferTextureLayer /;"	d
glFramebufferTextureLayerARB	glew.h	/^#define glFramebufferTextureLayerARB /;"	d
glFramebufferTextureLayerEXT	glew.h	/^#define glFramebufferTextureLayerEXT /;"	d
glFreeObjectBufferATI	glew.h	/^#define glFreeObjectBufferATI /;"	d
glFrustumf	glew.h	/^#define glFrustumf /;"	d
glFrustumfOES	glew.h	/^#define glFrustumfOES /;"	d
glFrustumx	glew.h	/^#define glFrustumx /;"	d
glGenAsyncMarkersSGIX	glew.h	/^#define glGenAsyncMarkersSGIX /;"	d
glGenBuffers	glew.h	/^#define glGenBuffers /;"	d
glGenBuffersARB	glew.h	/^#define glGenBuffersARB /;"	d
glGenFencesAPPLE	glew.h	/^#define glGenFencesAPPLE /;"	d
glGenFencesNV	glew.h	/^#define glGenFencesNV /;"	d
glGenFragmentShadersATI	glew.h	/^#define glGenFragmentShadersATI /;"	d
glGenFramebuffers	glew.h	/^#define glGenFramebuffers /;"	d
glGenFramebuffersEXT	glew.h	/^#define glGenFramebuffersEXT /;"	d
glGenNamesAMD	glew.h	/^#define glGenNamesAMD /;"	d
glGenOcclusionQueriesNV	glew.h	/^#define glGenOcclusionQueriesNV /;"	d
glGenPathsNV	glew.h	/^#define glGenPathsNV /;"	d
glGenPerfMonitorsAMD	glew.h	/^#define glGenPerfMonitorsAMD /;"	d
glGenProgramPipelines	glew.h	/^#define glGenProgramPipelines /;"	d
glGenProgramsARB	glew.h	/^#define glGenProgramsARB /;"	d
glGenProgramsNV	glew.h	/^#define glGenProgramsNV /;"	d
glGenQueries	glew.h	/^#define glGenQueries /;"	d
glGenQueriesANGLE	glew.h	/^#define glGenQueriesANGLE /;"	d
glGenQueriesARB	glew.h	/^#define glGenQueriesARB /;"	d
glGenRenderbuffers	glew.h	/^#define glGenRenderbuffers /;"	d
glGenRenderbuffersEXT	glew.h	/^#define glGenRenderbuffersEXT /;"	d
glGenSamplers	glew.h	/^#define glGenSamplers /;"	d
glGenSymbolsEXT	glew.h	/^#define glGenSymbolsEXT /;"	d
glGenTexturesEXT	glew.h	/^#define glGenTexturesEXT /;"	d
glGenTransformFeedbacks	glew.h	/^#define glGenTransformFeedbacks /;"	d
glGenTransformFeedbacksNV	glew.h	/^#define glGenTransformFeedbacksNV /;"	d
glGenVertexArrays	glew.h	/^#define glGenVertexArrays /;"	d
glGenVertexArraysAPPLE	glew.h	/^#define glGenVertexArraysAPPLE /;"	d
glGenVertexShadersEXT	glew.h	/^#define glGenVertexShadersEXT /;"	d
glGenerateMipmap	glew.h	/^#define glGenerateMipmap /;"	d
glGenerateMipmapEXT	glew.h	/^#define glGenerateMipmapEXT /;"	d
glGenerateMultiTexMipmapEXT	glew.h	/^#define glGenerateMultiTexMipmapEXT /;"	d
glGenerateTextureMipmap	glew.h	/^#define glGenerateTextureMipmap /;"	d
glGenerateTextureMipmapEXT	glew.h	/^#define glGenerateTextureMipmapEXT /;"	d
glGetActiveAtomicCounterBufferiv	glew.h	/^#define glGetActiveAtomicCounterBufferiv /;"	d
glGetActiveAttrib	glew.h	/^#define glGetActiveAttrib /;"	d
glGetActiveAttribARB	glew.h	/^#define glGetActiveAttribARB /;"	d
glGetActiveSubroutineName	glew.h	/^#define glGetActiveSubroutineName /;"	d
glGetActiveSubroutineUniformName	glew.h	/^#define glGetActiveSubroutineUniformName /;"	d
glGetActiveSubroutineUniformiv	glew.h	/^#define glGetActiveSubroutineUniformiv /;"	d
glGetActiveUniform	glew.h	/^#define glGetActiveUniform /;"	d
glGetActiveUniformARB	glew.h	/^#define glGetActiveUniformARB /;"	d
glGetActiveUniformBlockName	glew.h	/^#define glGetActiveUniformBlockName /;"	d
glGetActiveUniformBlockiv	glew.h	/^#define glGetActiveUniformBlockiv /;"	d
glGetActiveUniformName	glew.h	/^#define glGetActiveUniformName /;"	d
glGetActiveUniformsiv	glew.h	/^#define glGetActiveUniformsiv /;"	d
glGetActiveVaryingNV	glew.h	/^#define glGetActiveVaryingNV /;"	d
glGetArrayObjectfvATI	glew.h	/^#define glGetArrayObjectfvATI /;"	d
glGetArrayObjectivATI	glew.h	/^#define glGetArrayObjectivATI /;"	d
glGetAttachedObjectsARB	glew.h	/^#define glGetAttachedObjectsARB /;"	d
glGetAttachedShaders	glew.h	/^#define glGetAttachedShaders /;"	d
glGetAttribLocation	glew.h	/^#define glGetAttribLocation /;"	d
glGetAttribLocationARB	glew.h	/^#define glGetAttribLocationARB /;"	d
glGetBooleanIndexedvEXT	glew.h	/^#define glGetBooleanIndexedvEXT /;"	d
glGetBooleani_v	glew.h	/^#define glGetBooleani_v /;"	d
glGetBufferParameteri64v	glew.h	/^#define glGetBufferParameteri64v /;"	d
glGetBufferParameteriv	glew.h	/^#define glGetBufferParameteriv /;"	d
glGetBufferParameterivARB	glew.h	/^#define glGetBufferParameterivARB /;"	d
glGetBufferParameterui64vNV	glew.h	/^#define glGetBufferParameterui64vNV /;"	d
glGetBufferPointerv	glew.h	/^#define glGetBufferPointerv /;"	d
glGetBufferPointervARB	glew.h	/^#define glGetBufferPointervARB /;"	d
glGetBufferSubData	glew.h	/^#define glGetBufferSubData /;"	d
glGetBufferSubDataARB	glew.h	/^#define glGetBufferSubDataARB /;"	d
glGetClipPlanef	glew.h	/^#define glGetClipPlanef /;"	d
glGetClipPlanefOES	glew.h	/^#define glGetClipPlanefOES /;"	d
glGetClipPlanex	glew.h	/^#define glGetClipPlanex /;"	d
glGetColorTable	glew.h	/^#define glGetColorTable /;"	d
glGetColorTableEXT	glew.h	/^#define glGetColorTableEXT /;"	d
glGetColorTableParameterfv	glew.h	/^#define glGetColorTableParameterfv /;"	d
glGetColorTableParameterfvEXT	glew.h	/^#define glGetColorTableParameterfvEXT /;"	d
glGetColorTableParameterfvSGI	glew.h	/^#define glGetColorTableParameterfvSGI /;"	d
glGetColorTableParameteriv	glew.h	/^#define glGetColorTableParameteriv /;"	d
glGetColorTableParameterivEXT	glew.h	/^#define glGetColorTableParameterivEXT /;"	d
glGetColorTableParameterivSGI	glew.h	/^#define glGetColorTableParameterivSGI /;"	d
glGetColorTableSGI	glew.h	/^#define glGetColorTableSGI /;"	d
glGetCombinerInputParameterfvNV	glew.h	/^#define glGetCombinerInputParameterfvNV /;"	d
glGetCombinerInputParameterivNV	glew.h	/^#define glGetCombinerInputParameterivNV /;"	d
glGetCombinerOutputParameterfvNV	glew.h	/^#define glGetCombinerOutputParameterfvNV /;"	d
glGetCombinerOutputParameterivNV	glew.h	/^#define glGetCombinerOutputParameterivNV /;"	d
glGetCombinerStageParameterfvNV	glew.h	/^#define glGetCombinerStageParameterfvNV /;"	d
glGetCompressedMultiTexImageEXT	glew.h	/^#define glGetCompressedMultiTexImageEXT /;"	d
glGetCompressedTexImage	glew.h	/^#define glGetCompressedTexImage /;"	d
glGetCompressedTexImageARB	glew.h	/^#define glGetCompressedTexImageARB /;"	d
glGetCompressedTextureImage	glew.h	/^#define glGetCompressedTextureImage /;"	d
glGetCompressedTextureImageEXT	glew.h	/^#define glGetCompressedTextureImageEXT /;"	d
glGetCompressedTextureSubImage	glew.h	/^#define glGetCompressedTextureSubImage /;"	d
glGetConvolutionFilter	glew.h	/^#define glGetConvolutionFilter /;"	d
glGetConvolutionFilterEXT	glew.h	/^#define glGetConvolutionFilterEXT /;"	d
glGetConvolutionParameterfv	glew.h	/^#define glGetConvolutionParameterfv /;"	d
glGetConvolutionParameterfvEXT	glew.h	/^#define glGetConvolutionParameterfvEXT /;"	d
glGetConvolutionParameteriv	glew.h	/^#define glGetConvolutionParameteriv /;"	d
glGetConvolutionParameterivEXT	glew.h	/^#define glGetConvolutionParameterivEXT /;"	d
glGetDebugMessageLog	glew.h	/^#define glGetDebugMessageLog /;"	d
glGetDebugMessageLogAMD	glew.h	/^#define glGetDebugMessageLogAMD /;"	d
glGetDebugMessageLogARB	glew.h	/^#define glGetDebugMessageLogARB /;"	d
glGetDetailTexFuncSGIS	glew.h	/^#define glGetDetailTexFuncSGIS /;"	d
glGetDoubleIndexedvEXT	glew.h	/^#define glGetDoubleIndexedvEXT /;"	d
glGetDoublei_v	glew.h	/^#define glGetDoublei_v /;"	d
glGetDoublei_vEXT	glew.h	/^#define glGetDoublei_vEXT /;"	d
glGetExtensionREGAL	glew.h	/^#define glGetExtensionREGAL /;"	d
glGetFenceivNV	glew.h	/^#define glGetFenceivNV /;"	d
glGetFinalCombinerInputParameterfvNV	glew.h	/^#define glGetFinalCombinerInputParameterfvNV /;"	d
glGetFinalCombinerInputParameterivNV	glew.h	/^#define glGetFinalCombinerInputParameterivNV /;"	d
glGetFirstPerfQueryIdINTEL	glew.h	/^#define glGetFirstPerfQueryIdINTEL /;"	d
glGetFixedv	glew.h	/^#define glGetFixedv /;"	d
glGetFloatIndexedvEXT	glew.h	/^#define glGetFloatIndexedvEXT /;"	d
glGetFloati_v	glew.h	/^#define glGetFloati_v /;"	d
glGetFloati_vEXT	glew.h	/^#define glGetFloati_vEXT /;"	d
glGetFogFuncSGIS	glew.h	/^#define glGetFogFuncSGIS /;"	d
glGetFragDataIndex	glew.h	/^#define glGetFragDataIndex /;"	d
glGetFragDataLocation	glew.h	/^#define glGetFragDataLocation /;"	d
glGetFragDataLocationEXT	glew.h	/^#define glGetFragDataLocationEXT /;"	d
glGetFragmentLightfvEXT	glew.h	/^#define glGetFragmentLightfvEXT /;"	d
glGetFragmentLightfvSGIX	glew.h	/^#define glGetFragmentLightfvSGIX /;"	d
glGetFragmentLightivEXT	glew.h	/^#define glGetFragmentLightivEXT /;"	d
glGetFragmentLightivSGIX	glew.h	/^#define glGetFragmentLightivSGIX /;"	d
glGetFragmentMaterialfvEXT	glew.h	/^#define glGetFragmentMaterialfvEXT /;"	d
glGetFragmentMaterialfvSGIX	glew.h	/^#define glGetFragmentMaterialfvSGIX /;"	d
glGetFragmentMaterialivEXT	glew.h	/^#define glGetFragmentMaterialivEXT /;"	d
glGetFragmentMaterialivSGIX	glew.h	/^#define glGetFragmentMaterialivSGIX /;"	d
glGetFramebufferAttachmentParameteriv	glew.h	/^#define glGetFramebufferAttachmentParameteriv /;"	d
glGetFramebufferAttachmentParameterivEXT	glew.h	/^#define glGetFramebufferAttachmentParameterivEXT /;"	d
glGetFramebufferParameteriv	glew.h	/^#define glGetFramebufferParameteriv /;"	d
glGetFramebufferParameterivEXT	glew.h	/^#define glGetFramebufferParameterivEXT /;"	d
glGetGraphicsResetStatusARB	glew.h	/^#define glGetGraphicsResetStatusARB /;"	d
glGetHandleARB	glew.h	/^#define glGetHandleARB /;"	d
glGetHistogram	glew.h	/^#define glGetHistogram /;"	d
glGetHistogramEXT	glew.h	/^#define glGetHistogramEXT /;"	d
glGetHistogramParameterfv	glew.h	/^#define glGetHistogramParameterfv /;"	d
glGetHistogramParameterfvEXT	glew.h	/^#define glGetHistogramParameterfvEXT /;"	d
glGetHistogramParameteriv	glew.h	/^#define glGetHistogramParameteriv /;"	d
glGetHistogramParameterivEXT	glew.h	/^#define glGetHistogramParameterivEXT /;"	d
glGetImageHandleARB	glew.h	/^#define glGetImageHandleARB /;"	d
glGetImageHandleNV	glew.h	/^#define glGetImageHandleNV /;"	d
glGetImageTransformParameterfvHP	glew.h	/^#define glGetImageTransformParameterfvHP /;"	d
glGetImageTransformParameterivHP	glew.h	/^#define glGetImageTransformParameterivHP /;"	d
glGetInfoLogARB	glew.h	/^#define glGetInfoLogARB /;"	d
glGetInteger64i_v	glew.h	/^#define glGetInteger64i_v /;"	d
glGetInteger64v	glew.h	/^#define glGetInteger64v /;"	d
glGetIntegerIndexedvEXT	glew.h	/^#define glGetIntegerIndexedvEXT /;"	d
glGetIntegeri_v	glew.h	/^#define glGetIntegeri_v /;"	d
glGetIntegerui64i_vNV	glew.h	/^#define glGetIntegerui64i_vNV /;"	d
glGetIntegerui64vNV	glew.h	/^#define glGetIntegerui64vNV /;"	d
glGetInternalformati64v	glew.h	/^#define glGetInternalformati64v /;"	d
glGetInternalformativ	glew.h	/^#define glGetInternalformativ /;"	d
glGetInvariantBooleanvEXT	glew.h	/^#define glGetInvariantBooleanvEXT /;"	d
glGetInvariantFloatvEXT	glew.h	/^#define glGetInvariantFloatvEXT /;"	d
glGetInvariantIntegervEXT	glew.h	/^#define glGetInvariantIntegervEXT /;"	d
glGetLightxv	glew.h	/^#define glGetLightxv /;"	d
glGetLocalConstantBooleanvEXT	glew.h	/^#define glGetLocalConstantBooleanvEXT /;"	d
glGetLocalConstantFloatvEXT	glew.h	/^#define glGetLocalConstantFloatvEXT /;"	d
glGetLocalConstantIntegervEXT	glew.h	/^#define glGetLocalConstantIntegervEXT /;"	d
glGetMapAttribParameterfvNV	glew.h	/^#define glGetMapAttribParameterfvNV /;"	d
glGetMapAttribParameterivNV	glew.h	/^#define glGetMapAttribParameterivNV /;"	d
glGetMapControlPointsNV	glew.h	/^#define glGetMapControlPointsNV /;"	d
glGetMapParameterfvNV	glew.h	/^#define glGetMapParameterfvNV /;"	d
glGetMapParameterivNV	glew.h	/^#define glGetMapParameterivNV /;"	d
glGetMaterialxv	glew.h	/^#define glGetMaterialxv /;"	d
glGetMinmax	glew.h	/^#define glGetMinmax /;"	d
glGetMinmaxEXT	glew.h	/^#define glGetMinmaxEXT /;"	d
glGetMinmaxParameterfv	glew.h	/^#define glGetMinmaxParameterfv /;"	d
glGetMinmaxParameterfvEXT	glew.h	/^#define glGetMinmaxParameterfvEXT /;"	d
glGetMinmaxParameteriv	glew.h	/^#define glGetMinmaxParameteriv /;"	d
glGetMinmaxParameterivEXT	glew.h	/^#define glGetMinmaxParameterivEXT /;"	d
glGetMultiTexEnvfvEXT	glew.h	/^#define glGetMultiTexEnvfvEXT /;"	d
glGetMultiTexEnvivEXT	glew.h	/^#define glGetMultiTexEnvivEXT /;"	d
glGetMultiTexGendvEXT	glew.h	/^#define glGetMultiTexGendvEXT /;"	d
glGetMultiTexGenfvEXT	glew.h	/^#define glGetMultiTexGenfvEXT /;"	d
glGetMultiTexGenivEXT	glew.h	/^#define glGetMultiTexGenivEXT /;"	d
glGetMultiTexImageEXT	glew.h	/^#define glGetMultiTexImageEXT /;"	d
glGetMultiTexLevelParameterfvEXT	glew.h	/^#define glGetMultiTexLevelParameterfvEXT /;"	d
glGetMultiTexLevelParameterivEXT	glew.h	/^#define glGetMultiTexLevelParameterivEXT /;"	d
glGetMultiTexParameterIivEXT	glew.h	/^#define glGetMultiTexParameterIivEXT /;"	d
glGetMultiTexParameterIuivEXT	glew.h	/^#define glGetMultiTexParameterIuivEXT /;"	d
glGetMultiTexParameterfvEXT	glew.h	/^#define glGetMultiTexParameterfvEXT /;"	d
glGetMultiTexParameterivEXT	glew.h	/^#define glGetMultiTexParameterivEXT /;"	d
glGetMultisamplefv	glew.h	/^#define glGetMultisamplefv /;"	d
glGetMultisamplefvNV	glew.h	/^#define glGetMultisamplefvNV /;"	d
glGetNamedBufferParameteri64v	glew.h	/^#define glGetNamedBufferParameteri64v /;"	d
glGetNamedBufferParameteriv	glew.h	/^#define glGetNamedBufferParameteriv /;"	d
glGetNamedBufferParameterivEXT	glew.h	/^#define glGetNamedBufferParameterivEXT /;"	d
glGetNamedBufferParameterui64vNV	glew.h	/^#define glGetNamedBufferParameterui64vNV /;"	d
glGetNamedBufferPointerv	glew.h	/^#define glGetNamedBufferPointerv /;"	d
glGetNamedBufferPointervEXT	glew.h	/^#define glGetNamedBufferPointervEXT /;"	d
glGetNamedBufferSubData	glew.h	/^#define glGetNamedBufferSubData /;"	d
glGetNamedBufferSubDataEXT	glew.h	/^#define glGetNamedBufferSubDataEXT /;"	d
glGetNamedFramebufferAttachmentParameteriv	glew.h	/^#define glGetNamedFramebufferAttachmentParameteriv /;"	d
glGetNamedFramebufferAttachmentParameterivEXT	glew.h	/^#define glGetNamedFramebufferAttachmentParameterivEXT /;"	d
glGetNamedFramebufferParameteriv	glew.h	/^#define glGetNamedFramebufferParameteriv /;"	d
glGetNamedFramebufferParameterivEXT	glew.h	/^#define glGetNamedFramebufferParameterivEXT /;"	d
glGetNamedProgramLocalParameterIivEXT	glew.h	/^#define glGetNamedProgramLocalParameterIivEXT /;"	d
glGetNamedProgramLocalParameterIuivEXT	glew.h	/^#define glGetNamedProgramLocalParameterIuivEXT /;"	d
glGetNamedProgramLocalParameterdvEXT	glew.h	/^#define glGetNamedProgramLocalParameterdvEXT /;"	d
glGetNamedProgramLocalParameterfvEXT	glew.h	/^#define glGetNamedProgramLocalParameterfvEXT /;"	d
glGetNamedProgramStringEXT	glew.h	/^#define glGetNamedProgramStringEXT /;"	d
glGetNamedProgramivEXT	glew.h	/^#define glGetNamedProgramivEXT /;"	d
glGetNamedRenderbufferParameteriv	glew.h	/^#define glGetNamedRenderbufferParameteriv /;"	d
glGetNamedRenderbufferParameterivEXT	glew.h	/^#define glGetNamedRenderbufferParameterivEXT /;"	d
glGetNamedStringARB	glew.h	/^#define glGetNamedStringARB /;"	d
glGetNamedStringivARB	glew.h	/^#define glGetNamedStringivARB /;"	d
glGetNextPerfQueryIdINTEL	glew.h	/^#define glGetNextPerfQueryIdINTEL /;"	d
glGetObjectBufferfvATI	glew.h	/^#define glGetObjectBufferfvATI /;"	d
glGetObjectBufferivATI	glew.h	/^#define glGetObjectBufferivATI /;"	d
glGetObjectLabel	glew.h	/^#define glGetObjectLabel /;"	d
glGetObjectLabelEXT	glew.h	/^#define glGetObjectLabelEXT /;"	d
glGetObjectParameterfvARB	glew.h	/^#define glGetObjectParameterfvARB /;"	d
glGetObjectParameterivAPPLE	glew.h	/^#define glGetObjectParameterivAPPLE /;"	d
glGetObjectParameterivARB	glew.h	/^#define glGetObjectParameterivARB /;"	d
glGetObjectPtrLabel	glew.h	/^#define glGetObjectPtrLabel /;"	d
glGetOcclusionQueryivNV	glew.h	/^#define glGetOcclusionQueryivNV /;"	d
glGetOcclusionQueryuivNV	glew.h	/^#define glGetOcclusionQueryuivNV /;"	d
glGetPathColorGenfvNV	glew.h	/^#define glGetPathColorGenfvNV /;"	d
glGetPathColorGenivNV	glew.h	/^#define glGetPathColorGenivNV /;"	d
glGetPathCommandsNV	glew.h	/^#define glGetPathCommandsNV /;"	d
glGetPathCoordsNV	glew.h	/^#define glGetPathCoordsNV /;"	d
glGetPathDashArrayNV	glew.h	/^#define glGetPathDashArrayNV /;"	d
glGetPathLengthNV	glew.h	/^#define glGetPathLengthNV /;"	d
glGetPathMetricRangeNV	glew.h	/^#define glGetPathMetricRangeNV /;"	d
glGetPathMetricsNV	glew.h	/^#define glGetPathMetricsNV /;"	d
glGetPathParameterfvNV	glew.h	/^#define glGetPathParameterfvNV /;"	d
glGetPathParameterivNV	glew.h	/^#define glGetPathParameterivNV /;"	d
glGetPathSpacingNV	glew.h	/^#define glGetPathSpacingNV /;"	d
glGetPathTexGenfvNV	glew.h	/^#define glGetPathTexGenfvNV /;"	d
glGetPathTexGenivNV	glew.h	/^#define glGetPathTexGenivNV /;"	d
glGetPerfCounterInfoINTEL	glew.h	/^#define glGetPerfCounterInfoINTEL /;"	d
glGetPerfMonitorCounterDataAMD	glew.h	/^#define glGetPerfMonitorCounterDataAMD /;"	d
glGetPerfMonitorCounterInfoAMD	glew.h	/^#define glGetPerfMonitorCounterInfoAMD /;"	d
glGetPerfMonitorCounterStringAMD	glew.h	/^#define glGetPerfMonitorCounterStringAMD /;"	d
glGetPerfMonitorCountersAMD	glew.h	/^#define glGetPerfMonitorCountersAMD /;"	d
glGetPerfMonitorGroupStringAMD	glew.h	/^#define glGetPerfMonitorGroupStringAMD /;"	d
glGetPerfMonitorGroupsAMD	glew.h	/^#define glGetPerfMonitorGroupsAMD /;"	d
glGetPerfQueryDataINTEL	glew.h	/^#define glGetPerfQueryDataINTEL /;"	d
glGetPerfQueryIdByNameINTEL	glew.h	/^#define glGetPerfQueryIdByNameINTEL /;"	d
glGetPerfQueryInfoINTEL	glew.h	/^#define glGetPerfQueryInfoINTEL /;"	d
glGetPixelTransformParameterfvEXT	glew.h	/^#define glGetPixelTransformParameterfvEXT /;"	d
glGetPixelTransformParameterivEXT	glew.h	/^#define glGetPixelTransformParameterivEXT /;"	d
glGetPointerIndexedvEXT	glew.h	/^#define glGetPointerIndexedvEXT /;"	d
glGetPointeri_vEXT	glew.h	/^#define glGetPointeri_vEXT /;"	d
glGetProcAddressREGAL	glew.h	/^#define glGetProcAddressREGAL /;"	d
glGetProgramBinary	glew.h	/^#define glGetProgramBinary /;"	d
glGetProgramEnvParameterdvARB	glew.h	/^#define glGetProgramEnvParameterdvARB /;"	d
glGetProgramEnvParameterfvARB	glew.h	/^#define glGetProgramEnvParameterfvARB /;"	d
glGetProgramInfoLog	glew.h	/^#define glGetProgramInfoLog /;"	d
glGetProgramInterfaceiv	glew.h	/^#define glGetProgramInterfaceiv /;"	d
glGetProgramLocalParameterdvARB	glew.h	/^#define glGetProgramLocalParameterdvARB /;"	d
glGetProgramLocalParameterfvARB	glew.h	/^#define glGetProgramLocalParameterfvARB /;"	d
glGetProgramNamedParameterdvNV	glew.h	/^#define glGetProgramNamedParameterdvNV /;"	d
glGetProgramNamedParameterfvNV	glew.h	/^#define glGetProgramNamedParameterfvNV /;"	d
glGetProgramParameterdvNV	glew.h	/^#define glGetProgramParameterdvNV /;"	d
glGetProgramParameterfvNV	glew.h	/^#define glGetProgramParameterfvNV /;"	d
glGetProgramPipelineInfoLog	glew.h	/^#define glGetProgramPipelineInfoLog /;"	d
glGetProgramPipelineiv	glew.h	/^#define glGetProgramPipelineiv /;"	d
glGetProgramResourceIndex	glew.h	/^#define glGetProgramResourceIndex /;"	d
glGetProgramResourceLocation	glew.h	/^#define glGetProgramResourceLocation /;"	d
glGetProgramResourceLocationIndex	glew.h	/^#define glGetProgramResourceLocationIndex /;"	d
glGetProgramResourceName	glew.h	/^#define glGetProgramResourceName /;"	d
glGetProgramResourceiv	glew.h	/^#define glGetProgramResourceiv /;"	d
glGetProgramStageiv	glew.h	/^#define glGetProgramStageiv /;"	d
glGetProgramStringARB	glew.h	/^#define glGetProgramStringARB /;"	d
glGetProgramStringNV	glew.h	/^#define glGetProgramStringNV /;"	d
glGetProgramiv	glew.h	/^#define glGetProgramiv /;"	d
glGetProgramivARB	glew.h	/^#define glGetProgramivARB /;"	d
glGetProgramivNV	glew.h	/^#define glGetProgramivNV /;"	d
glGetQueryIndexediv	glew.h	/^#define glGetQueryIndexediv /;"	d
glGetQueryObjecti64v	glew.h	/^#define glGetQueryObjecti64v /;"	d
glGetQueryObjecti64vANGLE	glew.h	/^#define glGetQueryObjecti64vANGLE /;"	d
glGetQueryObjecti64vEXT	glew.h	/^#define glGetQueryObjecti64vEXT /;"	d
glGetQueryObjectiv	glew.h	/^#define glGetQueryObjectiv /;"	d
glGetQueryObjectivANGLE	glew.h	/^#define glGetQueryObjectivANGLE /;"	d
glGetQueryObjectivARB	glew.h	/^#define glGetQueryObjectivARB /;"	d
glGetQueryObjectui64v	glew.h	/^#define glGetQueryObjectui64v /;"	d
glGetQueryObjectui64vANGLE	glew.h	/^#define glGetQueryObjectui64vANGLE /;"	d
glGetQueryObjectui64vEXT	glew.h	/^#define glGetQueryObjectui64vEXT /;"	d
glGetQueryObjectuiv	glew.h	/^#define glGetQueryObjectuiv /;"	d
glGetQueryObjectuivANGLE	glew.h	/^#define glGetQueryObjectuivANGLE /;"	d
glGetQueryObjectuivARB	glew.h	/^#define glGetQueryObjectuivARB /;"	d
glGetQueryiv	glew.h	/^#define glGetQueryiv /;"	d
glGetQueryivANGLE	glew.h	/^#define glGetQueryivANGLE /;"	d
glGetQueryivARB	glew.h	/^#define glGetQueryivARB /;"	d
glGetRenderbufferParameteriv	glew.h	/^#define glGetRenderbufferParameteriv /;"	d
glGetRenderbufferParameterivEXT	glew.h	/^#define glGetRenderbufferParameterivEXT /;"	d
glGetSamplerParameterIiv	glew.h	/^#define glGetSamplerParameterIiv /;"	d
glGetSamplerParameterIuiv	glew.h	/^#define glGetSamplerParameterIuiv /;"	d
glGetSamplerParameterfv	glew.h	/^#define glGetSamplerParameterfv /;"	d
glGetSamplerParameteriv	glew.h	/^#define glGetSamplerParameteriv /;"	d
glGetSeparableFilter	glew.h	/^#define glGetSeparableFilter /;"	d
glGetSeparableFilterEXT	glew.h	/^#define glGetSeparableFilterEXT /;"	d
glGetShaderInfoLog	glew.h	/^#define glGetShaderInfoLog /;"	d
glGetShaderPrecisionFormat	glew.h	/^#define glGetShaderPrecisionFormat /;"	d
glGetShaderSource	glew.h	/^#define glGetShaderSource /;"	d
glGetShaderSourceARB	glew.h	/^#define glGetShaderSourceARB /;"	d
glGetShaderiv	glew.h	/^#define glGetShaderiv /;"	d
glGetSharpenTexFuncSGIS	glew.h	/^#define glGetSharpenTexFuncSGIS /;"	d
glGetStringi	glew.h	/^#define glGetStringi /;"	d
glGetSubroutineIndex	glew.h	/^#define glGetSubroutineIndex /;"	d
glGetSubroutineUniformLocation	glew.h	/^#define glGetSubroutineUniformLocation /;"	d
glGetSynciv	glew.h	/^#define glGetSynciv /;"	d
glGetTexBumpParameterfvATI	glew.h	/^#define glGetTexBumpParameterfvATI /;"	d
glGetTexBumpParameterivATI	glew.h	/^#define glGetTexBumpParameterivATI /;"	d
glGetTexEnvxv	glew.h	/^#define glGetTexEnvxv /;"	d
glGetTexFilterFuncSGIS	glew.h	/^#define glGetTexFilterFuncSGIS /;"	d
glGetTexParameterIiv	glew.h	/^#define glGetTexParameterIiv /;"	d
glGetTexParameterIivEXT	glew.h	/^#define glGetTexParameterIivEXT /;"	d
glGetTexParameterIuiv	glew.h	/^#define glGetTexParameterIuiv /;"	d
glGetTexParameterIuivEXT	glew.h	/^#define glGetTexParameterIuivEXT /;"	d
glGetTexParameterPointervAPPLE	glew.h	/^#define glGetTexParameterPointervAPPLE /;"	d
glGetTexParameterxv	glew.h	/^#define glGetTexParameterxv /;"	d
glGetTextureHandleARB	glew.h	/^#define glGetTextureHandleARB /;"	d
glGetTextureHandleNV	glew.h	/^#define glGetTextureHandleNV /;"	d
glGetTextureImage	glew.h	/^#define glGetTextureImage /;"	d
glGetTextureImageEXT	glew.h	/^#define glGetTextureImageEXT /;"	d
glGetTextureLevelParameterfv	glew.h	/^#define glGetTextureLevelParameterfv /;"	d
glGetTextureLevelParameterfvEXT	glew.h	/^#define glGetTextureLevelParameterfvEXT /;"	d
glGetTextureLevelParameteriv	glew.h	/^#define glGetTextureLevelParameteriv /;"	d
glGetTextureLevelParameterivEXT	glew.h	/^#define glGetTextureLevelParameterivEXT /;"	d
glGetTextureParameterIiv	glew.h	/^#define glGetTextureParameterIiv /;"	d
glGetTextureParameterIivEXT	glew.h	/^#define glGetTextureParameterIivEXT /;"	d
glGetTextureParameterIuiv	glew.h	/^#define glGetTextureParameterIuiv /;"	d
glGetTextureParameterIuivEXT	glew.h	/^#define glGetTextureParameterIuivEXT /;"	d
glGetTextureParameterfv	glew.h	/^#define glGetTextureParameterfv /;"	d
glGetTextureParameterfvEXT	glew.h	/^#define glGetTextureParameterfvEXT /;"	d
glGetTextureParameteriv	glew.h	/^#define glGetTextureParameteriv /;"	d
glGetTextureParameterivEXT	glew.h	/^#define glGetTextureParameterivEXT /;"	d
glGetTextureSamplerHandleARB	glew.h	/^#define glGetTextureSamplerHandleARB /;"	d
glGetTextureSamplerHandleNV	glew.h	/^#define glGetTextureSamplerHandleNV /;"	d
glGetTextureSubImage	glew.h	/^#define glGetTextureSubImage /;"	d
glGetTrackMatrixivNV	glew.h	/^#define glGetTrackMatrixivNV /;"	d
glGetTransformFeedbackVarying	glew.h	/^#define glGetTransformFeedbackVarying /;"	d
glGetTransformFeedbackVaryingEXT	glew.h	/^#define glGetTransformFeedbackVaryingEXT /;"	d
glGetTransformFeedbackVaryingNV	glew.h	/^#define glGetTransformFeedbackVaryingNV /;"	d
glGetTransformFeedbacki64_v	glew.h	/^#define glGetTransformFeedbacki64_v /;"	d
glGetTransformFeedbacki_v	glew.h	/^#define glGetTransformFeedbacki_v /;"	d
glGetTransformFeedbackiv	glew.h	/^#define glGetTransformFeedbackiv /;"	d
glGetTranslatedShaderSourceANGLE	glew.h	/^#define glGetTranslatedShaderSourceANGLE /;"	d
glGetUniformBlockIndex	glew.h	/^#define glGetUniformBlockIndex /;"	d
glGetUniformBufferSizeEXT	glew.h	/^#define glGetUniformBufferSizeEXT /;"	d
glGetUniformIndices	glew.h	/^#define glGetUniformIndices /;"	d
glGetUniformLocation	glew.h	/^#define glGetUniformLocation /;"	d
glGetUniformLocationARB	glew.h	/^#define glGetUniformLocationARB /;"	d
glGetUniformOffsetEXT	glew.h	/^#define glGetUniformOffsetEXT /;"	d
glGetUniformSubroutineuiv	glew.h	/^#define glGetUniformSubroutineuiv /;"	d
glGetUniformdv	glew.h	/^#define glGetUniformdv /;"	d
glGetUniformfv	glew.h	/^#define glGetUniformfv /;"	d
glGetUniformfvARB	glew.h	/^#define glGetUniformfvARB /;"	d
glGetUniformi64vNV	glew.h	/^#define glGetUniformi64vNV /;"	d
glGetUniformiv	glew.h	/^#define glGetUniformiv /;"	d
glGetUniformivARB	glew.h	/^#define glGetUniformivARB /;"	d
glGetUniformui64vNV	glew.h	/^#define glGetUniformui64vNV /;"	d
glGetUniformuiv	glew.h	/^#define glGetUniformuiv /;"	d
glGetUniformuivEXT	glew.h	/^#define glGetUniformuivEXT /;"	d
glGetVariantArrayObjectfvATI	glew.h	/^#define glGetVariantArrayObjectfvATI /;"	d
glGetVariantArrayObjectivATI	glew.h	/^#define glGetVariantArrayObjectivATI /;"	d
glGetVariantBooleanvEXT	glew.h	/^#define glGetVariantBooleanvEXT /;"	d
glGetVariantFloatvEXT	glew.h	/^#define glGetVariantFloatvEXT /;"	d
glGetVariantIntegervEXT	glew.h	/^#define glGetVariantIntegervEXT /;"	d
glGetVariantPointervEXT	glew.h	/^#define glGetVariantPointervEXT /;"	d
glGetVaryingLocationNV	glew.h	/^#define glGetVaryingLocationNV /;"	d
glGetVertexArrayIndexed64iv	glew.h	/^#define glGetVertexArrayIndexed64iv /;"	d
glGetVertexArrayIndexediv	glew.h	/^#define glGetVertexArrayIndexediv /;"	d
glGetVertexArrayIntegeri_vEXT	glew.h	/^#define glGetVertexArrayIntegeri_vEXT /;"	d
glGetVertexArrayIntegervEXT	glew.h	/^#define glGetVertexArrayIntegervEXT /;"	d
glGetVertexArrayPointeri_vEXT	glew.h	/^#define glGetVertexArrayPointeri_vEXT /;"	d
glGetVertexArrayPointervEXT	glew.h	/^#define glGetVertexArrayPointervEXT /;"	d
glGetVertexArrayiv	glew.h	/^#define glGetVertexArrayiv /;"	d
glGetVertexAttribArrayObjectfvATI	glew.h	/^#define glGetVertexAttribArrayObjectfvATI /;"	d
glGetVertexAttribArrayObjectivATI	glew.h	/^#define glGetVertexAttribArrayObjectivATI /;"	d
glGetVertexAttribIiv	glew.h	/^#define glGetVertexAttribIiv /;"	d
glGetVertexAttribIivEXT	glew.h	/^#define glGetVertexAttribIivEXT /;"	d
glGetVertexAttribIuiv	glew.h	/^#define glGetVertexAttribIuiv /;"	d
glGetVertexAttribIuivEXT	glew.h	/^#define glGetVertexAttribIuivEXT /;"	d
glGetVertexAttribLdv	glew.h	/^#define glGetVertexAttribLdv /;"	d
glGetVertexAttribLdvEXT	glew.h	/^#define glGetVertexAttribLdvEXT /;"	d
glGetVertexAttribLi64vNV	glew.h	/^#define glGetVertexAttribLi64vNV /;"	d
glGetVertexAttribLui64vARB	glew.h	/^#define glGetVertexAttribLui64vARB /;"	d
glGetVertexAttribLui64vNV	glew.h	/^#define glGetVertexAttribLui64vNV /;"	d
glGetVertexAttribPointerv	glew.h	/^#define glGetVertexAttribPointerv /;"	d
glGetVertexAttribPointervARB	glew.h	/^#define glGetVertexAttribPointervARB /;"	d
glGetVertexAttribPointervNV	glew.h	/^#define glGetVertexAttribPointervNV /;"	d
glGetVertexAttribdv	glew.h	/^#define glGetVertexAttribdv /;"	d
glGetVertexAttribdvARB	glew.h	/^#define glGetVertexAttribdvARB /;"	d
glGetVertexAttribdvNV	glew.h	/^#define glGetVertexAttribdvNV /;"	d
glGetVertexAttribfv	glew.h	/^#define glGetVertexAttribfv /;"	d
glGetVertexAttribfvARB	glew.h	/^#define glGetVertexAttribfvARB /;"	d
glGetVertexAttribfvNV	glew.h	/^#define glGetVertexAttribfvNV /;"	d
glGetVertexAttribiv	glew.h	/^#define glGetVertexAttribiv /;"	d
glGetVertexAttribivARB	glew.h	/^#define glGetVertexAttribivARB /;"	d
glGetVertexAttribivNV	glew.h	/^#define glGetVertexAttribivNV /;"	d
glGetVideoCaptureStreamdvNV	glew.h	/^#define glGetVideoCaptureStreamdvNV /;"	d
glGetVideoCaptureStreamfvNV	glew.h	/^#define glGetVideoCaptureStreamfvNV /;"	d
glGetVideoCaptureStreamivNV	glew.h	/^#define glGetVideoCaptureStreamivNV /;"	d
glGetVideoCaptureivNV	glew.h	/^#define glGetVideoCaptureivNV /;"	d
glGetVideoi64vNV	glew.h	/^#define glGetVideoi64vNV /;"	d
glGetVideoivNV	glew.h	/^#define glGetVideoivNV /;"	d
glGetVideoui64vNV	glew.h	/^#define glGetVideoui64vNV /;"	d
glGetVideouivNV	glew.h	/^#define glGetVideouivNV /;"	d
glGetnColorTableARB	glew.h	/^#define glGetnColorTableARB /;"	d
glGetnCompressedTexImageARB	glew.h	/^#define glGetnCompressedTexImageARB /;"	d
glGetnConvolutionFilterARB	glew.h	/^#define glGetnConvolutionFilterARB /;"	d
glGetnHistogramARB	glew.h	/^#define glGetnHistogramARB /;"	d
glGetnMapdvARB	glew.h	/^#define glGetnMapdvARB /;"	d
glGetnMapfvARB	glew.h	/^#define glGetnMapfvARB /;"	d
glGetnMapivARB	glew.h	/^#define glGetnMapivARB /;"	d
glGetnMinmaxARB	glew.h	/^#define glGetnMinmaxARB /;"	d
glGetnPixelMapfvARB	glew.h	/^#define glGetnPixelMapfvARB /;"	d
glGetnPixelMapuivARB	glew.h	/^#define glGetnPixelMapuivARB /;"	d
glGetnPixelMapusvARB	glew.h	/^#define glGetnPixelMapusvARB /;"	d
glGetnPolygonStippleARB	glew.h	/^#define glGetnPolygonStippleARB /;"	d
glGetnSeparableFilterARB	glew.h	/^#define glGetnSeparableFilterARB /;"	d
glGetnTexImageARB	glew.h	/^#define glGetnTexImageARB /;"	d
glGetnUniformdvARB	glew.h	/^#define glGetnUniformdvARB /;"	d
glGetnUniformfv	glew.h	/^#define glGetnUniformfv /;"	d
glGetnUniformfvARB	glew.h	/^#define glGetnUniformfvARB /;"	d
glGetnUniformiv	glew.h	/^#define glGetnUniformiv /;"	d
glGetnUniformivARB	glew.h	/^#define glGetnUniformivARB /;"	d
glGetnUniformuiv	glew.h	/^#define glGetnUniformuiv /;"	d
glGetnUniformuivARB	glew.h	/^#define glGetnUniformuivARB /;"	d
glGlobalAlphaFactorbSUN	glew.h	/^#define glGlobalAlphaFactorbSUN /;"	d
glGlobalAlphaFactordSUN	glew.h	/^#define glGlobalAlphaFactordSUN /;"	d
glGlobalAlphaFactorfSUN	glew.h	/^#define glGlobalAlphaFactorfSUN /;"	d
glGlobalAlphaFactoriSUN	glew.h	/^#define glGlobalAlphaFactoriSUN /;"	d
glGlobalAlphaFactorsSUN	glew.h	/^#define glGlobalAlphaFactorsSUN /;"	d
glGlobalAlphaFactorubSUN	glew.h	/^#define glGlobalAlphaFactorubSUN /;"	d
glGlobalAlphaFactoruiSUN	glew.h	/^#define glGlobalAlphaFactoruiSUN /;"	d
glGlobalAlphaFactorusSUN	glew.h	/^#define glGlobalAlphaFactorusSUN /;"	d
glHistogram	glew.h	/^#define glHistogram /;"	d
glHistogramEXT	glew.h	/^#define glHistogramEXT /;"	d
glImageTransformParameterfHP	glew.h	/^#define glImageTransformParameterfHP /;"	d
glImageTransformParameterfvHP	glew.h	/^#define glImageTransformParameterfvHP /;"	d
glImageTransformParameteriHP	glew.h	/^#define glImageTransformParameteriHP /;"	d
glImageTransformParameterivHP	glew.h	/^#define glImageTransformParameterivHP /;"	d
glImportSyncEXT	glew.h	/^#define glImportSyncEXT /;"	d
glIndexFormatNV	glew.h	/^#define glIndexFormatNV /;"	d
glIndexFuncEXT	glew.h	/^#define glIndexFuncEXT /;"	d
glIndexMaterialEXT	glew.h	/^#define glIndexMaterialEXT /;"	d
glIndexPointerEXT	glew.h	/^#define glIndexPointerEXT /;"	d
glIndexPointerListIBM	glew.h	/^#define glIndexPointerListIBM /;"	d
glInsertComponentEXT	glew.h	/^#define glInsertComponentEXT /;"	d
glInsertEventMarkerEXT	glew.h	/^#define glInsertEventMarkerEXT /;"	d
glInterpolatePathsNV	glew.h	/^#define glInterpolatePathsNV /;"	d
glInvalidateBufferData	glew.h	/^#define glInvalidateBufferData /;"	d
glInvalidateBufferSubData	glew.h	/^#define glInvalidateBufferSubData /;"	d
glInvalidateFramebuffer	glew.h	/^#define glInvalidateFramebuffer /;"	d
glInvalidateNamedFramebufferData	glew.h	/^#define glInvalidateNamedFramebufferData /;"	d
glInvalidateNamedFramebufferSubData	glew.h	/^#define glInvalidateNamedFramebufferSubData /;"	d
glInvalidateSubFramebuffer	glew.h	/^#define glInvalidateSubFramebuffer /;"	d
glInvalidateTexImage	glew.h	/^#define glInvalidateTexImage /;"	d
glInvalidateTexSubImage	glew.h	/^#define glInvalidateTexSubImage /;"	d
glIsAsyncMarkerSGIX	glew.h	/^#define glIsAsyncMarkerSGIX /;"	d
glIsBuffer	glew.h	/^#define glIsBuffer /;"	d
glIsBufferARB	glew.h	/^#define glIsBufferARB /;"	d
glIsBufferResidentNV	glew.h	/^#define glIsBufferResidentNV /;"	d
glIsEnabledIndexedEXT	glew.h	/^#define glIsEnabledIndexedEXT /;"	d
glIsEnabledi	glew.h	/^#define glIsEnabledi /;"	d
glIsFenceAPPLE	glew.h	/^#define glIsFenceAPPLE /;"	d
glIsFenceNV	glew.h	/^#define glIsFenceNV /;"	d
glIsFramebuffer	glew.h	/^#define glIsFramebuffer /;"	d
glIsFramebufferEXT	glew.h	/^#define glIsFramebufferEXT /;"	d
glIsImageHandleResidentARB	glew.h	/^#define glIsImageHandleResidentARB /;"	d
glIsImageHandleResidentNV	glew.h	/^#define glIsImageHandleResidentNV /;"	d
glIsNameAMD	glew.h	/^#define glIsNameAMD /;"	d
glIsNamedBufferResidentNV	glew.h	/^#define glIsNamedBufferResidentNV /;"	d
glIsNamedStringARB	glew.h	/^#define glIsNamedStringARB /;"	d
glIsObjectBufferATI	glew.h	/^#define glIsObjectBufferATI /;"	d
glIsOcclusionQueryNV	glew.h	/^#define glIsOcclusionQueryNV /;"	d
glIsPathNV	glew.h	/^#define glIsPathNV /;"	d
glIsPointInFillPathNV	glew.h	/^#define glIsPointInFillPathNV /;"	d
glIsPointInStrokePathNV	glew.h	/^#define glIsPointInStrokePathNV /;"	d
glIsProgram	glew.h	/^#define glIsProgram /;"	d
glIsProgramARB	glew.h	/^#define glIsProgramARB /;"	d
glIsProgramNV	glew.h	/^#define glIsProgramNV /;"	d
glIsProgramPipeline	glew.h	/^#define glIsProgramPipeline /;"	d
glIsQuery	glew.h	/^#define glIsQuery /;"	d
glIsQueryANGLE	glew.h	/^#define glIsQueryANGLE /;"	d
glIsQueryARB	glew.h	/^#define glIsQueryARB /;"	d
glIsRenderbuffer	glew.h	/^#define glIsRenderbuffer /;"	d
glIsRenderbufferEXT	glew.h	/^#define glIsRenderbufferEXT /;"	d
glIsSampler	glew.h	/^#define glIsSampler /;"	d
glIsShader	glew.h	/^#define glIsShader /;"	d
glIsSupportedREGAL	glew.h	/^#define glIsSupportedREGAL /;"	d
glIsSync	glew.h	/^#define glIsSync /;"	d
glIsTextureEXT	glew.h	/^#define glIsTextureEXT /;"	d
glIsTextureHandleResidentARB	glew.h	/^#define glIsTextureHandleResidentARB /;"	d
glIsTextureHandleResidentNV	glew.h	/^#define glIsTextureHandleResidentNV /;"	d
glIsTransformFeedback	glew.h	/^#define glIsTransformFeedback /;"	d
glIsTransformFeedbackNV	glew.h	/^#define glIsTransformFeedbackNV /;"	d
glIsVariantEnabledEXT	glew.h	/^#define glIsVariantEnabledEXT /;"	d
glIsVertexArray	glew.h	/^#define glIsVertexArray /;"	d
glIsVertexArrayAPPLE	glew.h	/^#define glIsVertexArrayAPPLE /;"	d
glIsVertexAttribEnabledAPPLE	glew.h	/^#define glIsVertexAttribEnabledAPPLE /;"	d
glLabelObjectEXT	glew.h	/^#define glLabelObjectEXT /;"	d
glLightEnviEXT	glew.h	/^#define glLightEnviEXT /;"	d
glLightModelx	glew.h	/^#define glLightModelx /;"	d
glLightModelxv	glew.h	/^#define glLightModelxv /;"	d
glLightx	glew.h	/^#define glLightx /;"	d
glLightxv	glew.h	/^#define glLightxv /;"	d
glLineWidthx	glew.h	/^#define glLineWidthx /;"	d
glLinkProgram	glew.h	/^#define glLinkProgram /;"	d
glLinkProgramARB	glew.h	/^#define glLinkProgramARB /;"	d
glLoadMatrixx	glew.h	/^#define glLoadMatrixx /;"	d
glLoadProgramNV	glew.h	/^#define glLoadProgramNV /;"	d
glLoadTransposeMatrixd	glew.h	/^#define glLoadTransposeMatrixd /;"	d
glLoadTransposeMatrixdARB	glew.h	/^#define glLoadTransposeMatrixdARB /;"	d
glLoadTransposeMatrixf	glew.h	/^#define glLoadTransposeMatrixf /;"	d
glLoadTransposeMatrixfARB	glew.h	/^#define glLoadTransposeMatrixfARB /;"	d
glLockArraysEXT	glew.h	/^#define glLockArraysEXT /;"	d
glLogMessageCallbackREGAL	glew.h	/^#define glLogMessageCallbackREGAL /;"	d
glMakeBufferNonResidentNV	glew.h	/^#define glMakeBufferNonResidentNV /;"	d
glMakeBufferResidentNV	glew.h	/^#define glMakeBufferResidentNV /;"	d
glMakeImageHandleNonResidentARB	glew.h	/^#define glMakeImageHandleNonResidentARB /;"	d
glMakeImageHandleNonResidentNV	glew.h	/^#define glMakeImageHandleNonResidentNV /;"	d
glMakeImageHandleResidentARB	glew.h	/^#define glMakeImageHandleResidentARB /;"	d
glMakeImageHandleResidentNV	glew.h	/^#define glMakeImageHandleResidentNV /;"	d
glMakeNamedBufferNonResidentNV	glew.h	/^#define glMakeNamedBufferNonResidentNV /;"	d
glMakeNamedBufferResidentNV	glew.h	/^#define glMakeNamedBufferResidentNV /;"	d
glMakeTextureHandleNonResidentARB	glew.h	/^#define glMakeTextureHandleNonResidentARB /;"	d
glMakeTextureHandleNonResidentNV	glew.h	/^#define glMakeTextureHandleNonResidentNV /;"	d
glMakeTextureHandleResidentARB	glew.h	/^#define glMakeTextureHandleResidentARB /;"	d
glMakeTextureHandleResidentNV	glew.h	/^#define glMakeTextureHandleResidentNV /;"	d
glMapBuffer	glew.h	/^#define glMapBuffer /;"	d
glMapBufferARB	glew.h	/^#define glMapBufferARB /;"	d
glMapBufferRange	glew.h	/^#define glMapBufferRange /;"	d
glMapControlPointsNV	glew.h	/^#define glMapControlPointsNV /;"	d
glMapNamedBuffer	glew.h	/^#define glMapNamedBuffer /;"	d
glMapNamedBufferEXT	glew.h	/^#define glMapNamedBufferEXT /;"	d
glMapNamedBufferRange	glew.h	/^#define glMapNamedBufferRange /;"	d
glMapNamedBufferRangeEXT	glew.h	/^#define glMapNamedBufferRangeEXT /;"	d
glMapObjectBufferATI	glew.h	/^#define glMapObjectBufferATI /;"	d
glMapParameterfvNV	glew.h	/^#define glMapParameterfvNV /;"	d
glMapParameterivNV	glew.h	/^#define glMapParameterivNV /;"	d
glMapTexture2DINTEL	glew.h	/^#define glMapTexture2DINTEL /;"	d
glMapVertexAttrib1dAPPLE	glew.h	/^#define glMapVertexAttrib1dAPPLE /;"	d
glMapVertexAttrib1fAPPLE	glew.h	/^#define glMapVertexAttrib1fAPPLE /;"	d
glMapVertexAttrib2dAPPLE	glew.h	/^#define glMapVertexAttrib2dAPPLE /;"	d
glMapVertexAttrib2fAPPLE	glew.h	/^#define glMapVertexAttrib2fAPPLE /;"	d
glMaterialx	glew.h	/^#define glMaterialx /;"	d
glMaterialxv	glew.h	/^#define glMaterialxv /;"	d
glMatrixFrustumEXT	glew.h	/^#define glMatrixFrustumEXT /;"	d
glMatrixIndexPointerARB	glew.h	/^#define glMatrixIndexPointerARB /;"	d
glMatrixIndexubvARB	glew.h	/^#define glMatrixIndexubvARB /;"	d
glMatrixIndexuivARB	glew.h	/^#define glMatrixIndexuivARB /;"	d
glMatrixIndexusvARB	glew.h	/^#define glMatrixIndexusvARB /;"	d
glMatrixLoadIdentityEXT	glew.h	/^#define glMatrixLoadIdentityEXT /;"	d
glMatrixLoadTransposedEXT	glew.h	/^#define glMatrixLoadTransposedEXT /;"	d
glMatrixLoadTransposefEXT	glew.h	/^#define glMatrixLoadTransposefEXT /;"	d
glMatrixLoaddEXT	glew.h	/^#define glMatrixLoaddEXT /;"	d
glMatrixLoadfEXT	glew.h	/^#define glMatrixLoadfEXT /;"	d
glMatrixMultTransposedEXT	glew.h	/^#define glMatrixMultTransposedEXT /;"	d
glMatrixMultTransposefEXT	glew.h	/^#define glMatrixMultTransposefEXT /;"	d
glMatrixMultdEXT	glew.h	/^#define glMatrixMultdEXT /;"	d
glMatrixMultfEXT	glew.h	/^#define glMatrixMultfEXT /;"	d
glMatrixOrthoEXT	glew.h	/^#define glMatrixOrthoEXT /;"	d
glMatrixPopEXT	glew.h	/^#define glMatrixPopEXT /;"	d
glMatrixPushEXT	glew.h	/^#define glMatrixPushEXT /;"	d
glMatrixRotatedEXT	glew.h	/^#define glMatrixRotatedEXT /;"	d
glMatrixRotatefEXT	glew.h	/^#define glMatrixRotatefEXT /;"	d
glMatrixScaledEXT	glew.h	/^#define glMatrixScaledEXT /;"	d
glMatrixScalefEXT	glew.h	/^#define glMatrixScalefEXT /;"	d
glMatrixTranslatedEXT	glew.h	/^#define glMatrixTranslatedEXT /;"	d
glMatrixTranslatefEXT	glew.h	/^#define glMatrixTranslatefEXT /;"	d
glMemoryBarrier	glew.h	/^#define glMemoryBarrier /;"	d
glMemoryBarrierByRegion	glew.h	/^#define glMemoryBarrierByRegion /;"	d
glMemoryBarrierEXT	glew.h	/^#define glMemoryBarrierEXT /;"	d
glMinSampleShading	glew.h	/^#define glMinSampleShading /;"	d
glMinSampleShadingARB	glew.h	/^#define glMinSampleShadingARB /;"	d
glMinmax	glew.h	/^#define glMinmax /;"	d
glMinmaxEXT	glew.h	/^#define glMinmaxEXT /;"	d
glMultMatrixx	glew.h	/^#define glMultMatrixx /;"	d
glMultTransposeMatrixd	glew.h	/^#define glMultTransposeMatrixd /;"	d
glMultTransposeMatrixdARB	glew.h	/^#define glMultTransposeMatrixdARB /;"	d
glMultTransposeMatrixf	glew.h	/^#define glMultTransposeMatrixf /;"	d
glMultTransposeMatrixfARB	glew.h	/^#define glMultTransposeMatrixfARB /;"	d
glMultiDrawArrays	glew.h	/^#define glMultiDrawArrays /;"	d
glMultiDrawArraysEXT	glew.h	/^#define glMultiDrawArraysEXT /;"	d
glMultiDrawArraysIndirect	glew.h	/^#define glMultiDrawArraysIndirect /;"	d
glMultiDrawArraysIndirectAMD	glew.h	/^#define glMultiDrawArraysIndirectAMD /;"	d
glMultiDrawArraysIndirectBindlessCountNV	glew.h	/^#define glMultiDrawArraysIndirectBindlessCountNV /;"	d
glMultiDrawArraysIndirectBindlessNV	glew.h	/^#define glMultiDrawArraysIndirectBindlessNV /;"	d
glMultiDrawArraysIndirectCountARB	glew.h	/^#define glMultiDrawArraysIndirectCountARB /;"	d
glMultiDrawElementArrayAPPLE	glew.h	/^#define glMultiDrawElementArrayAPPLE /;"	d
glMultiDrawElements	glew.h	/^#define glMultiDrawElements /;"	d
glMultiDrawElementsBaseVertex	glew.h	/^#define glMultiDrawElementsBaseVertex /;"	d
glMultiDrawElementsEXT	glew.h	/^#define glMultiDrawElementsEXT /;"	d
glMultiDrawElementsIndirect	glew.h	/^#define glMultiDrawElementsIndirect /;"	d
glMultiDrawElementsIndirectAMD	glew.h	/^#define glMultiDrawElementsIndirectAMD /;"	d
glMultiDrawElementsIndirectBindlessCountNV	glew.h	/^#define glMultiDrawElementsIndirectBindlessCountNV /;"	d
glMultiDrawElementsIndirectBindlessNV	glew.h	/^#define glMultiDrawElementsIndirectBindlessNV /;"	d
glMultiDrawElementsIndirectCountARB	glew.h	/^#define glMultiDrawElementsIndirectCountARB /;"	d
glMultiDrawRangeElementArrayAPPLE	glew.h	/^#define glMultiDrawRangeElementArrayAPPLE /;"	d
glMultiModeDrawArraysIBM	glew.h	/^#define glMultiModeDrawArraysIBM /;"	d
glMultiModeDrawElementsIBM	glew.h	/^#define glMultiModeDrawElementsIBM /;"	d
glMultiTexBufferEXT	glew.h	/^#define glMultiTexBufferEXT /;"	d
glMultiTexCoord1d	glew.h	/^#define glMultiTexCoord1d /;"	d
glMultiTexCoord1dARB	glew.h	/^#define glMultiTexCoord1dARB /;"	d
glMultiTexCoord1dv	glew.h	/^#define glMultiTexCoord1dv /;"	d
glMultiTexCoord1dvARB	glew.h	/^#define glMultiTexCoord1dvARB /;"	d
glMultiTexCoord1f	glew.h	/^#define glMultiTexCoord1f /;"	d
glMultiTexCoord1fARB	glew.h	/^#define glMultiTexCoord1fARB /;"	d
glMultiTexCoord1fv	glew.h	/^#define glMultiTexCoord1fv /;"	d
glMultiTexCoord1fvARB	glew.h	/^#define glMultiTexCoord1fvARB /;"	d
glMultiTexCoord1hNV	glew.h	/^#define glMultiTexCoord1hNV /;"	d
glMultiTexCoord1hvNV	glew.h	/^#define glMultiTexCoord1hvNV /;"	d
glMultiTexCoord1i	glew.h	/^#define glMultiTexCoord1i /;"	d
glMultiTexCoord1iARB	glew.h	/^#define glMultiTexCoord1iARB /;"	d
glMultiTexCoord1iv	glew.h	/^#define glMultiTexCoord1iv /;"	d
glMultiTexCoord1ivARB	glew.h	/^#define glMultiTexCoord1ivARB /;"	d
glMultiTexCoord1s	glew.h	/^#define glMultiTexCoord1s /;"	d
glMultiTexCoord1sARB	glew.h	/^#define glMultiTexCoord1sARB /;"	d
glMultiTexCoord1sv	glew.h	/^#define glMultiTexCoord1sv /;"	d
glMultiTexCoord1svARB	glew.h	/^#define glMultiTexCoord1svARB /;"	d
glMultiTexCoord2d	glew.h	/^#define glMultiTexCoord2d /;"	d
glMultiTexCoord2dARB	glew.h	/^#define glMultiTexCoord2dARB /;"	d
glMultiTexCoord2dv	glew.h	/^#define glMultiTexCoord2dv /;"	d
glMultiTexCoord2dvARB	glew.h	/^#define glMultiTexCoord2dvARB /;"	d
glMultiTexCoord2f	glew.h	/^#define glMultiTexCoord2f /;"	d
glMultiTexCoord2fARB	glew.h	/^#define glMultiTexCoord2fARB /;"	d
glMultiTexCoord2fv	glew.h	/^#define glMultiTexCoord2fv /;"	d
glMultiTexCoord2fvARB	glew.h	/^#define glMultiTexCoord2fvARB /;"	d
glMultiTexCoord2hNV	glew.h	/^#define glMultiTexCoord2hNV /;"	d
glMultiTexCoord2hvNV	glew.h	/^#define glMultiTexCoord2hvNV /;"	d
glMultiTexCoord2i	glew.h	/^#define glMultiTexCoord2i /;"	d
glMultiTexCoord2iARB	glew.h	/^#define glMultiTexCoord2iARB /;"	d
glMultiTexCoord2iv	glew.h	/^#define glMultiTexCoord2iv /;"	d
glMultiTexCoord2ivARB	glew.h	/^#define glMultiTexCoord2ivARB /;"	d
glMultiTexCoord2s	glew.h	/^#define glMultiTexCoord2s /;"	d
glMultiTexCoord2sARB	glew.h	/^#define glMultiTexCoord2sARB /;"	d
glMultiTexCoord2sv	glew.h	/^#define glMultiTexCoord2sv /;"	d
glMultiTexCoord2svARB	glew.h	/^#define glMultiTexCoord2svARB /;"	d
glMultiTexCoord3d	glew.h	/^#define glMultiTexCoord3d /;"	d
glMultiTexCoord3dARB	glew.h	/^#define glMultiTexCoord3dARB /;"	d
glMultiTexCoord3dv	glew.h	/^#define glMultiTexCoord3dv /;"	d
glMultiTexCoord3dvARB	glew.h	/^#define glMultiTexCoord3dvARB /;"	d
glMultiTexCoord3f	glew.h	/^#define glMultiTexCoord3f /;"	d
glMultiTexCoord3fARB	glew.h	/^#define glMultiTexCoord3fARB /;"	d
glMultiTexCoord3fv	glew.h	/^#define glMultiTexCoord3fv /;"	d
glMultiTexCoord3fvARB	glew.h	/^#define glMultiTexCoord3fvARB /;"	d
glMultiTexCoord3hNV	glew.h	/^#define glMultiTexCoord3hNV /;"	d
glMultiTexCoord3hvNV	glew.h	/^#define glMultiTexCoord3hvNV /;"	d
glMultiTexCoord3i	glew.h	/^#define glMultiTexCoord3i /;"	d
glMultiTexCoord3iARB	glew.h	/^#define glMultiTexCoord3iARB /;"	d
glMultiTexCoord3iv	glew.h	/^#define glMultiTexCoord3iv /;"	d
glMultiTexCoord3ivARB	glew.h	/^#define glMultiTexCoord3ivARB /;"	d
glMultiTexCoord3s	glew.h	/^#define glMultiTexCoord3s /;"	d
glMultiTexCoord3sARB	glew.h	/^#define glMultiTexCoord3sARB /;"	d
glMultiTexCoord3sv	glew.h	/^#define glMultiTexCoord3sv /;"	d
glMultiTexCoord3svARB	glew.h	/^#define glMultiTexCoord3svARB /;"	d
glMultiTexCoord4d	glew.h	/^#define glMultiTexCoord4d /;"	d
glMultiTexCoord4dARB	glew.h	/^#define glMultiTexCoord4dARB /;"	d
glMultiTexCoord4dv	glew.h	/^#define glMultiTexCoord4dv /;"	d
glMultiTexCoord4dvARB	glew.h	/^#define glMultiTexCoord4dvARB /;"	d
glMultiTexCoord4f	glew.h	/^#define glMultiTexCoord4f /;"	d
glMultiTexCoord4fARB	glew.h	/^#define glMultiTexCoord4fARB /;"	d
glMultiTexCoord4fv	glew.h	/^#define glMultiTexCoord4fv /;"	d
glMultiTexCoord4fvARB	glew.h	/^#define glMultiTexCoord4fvARB /;"	d
glMultiTexCoord4hNV	glew.h	/^#define glMultiTexCoord4hNV /;"	d
glMultiTexCoord4hvNV	glew.h	/^#define glMultiTexCoord4hvNV /;"	d
glMultiTexCoord4i	glew.h	/^#define glMultiTexCoord4i /;"	d
glMultiTexCoord4iARB	glew.h	/^#define glMultiTexCoord4iARB /;"	d
glMultiTexCoord4iv	glew.h	/^#define glMultiTexCoord4iv /;"	d
glMultiTexCoord4ivARB	glew.h	/^#define glMultiTexCoord4ivARB /;"	d
glMultiTexCoord4s	glew.h	/^#define glMultiTexCoord4s /;"	d
glMultiTexCoord4sARB	glew.h	/^#define glMultiTexCoord4sARB /;"	d
glMultiTexCoord4sv	glew.h	/^#define glMultiTexCoord4sv /;"	d
glMultiTexCoord4svARB	glew.h	/^#define glMultiTexCoord4svARB /;"	d
glMultiTexCoord4x	glew.h	/^#define glMultiTexCoord4x /;"	d
glMultiTexCoordP1ui	glew.h	/^#define glMultiTexCoordP1ui /;"	d
glMultiTexCoordP1uiv	glew.h	/^#define glMultiTexCoordP1uiv /;"	d
glMultiTexCoordP2ui	glew.h	/^#define glMultiTexCoordP2ui /;"	d
glMultiTexCoordP2uiv	glew.h	/^#define glMultiTexCoordP2uiv /;"	d
glMultiTexCoordP3ui	glew.h	/^#define glMultiTexCoordP3ui /;"	d
glMultiTexCoordP3uiv	glew.h	/^#define glMultiTexCoordP3uiv /;"	d
glMultiTexCoordP4ui	glew.h	/^#define glMultiTexCoordP4ui /;"	d
glMultiTexCoordP4uiv	glew.h	/^#define glMultiTexCoordP4uiv /;"	d
glMultiTexCoordPointerEXT	glew.h	/^#define glMultiTexCoordPointerEXT /;"	d
glMultiTexEnvfEXT	glew.h	/^#define glMultiTexEnvfEXT /;"	d
glMultiTexEnvfvEXT	glew.h	/^#define glMultiTexEnvfvEXT /;"	d
glMultiTexEnviEXT	glew.h	/^#define glMultiTexEnviEXT /;"	d
glMultiTexEnvivEXT	glew.h	/^#define glMultiTexEnvivEXT /;"	d
glMultiTexGendEXT	glew.h	/^#define glMultiTexGendEXT /;"	d
glMultiTexGendvEXT	glew.h	/^#define glMultiTexGendvEXT /;"	d
glMultiTexGenfEXT	glew.h	/^#define glMultiTexGenfEXT /;"	d
glMultiTexGenfvEXT	glew.h	/^#define glMultiTexGenfvEXT /;"	d
glMultiTexGeniEXT	glew.h	/^#define glMultiTexGeniEXT /;"	d
glMultiTexGenivEXT	glew.h	/^#define glMultiTexGenivEXT /;"	d
glMultiTexImage1DEXT	glew.h	/^#define glMultiTexImage1DEXT /;"	d
glMultiTexImage2DEXT	glew.h	/^#define glMultiTexImage2DEXT /;"	d
glMultiTexImage3DEXT	glew.h	/^#define glMultiTexImage3DEXT /;"	d
glMultiTexParameterIivEXT	glew.h	/^#define glMultiTexParameterIivEXT /;"	d
glMultiTexParameterIuivEXT	glew.h	/^#define glMultiTexParameterIuivEXT /;"	d
glMultiTexParameterfEXT	glew.h	/^#define glMultiTexParameterfEXT /;"	d
glMultiTexParameterfvEXT	glew.h	/^#define glMultiTexParameterfvEXT /;"	d
glMultiTexParameteriEXT	glew.h	/^#define glMultiTexParameteriEXT /;"	d
glMultiTexParameterivEXT	glew.h	/^#define glMultiTexParameterivEXT /;"	d
glMultiTexRenderbufferEXT	glew.h	/^#define glMultiTexRenderbufferEXT /;"	d
glMultiTexSubImage1DEXT	glew.h	/^#define glMultiTexSubImage1DEXT /;"	d
glMultiTexSubImage2DEXT	glew.h	/^#define glMultiTexSubImage2DEXT /;"	d
glMultiTexSubImage3DEXT	glew.h	/^#define glMultiTexSubImage3DEXT /;"	d
glNamedBufferData	glew.h	/^#define glNamedBufferData /;"	d
glNamedBufferDataEXT	glew.h	/^#define glNamedBufferDataEXT /;"	d
glNamedBufferStorage	glew.h	/^#define glNamedBufferStorage /;"	d
glNamedBufferStorageEXT	glew.h	/^#define glNamedBufferStorageEXT /;"	d
glNamedBufferSubData	glew.h	/^#define glNamedBufferSubData /;"	d
glNamedBufferSubDataEXT	glew.h	/^#define glNamedBufferSubDataEXT /;"	d
glNamedCopyBufferSubDataEXT	glew.h	/^#define glNamedCopyBufferSubDataEXT /;"	d
glNamedFramebufferDrawBuffer	glew.h	/^#define glNamedFramebufferDrawBuffer /;"	d
glNamedFramebufferDrawBuffers	glew.h	/^#define glNamedFramebufferDrawBuffers /;"	d
glNamedFramebufferParameteri	glew.h	/^#define glNamedFramebufferParameteri /;"	d
glNamedFramebufferParameteriEXT	glew.h	/^#define glNamedFramebufferParameteriEXT /;"	d
glNamedFramebufferReadBuffer	glew.h	/^#define glNamedFramebufferReadBuffer /;"	d
glNamedFramebufferRenderbuffer	glew.h	/^#define glNamedFramebufferRenderbuffer /;"	d
glNamedFramebufferRenderbufferEXT	glew.h	/^#define glNamedFramebufferRenderbufferEXT /;"	d
glNamedFramebufferTexture	glew.h	/^#define glNamedFramebufferTexture /;"	d
glNamedFramebufferTexture1DEXT	glew.h	/^#define glNamedFramebufferTexture1DEXT /;"	d
glNamedFramebufferTexture2DEXT	glew.h	/^#define glNamedFramebufferTexture2DEXT /;"	d
glNamedFramebufferTexture3DEXT	glew.h	/^#define glNamedFramebufferTexture3DEXT /;"	d
glNamedFramebufferTextureEXT	glew.h	/^#define glNamedFramebufferTextureEXT /;"	d
glNamedFramebufferTextureFaceEXT	glew.h	/^#define glNamedFramebufferTextureFaceEXT /;"	d
glNamedFramebufferTextureLayer	glew.h	/^#define glNamedFramebufferTextureLayer /;"	d
glNamedFramebufferTextureLayerEXT	glew.h	/^#define glNamedFramebufferTextureLayerEXT /;"	d
glNamedProgramLocalParameter4dEXT	glew.h	/^#define glNamedProgramLocalParameter4dEXT /;"	d
glNamedProgramLocalParameter4dvEXT	glew.h	/^#define glNamedProgramLocalParameter4dvEXT /;"	d
glNamedProgramLocalParameter4fEXT	glew.h	/^#define glNamedProgramLocalParameter4fEXT /;"	d
glNamedProgramLocalParameter4fvEXT	glew.h	/^#define glNamedProgramLocalParameter4fvEXT /;"	d
glNamedProgramLocalParameterI4iEXT	glew.h	/^#define glNamedProgramLocalParameterI4iEXT /;"	d
glNamedProgramLocalParameterI4ivEXT	glew.h	/^#define glNamedProgramLocalParameterI4ivEXT /;"	d
glNamedProgramLocalParameterI4uiEXT	glew.h	/^#define glNamedProgramLocalParameterI4uiEXT /;"	d
glNamedProgramLocalParameterI4uivEXT	glew.h	/^#define glNamedProgramLocalParameterI4uivEXT /;"	d
glNamedProgramLocalParameters4fvEXT	glew.h	/^#define glNamedProgramLocalParameters4fvEXT /;"	d
glNamedProgramLocalParametersI4ivEXT	glew.h	/^#define glNamedProgramLocalParametersI4ivEXT /;"	d
glNamedProgramLocalParametersI4uivEXT	glew.h	/^#define glNamedProgramLocalParametersI4uivEXT /;"	d
glNamedProgramStringEXT	glew.h	/^#define glNamedProgramStringEXT /;"	d
glNamedRenderbufferStorage	glew.h	/^#define glNamedRenderbufferStorage /;"	d
glNamedRenderbufferStorageEXT	glew.h	/^#define glNamedRenderbufferStorageEXT /;"	d
glNamedRenderbufferStorageMultisample	glew.h	/^#define glNamedRenderbufferStorageMultisample /;"	d
glNamedRenderbufferStorageMultisampleCoverageEXT	glew.h	/^#define glNamedRenderbufferStorageMultisampleCoverageEXT /;"	d
glNamedRenderbufferStorageMultisampleEXT	glew.h	/^#define glNamedRenderbufferStorageMultisampleEXT /;"	d
glNamedStringARB	glew.h	/^#define glNamedStringARB /;"	d
glNewBufferRegion	glew.h	/^#define glNewBufferRegion /;"	d
glNewObjectBufferATI	glew.h	/^#define glNewObjectBufferATI /;"	d
glNormal3fVertex3fSUN	glew.h	/^#define glNormal3fVertex3fSUN /;"	d
glNormal3fVertex3fvSUN	glew.h	/^#define glNormal3fVertex3fvSUN /;"	d
glNormal3hNV	glew.h	/^#define glNormal3hNV /;"	d
glNormal3hvNV	glew.h	/^#define glNormal3hvNV /;"	d
glNormal3x	glew.h	/^#define glNormal3x /;"	d
glNormalFormatNV	glew.h	/^#define glNormalFormatNV /;"	d
glNormalP3ui	glew.h	/^#define glNormalP3ui /;"	d
glNormalP3uiv	glew.h	/^#define glNormalP3uiv /;"	d
glNormalPointerEXT	glew.h	/^#define glNormalPointerEXT /;"	d
glNormalPointerListIBM	glew.h	/^#define glNormalPointerListIBM /;"	d
glNormalPointervINTEL	glew.h	/^#define glNormalPointervINTEL /;"	d
glNormalStream3bATI	glew.h	/^#define glNormalStream3bATI /;"	d
glNormalStream3bvATI	glew.h	/^#define glNormalStream3bvATI /;"	d
glNormalStream3dATI	glew.h	/^#define glNormalStream3dATI /;"	d
glNormalStream3dvATI	glew.h	/^#define glNormalStream3dvATI /;"	d
glNormalStream3fATI	glew.h	/^#define glNormalStream3fATI /;"	d
glNormalStream3fvATI	glew.h	/^#define glNormalStream3fvATI /;"	d
glNormalStream3iATI	glew.h	/^#define glNormalStream3iATI /;"	d
glNormalStream3ivATI	glew.h	/^#define glNormalStream3ivATI /;"	d
glNormalStream3sATI	glew.h	/^#define glNormalStream3sATI /;"	d
glNormalStream3svATI	glew.h	/^#define glNormalStream3svATI /;"	d
glObjectLabel	glew.h	/^#define glObjectLabel /;"	d
glObjectPtrLabel	glew.h	/^#define glObjectPtrLabel /;"	d
glObjectPurgeableAPPLE	glew.h	/^#define glObjectPurgeableAPPLE /;"	d
glObjectUnpurgeableAPPLE	glew.h	/^#define glObjectUnpurgeableAPPLE /;"	d
glOrthof	glew.h	/^#define glOrthof /;"	d
glOrthofOES	glew.h	/^#define glOrthofOES /;"	d
glOrthox	glew.h	/^#define glOrthox /;"	d
glPNTrianglesfATI	glew.h	/^#define glPNTrianglesfATI /;"	d
glPNTrianglesiATI	glew.h	/^#define glPNTrianglesiATI /;"	d
glPassTexCoordATI	glew.h	/^#define glPassTexCoordATI /;"	d
glPatchParameterfv	glew.h	/^#define glPatchParameterfv /;"	d
glPatchParameteri	glew.h	/^#define glPatchParameteri /;"	d
glPathColorGenNV	glew.h	/^#define glPathColorGenNV /;"	d
glPathCommandsNV	glew.h	/^#define glPathCommandsNV /;"	d
glPathCoordsNV	glew.h	/^#define glPathCoordsNV /;"	d
glPathCoverDepthFuncNV	glew.h	/^#define glPathCoverDepthFuncNV /;"	d
glPathDashArrayNV	glew.h	/^#define glPathDashArrayNV /;"	d
glPathFogGenNV	glew.h	/^#define glPathFogGenNV /;"	d
glPathGlyphRangeNV	glew.h	/^#define glPathGlyphRangeNV /;"	d
glPathGlyphsNV	glew.h	/^#define glPathGlyphsNV /;"	d
glPathParameterfNV	glew.h	/^#define glPathParameterfNV /;"	d
glPathParameterfvNV	glew.h	/^#define glPathParameterfvNV /;"	d
glPathParameteriNV	glew.h	/^#define glPathParameteriNV /;"	d
glPathParameterivNV	glew.h	/^#define glPathParameterivNV /;"	d
glPathStencilDepthOffsetNV	glew.h	/^#define glPathStencilDepthOffsetNV /;"	d
glPathStencilFuncNV	glew.h	/^#define glPathStencilFuncNV /;"	d
glPathStringNV	glew.h	/^#define glPathStringNV /;"	d
glPathSubCommandsNV	glew.h	/^#define glPathSubCommandsNV /;"	d
glPathSubCoordsNV	glew.h	/^#define glPathSubCoordsNV /;"	d
glPathTexGenNV	glew.h	/^#define glPathTexGenNV /;"	d
glPauseTransformFeedback	glew.h	/^#define glPauseTransformFeedback /;"	d
glPauseTransformFeedbackNV	glew.h	/^#define glPauseTransformFeedbackNV /;"	d
glPixelDataRangeNV	glew.h	/^#define glPixelDataRangeNV /;"	d
glPixelTexGenSGIX	glew.h	/^#define glPixelTexGenSGIX /;"	d
glPixelTransformParameterfEXT	glew.h	/^#define glPixelTransformParameterfEXT /;"	d
glPixelTransformParameterfvEXT	glew.h	/^#define glPixelTransformParameterfvEXT /;"	d
glPixelTransformParameteriEXT	glew.h	/^#define glPixelTransformParameteriEXT /;"	d
glPixelTransformParameterivEXT	glew.h	/^#define glPixelTransformParameterivEXT /;"	d
glPointAlongPathNV	glew.h	/^#define glPointAlongPathNV /;"	d
glPointParameterf	glew.h	/^#define glPointParameterf /;"	d
glPointParameterfARB	glew.h	/^#define glPointParameterfARB /;"	d
glPointParameterfEXT	glew.h	/^#define glPointParameterfEXT /;"	d
glPointParameterfv	glew.h	/^#define glPointParameterfv /;"	d
glPointParameterfvARB	glew.h	/^#define glPointParameterfvARB /;"	d
glPointParameterfvEXT	glew.h	/^#define glPointParameterfvEXT /;"	d
glPointParameteri	glew.h	/^#define glPointParameteri /;"	d
glPointParameteriNV	glew.h	/^#define glPointParameteriNV /;"	d
glPointParameteriv	glew.h	/^#define glPointParameteriv /;"	d
glPointParameterivNV	glew.h	/^#define glPointParameterivNV /;"	d
glPointParameterx	glew.h	/^#define glPointParameterx /;"	d
glPointParameterxv	glew.h	/^#define glPointParameterxv /;"	d
glPointSizePointerOES	glew.h	/^#define glPointSizePointerOES /;"	d
glPointSizex	glew.h	/^#define glPointSizex /;"	d
glPollAsyncSGIX	glew.h	/^#define glPollAsyncSGIX /;"	d
glPolygonOffsetEXT	glew.h	/^#define glPolygonOffsetEXT /;"	d
glPolygonOffsetx	glew.h	/^#define glPolygonOffsetx /;"	d
glPopDebugGroup	glew.h	/^#define glPopDebugGroup /;"	d
glPopGroupMarkerEXT	glew.h	/^#define glPopGroupMarkerEXT /;"	d
glPresentFrameDualFillNV	glew.h	/^#define glPresentFrameDualFillNV /;"	d
glPresentFrameKeyedNV	glew.h	/^#define glPresentFrameKeyedNV /;"	d
glPrimitiveRestartIndex	glew.h	/^#define glPrimitiveRestartIndex /;"	d
glPrimitiveRestartIndexNV	glew.h	/^#define glPrimitiveRestartIndexNV /;"	d
glPrimitiveRestartNV	glew.h	/^#define glPrimitiveRestartNV /;"	d
glPrioritizeTexturesEXT	glew.h	/^#define glPrioritizeTexturesEXT /;"	d
glProgramBinary	glew.h	/^#define glProgramBinary /;"	d
glProgramBufferParametersIivNV	glew.h	/^#define glProgramBufferParametersIivNV /;"	d
glProgramBufferParametersIuivNV	glew.h	/^#define glProgramBufferParametersIuivNV /;"	d
glProgramBufferParametersfvNV	glew.h	/^#define glProgramBufferParametersfvNV /;"	d
glProgramEnvParameter4dARB	glew.h	/^#define glProgramEnvParameter4dARB /;"	d
glProgramEnvParameter4dvARB	glew.h	/^#define glProgramEnvParameter4dvARB /;"	d
glProgramEnvParameter4fARB	glew.h	/^#define glProgramEnvParameter4fARB /;"	d
glProgramEnvParameter4fvARB	glew.h	/^#define glProgramEnvParameter4fvARB /;"	d
glProgramEnvParameterI4iNV	glew.h	/^#define glProgramEnvParameterI4iNV /;"	d
glProgramEnvParameterI4ivNV	glew.h	/^#define glProgramEnvParameterI4ivNV /;"	d
glProgramEnvParameterI4uiNV	glew.h	/^#define glProgramEnvParameterI4uiNV /;"	d
glProgramEnvParameterI4uivNV	glew.h	/^#define glProgramEnvParameterI4uivNV /;"	d
glProgramEnvParameters4fvEXT	glew.h	/^#define glProgramEnvParameters4fvEXT /;"	d
glProgramEnvParametersI4ivNV	glew.h	/^#define glProgramEnvParametersI4ivNV /;"	d
glProgramEnvParametersI4uivNV	glew.h	/^#define glProgramEnvParametersI4uivNV /;"	d
glProgramLocalParameter4dARB	glew.h	/^#define glProgramLocalParameter4dARB /;"	d
glProgramLocalParameter4dvARB	glew.h	/^#define glProgramLocalParameter4dvARB /;"	d
glProgramLocalParameter4fARB	glew.h	/^#define glProgramLocalParameter4fARB /;"	d
glProgramLocalParameter4fvARB	glew.h	/^#define glProgramLocalParameter4fvARB /;"	d
glProgramLocalParameterI4iNV	glew.h	/^#define glProgramLocalParameterI4iNV /;"	d
glProgramLocalParameterI4ivNV	glew.h	/^#define glProgramLocalParameterI4ivNV /;"	d
glProgramLocalParameterI4uiNV	glew.h	/^#define glProgramLocalParameterI4uiNV /;"	d
glProgramLocalParameterI4uivNV	glew.h	/^#define glProgramLocalParameterI4uivNV /;"	d
glProgramLocalParameters4fvEXT	glew.h	/^#define glProgramLocalParameters4fvEXT /;"	d
glProgramLocalParametersI4ivNV	glew.h	/^#define glProgramLocalParametersI4ivNV /;"	d
glProgramLocalParametersI4uivNV	glew.h	/^#define glProgramLocalParametersI4uivNV /;"	d
glProgramNamedParameter4dNV	glew.h	/^#define glProgramNamedParameter4dNV /;"	d
glProgramNamedParameter4dvNV	glew.h	/^#define glProgramNamedParameter4dvNV /;"	d
glProgramNamedParameter4fNV	glew.h	/^#define glProgramNamedParameter4fNV /;"	d
glProgramNamedParameter4fvNV	glew.h	/^#define glProgramNamedParameter4fvNV /;"	d
glProgramParameter4dNV	glew.h	/^#define glProgramParameter4dNV /;"	d
glProgramParameter4dvNV	glew.h	/^#define glProgramParameter4dvNV /;"	d
glProgramParameter4fNV	glew.h	/^#define glProgramParameter4fNV /;"	d
glProgramParameter4fvNV	glew.h	/^#define glProgramParameter4fvNV /;"	d
glProgramParameteri	glew.h	/^#define glProgramParameteri /;"	d
glProgramParameteriARB	glew.h	/^#define glProgramParameteriARB /;"	d
glProgramParameteriEXT	glew.h	/^#define glProgramParameteriEXT /;"	d
glProgramParameters4dvNV	glew.h	/^#define glProgramParameters4dvNV /;"	d
glProgramParameters4fvNV	glew.h	/^#define glProgramParameters4fvNV /;"	d
glProgramStringARB	glew.h	/^#define glProgramStringARB /;"	d
glProgramUniform1d	glew.h	/^#define glProgramUniform1d /;"	d
glProgramUniform1dv	glew.h	/^#define glProgramUniform1dv /;"	d
glProgramUniform1f	glew.h	/^#define glProgramUniform1f /;"	d
glProgramUniform1fEXT	glew.h	/^#define glProgramUniform1fEXT /;"	d
glProgramUniform1fv	glew.h	/^#define glProgramUniform1fv /;"	d
glProgramUniform1fvEXT	glew.h	/^#define glProgramUniform1fvEXT /;"	d
glProgramUniform1i	glew.h	/^#define glProgramUniform1i /;"	d
glProgramUniform1i64NV	glew.h	/^#define glProgramUniform1i64NV /;"	d
glProgramUniform1i64vNV	glew.h	/^#define glProgramUniform1i64vNV /;"	d
glProgramUniform1iEXT	glew.h	/^#define glProgramUniform1iEXT /;"	d
glProgramUniform1iv	glew.h	/^#define glProgramUniform1iv /;"	d
glProgramUniform1ivEXT	glew.h	/^#define glProgramUniform1ivEXT /;"	d
glProgramUniform1ui	glew.h	/^#define glProgramUniform1ui /;"	d
glProgramUniform1ui64NV	glew.h	/^#define glProgramUniform1ui64NV /;"	d
glProgramUniform1ui64vNV	glew.h	/^#define glProgramUniform1ui64vNV /;"	d
glProgramUniform1uiEXT	glew.h	/^#define glProgramUniform1uiEXT /;"	d
glProgramUniform1uiv	glew.h	/^#define glProgramUniform1uiv /;"	d
glProgramUniform1uivEXT	glew.h	/^#define glProgramUniform1uivEXT /;"	d
glProgramUniform2d	glew.h	/^#define glProgramUniform2d /;"	d
glProgramUniform2dv	glew.h	/^#define glProgramUniform2dv /;"	d
glProgramUniform2f	glew.h	/^#define glProgramUniform2f /;"	d
glProgramUniform2fEXT	glew.h	/^#define glProgramUniform2fEXT /;"	d
glProgramUniform2fv	glew.h	/^#define glProgramUniform2fv /;"	d
glProgramUniform2fvEXT	glew.h	/^#define glProgramUniform2fvEXT /;"	d
glProgramUniform2i	glew.h	/^#define glProgramUniform2i /;"	d
glProgramUniform2i64NV	glew.h	/^#define glProgramUniform2i64NV /;"	d
glProgramUniform2i64vNV	glew.h	/^#define glProgramUniform2i64vNV /;"	d
glProgramUniform2iEXT	glew.h	/^#define glProgramUniform2iEXT /;"	d
glProgramUniform2iv	glew.h	/^#define glProgramUniform2iv /;"	d
glProgramUniform2ivEXT	glew.h	/^#define glProgramUniform2ivEXT /;"	d
glProgramUniform2ui	glew.h	/^#define glProgramUniform2ui /;"	d
glProgramUniform2ui64NV	glew.h	/^#define glProgramUniform2ui64NV /;"	d
glProgramUniform2ui64vNV	glew.h	/^#define glProgramUniform2ui64vNV /;"	d
glProgramUniform2uiEXT	glew.h	/^#define glProgramUniform2uiEXT /;"	d
glProgramUniform2uiv	glew.h	/^#define glProgramUniform2uiv /;"	d
glProgramUniform2uivEXT	glew.h	/^#define glProgramUniform2uivEXT /;"	d
glProgramUniform3d	glew.h	/^#define glProgramUniform3d /;"	d
glProgramUniform3dv	glew.h	/^#define glProgramUniform3dv /;"	d
glProgramUniform3f	glew.h	/^#define glProgramUniform3f /;"	d
glProgramUniform3fEXT	glew.h	/^#define glProgramUniform3fEXT /;"	d
glProgramUniform3fv	glew.h	/^#define glProgramUniform3fv /;"	d
glProgramUniform3fvEXT	glew.h	/^#define glProgramUniform3fvEXT /;"	d
glProgramUniform3i	glew.h	/^#define glProgramUniform3i /;"	d
glProgramUniform3i64NV	glew.h	/^#define glProgramUniform3i64NV /;"	d
glProgramUniform3i64vNV	glew.h	/^#define glProgramUniform3i64vNV /;"	d
glProgramUniform3iEXT	glew.h	/^#define glProgramUniform3iEXT /;"	d
glProgramUniform3iv	glew.h	/^#define glProgramUniform3iv /;"	d
glProgramUniform3ivEXT	glew.h	/^#define glProgramUniform3ivEXT /;"	d
glProgramUniform3ui	glew.h	/^#define glProgramUniform3ui /;"	d
glProgramUniform3ui64NV	glew.h	/^#define glProgramUniform3ui64NV /;"	d
glProgramUniform3ui64vNV	glew.h	/^#define glProgramUniform3ui64vNV /;"	d
glProgramUniform3uiEXT	glew.h	/^#define glProgramUniform3uiEXT /;"	d
glProgramUniform3uiv	glew.h	/^#define glProgramUniform3uiv /;"	d
glProgramUniform3uivEXT	glew.h	/^#define glProgramUniform3uivEXT /;"	d
glProgramUniform4d	glew.h	/^#define glProgramUniform4d /;"	d
glProgramUniform4dv	glew.h	/^#define glProgramUniform4dv /;"	d
glProgramUniform4f	glew.h	/^#define glProgramUniform4f /;"	d
glProgramUniform4fEXT	glew.h	/^#define glProgramUniform4fEXT /;"	d
glProgramUniform4fv	glew.h	/^#define glProgramUniform4fv /;"	d
glProgramUniform4fvEXT	glew.h	/^#define glProgramUniform4fvEXT /;"	d
glProgramUniform4i	glew.h	/^#define glProgramUniform4i /;"	d
glProgramUniform4i64NV	glew.h	/^#define glProgramUniform4i64NV /;"	d
glProgramUniform4i64vNV	glew.h	/^#define glProgramUniform4i64vNV /;"	d
glProgramUniform4iEXT	glew.h	/^#define glProgramUniform4iEXT /;"	d
glProgramUniform4iv	glew.h	/^#define glProgramUniform4iv /;"	d
glProgramUniform4ivEXT	glew.h	/^#define glProgramUniform4ivEXT /;"	d
glProgramUniform4ui	glew.h	/^#define glProgramUniform4ui /;"	d
glProgramUniform4ui64NV	glew.h	/^#define glProgramUniform4ui64NV /;"	d
glProgramUniform4ui64vNV	glew.h	/^#define glProgramUniform4ui64vNV /;"	d
glProgramUniform4uiEXT	glew.h	/^#define glProgramUniform4uiEXT /;"	d
glProgramUniform4uiv	glew.h	/^#define glProgramUniform4uiv /;"	d
glProgramUniform4uivEXT	glew.h	/^#define glProgramUniform4uivEXT /;"	d
glProgramUniformHandleui64ARB	glew.h	/^#define glProgramUniformHandleui64ARB /;"	d
glProgramUniformHandleui64NV	glew.h	/^#define glProgramUniformHandleui64NV /;"	d
glProgramUniformHandleui64vARB	glew.h	/^#define glProgramUniformHandleui64vARB /;"	d
glProgramUniformHandleui64vNV	glew.h	/^#define glProgramUniformHandleui64vNV /;"	d
glProgramUniformMatrix2dv	glew.h	/^#define glProgramUniformMatrix2dv /;"	d
glProgramUniformMatrix2fv	glew.h	/^#define glProgramUniformMatrix2fv /;"	d
glProgramUniformMatrix2fvEXT	glew.h	/^#define glProgramUniformMatrix2fvEXT /;"	d
glProgramUniformMatrix2x3dv	glew.h	/^#define glProgramUniformMatrix2x3dv /;"	d
glProgramUniformMatrix2x3fv	glew.h	/^#define glProgramUniformMatrix2x3fv /;"	d
glProgramUniformMatrix2x3fvEXT	glew.h	/^#define glProgramUniformMatrix2x3fvEXT /;"	d
glProgramUniformMatrix2x4dv	glew.h	/^#define glProgramUniformMatrix2x4dv /;"	d
glProgramUniformMatrix2x4fv	glew.h	/^#define glProgramUniformMatrix2x4fv /;"	d
glProgramUniformMatrix2x4fvEXT	glew.h	/^#define glProgramUniformMatrix2x4fvEXT /;"	d
glProgramUniformMatrix3dv	glew.h	/^#define glProgramUniformMatrix3dv /;"	d
glProgramUniformMatrix3fv	glew.h	/^#define glProgramUniformMatrix3fv /;"	d
glProgramUniformMatrix3fvEXT	glew.h	/^#define glProgramUniformMatrix3fvEXT /;"	d
glProgramUniformMatrix3x2dv	glew.h	/^#define glProgramUniformMatrix3x2dv /;"	d
glProgramUniformMatrix3x2fv	glew.h	/^#define glProgramUniformMatrix3x2fv /;"	d
glProgramUniformMatrix3x2fvEXT	glew.h	/^#define glProgramUniformMatrix3x2fvEXT /;"	d
glProgramUniformMatrix3x4dv	glew.h	/^#define glProgramUniformMatrix3x4dv /;"	d
glProgramUniformMatrix3x4fv	glew.h	/^#define glProgramUniformMatrix3x4fv /;"	d
glProgramUniformMatrix3x4fvEXT	glew.h	/^#define glProgramUniformMatrix3x4fvEXT /;"	d
glProgramUniformMatrix4dv	glew.h	/^#define glProgramUniformMatrix4dv /;"	d
glProgramUniformMatrix4fv	glew.h	/^#define glProgramUniformMatrix4fv /;"	d
glProgramUniformMatrix4fvEXT	glew.h	/^#define glProgramUniformMatrix4fvEXT /;"	d
glProgramUniformMatrix4x2dv	glew.h	/^#define glProgramUniformMatrix4x2dv /;"	d
glProgramUniformMatrix4x2fv	glew.h	/^#define glProgramUniformMatrix4x2fv /;"	d
glProgramUniformMatrix4x2fvEXT	glew.h	/^#define glProgramUniformMatrix4x2fvEXT /;"	d
glProgramUniformMatrix4x3dv	glew.h	/^#define glProgramUniformMatrix4x3dv /;"	d
glProgramUniformMatrix4x3fv	glew.h	/^#define glProgramUniformMatrix4x3fv /;"	d
glProgramUniformMatrix4x3fvEXT	glew.h	/^#define glProgramUniformMatrix4x3fvEXT /;"	d
glProgramUniformui64NV	glew.h	/^#define glProgramUniformui64NV /;"	d
glProgramUniformui64vNV	glew.h	/^#define glProgramUniformui64vNV /;"	d
glProgramVertexLimitNV	glew.h	/^#define glProgramVertexLimitNV /;"	d
glProvokingVertex	glew.h	/^#define glProvokingVertex /;"	d
glProvokingVertexEXT	glew.h	/^#define glProvokingVertexEXT /;"	d
glPushClientAttribDefaultEXT	glew.h	/^#define glPushClientAttribDefaultEXT /;"	d
glPushDebugGroup	glew.h	/^#define glPushDebugGroup /;"	d
glPushGroupMarkerEXT	glew.h	/^#define glPushGroupMarkerEXT /;"	d
glQueryCounter	glew.h	/^#define glQueryCounter /;"	d
glQueryCounterANGLE	glew.h	/^#define glQueryCounterANGLE /;"	d
glQueryObjectParameteruiAMD	glew.h	/^#define glQueryObjectParameteruiAMD /;"	d
glReadBufferRegion	glew.h	/^#define glReadBufferRegion /;"	d
glReadVideoPixelsSUN	glew.h	/^#define glReadVideoPixelsSUN /;"	d
glReadnPixels	glew.h	/^#define glReadnPixels /;"	d
glReadnPixelsARB	glew.h	/^#define glReadnPixelsARB /;"	d
glReferencePlaneSGIX	glew.h	/^#define glReferencePlaneSGIX /;"	d
glReleaseShaderCompiler	glew.h	/^#define glReleaseShaderCompiler /;"	d
glRenderbufferStorage	glew.h	/^#define glRenderbufferStorage /;"	d
glRenderbufferStorageEXT	glew.h	/^#define glRenderbufferStorageEXT /;"	d
glRenderbufferStorageMultisample	glew.h	/^#define glRenderbufferStorageMultisample /;"	d
glRenderbufferStorageMultisampleANGLE	glew.h	/^#define glRenderbufferStorageMultisampleANGLE /;"	d
glRenderbufferStorageMultisampleCoverageNV	glew.h	/^#define glRenderbufferStorageMultisampleCoverageNV /;"	d
glRenderbufferStorageMultisampleEXT	glew.h	/^#define glRenderbufferStorageMultisampleEXT /;"	d
glReplacementCodePointerSUN	glew.h	/^#define glReplacementCodePointerSUN /;"	d
glReplacementCodeubSUN	glew.h	/^#define glReplacementCodeubSUN /;"	d
glReplacementCodeubvSUN	glew.h	/^#define glReplacementCodeubvSUN /;"	d
glReplacementCodeuiColor3fVertex3fSUN	glew.h	/^#define glReplacementCodeuiColor3fVertex3fSUN /;"	d
glReplacementCodeuiColor3fVertex3fvSUN	glew.h	/^#define glReplacementCodeuiColor3fVertex3fvSUN /;"	d
glReplacementCodeuiColor4fNormal3fVertex3fSUN	glew.h	/^#define glReplacementCodeuiColor4fNormal3fVertex3fSUN /;"	d
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	glew.h	/^#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiColor4ubVertex3fSUN	glew.h	/^#define glReplacementCodeuiColor4ubVertex3fSUN /;"	d
glReplacementCodeuiColor4ubVertex3fvSUN	glew.h	/^#define glReplacementCodeuiColor4ubVertex3fvSUN /;"	d
glReplacementCodeuiNormal3fVertex3fSUN	glew.h	/^#define glReplacementCodeuiNormal3fVertex3fSUN /;"	d
glReplacementCodeuiNormal3fVertex3fvSUN	glew.h	/^#define glReplacementCodeuiNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiSUN	glew.h	/^#define glReplacementCodeuiSUN /;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	glew.h	/^#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN /;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	glew.h	/^#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	glew.h	/^#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN /;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	glew.h	/^#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiTexCoord2fVertex3fSUN	glew.h	/^#define glReplacementCodeuiTexCoord2fVertex3fSUN /;"	d
glReplacementCodeuiTexCoord2fVertex3fvSUN	glew.h	/^#define glReplacementCodeuiTexCoord2fVertex3fvSUN /;"	d
glReplacementCodeuiVertex3fSUN	glew.h	/^#define glReplacementCodeuiVertex3fSUN /;"	d
glReplacementCodeuiVertex3fvSUN	glew.h	/^#define glReplacementCodeuiVertex3fvSUN /;"	d
glReplacementCodeuivSUN	glew.h	/^#define glReplacementCodeuivSUN /;"	d
glReplacementCodeusSUN	glew.h	/^#define glReplacementCodeusSUN /;"	d
glReplacementCodeusvSUN	glew.h	/^#define glReplacementCodeusvSUN /;"	d
glRequestResidentProgramsNV	glew.h	/^#define glRequestResidentProgramsNV /;"	d
glResetHistogram	glew.h	/^#define glResetHistogram /;"	d
glResetHistogramEXT	glew.h	/^#define glResetHistogramEXT /;"	d
glResetMinmax	glew.h	/^#define glResetMinmax /;"	d
glResetMinmaxEXT	glew.h	/^#define glResetMinmaxEXT /;"	d
glResizeBuffersMESA	glew.h	/^#define glResizeBuffersMESA /;"	d
glResumeTransformFeedback	glew.h	/^#define glResumeTransformFeedback /;"	d
glResumeTransformFeedbackNV	glew.h	/^#define glResumeTransformFeedbackNV /;"	d
glRotatex	glew.h	/^#define glRotatex /;"	d
glSampleCoverage	glew.h	/^#define glSampleCoverage /;"	d
glSampleCoverageARB	glew.h	/^#define glSampleCoverageARB /;"	d
glSampleCoveragex	glew.h	/^#define glSampleCoveragex /;"	d
glSampleMapATI	glew.h	/^#define glSampleMapATI /;"	d
glSampleMaskEXT	glew.h	/^#define glSampleMaskEXT /;"	d
glSampleMaskIndexedNV	glew.h	/^#define glSampleMaskIndexedNV /;"	d
glSampleMaskSGIS	glew.h	/^#define glSampleMaskSGIS /;"	d
glSampleMaski	glew.h	/^#define glSampleMaski /;"	d
glSamplePatternEXT	glew.h	/^#define glSamplePatternEXT /;"	d
glSamplePatternSGIS	glew.h	/^#define glSamplePatternSGIS /;"	d
glSamplerParameterIiv	glew.h	/^#define glSamplerParameterIiv /;"	d
glSamplerParameterIuiv	glew.h	/^#define glSamplerParameterIuiv /;"	d
glSamplerParameterf	glew.h	/^#define glSamplerParameterf /;"	d
glSamplerParameterfv	glew.h	/^#define glSamplerParameterfv /;"	d
glSamplerParameteri	glew.h	/^#define glSamplerParameteri /;"	d
glSamplerParameteriv	glew.h	/^#define glSamplerParameteriv /;"	d
glScalex	glew.h	/^#define glScalex /;"	d
glScissorArrayv	glew.h	/^#define glScissorArrayv /;"	d
glScissorIndexed	glew.h	/^#define glScissorIndexed /;"	d
glScissorIndexedv	glew.h	/^#define glScissorIndexedv /;"	d
glSecondaryColor3b	glew.h	/^#define glSecondaryColor3b /;"	d
glSecondaryColor3bEXT	glew.h	/^#define glSecondaryColor3bEXT /;"	d
glSecondaryColor3bv	glew.h	/^#define glSecondaryColor3bv /;"	d
glSecondaryColor3bvEXT	glew.h	/^#define glSecondaryColor3bvEXT /;"	d
glSecondaryColor3d	glew.h	/^#define glSecondaryColor3d /;"	d
glSecondaryColor3dEXT	glew.h	/^#define glSecondaryColor3dEXT /;"	d
glSecondaryColor3dv	glew.h	/^#define glSecondaryColor3dv /;"	d
glSecondaryColor3dvEXT	glew.h	/^#define glSecondaryColor3dvEXT /;"	d
glSecondaryColor3f	glew.h	/^#define glSecondaryColor3f /;"	d
glSecondaryColor3fEXT	glew.h	/^#define glSecondaryColor3fEXT /;"	d
glSecondaryColor3fv	glew.h	/^#define glSecondaryColor3fv /;"	d
glSecondaryColor3fvEXT	glew.h	/^#define glSecondaryColor3fvEXT /;"	d
glSecondaryColor3hNV	glew.h	/^#define glSecondaryColor3hNV /;"	d
glSecondaryColor3hvNV	glew.h	/^#define glSecondaryColor3hvNV /;"	d
glSecondaryColor3i	glew.h	/^#define glSecondaryColor3i /;"	d
glSecondaryColor3iEXT	glew.h	/^#define glSecondaryColor3iEXT /;"	d
glSecondaryColor3iv	glew.h	/^#define glSecondaryColor3iv /;"	d
glSecondaryColor3ivEXT	glew.h	/^#define glSecondaryColor3ivEXT /;"	d
glSecondaryColor3s	glew.h	/^#define glSecondaryColor3s /;"	d
glSecondaryColor3sEXT	glew.h	/^#define glSecondaryColor3sEXT /;"	d
glSecondaryColor3sv	glew.h	/^#define glSecondaryColor3sv /;"	d
glSecondaryColor3svEXT	glew.h	/^#define glSecondaryColor3svEXT /;"	d
glSecondaryColor3ub	glew.h	/^#define glSecondaryColor3ub /;"	d
glSecondaryColor3ubEXT	glew.h	/^#define glSecondaryColor3ubEXT /;"	d
glSecondaryColor3ubv	glew.h	/^#define glSecondaryColor3ubv /;"	d
glSecondaryColor3ubvEXT	glew.h	/^#define glSecondaryColor3ubvEXT /;"	d
glSecondaryColor3ui	glew.h	/^#define glSecondaryColor3ui /;"	d
glSecondaryColor3uiEXT	glew.h	/^#define glSecondaryColor3uiEXT /;"	d
glSecondaryColor3uiv	glew.h	/^#define glSecondaryColor3uiv /;"	d
glSecondaryColor3uivEXT	glew.h	/^#define glSecondaryColor3uivEXT /;"	d
glSecondaryColor3us	glew.h	/^#define glSecondaryColor3us /;"	d
glSecondaryColor3usEXT	glew.h	/^#define glSecondaryColor3usEXT /;"	d
glSecondaryColor3usv	glew.h	/^#define glSecondaryColor3usv /;"	d
glSecondaryColor3usvEXT	glew.h	/^#define glSecondaryColor3usvEXT /;"	d
glSecondaryColorFormatNV	glew.h	/^#define glSecondaryColorFormatNV /;"	d
glSecondaryColorP3ui	glew.h	/^#define glSecondaryColorP3ui /;"	d
glSecondaryColorP3uiv	glew.h	/^#define glSecondaryColorP3uiv /;"	d
glSecondaryColorPointer	glew.h	/^#define glSecondaryColorPointer /;"	d
glSecondaryColorPointerEXT	glew.h	/^#define glSecondaryColorPointerEXT /;"	d
glSecondaryColorPointerListIBM	glew.h	/^#define glSecondaryColorPointerListIBM /;"	d
glSelectPerfMonitorCountersAMD	glew.h	/^#define glSelectPerfMonitorCountersAMD /;"	d
glSeparableFilter2D	glew.h	/^#define glSeparableFilter2D /;"	d
glSeparableFilter2DEXT	glew.h	/^#define glSeparableFilter2DEXT /;"	d
glSetFenceAPPLE	glew.h	/^#define glSetFenceAPPLE /;"	d
glSetFenceNV	glew.h	/^#define glSetFenceNV /;"	d
glSetFragmentShaderConstantATI	glew.h	/^#define glSetFragmentShaderConstantATI /;"	d
glSetInvariantEXT	glew.h	/^#define glSetInvariantEXT /;"	d
glSetLocalConstantEXT	glew.h	/^#define glSetLocalConstantEXT /;"	d
glSetMultisamplefvAMD	glew.h	/^#define glSetMultisamplefvAMD /;"	d
glShaderBinary	glew.h	/^#define glShaderBinary /;"	d
glShaderOp1EXT	glew.h	/^#define glShaderOp1EXT /;"	d
glShaderOp2EXT	glew.h	/^#define glShaderOp2EXT /;"	d
glShaderOp3EXT	glew.h	/^#define glShaderOp3EXT /;"	d
glShaderSource	glew.h	/^#define glShaderSource /;"	d
glShaderSourceARB	glew.h	/^#define glShaderSourceARB /;"	d
glShaderStorageBlockBinding	glew.h	/^#define glShaderStorageBlockBinding /;"	d
glSharpenTexFuncSGIS	glew.h	/^#define glSharpenTexFuncSGIS /;"	d
glSpriteParameterfSGIX	glew.h	/^#define glSpriteParameterfSGIX /;"	d
glSpriteParameterfvSGIX	glew.h	/^#define glSpriteParameterfvSGIX /;"	d
glSpriteParameteriSGIX	glew.h	/^#define glSpriteParameteriSGIX /;"	d
glSpriteParameterivSGIX	glew.h	/^#define glSpriteParameterivSGIX /;"	d
glStencilFillPathInstancedNV	glew.h	/^#define glStencilFillPathInstancedNV /;"	d
glStencilFillPathNV	glew.h	/^#define glStencilFillPathNV /;"	d
glStencilFuncSeparate	glew.h	/^#define glStencilFuncSeparate /;"	d
glStencilFuncSeparateATI	glew.h	/^#define glStencilFuncSeparateATI /;"	d
glStencilMaskSeparate	glew.h	/^#define glStencilMaskSeparate /;"	d
glStencilOpSeparate	glew.h	/^#define glStencilOpSeparate /;"	d
glStencilOpSeparateATI	glew.h	/^#define glStencilOpSeparateATI /;"	d
glStencilOpValueAMD	glew.h	/^#define glStencilOpValueAMD /;"	d
glStencilStrokePathInstancedNV	glew.h	/^#define glStencilStrokePathInstancedNV /;"	d
glStencilStrokePathNV	glew.h	/^#define glStencilStrokePathNV /;"	d
glStringMarkerGREMEDY	glew.h	/^#define glStringMarkerGREMEDY /;"	d
glSwizzleEXT	glew.h	/^#define glSwizzleEXT /;"	d
glSyncTextureINTEL	glew.h	/^#define glSyncTextureINTEL /;"	d
glTagSampleBufferSGIX	glew.h	/^#define glTagSampleBufferSGIX /;"	d
glTangentPointerEXT	glew.h	/^#define glTangentPointerEXT /;"	d
glTbufferMask3DFX	glew.h	/^#define glTbufferMask3DFX /;"	d
glTessellationFactorAMD	glew.h	/^#define glTessellationFactorAMD /;"	d
glTessellationModeAMD	glew.h	/^#define glTessellationModeAMD /;"	d
glTestFenceAPPLE	glew.h	/^#define glTestFenceAPPLE /;"	d
glTestFenceNV	glew.h	/^#define glTestFenceNV /;"	d
glTestObjectAPPLE	glew.h	/^#define glTestObjectAPPLE /;"	d
glTexBuffer	glew.h	/^#define glTexBuffer /;"	d
glTexBufferARB	glew.h	/^#define glTexBufferARB /;"	d
glTexBufferEXT	glew.h	/^#define glTexBufferEXT /;"	d
glTexBufferRange	glew.h	/^#define glTexBufferRange /;"	d
glTexBumpParameterfvATI	glew.h	/^#define glTexBumpParameterfvATI /;"	d
glTexBumpParameterivATI	glew.h	/^#define glTexBumpParameterivATI /;"	d
glTexCoord1hNV	glew.h	/^#define glTexCoord1hNV /;"	d
glTexCoord1hvNV	glew.h	/^#define glTexCoord1hvNV /;"	d
glTexCoord2fColor3fVertex3fSUN	glew.h	/^#define glTexCoord2fColor3fVertex3fSUN /;"	d
glTexCoord2fColor3fVertex3fvSUN	glew.h	/^#define glTexCoord2fColor3fVertex3fvSUN /;"	d
glTexCoord2fColor4fNormal3fVertex3fSUN	glew.h	/^#define glTexCoord2fColor4fNormal3fVertex3fSUN /;"	d
glTexCoord2fColor4fNormal3fVertex3fvSUN	glew.h	/^#define glTexCoord2fColor4fNormal3fVertex3fvSUN /;"	d
glTexCoord2fColor4ubVertex3fSUN	glew.h	/^#define glTexCoord2fColor4ubVertex3fSUN /;"	d
glTexCoord2fColor4ubVertex3fvSUN	glew.h	/^#define glTexCoord2fColor4ubVertex3fvSUN /;"	d
glTexCoord2fNormal3fVertex3fSUN	glew.h	/^#define glTexCoord2fNormal3fVertex3fSUN /;"	d
glTexCoord2fNormal3fVertex3fvSUN	glew.h	/^#define glTexCoord2fNormal3fVertex3fvSUN /;"	d
glTexCoord2fVertex3fSUN	glew.h	/^#define glTexCoord2fVertex3fSUN /;"	d
glTexCoord2fVertex3fvSUN	glew.h	/^#define glTexCoord2fVertex3fvSUN /;"	d
glTexCoord2hNV	glew.h	/^#define glTexCoord2hNV /;"	d
glTexCoord2hvNV	glew.h	/^#define glTexCoord2hvNV /;"	d
glTexCoord3hNV	glew.h	/^#define glTexCoord3hNV /;"	d
glTexCoord3hvNV	glew.h	/^#define glTexCoord3hvNV /;"	d
glTexCoord4fColor4fNormal3fVertex4fSUN	glew.h	/^#define glTexCoord4fColor4fNormal3fVertex4fSUN /;"	d
glTexCoord4fColor4fNormal3fVertex4fvSUN	glew.h	/^#define glTexCoord4fColor4fNormal3fVertex4fvSUN /;"	d
glTexCoord4fVertex4fSUN	glew.h	/^#define glTexCoord4fVertex4fSUN /;"	d
glTexCoord4fVertex4fvSUN	glew.h	/^#define glTexCoord4fVertex4fvSUN /;"	d
glTexCoord4hNV	glew.h	/^#define glTexCoord4hNV /;"	d
glTexCoord4hvNV	glew.h	/^#define glTexCoord4hvNV /;"	d
glTexCoordFormatNV	glew.h	/^#define glTexCoordFormatNV /;"	d
glTexCoordP1ui	glew.h	/^#define glTexCoordP1ui /;"	d
glTexCoordP1uiv	glew.h	/^#define glTexCoordP1uiv /;"	d
glTexCoordP2ui	glew.h	/^#define glTexCoordP2ui /;"	d
glTexCoordP2uiv	glew.h	/^#define glTexCoordP2uiv /;"	d
glTexCoordP3ui	glew.h	/^#define glTexCoordP3ui /;"	d
glTexCoordP3uiv	glew.h	/^#define glTexCoordP3uiv /;"	d
glTexCoordP4ui	glew.h	/^#define glTexCoordP4ui /;"	d
glTexCoordP4uiv	glew.h	/^#define glTexCoordP4uiv /;"	d
glTexCoordPointerEXT	glew.h	/^#define glTexCoordPointerEXT /;"	d
glTexCoordPointerListIBM	glew.h	/^#define glTexCoordPointerListIBM /;"	d
glTexCoordPointervINTEL	glew.h	/^#define glTexCoordPointervINTEL /;"	d
glTexEnvx	glew.h	/^#define glTexEnvx /;"	d
glTexEnvxv	glew.h	/^#define glTexEnvxv /;"	d
glTexFilterFuncSGIS	glew.h	/^#define glTexFilterFuncSGIS /;"	d
glTexImage2DMultisample	glew.h	/^#define glTexImage2DMultisample /;"	d
glTexImage2DMultisampleCoverageNV	glew.h	/^#define glTexImage2DMultisampleCoverageNV /;"	d
glTexImage3D	glew.h	/^#define glTexImage3D /;"	d
glTexImage3DEXT	glew.h	/^#define glTexImage3DEXT /;"	d
glTexImage3DMultisample	glew.h	/^#define glTexImage3DMultisample /;"	d
glTexImage3DMultisampleCoverageNV	glew.h	/^#define glTexImage3DMultisampleCoverageNV /;"	d
glTexImage4DSGIS	glew.h	/^#define glTexImage4DSGIS /;"	d
glTexPageCommitmentARB	glew.h	/^#define glTexPageCommitmentARB /;"	d
glTexParameterIiv	glew.h	/^#define glTexParameterIiv /;"	d
glTexParameterIivEXT	glew.h	/^#define glTexParameterIivEXT /;"	d
glTexParameterIuiv	glew.h	/^#define glTexParameterIuiv /;"	d
glTexParameterIuivEXT	glew.h	/^#define glTexParameterIuivEXT /;"	d
glTexParameterx	glew.h	/^#define glTexParameterx /;"	d
glTexParameterxv	glew.h	/^#define glTexParameterxv /;"	d
glTexRenderbufferNV	glew.h	/^#define glTexRenderbufferNV /;"	d
glTexScissorFuncINTEL	glew.h	/^#define glTexScissorFuncINTEL /;"	d
glTexScissorINTEL	glew.h	/^#define glTexScissorINTEL /;"	d
glTexStorage1D	glew.h	/^#define glTexStorage1D /;"	d
glTexStorage2D	glew.h	/^#define glTexStorage2D /;"	d
glTexStorage2DMultisample	glew.h	/^#define glTexStorage2DMultisample /;"	d
glTexStorage3D	glew.h	/^#define glTexStorage3D /;"	d
glTexStorage3DMultisample	glew.h	/^#define glTexStorage3DMultisample /;"	d
glTexStorageSparseAMD	glew.h	/^#define glTexStorageSparseAMD /;"	d
glTexSubImage1DEXT	glew.h	/^#define glTexSubImage1DEXT /;"	d
glTexSubImage2DEXT	glew.h	/^#define glTexSubImage2DEXT /;"	d
glTexSubImage3D	glew.h	/^#define glTexSubImage3D /;"	d
glTexSubImage3DEXT	glew.h	/^#define glTexSubImage3DEXT /;"	d
glTexSubImage4DSGIS	glew.h	/^#define glTexSubImage4DSGIS /;"	d
glTextureBarrier	glew.h	/^#define glTextureBarrier /;"	d
glTextureBarrierNV	glew.h	/^#define glTextureBarrierNV /;"	d
glTextureBuffer	glew.h	/^#define glTextureBuffer /;"	d
glTextureBufferEXT	glew.h	/^#define glTextureBufferEXT /;"	d
glTextureBufferRange	glew.h	/^#define glTextureBufferRange /;"	d
glTextureBufferRangeEXT	glew.h	/^#define glTextureBufferRangeEXT /;"	d
glTextureFogSGIX	glew.h	/^#define glTextureFogSGIX /;"	d
glTextureImage1DEXT	glew.h	/^#define glTextureImage1DEXT /;"	d
glTextureImage2DEXT	glew.h	/^#define glTextureImage2DEXT /;"	d
glTextureImage2DMultisampleCoverageNV	glew.h	/^#define glTextureImage2DMultisampleCoverageNV /;"	d
glTextureImage2DMultisampleNV	glew.h	/^#define glTextureImage2DMultisampleNV /;"	d
glTextureImage3DEXT	glew.h	/^#define glTextureImage3DEXT /;"	d
glTextureImage3DMultisampleCoverageNV	glew.h	/^#define glTextureImage3DMultisampleCoverageNV /;"	d
glTextureImage3DMultisampleNV	glew.h	/^#define glTextureImage3DMultisampleNV /;"	d
glTextureLightEXT	glew.h	/^#define glTextureLightEXT /;"	d
glTextureMaterialEXT	glew.h	/^#define glTextureMaterialEXT /;"	d
glTextureNormalEXT	glew.h	/^#define glTextureNormalEXT /;"	d
glTexturePageCommitmentEXT	glew.h	/^#define glTexturePageCommitmentEXT /;"	d
glTextureParameterIiv	glew.h	/^#define glTextureParameterIiv /;"	d
glTextureParameterIivEXT	glew.h	/^#define glTextureParameterIivEXT /;"	d
glTextureParameterIuiv	glew.h	/^#define glTextureParameterIuiv /;"	d
glTextureParameterIuivEXT	glew.h	/^#define glTextureParameterIuivEXT /;"	d
glTextureParameterf	glew.h	/^#define glTextureParameterf /;"	d
glTextureParameterfEXT	glew.h	/^#define glTextureParameterfEXT /;"	d
glTextureParameterfv	glew.h	/^#define glTextureParameterfv /;"	d
glTextureParameterfvEXT	glew.h	/^#define glTextureParameterfvEXT /;"	d
glTextureParameteri	glew.h	/^#define glTextureParameteri /;"	d
glTextureParameteriEXT	glew.h	/^#define glTextureParameteriEXT /;"	d
glTextureParameteriv	glew.h	/^#define glTextureParameteriv /;"	d
glTextureParameterivEXT	glew.h	/^#define glTextureParameterivEXT /;"	d
glTextureRangeAPPLE	glew.h	/^#define glTextureRangeAPPLE /;"	d
glTextureRenderbufferEXT	glew.h	/^#define glTextureRenderbufferEXT /;"	d
glTextureStorage1D	glew.h	/^#define glTextureStorage1D /;"	d
glTextureStorage1DEXT	glew.h	/^#define glTextureStorage1DEXT /;"	d
glTextureStorage2D	glew.h	/^#define glTextureStorage2D /;"	d
glTextureStorage2DEXT	glew.h	/^#define glTextureStorage2DEXT /;"	d
glTextureStorage2DMultisample	glew.h	/^#define glTextureStorage2DMultisample /;"	d
glTextureStorage2DMultisampleEXT	glew.h	/^#define glTextureStorage2DMultisampleEXT /;"	d
glTextureStorage3D	glew.h	/^#define glTextureStorage3D /;"	d
glTextureStorage3DEXT	glew.h	/^#define glTextureStorage3DEXT /;"	d
glTextureStorage3DMultisample	glew.h	/^#define glTextureStorage3DMultisample /;"	d
glTextureStorage3DMultisampleEXT	glew.h	/^#define glTextureStorage3DMultisampleEXT /;"	d
glTextureStorageSparseAMD	glew.h	/^#define glTextureStorageSparseAMD /;"	d
glTextureSubImage1D	glew.h	/^#define glTextureSubImage1D /;"	d
glTextureSubImage1DEXT	glew.h	/^#define glTextureSubImage1DEXT /;"	d
glTextureSubImage2D	glew.h	/^#define glTextureSubImage2D /;"	d
glTextureSubImage2DEXT	glew.h	/^#define glTextureSubImage2DEXT /;"	d
glTextureSubImage3D	glew.h	/^#define glTextureSubImage3D /;"	d
glTextureSubImage3DEXT	glew.h	/^#define glTextureSubImage3DEXT /;"	d
glTextureView	glew.h	/^#define glTextureView /;"	d
glTrackMatrixNV	glew.h	/^#define glTrackMatrixNV /;"	d
glTransformFeedbackAttribsNV	glew.h	/^#define glTransformFeedbackAttribsNV /;"	d
glTransformFeedbackBufferBase	glew.h	/^#define glTransformFeedbackBufferBase /;"	d
glTransformFeedbackBufferRange	glew.h	/^#define glTransformFeedbackBufferRange /;"	d
glTransformFeedbackVaryings	glew.h	/^#define glTransformFeedbackVaryings /;"	d
glTransformFeedbackVaryingsEXT	glew.h	/^#define glTransformFeedbackVaryingsEXT /;"	d
glTransformFeedbackVaryingsNV	glew.h	/^#define glTransformFeedbackVaryingsNV /;"	d
glTransformPathNV	glew.h	/^#define glTransformPathNV /;"	d
glTranslatex	glew.h	/^#define glTranslatex /;"	d
glUniform1d	glew.h	/^#define glUniform1d /;"	d
glUniform1dv	glew.h	/^#define glUniform1dv /;"	d
glUniform1f	glew.h	/^#define glUniform1f /;"	d
glUniform1fARB	glew.h	/^#define glUniform1fARB /;"	d
glUniform1fv	glew.h	/^#define glUniform1fv /;"	d
glUniform1fvARB	glew.h	/^#define glUniform1fvARB /;"	d
glUniform1i	glew.h	/^#define glUniform1i /;"	d
glUniform1i64NV	glew.h	/^#define glUniform1i64NV /;"	d
glUniform1i64vNV	glew.h	/^#define glUniform1i64vNV /;"	d
glUniform1iARB	glew.h	/^#define glUniform1iARB /;"	d
glUniform1iv	glew.h	/^#define glUniform1iv /;"	d
glUniform1ivARB	glew.h	/^#define glUniform1ivARB /;"	d
glUniform1ui	glew.h	/^#define glUniform1ui /;"	d
glUniform1ui64NV	glew.h	/^#define glUniform1ui64NV /;"	d
glUniform1ui64vNV	glew.h	/^#define glUniform1ui64vNV /;"	d
glUniform1uiEXT	glew.h	/^#define glUniform1uiEXT /;"	d
glUniform1uiv	glew.h	/^#define glUniform1uiv /;"	d
glUniform1uivEXT	glew.h	/^#define glUniform1uivEXT /;"	d
glUniform2d	glew.h	/^#define glUniform2d /;"	d
glUniform2dv	glew.h	/^#define glUniform2dv /;"	d
glUniform2f	glew.h	/^#define glUniform2f /;"	d
glUniform2fARB	glew.h	/^#define glUniform2fARB /;"	d
glUniform2fv	glew.h	/^#define glUniform2fv /;"	d
glUniform2fvARB	glew.h	/^#define glUniform2fvARB /;"	d
glUniform2i	glew.h	/^#define glUniform2i /;"	d
glUniform2i64NV	glew.h	/^#define glUniform2i64NV /;"	d
glUniform2i64vNV	glew.h	/^#define glUniform2i64vNV /;"	d
glUniform2iARB	glew.h	/^#define glUniform2iARB /;"	d
glUniform2iv	glew.h	/^#define glUniform2iv /;"	d
glUniform2ivARB	glew.h	/^#define glUniform2ivARB /;"	d
glUniform2ui	glew.h	/^#define glUniform2ui /;"	d
glUniform2ui64NV	glew.h	/^#define glUniform2ui64NV /;"	d
glUniform2ui64vNV	glew.h	/^#define glUniform2ui64vNV /;"	d
glUniform2uiEXT	glew.h	/^#define glUniform2uiEXT /;"	d
glUniform2uiv	glew.h	/^#define glUniform2uiv /;"	d
glUniform2uivEXT	glew.h	/^#define glUniform2uivEXT /;"	d
glUniform3d	glew.h	/^#define glUniform3d /;"	d
glUniform3dv	glew.h	/^#define glUniform3dv /;"	d
glUniform3f	glew.h	/^#define glUniform3f /;"	d
glUniform3fARB	glew.h	/^#define glUniform3fARB /;"	d
glUniform3fv	glew.h	/^#define glUniform3fv /;"	d
glUniform3fvARB	glew.h	/^#define glUniform3fvARB /;"	d
glUniform3i	glew.h	/^#define glUniform3i /;"	d
glUniform3i64NV	glew.h	/^#define glUniform3i64NV /;"	d
glUniform3i64vNV	glew.h	/^#define glUniform3i64vNV /;"	d
glUniform3iARB	glew.h	/^#define glUniform3iARB /;"	d
glUniform3iv	glew.h	/^#define glUniform3iv /;"	d
glUniform3ivARB	glew.h	/^#define glUniform3ivARB /;"	d
glUniform3ui	glew.h	/^#define glUniform3ui /;"	d
glUniform3ui64NV	glew.h	/^#define glUniform3ui64NV /;"	d
glUniform3ui64vNV	glew.h	/^#define glUniform3ui64vNV /;"	d
glUniform3uiEXT	glew.h	/^#define glUniform3uiEXT /;"	d
glUniform3uiv	glew.h	/^#define glUniform3uiv /;"	d
glUniform3uivEXT	glew.h	/^#define glUniform3uivEXT /;"	d
glUniform4d	glew.h	/^#define glUniform4d /;"	d
glUniform4dv	glew.h	/^#define glUniform4dv /;"	d
glUniform4f	glew.h	/^#define glUniform4f /;"	d
glUniform4fARB	glew.h	/^#define glUniform4fARB /;"	d
glUniform4fv	glew.h	/^#define glUniform4fv /;"	d
glUniform4fvARB	glew.h	/^#define glUniform4fvARB /;"	d
glUniform4i	glew.h	/^#define glUniform4i /;"	d
glUniform4i64NV	glew.h	/^#define glUniform4i64NV /;"	d
glUniform4i64vNV	glew.h	/^#define glUniform4i64vNV /;"	d
glUniform4iARB	glew.h	/^#define glUniform4iARB /;"	d
glUniform4iv	glew.h	/^#define glUniform4iv /;"	d
glUniform4ivARB	glew.h	/^#define glUniform4ivARB /;"	d
glUniform4ui	glew.h	/^#define glUniform4ui /;"	d
glUniform4ui64NV	glew.h	/^#define glUniform4ui64NV /;"	d
glUniform4ui64vNV	glew.h	/^#define glUniform4ui64vNV /;"	d
glUniform4uiEXT	glew.h	/^#define glUniform4uiEXT /;"	d
glUniform4uiv	glew.h	/^#define glUniform4uiv /;"	d
glUniform4uivEXT	glew.h	/^#define glUniform4uivEXT /;"	d
glUniformBlockBinding	glew.h	/^#define glUniformBlockBinding /;"	d
glUniformBufferEXT	glew.h	/^#define glUniformBufferEXT /;"	d
glUniformHandleui64ARB	glew.h	/^#define glUniformHandleui64ARB /;"	d
glUniformHandleui64NV	glew.h	/^#define glUniformHandleui64NV /;"	d
glUniformHandleui64vARB	glew.h	/^#define glUniformHandleui64vARB /;"	d
glUniformHandleui64vNV	glew.h	/^#define glUniformHandleui64vNV /;"	d
glUniformMatrix2dv	glew.h	/^#define glUniformMatrix2dv /;"	d
glUniformMatrix2fv	glew.h	/^#define glUniformMatrix2fv /;"	d
glUniformMatrix2fvARB	glew.h	/^#define glUniformMatrix2fvARB /;"	d
glUniformMatrix2x3dv	glew.h	/^#define glUniformMatrix2x3dv /;"	d
glUniformMatrix2x3fv	glew.h	/^#define glUniformMatrix2x3fv /;"	d
glUniformMatrix2x4dv	glew.h	/^#define glUniformMatrix2x4dv /;"	d
glUniformMatrix2x4fv	glew.h	/^#define glUniformMatrix2x4fv /;"	d
glUniformMatrix3dv	glew.h	/^#define glUniformMatrix3dv /;"	d
glUniformMatrix3fv	glew.h	/^#define glUniformMatrix3fv /;"	d
glUniformMatrix3fvARB	glew.h	/^#define glUniformMatrix3fvARB /;"	d
glUniformMatrix3x2dv	glew.h	/^#define glUniformMatrix3x2dv /;"	d
glUniformMatrix3x2fv	glew.h	/^#define glUniformMatrix3x2fv /;"	d
glUniformMatrix3x4dv	glew.h	/^#define glUniformMatrix3x4dv /;"	d
glUniformMatrix3x4fv	glew.h	/^#define glUniformMatrix3x4fv /;"	d
glUniformMatrix4dv	glew.h	/^#define glUniformMatrix4dv /;"	d
glUniformMatrix4fv	glew.h	/^#define glUniformMatrix4fv /;"	d
glUniformMatrix4fv	glm/detail/dummy.cpp	/^void glUniformMatrix4fv(GLuint, int, int, float*){}$/;"	f	typeref:typename:void
glUniformMatrix4fvARB	glew.h	/^#define glUniformMatrix4fvARB /;"	d
glUniformMatrix4x2dv	glew.h	/^#define glUniformMatrix4x2dv /;"	d
glUniformMatrix4x2fv	glew.h	/^#define glUniformMatrix4x2fv /;"	d
glUniformMatrix4x3dv	glew.h	/^#define glUniformMatrix4x3dv /;"	d
glUniformMatrix4x3fv	glew.h	/^#define glUniformMatrix4x3fv /;"	d
glUniformSubroutinesuiv	glew.h	/^#define glUniformSubroutinesuiv /;"	d
glUniformui64NV	glew.h	/^#define glUniformui64NV /;"	d
glUniformui64vNV	glew.h	/^#define glUniformui64vNV /;"	d
glUnlockArraysEXT	glew.h	/^#define glUnlockArraysEXT /;"	d
glUnmapBuffer	glew.h	/^#define glUnmapBuffer /;"	d
glUnmapBufferARB	glew.h	/^#define glUnmapBufferARB /;"	d
glUnmapNamedBuffer	glew.h	/^#define glUnmapNamedBuffer /;"	d
glUnmapNamedBufferEXT	glew.h	/^#define glUnmapNamedBufferEXT /;"	d
glUnmapObjectBufferATI	glew.h	/^#define glUnmapObjectBufferATI /;"	d
glUnmapTexture2DINTEL	glew.h	/^#define glUnmapTexture2DINTEL /;"	d
glUpdateObjectBufferATI	glew.h	/^#define glUpdateObjectBufferATI /;"	d
glUseProgram	glew.h	/^#define glUseProgram /;"	d
glUseProgramObjectARB	glew.h	/^#define glUseProgramObjectARB /;"	d
glUseProgramStages	glew.h	/^#define glUseProgramStages /;"	d
glUseShaderProgramEXT	glew.h	/^#define glUseShaderProgramEXT /;"	d
glVDPAUFiniNV	glew.h	/^#define glVDPAUFiniNV /;"	d
glVDPAUGetSurfaceivNV	glew.h	/^#define glVDPAUGetSurfaceivNV /;"	d
glVDPAUInitNV	glew.h	/^#define glVDPAUInitNV /;"	d
glVDPAUIsSurfaceNV	glew.h	/^#define glVDPAUIsSurfaceNV /;"	d
glVDPAUMapSurfacesNV	glew.h	/^#define glVDPAUMapSurfacesNV /;"	d
glVDPAURegisterOutputSurfaceNV	glew.h	/^#define glVDPAURegisterOutputSurfaceNV /;"	d
glVDPAURegisterVideoSurfaceNV	glew.h	/^#define glVDPAURegisterVideoSurfaceNV /;"	d
glVDPAUSurfaceAccessNV	glew.h	/^#define glVDPAUSurfaceAccessNV /;"	d
glVDPAUUnmapSurfacesNV	glew.h	/^#define glVDPAUUnmapSurfacesNV /;"	d
glVDPAUUnregisterSurfaceNV	glew.h	/^#define glVDPAUUnregisterSurfaceNV /;"	d
glValidateProgram	glew.h	/^#define glValidateProgram /;"	d
glValidateProgramARB	glew.h	/^#define glValidateProgramARB /;"	d
glValidateProgramPipeline	glew.h	/^#define glValidateProgramPipeline /;"	d
glVariantArrayObjectATI	glew.h	/^#define glVariantArrayObjectATI /;"	d
glVariantPointerEXT	glew.h	/^#define glVariantPointerEXT /;"	d
glVariantbvEXT	glew.h	/^#define glVariantbvEXT /;"	d
glVariantdvEXT	glew.h	/^#define glVariantdvEXT /;"	d
glVariantfvEXT	glew.h	/^#define glVariantfvEXT /;"	d
glVariantivEXT	glew.h	/^#define glVariantivEXT /;"	d
glVariantsvEXT	glew.h	/^#define glVariantsvEXT /;"	d
glVariantubvEXT	glew.h	/^#define glVariantubvEXT /;"	d
glVariantuivEXT	glew.h	/^#define glVariantuivEXT /;"	d
glVariantusvEXT	glew.h	/^#define glVariantusvEXT /;"	d
glVertex2hNV	glew.h	/^#define glVertex2hNV /;"	d
glVertex2hvNV	glew.h	/^#define glVertex2hvNV /;"	d
glVertex3hNV	glew.h	/^#define glVertex3hNV /;"	d
glVertex3hvNV	glew.h	/^#define glVertex3hvNV /;"	d
glVertex4hNV	glew.h	/^#define glVertex4hNV /;"	d
glVertex4hvNV	glew.h	/^#define glVertex4hvNV /;"	d
glVertexArrayAttribBinding	glew.h	/^#define glVertexArrayAttribBinding /;"	d
glVertexArrayAttribFormat	glew.h	/^#define glVertexArrayAttribFormat /;"	d
glVertexArrayAttribIFormat	glew.h	/^#define glVertexArrayAttribIFormat /;"	d
glVertexArrayAttribLFormat	glew.h	/^#define glVertexArrayAttribLFormat /;"	d
glVertexArrayBindVertexBufferEXT	glew.h	/^#define glVertexArrayBindVertexBufferEXT /;"	d
glVertexArrayBindingDivisor	glew.h	/^#define glVertexArrayBindingDivisor /;"	d
glVertexArrayColorOffsetEXT	glew.h	/^#define glVertexArrayColorOffsetEXT /;"	d
glVertexArrayEdgeFlagOffsetEXT	glew.h	/^#define glVertexArrayEdgeFlagOffsetEXT /;"	d
glVertexArrayElementBuffer	glew.h	/^#define glVertexArrayElementBuffer /;"	d
glVertexArrayFogCoordOffsetEXT	glew.h	/^#define glVertexArrayFogCoordOffsetEXT /;"	d
glVertexArrayIndexOffsetEXT	glew.h	/^#define glVertexArrayIndexOffsetEXT /;"	d
glVertexArrayMultiTexCoordOffsetEXT	glew.h	/^#define glVertexArrayMultiTexCoordOffsetEXT /;"	d
glVertexArrayNormalOffsetEXT	glew.h	/^#define glVertexArrayNormalOffsetEXT /;"	d
glVertexArrayParameteriAPPLE	glew.h	/^#define glVertexArrayParameteriAPPLE /;"	d
glVertexArrayRangeAPPLE	glew.h	/^#define glVertexArrayRangeAPPLE /;"	d
glVertexArrayRangeNV	glew.h	/^#define glVertexArrayRangeNV /;"	d
glVertexArraySecondaryColorOffsetEXT	glew.h	/^#define glVertexArraySecondaryColorOffsetEXT /;"	d
glVertexArrayTexCoordOffsetEXT	glew.h	/^#define glVertexArrayTexCoordOffsetEXT /;"	d
glVertexArrayVertexAttribBindingEXT	glew.h	/^#define glVertexArrayVertexAttribBindingEXT /;"	d
glVertexArrayVertexAttribDivisorEXT	glew.h	/^#define glVertexArrayVertexAttribDivisorEXT /;"	d
glVertexArrayVertexAttribFormatEXT	glew.h	/^#define glVertexArrayVertexAttribFormatEXT /;"	d
glVertexArrayVertexAttribIFormatEXT	glew.h	/^#define glVertexArrayVertexAttribIFormatEXT /;"	d
glVertexArrayVertexAttribIOffsetEXT	glew.h	/^#define glVertexArrayVertexAttribIOffsetEXT /;"	d
glVertexArrayVertexAttribLFormatEXT	glew.h	/^#define glVertexArrayVertexAttribLFormatEXT /;"	d
glVertexArrayVertexAttribLOffsetEXT	glew.h	/^#define glVertexArrayVertexAttribLOffsetEXT /;"	d
glVertexArrayVertexAttribOffsetEXT	glew.h	/^#define glVertexArrayVertexAttribOffsetEXT /;"	d
glVertexArrayVertexBindingDivisorEXT	glew.h	/^#define glVertexArrayVertexBindingDivisorEXT /;"	d
glVertexArrayVertexBuffer	glew.h	/^#define glVertexArrayVertexBuffer /;"	d
glVertexArrayVertexBuffers	glew.h	/^#define glVertexArrayVertexBuffers /;"	d
glVertexArrayVertexOffsetEXT	glew.h	/^#define glVertexArrayVertexOffsetEXT /;"	d
glVertexAttrib1d	glew.h	/^#define glVertexAttrib1d /;"	d
glVertexAttrib1dARB	glew.h	/^#define glVertexAttrib1dARB /;"	d
glVertexAttrib1dNV	glew.h	/^#define glVertexAttrib1dNV /;"	d
glVertexAttrib1dv	glew.h	/^#define glVertexAttrib1dv /;"	d
glVertexAttrib1dvARB	glew.h	/^#define glVertexAttrib1dvARB /;"	d
glVertexAttrib1dvNV	glew.h	/^#define glVertexAttrib1dvNV /;"	d
glVertexAttrib1f	glew.h	/^#define glVertexAttrib1f /;"	d
glVertexAttrib1fARB	glew.h	/^#define glVertexAttrib1fARB /;"	d
glVertexAttrib1fNV	glew.h	/^#define glVertexAttrib1fNV /;"	d
glVertexAttrib1fv	glew.h	/^#define glVertexAttrib1fv /;"	d
glVertexAttrib1fvARB	glew.h	/^#define glVertexAttrib1fvARB /;"	d
glVertexAttrib1fvNV	glew.h	/^#define glVertexAttrib1fvNV /;"	d
glVertexAttrib1hNV	glew.h	/^#define glVertexAttrib1hNV /;"	d
glVertexAttrib1hvNV	glew.h	/^#define glVertexAttrib1hvNV /;"	d
glVertexAttrib1s	glew.h	/^#define glVertexAttrib1s /;"	d
glVertexAttrib1sARB	glew.h	/^#define glVertexAttrib1sARB /;"	d
glVertexAttrib1sNV	glew.h	/^#define glVertexAttrib1sNV /;"	d
glVertexAttrib1sv	glew.h	/^#define glVertexAttrib1sv /;"	d
glVertexAttrib1svARB	glew.h	/^#define glVertexAttrib1svARB /;"	d
glVertexAttrib1svNV	glew.h	/^#define glVertexAttrib1svNV /;"	d
glVertexAttrib2d	glew.h	/^#define glVertexAttrib2d /;"	d
glVertexAttrib2dARB	glew.h	/^#define glVertexAttrib2dARB /;"	d
glVertexAttrib2dNV	glew.h	/^#define glVertexAttrib2dNV /;"	d
glVertexAttrib2dv	glew.h	/^#define glVertexAttrib2dv /;"	d
glVertexAttrib2dvARB	glew.h	/^#define glVertexAttrib2dvARB /;"	d
glVertexAttrib2dvNV	glew.h	/^#define glVertexAttrib2dvNV /;"	d
glVertexAttrib2f	glew.h	/^#define glVertexAttrib2f /;"	d
glVertexAttrib2fARB	glew.h	/^#define glVertexAttrib2fARB /;"	d
glVertexAttrib2fNV	glew.h	/^#define glVertexAttrib2fNV /;"	d
glVertexAttrib2fv	glew.h	/^#define glVertexAttrib2fv /;"	d
glVertexAttrib2fvARB	glew.h	/^#define glVertexAttrib2fvARB /;"	d
glVertexAttrib2fvNV	glew.h	/^#define glVertexAttrib2fvNV /;"	d
glVertexAttrib2hNV	glew.h	/^#define glVertexAttrib2hNV /;"	d
glVertexAttrib2hvNV	glew.h	/^#define glVertexAttrib2hvNV /;"	d
glVertexAttrib2s	glew.h	/^#define glVertexAttrib2s /;"	d
glVertexAttrib2sARB	glew.h	/^#define glVertexAttrib2sARB /;"	d
glVertexAttrib2sNV	glew.h	/^#define glVertexAttrib2sNV /;"	d
glVertexAttrib2sv	glew.h	/^#define glVertexAttrib2sv /;"	d
glVertexAttrib2svARB	glew.h	/^#define glVertexAttrib2svARB /;"	d
glVertexAttrib2svNV	glew.h	/^#define glVertexAttrib2svNV /;"	d
glVertexAttrib3d	glew.h	/^#define glVertexAttrib3d /;"	d
glVertexAttrib3dARB	glew.h	/^#define glVertexAttrib3dARB /;"	d
glVertexAttrib3dNV	glew.h	/^#define glVertexAttrib3dNV /;"	d
glVertexAttrib3dv	glew.h	/^#define glVertexAttrib3dv /;"	d
glVertexAttrib3dvARB	glew.h	/^#define glVertexAttrib3dvARB /;"	d
glVertexAttrib3dvNV	glew.h	/^#define glVertexAttrib3dvNV /;"	d
glVertexAttrib3f	glew.h	/^#define glVertexAttrib3f /;"	d
glVertexAttrib3fARB	glew.h	/^#define glVertexAttrib3fARB /;"	d
glVertexAttrib3fNV	glew.h	/^#define glVertexAttrib3fNV /;"	d
glVertexAttrib3fv	glew.h	/^#define glVertexAttrib3fv /;"	d
glVertexAttrib3fvARB	glew.h	/^#define glVertexAttrib3fvARB /;"	d
glVertexAttrib3fvNV	glew.h	/^#define glVertexAttrib3fvNV /;"	d
glVertexAttrib3hNV	glew.h	/^#define glVertexAttrib3hNV /;"	d
glVertexAttrib3hvNV	glew.h	/^#define glVertexAttrib3hvNV /;"	d
glVertexAttrib3s	glew.h	/^#define glVertexAttrib3s /;"	d
glVertexAttrib3sARB	glew.h	/^#define glVertexAttrib3sARB /;"	d
glVertexAttrib3sNV	glew.h	/^#define glVertexAttrib3sNV /;"	d
glVertexAttrib3sv	glew.h	/^#define glVertexAttrib3sv /;"	d
glVertexAttrib3svARB	glew.h	/^#define glVertexAttrib3svARB /;"	d
glVertexAttrib3svNV	glew.h	/^#define glVertexAttrib3svNV /;"	d
glVertexAttrib4Nbv	glew.h	/^#define glVertexAttrib4Nbv /;"	d
glVertexAttrib4NbvARB	glew.h	/^#define glVertexAttrib4NbvARB /;"	d
glVertexAttrib4Niv	glew.h	/^#define glVertexAttrib4Niv /;"	d
glVertexAttrib4NivARB	glew.h	/^#define glVertexAttrib4NivARB /;"	d
glVertexAttrib4Nsv	glew.h	/^#define glVertexAttrib4Nsv /;"	d
glVertexAttrib4NsvARB	glew.h	/^#define glVertexAttrib4NsvARB /;"	d
glVertexAttrib4Nub	glew.h	/^#define glVertexAttrib4Nub /;"	d
glVertexAttrib4NubARB	glew.h	/^#define glVertexAttrib4NubARB /;"	d
glVertexAttrib4Nubv	glew.h	/^#define glVertexAttrib4Nubv /;"	d
glVertexAttrib4NubvARB	glew.h	/^#define glVertexAttrib4NubvARB /;"	d
glVertexAttrib4Nuiv	glew.h	/^#define glVertexAttrib4Nuiv /;"	d
glVertexAttrib4NuivARB	glew.h	/^#define glVertexAttrib4NuivARB /;"	d
glVertexAttrib4Nusv	glew.h	/^#define glVertexAttrib4Nusv /;"	d
glVertexAttrib4NusvARB	glew.h	/^#define glVertexAttrib4NusvARB /;"	d
glVertexAttrib4bv	glew.h	/^#define glVertexAttrib4bv /;"	d
glVertexAttrib4bvARB	glew.h	/^#define glVertexAttrib4bvARB /;"	d
glVertexAttrib4d	glew.h	/^#define glVertexAttrib4d /;"	d
glVertexAttrib4dARB	glew.h	/^#define glVertexAttrib4dARB /;"	d
glVertexAttrib4dNV	glew.h	/^#define glVertexAttrib4dNV /;"	d
glVertexAttrib4dv	glew.h	/^#define glVertexAttrib4dv /;"	d
glVertexAttrib4dvARB	glew.h	/^#define glVertexAttrib4dvARB /;"	d
glVertexAttrib4dvNV	glew.h	/^#define glVertexAttrib4dvNV /;"	d
glVertexAttrib4f	glew.h	/^#define glVertexAttrib4f /;"	d
glVertexAttrib4fARB	glew.h	/^#define glVertexAttrib4fARB /;"	d
glVertexAttrib4fNV	glew.h	/^#define glVertexAttrib4fNV /;"	d
glVertexAttrib4fv	glew.h	/^#define glVertexAttrib4fv /;"	d
glVertexAttrib4fvARB	glew.h	/^#define glVertexAttrib4fvARB /;"	d
glVertexAttrib4fvNV	glew.h	/^#define glVertexAttrib4fvNV /;"	d
glVertexAttrib4hNV	glew.h	/^#define glVertexAttrib4hNV /;"	d
glVertexAttrib4hvNV	glew.h	/^#define glVertexAttrib4hvNV /;"	d
glVertexAttrib4iv	glew.h	/^#define glVertexAttrib4iv /;"	d
glVertexAttrib4ivARB	glew.h	/^#define glVertexAttrib4ivARB /;"	d
glVertexAttrib4s	glew.h	/^#define glVertexAttrib4s /;"	d
glVertexAttrib4sARB	glew.h	/^#define glVertexAttrib4sARB /;"	d
glVertexAttrib4sNV	glew.h	/^#define glVertexAttrib4sNV /;"	d
glVertexAttrib4sv	glew.h	/^#define glVertexAttrib4sv /;"	d
glVertexAttrib4svARB	glew.h	/^#define glVertexAttrib4svARB /;"	d
glVertexAttrib4svNV	glew.h	/^#define glVertexAttrib4svNV /;"	d
glVertexAttrib4ubNV	glew.h	/^#define glVertexAttrib4ubNV /;"	d
glVertexAttrib4ubv	glew.h	/^#define glVertexAttrib4ubv /;"	d
glVertexAttrib4ubvARB	glew.h	/^#define glVertexAttrib4ubvARB /;"	d
glVertexAttrib4ubvNV	glew.h	/^#define glVertexAttrib4ubvNV /;"	d
glVertexAttrib4uiv	glew.h	/^#define glVertexAttrib4uiv /;"	d
glVertexAttrib4uivARB	glew.h	/^#define glVertexAttrib4uivARB /;"	d
glVertexAttrib4usv	glew.h	/^#define glVertexAttrib4usv /;"	d
glVertexAttrib4usvARB	glew.h	/^#define glVertexAttrib4usvARB /;"	d
glVertexAttribArrayObjectATI	glew.h	/^#define glVertexAttribArrayObjectATI /;"	d
glVertexAttribBinding	glew.h	/^#define glVertexAttribBinding /;"	d
glVertexAttribDivisor	glew.h	/^#define glVertexAttribDivisor /;"	d
glVertexAttribDivisorANGLE	glew.h	/^#define glVertexAttribDivisorANGLE /;"	d
glVertexAttribDivisorARB	glew.h	/^#define glVertexAttribDivisorARB /;"	d
glVertexAttribFormat	glew.h	/^#define glVertexAttribFormat /;"	d
glVertexAttribFormatNV	glew.h	/^#define glVertexAttribFormatNV /;"	d
glVertexAttribI1i	glew.h	/^#define glVertexAttribI1i /;"	d
glVertexAttribI1iEXT	glew.h	/^#define glVertexAttribI1iEXT /;"	d
glVertexAttribI1iv	glew.h	/^#define glVertexAttribI1iv /;"	d
glVertexAttribI1ivEXT	glew.h	/^#define glVertexAttribI1ivEXT /;"	d
glVertexAttribI1ui	glew.h	/^#define glVertexAttribI1ui /;"	d
glVertexAttribI1uiEXT	glew.h	/^#define glVertexAttribI1uiEXT /;"	d
glVertexAttribI1uiv	glew.h	/^#define glVertexAttribI1uiv /;"	d
glVertexAttribI1uivEXT	glew.h	/^#define glVertexAttribI1uivEXT /;"	d
glVertexAttribI2i	glew.h	/^#define glVertexAttribI2i /;"	d
glVertexAttribI2iEXT	glew.h	/^#define glVertexAttribI2iEXT /;"	d
glVertexAttribI2iv	glew.h	/^#define glVertexAttribI2iv /;"	d
glVertexAttribI2ivEXT	glew.h	/^#define glVertexAttribI2ivEXT /;"	d
glVertexAttribI2ui	glew.h	/^#define glVertexAttribI2ui /;"	d
glVertexAttribI2uiEXT	glew.h	/^#define glVertexAttribI2uiEXT /;"	d
glVertexAttribI2uiv	glew.h	/^#define glVertexAttribI2uiv /;"	d
glVertexAttribI2uivEXT	glew.h	/^#define glVertexAttribI2uivEXT /;"	d
glVertexAttribI3i	glew.h	/^#define glVertexAttribI3i /;"	d
glVertexAttribI3iEXT	glew.h	/^#define glVertexAttribI3iEXT /;"	d
glVertexAttribI3iv	glew.h	/^#define glVertexAttribI3iv /;"	d
glVertexAttribI3ivEXT	glew.h	/^#define glVertexAttribI3ivEXT /;"	d
glVertexAttribI3ui	glew.h	/^#define glVertexAttribI3ui /;"	d
glVertexAttribI3uiEXT	glew.h	/^#define glVertexAttribI3uiEXT /;"	d
glVertexAttribI3uiv	glew.h	/^#define glVertexAttribI3uiv /;"	d
glVertexAttribI3uivEXT	glew.h	/^#define glVertexAttribI3uivEXT /;"	d
glVertexAttribI4bv	glew.h	/^#define glVertexAttribI4bv /;"	d
glVertexAttribI4bvEXT	glew.h	/^#define glVertexAttribI4bvEXT /;"	d
glVertexAttribI4i	glew.h	/^#define glVertexAttribI4i /;"	d
glVertexAttribI4iEXT	glew.h	/^#define glVertexAttribI4iEXT /;"	d
glVertexAttribI4iv	glew.h	/^#define glVertexAttribI4iv /;"	d
glVertexAttribI4ivEXT	glew.h	/^#define glVertexAttribI4ivEXT /;"	d
glVertexAttribI4sv	glew.h	/^#define glVertexAttribI4sv /;"	d
glVertexAttribI4svEXT	glew.h	/^#define glVertexAttribI4svEXT /;"	d
glVertexAttribI4ubv	glew.h	/^#define glVertexAttribI4ubv /;"	d
glVertexAttribI4ubvEXT	glew.h	/^#define glVertexAttribI4ubvEXT /;"	d
glVertexAttribI4ui	glew.h	/^#define glVertexAttribI4ui /;"	d
glVertexAttribI4uiEXT	glew.h	/^#define glVertexAttribI4uiEXT /;"	d
glVertexAttribI4uiv	glew.h	/^#define glVertexAttribI4uiv /;"	d
glVertexAttribI4uivEXT	glew.h	/^#define glVertexAttribI4uivEXT /;"	d
glVertexAttribI4usv	glew.h	/^#define glVertexAttribI4usv /;"	d
glVertexAttribI4usvEXT	glew.h	/^#define glVertexAttribI4usvEXT /;"	d
glVertexAttribIFormat	glew.h	/^#define glVertexAttribIFormat /;"	d
glVertexAttribIFormatNV	glew.h	/^#define glVertexAttribIFormatNV /;"	d
glVertexAttribIPointer	glew.h	/^#define glVertexAttribIPointer /;"	d
glVertexAttribIPointerEXT	glew.h	/^#define glVertexAttribIPointerEXT /;"	d
glVertexAttribL1d	glew.h	/^#define glVertexAttribL1d /;"	d
glVertexAttribL1dEXT	glew.h	/^#define glVertexAttribL1dEXT /;"	d
glVertexAttribL1dv	glew.h	/^#define glVertexAttribL1dv /;"	d
glVertexAttribL1dvEXT	glew.h	/^#define glVertexAttribL1dvEXT /;"	d
glVertexAttribL1i64NV	glew.h	/^#define glVertexAttribL1i64NV /;"	d
glVertexAttribL1i64vNV	glew.h	/^#define glVertexAttribL1i64vNV /;"	d
glVertexAttribL1ui64ARB	glew.h	/^#define glVertexAttribL1ui64ARB /;"	d
glVertexAttribL1ui64NV	glew.h	/^#define glVertexAttribL1ui64NV /;"	d
glVertexAttribL1ui64vARB	glew.h	/^#define glVertexAttribL1ui64vARB /;"	d
glVertexAttribL1ui64vNV	glew.h	/^#define glVertexAttribL1ui64vNV /;"	d
glVertexAttribL2d	glew.h	/^#define glVertexAttribL2d /;"	d
glVertexAttribL2dEXT	glew.h	/^#define glVertexAttribL2dEXT /;"	d
glVertexAttribL2dv	glew.h	/^#define glVertexAttribL2dv /;"	d
glVertexAttribL2dvEXT	glew.h	/^#define glVertexAttribL2dvEXT /;"	d
glVertexAttribL2i64NV	glew.h	/^#define glVertexAttribL2i64NV /;"	d
glVertexAttribL2i64vNV	glew.h	/^#define glVertexAttribL2i64vNV /;"	d
glVertexAttribL2ui64NV	glew.h	/^#define glVertexAttribL2ui64NV /;"	d
glVertexAttribL2ui64vNV	glew.h	/^#define glVertexAttribL2ui64vNV /;"	d
glVertexAttribL3d	glew.h	/^#define glVertexAttribL3d /;"	d
glVertexAttribL3dEXT	glew.h	/^#define glVertexAttribL3dEXT /;"	d
glVertexAttribL3dv	glew.h	/^#define glVertexAttribL3dv /;"	d
glVertexAttribL3dvEXT	glew.h	/^#define glVertexAttribL3dvEXT /;"	d
glVertexAttribL3i64NV	glew.h	/^#define glVertexAttribL3i64NV /;"	d
glVertexAttribL3i64vNV	glew.h	/^#define glVertexAttribL3i64vNV /;"	d
glVertexAttribL3ui64NV	glew.h	/^#define glVertexAttribL3ui64NV /;"	d
glVertexAttribL3ui64vNV	glew.h	/^#define glVertexAttribL3ui64vNV /;"	d
glVertexAttribL4d	glew.h	/^#define glVertexAttribL4d /;"	d
glVertexAttribL4dEXT	glew.h	/^#define glVertexAttribL4dEXT /;"	d
glVertexAttribL4dv	glew.h	/^#define glVertexAttribL4dv /;"	d
glVertexAttribL4dvEXT	glew.h	/^#define glVertexAttribL4dvEXT /;"	d
glVertexAttribL4i64NV	glew.h	/^#define glVertexAttribL4i64NV /;"	d
glVertexAttribL4i64vNV	glew.h	/^#define glVertexAttribL4i64vNV /;"	d
glVertexAttribL4ui64NV	glew.h	/^#define glVertexAttribL4ui64NV /;"	d
glVertexAttribL4ui64vNV	glew.h	/^#define glVertexAttribL4ui64vNV /;"	d
glVertexAttribLFormat	glew.h	/^#define glVertexAttribLFormat /;"	d
glVertexAttribLFormatNV	glew.h	/^#define glVertexAttribLFormatNV /;"	d
glVertexAttribLPointer	glew.h	/^#define glVertexAttribLPointer /;"	d
glVertexAttribLPointerEXT	glew.h	/^#define glVertexAttribLPointerEXT /;"	d
glVertexAttribP1ui	glew.h	/^#define glVertexAttribP1ui /;"	d
glVertexAttribP1uiv	glew.h	/^#define glVertexAttribP1uiv /;"	d
glVertexAttribP2ui	glew.h	/^#define glVertexAttribP2ui /;"	d
glVertexAttribP2uiv	glew.h	/^#define glVertexAttribP2uiv /;"	d
glVertexAttribP3ui	glew.h	/^#define glVertexAttribP3ui /;"	d
glVertexAttribP3uiv	glew.h	/^#define glVertexAttribP3uiv /;"	d
glVertexAttribP4ui	glew.h	/^#define glVertexAttribP4ui /;"	d
glVertexAttribP4uiv	glew.h	/^#define glVertexAttribP4uiv /;"	d
glVertexAttribParameteriAMD	glew.h	/^#define glVertexAttribParameteriAMD /;"	d
glVertexAttribPointer	glew.h	/^#define glVertexAttribPointer /;"	d
glVertexAttribPointerARB	glew.h	/^#define glVertexAttribPointerARB /;"	d
glVertexAttribPointerNV	glew.h	/^#define glVertexAttribPointerNV /;"	d
glVertexAttribs1dvNV	glew.h	/^#define glVertexAttribs1dvNV /;"	d
glVertexAttribs1fvNV	glew.h	/^#define glVertexAttribs1fvNV /;"	d
glVertexAttribs1hvNV	glew.h	/^#define glVertexAttribs1hvNV /;"	d
glVertexAttribs1svNV	glew.h	/^#define glVertexAttribs1svNV /;"	d
glVertexAttribs2dvNV	glew.h	/^#define glVertexAttribs2dvNV /;"	d
glVertexAttribs2fvNV	glew.h	/^#define glVertexAttribs2fvNV /;"	d
glVertexAttribs2hvNV	glew.h	/^#define glVertexAttribs2hvNV /;"	d
glVertexAttribs2svNV	glew.h	/^#define glVertexAttribs2svNV /;"	d
glVertexAttribs3dvNV	glew.h	/^#define glVertexAttribs3dvNV /;"	d
glVertexAttribs3fvNV	glew.h	/^#define glVertexAttribs3fvNV /;"	d
glVertexAttribs3hvNV	glew.h	/^#define glVertexAttribs3hvNV /;"	d
glVertexAttribs3svNV	glew.h	/^#define glVertexAttribs3svNV /;"	d
glVertexAttribs4dvNV	glew.h	/^#define glVertexAttribs4dvNV /;"	d
glVertexAttribs4fvNV	glew.h	/^#define glVertexAttribs4fvNV /;"	d
glVertexAttribs4hvNV	glew.h	/^#define glVertexAttribs4hvNV /;"	d
glVertexAttribs4svNV	glew.h	/^#define glVertexAttribs4svNV /;"	d
glVertexAttribs4ubvNV	glew.h	/^#define glVertexAttribs4ubvNV /;"	d
glVertexBindingDivisor	glew.h	/^#define glVertexBindingDivisor /;"	d
glVertexBlendARB	glew.h	/^#define glVertexBlendARB /;"	d
glVertexBlendEnvfATI	glew.h	/^#define glVertexBlendEnvfATI /;"	d
glVertexBlendEnviATI	glew.h	/^#define glVertexBlendEnviATI /;"	d
glVertexFormatNV	glew.h	/^#define glVertexFormatNV /;"	d
glVertexP2ui	glew.h	/^#define glVertexP2ui /;"	d
glVertexP2uiv	glew.h	/^#define glVertexP2uiv /;"	d
glVertexP3ui	glew.h	/^#define glVertexP3ui /;"	d
glVertexP3uiv	glew.h	/^#define glVertexP3uiv /;"	d
glVertexP4ui	glew.h	/^#define glVertexP4ui /;"	d
glVertexP4uiv	glew.h	/^#define glVertexP4uiv /;"	d
glVertexPointerEXT	glew.h	/^#define glVertexPointerEXT /;"	d
glVertexPointerListIBM	glew.h	/^#define glVertexPointerListIBM /;"	d
glVertexPointervINTEL	glew.h	/^#define glVertexPointervINTEL /;"	d
glVertexStream1dATI	glew.h	/^#define glVertexStream1dATI /;"	d
glVertexStream1dvATI	glew.h	/^#define glVertexStream1dvATI /;"	d
glVertexStream1fATI	glew.h	/^#define glVertexStream1fATI /;"	d
glVertexStream1fvATI	glew.h	/^#define glVertexStream1fvATI /;"	d
glVertexStream1iATI	glew.h	/^#define glVertexStream1iATI /;"	d
glVertexStream1ivATI	glew.h	/^#define glVertexStream1ivATI /;"	d
glVertexStream1sATI	glew.h	/^#define glVertexStream1sATI /;"	d
glVertexStream1svATI	glew.h	/^#define glVertexStream1svATI /;"	d
glVertexStream2dATI	glew.h	/^#define glVertexStream2dATI /;"	d
glVertexStream2dvATI	glew.h	/^#define glVertexStream2dvATI /;"	d
glVertexStream2fATI	glew.h	/^#define glVertexStream2fATI /;"	d
glVertexStream2fvATI	glew.h	/^#define glVertexStream2fvATI /;"	d
glVertexStream2iATI	glew.h	/^#define glVertexStream2iATI /;"	d
glVertexStream2ivATI	glew.h	/^#define glVertexStream2ivATI /;"	d
glVertexStream2sATI	glew.h	/^#define glVertexStream2sATI /;"	d
glVertexStream2svATI	glew.h	/^#define glVertexStream2svATI /;"	d
glVertexStream3dATI	glew.h	/^#define glVertexStream3dATI /;"	d
glVertexStream3dvATI	glew.h	/^#define glVertexStream3dvATI /;"	d
glVertexStream3fATI	glew.h	/^#define glVertexStream3fATI /;"	d
glVertexStream3fvATI	glew.h	/^#define glVertexStream3fvATI /;"	d
glVertexStream3iATI	glew.h	/^#define glVertexStream3iATI /;"	d
glVertexStream3ivATI	glew.h	/^#define glVertexStream3ivATI /;"	d
glVertexStream3sATI	glew.h	/^#define glVertexStream3sATI /;"	d
glVertexStream3svATI	glew.h	/^#define glVertexStream3svATI /;"	d
glVertexStream4dATI	glew.h	/^#define glVertexStream4dATI /;"	d
glVertexStream4dvATI	glew.h	/^#define glVertexStream4dvATI /;"	d
glVertexStream4fATI	glew.h	/^#define glVertexStream4fATI /;"	d
glVertexStream4fvATI	glew.h	/^#define glVertexStream4fvATI /;"	d
glVertexStream4iATI	glew.h	/^#define glVertexStream4iATI /;"	d
glVertexStream4ivATI	glew.h	/^#define glVertexStream4ivATI /;"	d
glVertexStream4sATI	glew.h	/^#define glVertexStream4sATI /;"	d
glVertexStream4svATI	glew.h	/^#define glVertexStream4svATI /;"	d
glVertexWeightPointerEXT	glew.h	/^#define glVertexWeightPointerEXT /;"	d
glVertexWeightfEXT	glew.h	/^#define glVertexWeightfEXT /;"	d
glVertexWeightfvEXT	glew.h	/^#define glVertexWeightfvEXT /;"	d
glVertexWeighthNV	glew.h	/^#define glVertexWeighthNV /;"	d
glVertexWeighthvNV	glew.h	/^#define glVertexWeighthvNV /;"	d
glVideoCaptureNV	glew.h	/^#define glVideoCaptureNV /;"	d
glVideoCaptureStreamParameterdvNV	glew.h	/^#define glVideoCaptureStreamParameterdvNV /;"	d
glVideoCaptureStreamParameterfvNV	glew.h	/^#define glVideoCaptureStreamParameterfvNV /;"	d
glVideoCaptureStreamParameterivNV	glew.h	/^#define glVideoCaptureStreamParameterivNV /;"	d
glViewportArrayv	glew.h	/^#define glViewportArrayv /;"	d
glViewportIndexedf	glew.h	/^#define glViewportIndexedf /;"	d
glViewportIndexedfv	glew.h	/^#define glViewportIndexedfv /;"	d
glWaitSync	glew.h	/^#define glWaitSync /;"	d
glWeightPathsNV	glew.h	/^#define glWeightPathsNV /;"	d
glWeightPointerARB	glew.h	/^#define glWeightPointerARB /;"	d
glWeightbvARB	glew.h	/^#define glWeightbvARB /;"	d
glWeightdvARB	glew.h	/^#define glWeightdvARB /;"	d
glWeightfvARB	glew.h	/^#define glWeightfvARB /;"	d
glWeightivARB	glew.h	/^#define glWeightivARB /;"	d
glWeightsvARB	glew.h	/^#define glWeightsvARB /;"	d
glWeightubvARB	glew.h	/^#define glWeightubvARB /;"	d
glWeightuivARB	glew.h	/^#define glWeightuivARB /;"	d
glWeightusvARB	glew.h	/^#define glWeightusvARB /;"	d
glWindowPos2d	glew.h	/^#define glWindowPos2d /;"	d
glWindowPos2dARB	glew.h	/^#define glWindowPos2dARB /;"	d
glWindowPos2dMESA	glew.h	/^#define glWindowPos2dMESA /;"	d
glWindowPos2dv	glew.h	/^#define glWindowPos2dv /;"	d
glWindowPos2dvARB	glew.h	/^#define glWindowPos2dvARB /;"	d
glWindowPos2dvMESA	glew.h	/^#define glWindowPos2dvMESA /;"	d
glWindowPos2f	glew.h	/^#define glWindowPos2f /;"	d
glWindowPos2fARB	glew.h	/^#define glWindowPos2fARB /;"	d
glWindowPos2fMESA	glew.h	/^#define glWindowPos2fMESA /;"	d
glWindowPos2fv	glew.h	/^#define glWindowPos2fv /;"	d
glWindowPos2fvARB	glew.h	/^#define glWindowPos2fvARB /;"	d
glWindowPos2fvMESA	glew.h	/^#define glWindowPos2fvMESA /;"	d
glWindowPos2i	glew.h	/^#define glWindowPos2i /;"	d
glWindowPos2iARB	glew.h	/^#define glWindowPos2iARB /;"	d
glWindowPos2iMESA	glew.h	/^#define glWindowPos2iMESA /;"	d
glWindowPos2iv	glew.h	/^#define glWindowPos2iv /;"	d
glWindowPos2ivARB	glew.h	/^#define glWindowPos2ivARB /;"	d
glWindowPos2ivMESA	glew.h	/^#define glWindowPos2ivMESA /;"	d
glWindowPos2s	glew.h	/^#define glWindowPos2s /;"	d
glWindowPos2sARB	glew.h	/^#define glWindowPos2sARB /;"	d
glWindowPos2sMESA	glew.h	/^#define glWindowPos2sMESA /;"	d
glWindowPos2sv	glew.h	/^#define glWindowPos2sv /;"	d
glWindowPos2svARB	glew.h	/^#define glWindowPos2svARB /;"	d
glWindowPos2svMESA	glew.h	/^#define glWindowPos2svMESA /;"	d
glWindowPos3d	glew.h	/^#define glWindowPos3d /;"	d
glWindowPos3dARB	glew.h	/^#define glWindowPos3dARB /;"	d
glWindowPos3dMESA	glew.h	/^#define glWindowPos3dMESA /;"	d
glWindowPos3dv	glew.h	/^#define glWindowPos3dv /;"	d
glWindowPos3dvARB	glew.h	/^#define glWindowPos3dvARB /;"	d
glWindowPos3dvMESA	glew.h	/^#define glWindowPos3dvMESA /;"	d
glWindowPos3f	glew.h	/^#define glWindowPos3f /;"	d
glWindowPos3fARB	glew.h	/^#define glWindowPos3fARB /;"	d
glWindowPos3fMESA	glew.h	/^#define glWindowPos3fMESA /;"	d
glWindowPos3fv	glew.h	/^#define glWindowPos3fv /;"	d
glWindowPos3fvARB	glew.h	/^#define glWindowPos3fvARB /;"	d
glWindowPos3fvMESA	glew.h	/^#define glWindowPos3fvMESA /;"	d
glWindowPos3i	glew.h	/^#define glWindowPos3i /;"	d
glWindowPos3iARB	glew.h	/^#define glWindowPos3iARB /;"	d
glWindowPos3iMESA	glew.h	/^#define glWindowPos3iMESA /;"	d
glWindowPos3iv	glew.h	/^#define glWindowPos3iv /;"	d
glWindowPos3ivARB	glew.h	/^#define glWindowPos3ivARB /;"	d
glWindowPos3ivMESA	glew.h	/^#define glWindowPos3ivMESA /;"	d
glWindowPos3s	glew.h	/^#define glWindowPos3s /;"	d
glWindowPos3sARB	glew.h	/^#define glWindowPos3sARB /;"	d
glWindowPos3sMESA	glew.h	/^#define glWindowPos3sMESA /;"	d
glWindowPos3sv	glew.h	/^#define glWindowPos3sv /;"	d
glWindowPos3svARB	glew.h	/^#define glWindowPos3svARB /;"	d
glWindowPos3svMESA	glew.h	/^#define glWindowPos3svMESA /;"	d
glWindowPos4dMESA	glew.h	/^#define glWindowPos4dMESA /;"	d
glWindowPos4dvMESA	glew.h	/^#define glWindowPos4dvMESA /;"	d
glWindowPos4fMESA	glew.h	/^#define glWindowPos4fMESA /;"	d
glWindowPos4fvMESA	glew.h	/^#define glWindowPos4fvMESA /;"	d
glWindowPos4iMESA	glew.h	/^#define glWindowPos4iMESA /;"	d
glWindowPos4ivMESA	glew.h	/^#define glWindowPos4ivMESA /;"	d
glWindowPos4sMESA	glew.h	/^#define glWindowPos4sMESA /;"	d
glWindowPos4svMESA	glew.h	/^#define glWindowPos4svMESA /;"	d
glWriteMaskEXT	glew.h	/^#define glWriteMaskEXT /;"	d
glewExperimental	glew.h	/^GLEWAPI GLboolean glewExperimental;$/;"	m	struct:GLEWContextStruct	typeref:typename:GLEWAPI GLboolean
glewInit	glew.h	/^#define glewInit(/;"	d
glewIsExtensionSupported	glew.h	/^#define glewIsExtensionSupported(/;"	d
glewIsSupported	glew.h	/^#define glewIsSupported(/;"	d
glm	glm/detail/_noise.hpp	/^namespace glm{$/;"	n
glm	glm/detail/_swizzle.hpp	/^namespace glm$/;"	n
glm	glm/detail/_swizzle.hpp	/^namespace glm{$/;"	n
glm	glm/detail/_vectorize.hpp	/^namespace glm{$/;"	n
glm	glm/detail/func_common.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_common.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_exponential.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_exponential.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_geometric.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_geometric.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_integer.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_integer.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_matrix.hpp	/^namespace glm{$/;"	n
glm	glm/detail/func_matrix.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_noise.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_noise.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/func_packing.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_packing.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/func_trigonometric.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_trigonometric.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/func_vector_relational.hpp	/^namespace glm$/;"	n
glm	glm/detail/func_vector_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/glm.cpp	/^namespace glm$/;"	n	file:
glm	glm/detail/intrinsic_common.hpp	/^namespace glm{$/;"	n
glm	glm/detail/intrinsic_common.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/intrinsic_exponential.hpp	/^namespace glm{$/;"	n
glm	glm/detail/intrinsic_geometric.hpp	/^namespace glm{$/;"	n
glm	glm/detail/intrinsic_geometric.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/intrinsic_integer.hpp	/^namespace glm{$/;"	n
glm	glm/detail/intrinsic_integer.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/intrinsic_matrix.hpp	/^namespace glm{$/;"	n
glm	glm/detail/intrinsic_matrix.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/intrinsic_trigonometric.hpp	/^namespace glm{$/;"	n
glm	glm/detail/intrinsic_vector_relational.hpp	/^namespace glm{$/;"	n
glm	glm/detail/precision.hpp	/^namespace glm$/;"	n
glm	glm/detail/setup.hpp	/^	namespace glm$/;"	n
glm	glm/detail/setup.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_float.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_gentype.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_gentype.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_half.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_half.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_int.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_mat.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_mat2x2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat2x2.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_mat2x3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat2x3.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat2x4.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat2x4.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat3x2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat3x2.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat3x3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat3x3.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_mat3x4.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat3x4.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat4x2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat4x2.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat4x3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat4x3.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_mat4x4.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_mat4x4.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_vec.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec1.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec1.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_vec2.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec2.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_vec3.hpp	/^namespace glm$/;"	n
glm	glm/detail/type_vec3.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_vec4.hpp	/^namespace glm{$/;"	n
glm	glm/detail/type_vec4.inl	/^namespace glm$/;"	n	file:
glm	glm/detail/type_vec4_avx.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_vec4_avx2.inl	/^namespace glm{$/;"	n	file:
glm	glm/detail/type_vec4_sse2.inl	/^namespace glm{$/;"	n	file:
glm	glm/fwd.hpp	/^namespace glm$/;"	n
glm	glm/gtc/bitfield.hpp	/^namespace glm$/;"	n
glm	glm/gtc/bitfield.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/constants.hpp	/^namespace glm$/;"	n
glm	glm/gtc/constants.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/epsilon.hpp	/^namespace glm$/;"	n
glm	glm/gtc/epsilon.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/integer.hpp	/^namespace glm$/;"	n
glm	glm/gtc/integer.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/matrix_access.hpp	/^namespace glm$/;"	n
glm	glm/gtc/matrix_access.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/matrix_integer.hpp	/^namespace glm$/;"	n
glm	glm/gtc/matrix_inverse.hpp	/^namespace glm$/;"	n
glm	glm/gtc/matrix_inverse.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/matrix_transform.hpp	/^namespace glm$/;"	n
glm	glm/gtc/matrix_transform.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/noise.hpp	/^namespace glm$/;"	n
glm	glm/gtc/noise.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/packing.hpp	/^namespace glm$/;"	n
glm	glm/gtc/packing.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/quaternion.hpp	/^namespace glm$/;"	n
glm	glm/gtc/quaternion.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/random.hpp	/^namespace glm$/;"	n
glm	glm/gtc/random.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/reciprocal.hpp	/^namespace glm$/;"	n
glm	glm/gtc/reciprocal.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/round.hpp	/^namespace glm$/;"	n
glm	glm/gtc/round.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/type_precision.hpp	/^namespace glm$/;"	n
glm	glm/gtc/type_precision.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/type_ptr.hpp	/^namespace glm$/;"	n
glm	glm/gtc/type_ptr.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/ulp.hpp	/^namespace glm$/;"	n
glm	glm/gtc/ulp.inl	/^namespace glm$/;"	n	file:
glm	glm/gtc/ulp.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtc/vec1.hpp	/^namespace glm$/;"	n
glm	glm/gtx/associated_min_max.hpp	/^namespace glm$/;"	n
glm	glm/gtx/associated_min_max.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/bit.hpp	/^namespace glm$/;"	n
glm	glm/gtx/bit.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/closest_point.hpp	/^namespace glm$/;"	n
glm	glm/gtx/closest_point.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/color_space.hpp	/^namespace glm$/;"	n
glm	glm/gtx/color_space.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/color_space_YCoCg.hpp	/^namespace glm$/;"	n
glm	glm/gtx/color_space_YCoCg.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/common.hpp	/^namespace glm$/;"	n
glm	glm/gtx/common.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/compatibility.hpp	/^namespace glm$/;"	n
glm	glm/gtx/compatibility.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/component_wise.hpp	/^namespace glm$/;"	n
glm	glm/gtx/component_wise.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/dual_quaternion.hpp	/^namespace glm$/;"	n
glm	glm/gtx/dual_quaternion.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/euler_angles.hpp	/^namespace glm$/;"	n
glm	glm/gtx/euler_angles.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/extend.hpp	/^namespace glm$/;"	n
glm	glm/gtx/extend.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/extented_min_max.hpp	/^namespace glm$/;"	n
glm	glm/gtx/extented_min_max.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/fast_exponential.hpp	/^namespace glm$/;"	n
glm	glm/gtx/fast_exponential.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/fast_square_root.hpp	/^namespace glm$/;"	n
glm	glm/gtx/fast_square_root.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/fast_trigonometry.hpp	/^namespace glm$/;"	n
glm	glm/gtx/fast_trigonometry.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/gradient_paint.hpp	/^namespace glm$/;"	n
glm	glm/gtx/gradient_paint.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/handed_coordinate_space.hpp	/^namespace glm$/;"	n
glm	glm/gtx/handed_coordinate_space.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/integer.hpp	/^namespace glm$/;"	n
glm	glm/gtx/integer.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/intersect.hpp	/^namespace glm$/;"	n
glm	glm/gtx/intersect.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/io.hpp	/^namespace glm$/;"	n
glm	glm/gtx/io.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/log_base.hpp	/^namespace glm$/;"	n
glm	glm/gtx/log_base.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_cross_product.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_cross_product.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_decompose.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_decompose.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_interpolation.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_interpolation.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_major_storage.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_major_storage.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_operation.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_operation.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_query.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_query.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/matrix_transform_2d.hpp	/^namespace glm$/;"	n
glm	glm/gtx/matrix_transform_2d.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/mixed_product.hpp	/^namespace glm$/;"	n
glm	glm/gtx/mixed_product.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/multiple.hpp	/^namespace glm$/;"	n
glm	glm/gtx/multiple.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/norm.hpp	/^namespace glm$/;"	n
glm	glm/gtx/norm.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/normal.hpp	/^namespace glm$/;"	n
glm	glm/gtx/normal.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/normalize_dot.hpp	/^namespace glm$/;"	n
glm	glm/gtx/normalize_dot.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/number_precision.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/number_precision.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/optimum_pow.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/optimum_pow.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/orthonormalize.hpp	/^namespace glm$/;"	n
glm	glm/gtx/orthonormalize.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/perpendicular.hpp	/^namespace glm$/;"	n
glm	glm/gtx/perpendicular.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/polar_coordinates.hpp	/^namespace glm$/;"	n
glm	glm/gtx/polar_coordinates.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/projection.hpp	/^namespace glm$/;"	n
glm	glm/gtx/projection.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/quaternion.hpp	/^namespace glm$/;"	n
glm	glm/gtx/quaternion.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/range.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/raw_data.hpp	/^namespace glm$/;"	n
glm	glm/gtx/rotate_normalized_axis.hpp	/^namespace glm$/;"	n
glm	glm/gtx/rotate_normalized_axis.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/rotate_vector.hpp	/^namespace glm$/;"	n
glm	glm/gtx/rotate_vector.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/scalar_multiplication.hpp	/^namespace glm$/;"	n
glm	glm/gtx/scalar_relational.hpp	/^namespace glm$/;"	n
glm	glm/gtx/scalar_relational.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/simd_mat4.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/simd_mat4.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/simd_quat.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/simd_quat.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/simd_vec4.hpp	/^namespace glm$/;"	n
glm	glm/gtx/simd_vec4.hpp	/^namespace glm{$/;"	n
glm	glm/gtx/simd_vec4.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/spline.hpp	/^namespace glm$/;"	n
glm	glm/gtx/spline.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/std_based_type.hpp	/^namespace glm$/;"	n
glm	glm/gtx/std_based_type.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/string_cast.hpp	/^namespace glm$/;"	n
glm	glm/gtx/string_cast.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/transform.hpp	/^namespace glm$/;"	n
glm	glm/gtx/transform.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/transform2.hpp	/^namespace glm$/;"	n
glm	glm/gtx/transform2.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/type_aligned.hpp	/^namespace glm$/;"	n
glm	glm/gtx/type_aligned.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/vector_angle.hpp	/^namespace glm$/;"	n
glm	glm/gtx/vector_angle.inl	/^namespace glm$/;"	n	file:
glm	glm/gtx/vector_query.hpp	/^namespace glm$/;"	n
glm	glm/gtx/vector_query.inl	/^namespace glm{$/;"	n	file:
glm	glm/gtx/wrap.hpp	/^namespace glm$/;"	n
glm	glm/gtx/wrap.inl	/^namespace glm$/;"	n	file:
glm	glm/mat2x2.hpp	/^namespace glm$/;"	n
glm	glm/mat2x3.hpp	/^namespace glm$/;"	n
glm	glm/mat2x4.hpp	/^namespace glm$/;"	n
glm	glm/mat3x2.hpp	/^namespace glm$/;"	n
glm	glm/mat3x3.hpp	/^namespace glm$/;"	n
glm	glm/mat3x4.hpp	/^namespace glm$/;"	n
glm	glm/mat4x2.hpp	/^namespace glm$/;"	n
glm	glm/mat4x3.hpp	/^namespace glm$/;"	n
glm	glm/mat4x4.hpp	/^namespace glm$/;"	n
glutCreateMenu	freeglut_std.h	/^#define glutCreateMenu glutCreateMenu_/;"	d
glutCreateMenu_ATEXIT_HACK	freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateMenu_ATEXIT_HACK(void (* func)(int)) { return __glutCre/;"	f	typeref:typename:int FGAPIENTRY FGUNUSED
glutCreateWindow	freeglut_std.h	/^#define glutCreateWindow glutCreateWindow_/;"	d
glutCreateWindow_ATEXIT_HACK	freeglut_std.h	/^static int FGAPIENTRY FGUNUSED glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCr/;"	f	typeref:typename:int FGAPIENTRY FGUNUSED
glutInit	freeglut_std.h	/^#define glutInit glutInit_/;"	d
glutInit_ATEXIT_HACK	freeglut_std.h	/^static void FGAPIENTRY FGUNUSED glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithEx/;"	f	typeref:typename:void FGAPIENTRY FGUNUSED
golden_ratio	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType golden_ratio()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
grad4	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> grad4(T const & j, tvec4<T, P> const & ip)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
grad4	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> grad4(T const & j, tvec4<T, P> const & ip)$/;"	f	namespace:glm::gtc	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
greaterThan	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> greaterThan(vecType<T, P> const & x, vecType<T, P> const & /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
greaterThan	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> greaterThan(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
greaterThan	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
greaterThanEqual	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> greaterThanEqual(vecType<T, P> const & x, vecType<T, P> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
greaterThanEqual	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> greaterThanEqual(tquat<T, P> const & x, tquat<T, P> const & y/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
greaterThanEqual	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
gtc	glm/gtc/noise.inl	/^namespace gtc$/;"	n	namespace:glm	file:
gtx	glm/gtx/number_precision.hpp	/^namespace gtx$/;"	n	namespace:glm
gtx	glm/gtx/optimum_pow.hpp	/^namespace gtx$/;"	n	namespace:glm
half2float	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint half2float(glm::uint h)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
halfVector	glm/detail/dummy.cpp	/^	glm::vec4 halfVector; \/\/ Derived: Hi$/;"	m	struct:light	typeref:typename:glm::vec4	file:
half_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
hdata	glm/detail/type_half.hpp	/^	typedef short hdata;$/;"	t	namespace:glm::detail	typeref:typename:short
hermite	glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType hermite$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
higherMultiple	glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER genType higherMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
higherMultiple	glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> higherMultiple(vecType<T, P> const & Source, vecType<T, P> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
highestBitValue	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genIUType highestBitValue(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
highestBitValue	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> highestBitValue(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
highp	glm/detail/precision.hpp	/^		highp,$/;"	e	enum:glm::precision
highp_bvec1	glm/gtc/vec1.hpp	/^	typedef highp_bvec1_t			highp_bvec1;$/;"	t	namespace:glm	typeref:typename:highp_bvec1_t
highp_bvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<bool, highp>		highp_bvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<bool,highp>
highp_bvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<bool, highp>		highp_bvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<bool,highp>
highp_bvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<bool, highp>		highp_bvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<bool,highp>
highp_bvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<bool, highp>		highp_bvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<bool,highp>
highp_ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, highp>	highp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,highp>
highp_dmat2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,highp>
highp_dmat2x2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,highp>
highp_dmat2x3	glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, highp>		highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<double,highp>
highp_dmat2x4	glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, highp>		highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<double,highp>
highp_dmat3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,highp>
highp_dmat3x2	glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, highp>		highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<double,highp>
highp_dmat3x3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,highp>
highp_dmat3x4	glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, highp>		highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<double,highp>
highp_dmat4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,highp>
highp_dmat4x2	glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, highp>		highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<double,highp>
highp_dmat4x3	glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, highp>		highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<double,highp>
highp_dmat4x4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,highp>
highp_dquat	glm/fwd.hpp	/^	typedef tquat<double, highp>	highp_dquat;$/;"	t	namespace:glm	typeref:typename:tquat<double,highp>
highp_dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_dvec1	glm/gtc/vec1.hpp	/^	typedef highp_dvec1_t			highp_dvec1;$/;"	t	namespace:glm	typeref:typename:highp_dvec1_t
highp_dvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<double, highp>	highp_dvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<double,highp>
highp_dvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<double, highp>	highp_dvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<double,highp>
highp_dvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<double, highp>	highp_dvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<double,highp>
highp_dvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<double, highp>	highp_dvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<double,highp>
highp_f32	glm/fwd.hpp	/^	typedef float32 highp_f32;$/;"	t	namespace:glm	typeref:typename:float32
highp_f32mat2	glm/fwd.hpp	/^	typedef highp_f32mat2x2 highp_f32mat2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
highp_f32mat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,highp>
highp_f32mat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,highp>
highp_f32mat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,highp>
highp_f32mat3	glm/fwd.hpp	/^	typedef highp_f32mat3x3 highp_f32mat3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
highp_f32mat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,highp>
highp_f32mat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,highp>
highp_f32mat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,highp>
highp_f32mat4	glm/fwd.hpp	/^	typedef highp_f32mat4x4 highp_f32mat4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
highp_f32mat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,highp>
highp_f32mat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,highp>
highp_f32mat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,highp>
highp_f32quat	glm/fwd.hpp	/^	typedef tquat<f32, highp> highp_f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,highp>
highp_f32vec1	glm/fwd.hpp	/^	typedef tvec1<f32, highp> highp_f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,highp>
highp_f32vec2	glm/fwd.hpp	/^	typedef tvec2<f32, highp> highp_f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,highp>
highp_f32vec3	glm/fwd.hpp	/^	typedef tvec3<f32, highp> highp_f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,highp>
highp_f32vec4	glm/fwd.hpp	/^	typedef tvec4<f32, highp> highp_f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,highp>
highp_f64	glm/fwd.hpp	/^	typedef float64 highp_f64;$/;"	t	namespace:glm	typeref:typename:float64
highp_f64mat2	glm/fwd.hpp	/^	typedef highp_f64mat2x2 highp_f64mat2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x2
highp_f64mat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f64, highp> highp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,highp>
highp_f64mat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f64, highp> highp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,highp>
highp_f64mat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f64, highp> highp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,highp>
highp_f64mat3	glm/fwd.hpp	/^	typedef highp_f64mat3x3 highp_f64mat3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x3
highp_f64mat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f64, highp> highp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,highp>
highp_f64mat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f64, highp> highp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,highp>
highp_f64mat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f64, highp> highp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,highp>
highp_f64mat4	glm/fwd.hpp	/^	typedef highp_f64mat4x4 highp_f64mat4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x4
highp_f64mat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f64, highp> highp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,highp>
highp_f64mat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f64, highp> highp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,highp>
highp_f64mat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f64, highp> highp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,highp>
highp_f64quat	glm/fwd.hpp	/^	typedef tquat<f64, highp> highp_f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,highp>
highp_f64vec1	glm/fwd.hpp	/^	typedef tvec1<f64, highp> highp_f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,highp>
highp_f64vec2	glm/fwd.hpp	/^	typedef tvec2<f64, highp> highp_f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,highp>
highp_f64vec3	glm/fwd.hpp	/^	typedef tvec3<f64, highp> highp_f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,highp>
highp_f64vec4	glm/fwd.hpp	/^	typedef tvec4<f64, highp> highp_f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,highp>
highp_fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_float	glm/detail/type_float.hpp	/^	typedef highp_float_t		highp_float;$/;"	t	namespace:glm	typeref:typename:highp_float_t
highp_float32	glm/fwd.hpp	/^	typedef detail::float32 highp_float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
highp_float32_t	glm/fwd.hpp	/^	typedef detail::float32 highp_float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
highp_float64	glm/fwd.hpp	/^	typedef detail::float64 highp_float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
highp_float64_t	glm/fwd.hpp	/^	typedef detail::float64 highp_float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
highp_float_t	glm/detail/type_float.hpp	/^	typedef double				highp_float_t;$/;"	t	namespace:glm	typeref:typename:double
highp_fmat2	glm/fwd.hpp	/^	typedef highp_fmat2x2 highp_fmat2;$/;"	t	namespace:glm	typeref:typename:highp_fmat2x2
highp_fmat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,highp>
highp_fmat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,highp>
highp_fmat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,highp>
highp_fmat3	glm/fwd.hpp	/^	typedef highp_fmat3x3 highp_fmat3;$/;"	t	namespace:glm	typeref:typename:highp_fmat3x3
highp_fmat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,highp>
highp_fmat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,highp>
highp_fmat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,highp>
highp_fmat4	glm/fwd.hpp	/^	typedef highp_fmat4x4 highp_fmat4;$/;"	t	namespace:glm	typeref:typename:highp_fmat4x4
highp_fmat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,highp>
highp_fmat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,highp>
highp_fmat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,highp>
highp_fquat	glm/fwd.hpp	/^	typedef highp_quat			highp_fquat;$/;"	t	namespace:glm	typeref:typename:highp_quat
highp_fvec1	glm/fwd.hpp	/^	typedef tvec1<float, highp> highp_fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,highp>
highp_fvec2	glm/fwd.hpp	/^	typedef tvec2<float, highp> highp_fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
highp_fvec3	glm/fwd.hpp	/^	typedef tvec3<float, highp> highp_fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
highp_fvec4	glm/fwd.hpp	/^	typedef tvec4<float, highp> highp_fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
highp_i16	glm/fwd.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_i16vec1	glm/fwd.hpp	/^	typedef tvec1<i16, highp>		highp_i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,highp>
highp_i16vec2	glm/fwd.hpp	/^	typedef tvec2<i16, highp>		highp_i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,highp>
highp_i16vec3	glm/fwd.hpp	/^	typedef tvec3<i16, highp>		highp_i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,highp>
highp_i16vec4	glm/fwd.hpp	/^	typedef tvec4<i16, highp>		highp_i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,highp>
highp_i32	glm/fwd.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_i32vec1	glm/fwd.hpp	/^	typedef tvec1<i32, highp>		highp_i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,highp>
highp_i32vec2	glm/fwd.hpp	/^	typedef tvec2<i32, highp>		highp_i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,highp>
highp_i32vec3	glm/fwd.hpp	/^	typedef tvec3<i32, highp>		highp_i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,highp>
highp_i32vec4	glm/fwd.hpp	/^	typedef tvec4<i32, highp>		highp_i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,highp>
highp_i64	glm/fwd.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_i64vec1	glm/fwd.hpp	/^	typedef tvec1<i64, highp>		highp_i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,highp>
highp_i64vec2	glm/fwd.hpp	/^	typedef tvec2<i64, highp>		highp_i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,highp>
highp_i64vec3	glm/fwd.hpp	/^	typedef tvec3<i64, highp>		highp_i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,highp>
highp_i64vec4	glm/fwd.hpp	/^	typedef tvec4<i64, highp>		highp_i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,highp>
highp_i8	glm/fwd.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_i8vec1	glm/fwd.hpp	/^	typedef tvec1<i8, highp> highp_i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,highp>
highp_i8vec2	glm/fwd.hpp	/^	typedef tvec2<i8, highp> highp_i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,highp>
highp_i8vec3	glm/fwd.hpp	/^	typedef tvec3<i8, highp> highp_i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,highp>
highp_i8vec4	glm/fwd.hpp	/^	typedef tvec4<i8, highp> highp_i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,highp>
highp_imat2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,highp>
highp_imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,highp>
highp_imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, highp>				highp_imat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<int,highp>
highp_imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, highp>				highp_imat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<int,highp>
highp_imat3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,highp>
highp_imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, highp>				highp_imat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<int,highp>
highp_imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,highp>
highp_imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, highp>				highp_imat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<int,highp>
highp_imat4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,highp>
highp_imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, highp>				highp_imat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<int,highp>
highp_imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, highp>				highp_imat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<int,highp>
highp_imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,highp>
highp_int	glm/detail/type_int.hpp	/^	typedef detail::highp_int_t				highp_int;$/;"	t	namespace:glm	typeref:typename:detail::highp_int_t
highp_int16	glm/fwd.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16_t	glm/fwd.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int32	glm/fwd.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32_t	glm/fwd.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int64	glm/fwd.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64_t	glm/fwd.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int8	glm/fwd.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8_t	glm/fwd.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int_t	glm/detail/type_int.hpp	/^	typedef signed int						highp_int_t;$/;"	t	namespace:glm::detail	typeref:typename:signed int
highp_ivec1	glm/gtc/vec1.hpp	/^	typedef highp_ivec1_t			highp_ivec1;$/;"	t	namespace:glm	typeref:typename:highp_ivec1_t
highp_ivec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<int, highp>		highp_ivec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<int,highp>
highp_ivec2	glm/detail/type_vec.hpp	/^	typedef tvec2<int, highp>		highp_ivec2;$/;"	t	namespace:glm	typeref:typename:tvec2<int,highp>
highp_ivec3	glm/detail/type_vec.hpp	/^	typedef tvec3<int, highp>		highp_ivec3;$/;"	t	namespace:glm	typeref:typename:tvec3<int,highp>
highp_ivec4	glm/detail/type_vec.hpp	/^	typedef tvec4<int, highp>		highp_ivec4;$/;"	t	namespace:glm	typeref:typename:tvec4<int,highp>
highp_mat2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2	glm/mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2x2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2x2	glm/mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,highp>
highp_mat2x3	glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,highp>
highp_mat2x3	glm/mat2x3.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,highp>
highp_mat2x4	glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,highp>
highp_mat2x4	glm/mat2x4.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,highp>
highp_mat3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3	glm/mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3x2	glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,highp>
highp_mat3x2	glm/mat3x2.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,highp>
highp_mat3x3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3x3	glm/mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,highp>
highp_mat3x4	glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,highp>
highp_mat3x4	glm/mat3x4.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,highp>
highp_mat4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_mat4	glm/mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_mat4x2	glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,highp>
highp_mat4x2	glm/mat4x2.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,highp>
highp_mat4x3	glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,highp>
highp_mat4x3	glm/mat4x3.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,highp>
highp_mat4x4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_mat4x4	glm/mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,highp>
highp_quat	glm/fwd.hpp	/^	typedef tquat<float, highp>		highp_quat;$/;"	t	namespace:glm	typeref:typename:tquat<float,highp>
highp_u16	glm/fwd.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_u16vec1	glm/fwd.hpp	/^	typedef tvec1<u16, highp>		highp_u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,highp>
highp_u16vec2	glm/fwd.hpp	/^	typedef tvec2<u16, highp>		highp_u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,highp>
highp_u16vec3	glm/fwd.hpp	/^	typedef tvec3<u16, highp>		highp_u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,highp>
highp_u16vec4	glm/fwd.hpp	/^	typedef tvec4<u16, highp>		highp_u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,highp>
highp_u32	glm/fwd.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_u32vec1	glm/fwd.hpp	/^	typedef tvec1<u32, highp>		highp_u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,highp>
highp_u32vec2	glm/fwd.hpp	/^	typedef tvec2<u32, highp>		highp_u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,highp>
highp_u32vec3	glm/fwd.hpp	/^	typedef tvec3<u32, highp>		highp_u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,highp>
highp_u32vec4	glm/fwd.hpp	/^	typedef tvec4<u32, highp>		highp_u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,highp>
highp_u64	glm/fwd.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_u64vec1	glm/fwd.hpp	/^	typedef tvec1<u64, highp>		highp_u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,highp>
highp_u64vec2	glm/fwd.hpp	/^	typedef tvec2<u64, highp>		highp_u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,highp>
highp_u64vec3	glm/fwd.hpp	/^	typedef tvec3<u64, highp>		highp_u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,highp>
highp_u64vec4	glm/fwd.hpp	/^	typedef tvec4<u64, highp>		highp_u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,highp>
highp_u8	glm/fwd.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_u8vec1	glm/fwd.hpp	/^	typedef tvec1<u8, highp> highp_u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,highp>
highp_u8vec2	glm/fwd.hpp	/^	typedef tvec2<u8, highp> highp_u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,highp>
highp_u8vec3	glm/fwd.hpp	/^	typedef tvec3<u8, highp> highp_u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,highp>
highp_u8vec4	glm/fwd.hpp	/^	typedef tvec4<u8, highp> highp_u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,highp>
highp_uint	glm/detail/type_int.hpp	/^	typedef detail::highp_uint_t			highp_uint;$/;"	t	namespace:glm	typeref:typename:detail::highp_uint_t
highp_uint16	glm/fwd.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16_t	glm/fwd.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint32	glm/fwd.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32_t	glm/fwd.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint64	glm/fwd.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64_t	glm/fwd.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint8	glm/fwd.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8_t	glm/fwd.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint_t	glm/detail/type_int.hpp	/^	typedef unsigned int					highp_uint_t;$/;"	t	namespace:glm::detail	typeref:typename:unsigned int
highp_umat2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2;	$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,highp>
highp_umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,highp>
highp_umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, highp>				highp_umat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<uint,highp>
highp_umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, highp>				highp_umat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<uint,highp>
highp_umat3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,highp>
highp_umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, highp>				highp_umat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<uint,highp>
highp_umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,highp>
highp_umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, highp>				highp_umat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<uint,highp>
highp_umat4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,highp>
highp_umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, highp>				highp_umat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<uint,highp>
highp_umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, highp>				highp_umat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<uint,highp>
highp_umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,highp>
highp_uvec1	glm/gtc/vec1.hpp	/^	typedef highp_uvec1_t			highp_uvec1;$/;"	t	namespace:glm	typeref:typename:highp_uvec1_t
highp_uvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<uint, highp>		highp_uvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<uint,highp>
highp_uvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<uint, highp>		highp_uvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<uint,highp>
highp_uvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<uint, highp>		highp_uvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<uint,highp>
highp_uvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<uint, highp>		highp_uvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<uint,highp>
highp_vec1	glm/fwd.hpp	/^	typedef tvec1<float, highp> highp_vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,highp>
highp_vec1	glm/gtc/vec1.hpp	/^	typedef highp_vec1_t			highp_vec1;$/;"	t	namespace:glm	typeref:typename:highp_vec1_t
highp_vec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<float, highp>		highp_vec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<float,highp>
highp_vec2	glm/detail/type_vec.hpp	/^	typedef tvec2<float, highp>		highp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
highp_vec2	glm/fwd.hpp	/^	typedef tvec2<float, highp> highp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,highp>
highp_vec3	glm/detail/type_vec.hpp	/^	typedef tvec3<float, highp>		highp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
highp_vec3	glm/fwd.hpp	/^	typedef tvec3<float, highp> highp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,highp>
highp_vec4	glm/detail/type_vec.hpp	/^	typedef tvec4<float, highp>		highp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
highp_vec4	glm/fwd.hpp	/^	typedef tvec4<float, highp> highp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,highp>
hsvColor	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> hsvColor(const tvec3<T, P>& rgbColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
hundred_eighty	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED hundred_eighty = _mm_set_ps1(180.f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
hundred_eighty_over_pi	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED hundred_eighty_over_pi = _mm_set_ps1(57.2957795130823208767981/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
i	glm/detail/intrinsic_common.inl	/^		struct i$/;"	s	union:glm::detail::ieee754_QNAN	file:
i	glm/detail/type_half.inl	/^		uint32 i;$/;"	m	union:glm::detail::uif32	typeref:typename:uint32	file:
i	glm/gtc/bitfield.inl	/^			int16 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int16	file:
i	glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int32	file:
i	glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:int32	file:
i	glm/gtc/bitfield.inl	/^			int64 i;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:int64	file:
i	glm/gtc/bitfield.inl	/^			int8 i;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:int8	file:
i10i10i10i2	glm/gtc/packing.inl	/^	union i10i10i10i2$/;"	u	namespace:glm::detail	file:
i16	glm/fwd.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
i16vec1	glm/fwd.hpp	/^	typedef highp_i16vec1			i16vec1;$/;"	t	namespace:glm	typeref:typename:highp_i16vec1
i16vec1	glm/fwd.hpp	/^	typedef lowp_i16vec1			i16vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec1
i16vec1	glm/fwd.hpp	/^	typedef mediump_i16vec1			i16vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec1
i16vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<i16, defaultp> i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,defaultp>
i16vec2	glm/fwd.hpp	/^	typedef highp_i16vec2			i16vec2;$/;"	t	namespace:glm	typeref:typename:highp_i16vec2
i16vec2	glm/fwd.hpp	/^	typedef lowp_i16vec2			i16vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec2
i16vec2	glm/fwd.hpp	/^	typedef mediump_i16vec2			i16vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec2
i16vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<i16, defaultp> i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,defaultp>
i16vec3	glm/fwd.hpp	/^	typedef highp_i16vec3			i16vec3;$/;"	t	namespace:glm	typeref:typename:highp_i16vec3
i16vec3	glm/fwd.hpp	/^	typedef lowp_i16vec3			i16vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec3
i16vec3	glm/fwd.hpp	/^	typedef mediump_i16vec3			i16vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec3
i16vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<i16, defaultp> i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,defaultp>
i16vec4	glm/fwd.hpp	/^	typedef highp_i16vec4			i16vec4;$/;"	t	namespace:glm	typeref:typename:highp_i16vec4
i16vec4	glm/fwd.hpp	/^	typedef lowp_i16vec4			i16vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i16vec4
i16vec4	glm/fwd.hpp	/^	typedef mediump_i16vec4			i16vec4;$/;"	t	namespace:glm	typeref:typename:mediump_i16vec4
i16vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<i16, defaultp> i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,defaultp>
i32	glm/fwd.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
i32vec1	glm/fwd.hpp	/^	typedef highp_i32vec1			i32vec1;$/;"	t	namespace:glm	typeref:typename:highp_i32vec1
i32vec1	glm/fwd.hpp	/^	typedef lowp_i32vec1			i32vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec1
i32vec1	glm/fwd.hpp	/^	typedef mediump_i32vec1			i32vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec1
i32vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<i32, defaultp> i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,defaultp>
i32vec2	glm/fwd.hpp	/^	typedef highp_i32vec2			i32vec2;$/;"	t	namespace:glm	typeref:typename:highp_i32vec2
i32vec2	glm/fwd.hpp	/^	typedef lowp_i32vec2			i32vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec2
i32vec2	glm/fwd.hpp	/^	typedef mediump_i32vec2			i32vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec2
i32vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<i32, defaultp> i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,defaultp>
i32vec3	glm/fwd.hpp	/^	typedef highp_i32vec3			i32vec3;$/;"	t	namespace:glm	typeref:typename:highp_i32vec3
i32vec3	glm/fwd.hpp	/^	typedef lowp_i32vec3			i32vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec3
i32vec3	glm/fwd.hpp	/^	typedef mediump_i32vec3			i32vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec3
i32vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<i32, defaultp> i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,defaultp>
i32vec4	glm/fwd.hpp	/^	typedef highp_i32vec4			i32vec4;$/;"	t	namespace:glm	typeref:typename:highp_i32vec4
i32vec4	glm/fwd.hpp	/^	typedef lowp_i32vec4			i32vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i32vec4
i32vec4	glm/fwd.hpp	/^	typedef mediump_i32vec4			i32vec4;$/;"	t	namespace:glm	typeref:typename:mediump_i32vec4
i32vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<i32, defaultp> i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,defaultp>
i64	glm/fwd.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
i64vec1	glm/fwd.hpp	/^	typedef highp_i64vec1			i64vec1;$/;"	t	namespace:glm	typeref:typename:highp_i64vec1
i64vec1	glm/fwd.hpp	/^	typedef lowp_i64vec1			i64vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec1
i64vec1	glm/fwd.hpp	/^	typedef mediump_i64vec1			i64vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec1
i64vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<i64, defaultp> i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,defaultp>
i64vec2	glm/fwd.hpp	/^	typedef highp_i64vec2			i64vec2;$/;"	t	namespace:glm	typeref:typename:highp_i64vec2
i64vec2	glm/fwd.hpp	/^	typedef lowp_i64vec2			i64vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec2
i64vec2	glm/fwd.hpp	/^	typedef mediump_i64vec2			i64vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec2
i64vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<i64, defaultp> i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,defaultp>
i64vec3	glm/fwd.hpp	/^	typedef highp_i64vec3			i64vec3;$/;"	t	namespace:glm	typeref:typename:highp_i64vec3
i64vec3	glm/fwd.hpp	/^	typedef lowp_i64vec3			i64vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec3
i64vec3	glm/fwd.hpp	/^	typedef mediump_i64vec3			i64vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec3
i64vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<i64, defaultp> i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,defaultp>
i64vec4	glm/fwd.hpp	/^	typedef highp_i64vec4			i64vec4;$/;"	t	namespace:glm	typeref:typename:highp_i64vec4
i64vec4	glm/fwd.hpp	/^	typedef lowp_i64vec4			i64vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i64vec4
i64vec4	glm/fwd.hpp	/^	typedef mediump_i64vec4			i64vec4;$/;"	t	namespace:glm	typeref:typename:mediump_i64vec4
i64vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<i64, defaultp> i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,defaultp>
i8	glm/fwd.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
i8vec1	glm/fwd.hpp	/^	typedef highp_i8vec1			i8vec1;$/;"	t	namespace:glm	typeref:typename:highp_i8vec1
i8vec1	glm/fwd.hpp	/^	typedef lowp_i8vec1				i8vec1;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec1
i8vec1	glm/fwd.hpp	/^	typedef mediump_i8vec1			i8vec1;$/;"	t	namespace:glm	typeref:typename:mediump_i8vec1
i8vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<i8, defaultp> i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,defaultp>
i8vec2	glm/fwd.hpp	/^	typedef highp_i8vec2			i8vec2;$/;"	t	namespace:glm	typeref:typename:highp_i8vec2
i8vec2	glm/fwd.hpp	/^	typedef lowp_i8vec2				i8vec2;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec2
i8vec2	glm/fwd.hpp	/^	typedef mediump_i8vec2			i8vec2;$/;"	t	namespace:glm	typeref:typename:mediump_i8vec2
i8vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<i8, defaultp> i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,defaultp>
i8vec3	glm/fwd.hpp	/^	typedef highp_i8vec3			i8vec3;$/;"	t	namespace:glm	typeref:typename:highp_i8vec3
i8vec3	glm/fwd.hpp	/^	typedef lowp_i8vec3				i8vec3;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec3
i8vec3	glm/fwd.hpp	/^	typedef mediump_i8vec3			i8vec3;$/;"	t	namespace:glm	typeref:typename:mediump_i8vec3
i8vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<i8, defaultp> i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,defaultp>
i8vec4	glm/fwd.hpp	/^	typedef highp_i8vec4			i8vec4;$/;"	t	namespace:glm	typeref:typename:highp_i8vec4
i8vec4	glm/fwd.hpp	/^	typedef lowp_i8vec4				i8vec4;$/;"	t	namespace:glm	typeref:typename:lowp_i8vec4
i8vec4	glm/fwd.hpp	/^	typedef mediump_i8vec4			i8vec4;	$/;"	t	namespace:glm	typeref:typename:mediump_i8vec4
i8vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<i8, defaultp> i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,defaultp>
id	glm/gtx/io.hpp	/^			static std::locale::id id;$/;"	m	class:glm::io::format_punct	typeref:typename:std::locale::id
id	glm/gtx/io.inl	/^	template <typename CTy> std::locale::id format_punct<CTy>::id;$/;"	m	class:glm::io::format_punct<CTy>	typeref:typename:std::locale::id
ieee754_QNAN	glm/detail/intrinsic_common.inl	/^		ieee754_QNAN() : f(0.0)\/*, mantissa(0x7FFFFF), exp(0xFF), sign(0x0)*\/ {}$/;"	f	union:glm::detail::ieee754_QNAN	file:
ieee754_QNAN	glm/detail/intrinsic_common.inl	/^	union ieee754_QNAN$/;"	u	namespace:glm::detail	file:
ieee_double_shape_type	glm/gtc/ulp.inl	/^} ieee_double_shape_type;$/;"	t	typeref:union:__anon2dbcfbc3020a	file:
ieee_float_shape_type	glm/gtc/ulp.inl	/^} ieee_float_shape_type;$/;"	t	typeref:union:__anon2dbcfbc3010a	file:
imat2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2								imat2;$/;"	t	namespace:glm	typeref:typename:highp_imat2
imat2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2								imat2;$/;"	t	namespace:glm	typeref:typename:lowp_imat2
imat2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2							imat2;$/;"	t	namespace:glm	typeref:typename:mediump_imat2
imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:highp_imat2x2
imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x2
imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x2							imat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x2
imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:highp_imat2x3
imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x3
imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x3							imat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x3
imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:highp_imat2x4
imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat2x4
imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat2x4							imat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat2x4
imat3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3								imat3;$/;"	t	namespace:glm	typeref:typename:highp_imat3
imat3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3								imat3;$/;"	t	namespace:glm	typeref:typename:lowp_imat3
imat3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3							imat3;$/;"	t	namespace:glm	typeref:typename:mediump_imat3
imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:highp_imat3x2
imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x2
imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x2							imat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x2
imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:highp_imat3x3
imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x3
imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x3							imat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x3
imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:highp_imat3x4
imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat3x4
imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat3x4							imat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat3x4
imat4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4								imat4;$/;"	t	namespace:glm	typeref:typename:highp_imat4
imat4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4								imat4;$/;"	t	namespace:glm	typeref:typename:lowp_imat4
imat4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4							imat4;$/;"	t	namespace:glm	typeref:typename:mediump_imat4
imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:highp_imat4x2
imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x2
imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x2							imat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x2
imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:highp_imat4x3
imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x3
imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x3							imat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x3
imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:highp_imat4x4
imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_imat4x4
imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_imat4x4							imat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_imat4x4
imulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(int x, int y, int & msb, int & lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
imulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(vecType<int, P> const & x, vecType<int, P> const & y, vecT/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
infinitePerspective	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> infinitePerspective$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
int1	glm/gtx/compatibility.hpp	/^	typedef int							int1;			\/\/!< \\brief integer vector with 1 component. (From GLM_GTX_compati/;"	t	namespace:glm	typeref:typename:int
int16	glm/detail/type_int.hpp	/^		typedef std::int16_t				int16;$/;"	t	namespace:glm::detail	typeref:typename:std::int16_t
int16	glm/detail/type_int.hpp	/^	typedef detail::int16					int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16	glm/fwd.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16_t	glm/fwd.hpp	/^	typedef detail::int16 int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
int1x1	glm/gtx/compatibility.hpp	/^	typedef int							int1x1;			\/\/!< \\brief integer matrix with 1 component. (From GLM_GTX_compa/;"	t	namespace:glm	typeref:typename:int
int2	glm/gtx/compatibility.hpp	/^	typedef tvec2<int, highp>			int2;			\/\/!< \\brief integer vector with 2 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec2<int,highp>
int2x2	glm/gtx/compatibility.hpp	/^	typedef tmat2x2<int, highp>		int2x2;			\/\/!< \\brief integer matrix with 2 x 2 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat2x2<int,highp>
int2x3	glm/gtx/compatibility.hpp	/^	typedef tmat2x3<int, highp>		int2x3;			\/\/!< \\brief integer matrix with 2 x 3 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat2x3<int,highp>
int2x4	glm/gtx/compatibility.hpp	/^	typedef tmat2x4<int, highp>		int2x4;			\/\/!< \\brief integer matrix with 2 x 4 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat2x4<int,highp>
int3	glm/gtx/compatibility.hpp	/^	typedef tvec3<int, highp>			int3;			\/\/!< \\brief integer vector with 3 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec3<int,highp>
int32	glm/detail/type_int.hpp	/^		typedef std::int32_t				int32;$/;"	t	namespace:glm::detail	typeref:typename:std::int32_t
int32	glm/detail/type_int.hpp	/^	typedef detail::int32					int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32	glm/fwd.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32_t	glm/fwd.hpp	/^	typedef detail::int32 int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
int3x2	glm/gtx/compatibility.hpp	/^	typedef tmat3x2<int, highp>		int3x2;			\/\/!< \\brief integer matrix with 3 x 2 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat3x2<int,highp>
int3x3	glm/gtx/compatibility.hpp	/^	typedef tmat3x3<int, highp>		int3x3;			\/\/!< \\brief integer matrix with 3 x 3 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat3x3<int,highp>
int3x4	glm/gtx/compatibility.hpp	/^	typedef tmat3x4<int, highp>		int3x4;			\/\/!< \\brief integer matrix with 3 x 4 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat3x4<int,highp>
int4	glm/gtx/compatibility.hpp	/^	typedef tvec4<int, highp>			int4;			\/\/!< \\brief integer vector with 4 components. (From GLM_/;"	t	namespace:glm	typeref:typename:tvec4<int,highp>
int4x2	glm/gtx/compatibility.hpp	/^	typedef tmat4x2<int, highp>		int4x2;			\/\/!< \\brief integer matrix with 4 x 2 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat4x2<int,highp>
int4x3	glm/gtx/compatibility.hpp	/^	typedef tmat4x3<int, highp>		int4x3;			\/\/!< \\brief integer matrix with 4 x 3 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat4x3<int,highp>
int4x4	glm/gtx/compatibility.hpp	/^	typedef tmat4x4<int, highp>		int4x4;			\/\/!< \\brief integer matrix with 4 x 4 components. (Fr/;"	t	namespace:glm	typeref:typename:tmat4x4<int,highp>
int64	glm/detail/type_int.hpp	/^		typedef std::int64_t				int64;$/;"	t	namespace:glm::detail	typeref:typename:std::int64_t
int64	glm/detail/type_int.hpp	/^	typedef detail::int64					int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64	glm/fwd.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64_t	glm/fwd.hpp	/^	typedef detail::int64 int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
int8	glm/detail/type_int.hpp	/^		typedef std::int8_t					int8;$/;"	t	namespace:glm::detail	typeref:typename:std::int8_t
int8	glm/detail/type_int.hpp	/^	typedef detail::int8					int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8	glm/fwd.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8_t	glm/fwd.hpp	/^	typedef detail::int8 int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
intBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float intBitsToFloat(int const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
intBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<float, P> intBitsToFloat(vecType<int, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,P>
int_t	glm/detail/type_int.hpp	/^	typedef highp_int					int_t;$/;"	t	namespace:glm	typeref:typename:highp_int
int_t	glm/detail/type_int.hpp	/^	typedef lowp_int					int_t;$/;"	t	namespace:glm	typeref:typename:lowp_int
int_t	glm/detail/type_int.hpp	/^	typedef mediump_int					int_t;$/;"	t	namespace:glm	typeref:typename:mediump_int
intermediate	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> intermediate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
interpolate	glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> interpolate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
intersectLineSphere	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineSphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectLineTriangle	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayPlane	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayPlane$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRaySphere	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRaySphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayTriangle	glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersection	glm/detail/dummy.cpp	/^struct intersection$/;"	s	file:
inverse	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER matType<T, P> inverse(matType<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER matType<T,P>
inverse	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> inverse(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
inverse	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> inverse(tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
inverse	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD inverse(detail::fmat4x4SIMD const & m)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
inverse	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD inverse$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
inverseTranspose	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> inverseTranspose(tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
inverseTranspose	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> inverseTranspose(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
inverseTranspose	glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> inverseTranspose(tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
inversesqrt	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType inversesqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
inversesqrt	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> inversesqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
inversesqrt	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD inversesqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
io	glm/gtx/io.hpp	/^	namespace io$/;"	n	namespace:glm
io	glm/gtx/io.inl	/^namespace io$/;"	n	namespace:glm	file:
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER tvec2<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<bool,P>
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER tvec3<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<bool,P>
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
isCompNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isCompNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isIdentity	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isIdentity(matType<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER bool isMultiple(genType Value, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isMultiple(vecType<T, P> const & Value, T Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isMultiple(vecType<T, P> const & Value, vecType<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isNormalized	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(tmat2x2<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(tmat3x3<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(tmat4x4<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(tmat2x2<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(tmat3x3<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(tmat4x4<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isOrthogonal	glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isOrthogonal(matType<T, P> const & m, T const & epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER bool isPowerOfTwo(genType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isPowerOfTwo(vecType<T, P> const & Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
is_matrix	glm/detail/type_gentype.inl	/^bool base<vT, cT, rT, pT>::is_matrix()$/;"	f	class:glm::detail::base	typeref:typename:bool
is_scalar	glm/detail/type_gentype.inl	/^bool base<vT, cT, rT, pT>::is_scalar()$/;"	f	class:glm::detail::base	typeref:typename:bool
is_vector	glm/detail/type_gentype.hpp	/^	bool genType<VALTYPE, TYPE>::is_vector()$/;"	f	class:glm::detail::genType	typeref:typename:bool
is_vector	glm/detail/type_gentype.inl	/^bool base<vT, cT, rT, pT>::is_vector()$/;"	f	class:glm::detail::base	typeref:typename:bool
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER bool isdenormal(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec1<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec1<T,P>::bool_type
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec2<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec2<T,P>::bool_type
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec3<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec3<T,P>::bool_type
isdenormal	glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename tvec4<T, P>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tvec4<T,P>::bool_type
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER bool isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER tvec2<bool, P> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<bool,P>
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER tvec3<bool, P> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<bool,P>
isfinite	glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
isinf	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isinf(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isinf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isinf(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
isnan	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isnan(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isnan	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> isnan(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
ivec1	glm/gtc/vec1.hpp	/^	typedef highp_ivec1			ivec1;$/;"	t	namespace:glm	typeref:typename:highp_ivec1
ivec1	glm/gtc/vec1.hpp	/^	typedef lowp_ivec1			ivec1;$/;"	t	namespace:glm	typeref:typename:lowp_ivec1
ivec1	glm/gtc/vec1.hpp	/^	typedef mediump_ivec1		ivec1;$/;"	t	namespace:glm	typeref:typename:mediump_ivec1
ivec2	glm/detail/type_vec.hpp	/^	typedef highp_ivec2			ivec2;$/;"	t	namespace:glm	typeref:typename:highp_ivec2
ivec2	glm/detail/type_vec.hpp	/^	typedef lowp_ivec2			ivec2;$/;"	t	namespace:glm	typeref:typename:lowp_ivec2
ivec2	glm/detail/type_vec.hpp	/^	typedef mediump_ivec2		ivec2;$/;"	t	namespace:glm	typeref:typename:mediump_ivec2
ivec3	glm/detail/type_vec.hpp	/^	typedef highp_ivec3			ivec3;$/;"	t	namespace:glm	typeref:typename:highp_ivec3
ivec3	glm/detail/type_vec.hpp	/^	typedef lowp_ivec3			ivec3;$/;"	t	namespace:glm	typeref:typename:lowp_ivec3
ivec3	glm/detail/type_vec.hpp	/^	typedef mediump_ivec3		ivec3;$/;"	t	namespace:glm	typeref:typename:mediump_ivec3
ivec4	glm/detail/type_vec.hpp	/^	typedef highp_ivec4			ivec4;$/;"	t	namespace:glm	typeref:typename:highp_ivec4
ivec4	glm/detail/type_vec.hpp	/^	typedef lowp_ivec4			ivec4;$/;"	t	namespace:glm	typeref:typename:lowp_ivec4
ivec4	glm/detail/type_vec.hpp	/^	typedef mediump_ivec4		ivec4;$/;"	t	namespace:glm	typeref:typename:mediump_ivec4
l1Norm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l1Norm$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l2Norm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l2Norm$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
ldexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType ldexp(genType const & x, int const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ldexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> ldexp(tvec1<T, P> const & x, tvec1<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
ldexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> ldexp(tvec2<T, P> const & x, tvec2<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
ldexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> ldexp(tvec3<T, P> const & x, tvec3<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
ldexp	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> ldexp(tvec4<T, P> const & x, tvec4<int, P> const & exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
leftHanded	glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool leftHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
length	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T length(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType length(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
length	glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T, P>::length_type tmat2x2<T, P>::length() c/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T,P>::length_type
length	glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T, P>::length_type tmat2x3<T, P>::length() c/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T,P>::length_type
length	glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T, P>::length_type tmat2x4<T, P>::length() c/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T,P>::length_type
length	glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T, P>::length_type tmat3x2<T, P>::length() c/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T,P>::length_type
length	glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T, P>::length_type tmat3x3<T, P>::length() c/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T,P>::length_type
length	glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T, P>::length_type tmat3x4<T, P>::length() c/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T,P>::length_type
length	glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T, P>::length_type tmat4x2<T, P>::length() c/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T,P>::length_type
length	glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T, P>::length_type tmat4x3<T, P>::length() c/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T,P>::length_type
length	glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T, P>::length_type tmat4x4<T, P>::length() c/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T,P>::length_type
length	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T, P>::length_type tvec1<T, P>::length() const$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T,P>::length_type
length	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T, P>::length_type tvec3<T, P>::length() const$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T,P>::length_type
length	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T, P>::length_type tvec4<T, P>::length() const$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T,P>::length_type
length	glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T, P>::length_type tquat<T, P>::length() const$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T,P>::length_type
length	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T length(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER length_t fmat4x4SIMD::length() const$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER length_t
length	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER float length$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
length	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float length$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
length2	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T length2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length2	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER T length2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length4	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD length4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
length_t	glm/detail/setup.hpp	/^		typedef int length_t;$/;"	t	namespace:glm	typeref:typename:int
length_t	glm/detail/setup.hpp	/^		typedef size_t length_t;$/;"	t	namespace:glm	typeref:typename:size_t
length_type	glm/detail/type_mat2x2.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:length_t
length_type	glm/detail/type_mat2x3.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:length_t
length_type	glm/detail/type_mat2x4.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:length_t
length_type	glm/detail/type_mat3x2.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:length_t
length_type	glm/detail/type_mat3x3.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:length_t
length_type	glm/detail/type_mat3x4.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:length_t
length_type	glm/detail/type_mat4x2.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:length_t
length_type	glm/detail/type_mat4x3.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:length_t
length_type	glm/detail/type_mat4x4.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:length_t
length_type	glm/detail/type_vec1.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tvec1	typeref:typename:length_t
length_type	glm/gtc/quaternion.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tquat	typeref:typename:length_t
length_type	glm/gtx/dual_quaternion.hpp	/^			typedef length_t length_type;$/;"	t	struct:glm::tdualquat	typeref:typename:length_t
lerp	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> lerp(tquat<T, P> const & x, tquat<T, P> const & y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
lerp	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> lerp(const tvec2<T, P>& x, co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
lerp	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> lerp(const tvec3<T, P>& x, co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
lerp	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> lerp(const tvec4<T, P>& x, co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
lerp	glm/gtx/compatibility.hpp	/^	template <typename T> GLM_FUNC_QUALIFIER T lerp(T x, T y, T a){return mix(x, y, a);}											/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lerp	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> lerp(tdualquat<T, P> const & x, tdualquat<T, P> const & y, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
lerp	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD lerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
lessThan	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> lessThan(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
lessThan	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> lessThan(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
lessThan	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
lessThanEqual	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> lessThanEqual(vecType<T, P> const & x, vecType<T, P> const /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
lessThanEqual	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> lessThanEqual(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
lessThanEqual	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
light	glm/detail/dummy.cpp	/^struct light$/;"	s	file:
linearAttenuation	glm/detail/dummy.cpp	/^	float linearAttenuation; \/\/ K1$/;"	m	struct:light	typeref:typename:float	file:
linearGradient	glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T linearGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
linearRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType linearRand(genType Min, genType Max)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
linearRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> linearRand(vecType<T, P> const & Min, vecType<T, P> const & Ma/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
literal	glm/gtx/string_cast.inl	/^	struct literal$/;"	s	namespace:glm::detail	file:
literal	glm/gtx/string_cast.inl	/^	struct literal<T, true>$/;"	s	namespace:glm::detail	file:
literal	glm/gtx/string_cast.inl	/^	struct literal<int64_t, false>$/;"	s	namespace:glm::detail	file:
literal	glm/gtx/string_cast.inl	/^	struct literal<uint64_t, false>$/;"	s	namespace:glm::detail	file:
ln_ln_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType ln_ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ln_ten	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType ln_ten()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ln_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
locale_	glm/gtx/io.hpp	/^			locale_type     locale_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:locale_type
locale_type	glm/gtx/io.hpp	/^			typedef ::std::locale const            locale_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::locale const
log	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> log(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
log	glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER genType log(genType const & x, genType const & base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log	glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> log(vecType<T, P> const & x, vecType<T, P> const & base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
log	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> log$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
log2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType log2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log2	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> log2(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
lookAt	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> lookAt$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
lowerMultiple	glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER genType lowerMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
lowerMultiple	glm/gtx/multiple.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> lowerMultiple(vecType<T, P> const & Source, vecType<T, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
lowp	glm/detail/precision.hpp	/^		lowp,$/;"	e	enum:glm::precision
lowp_bvec1	glm/gtc/vec1.hpp	/^	typedef lowp_bvec1_t			lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:lowp_bvec1_t
lowp_bvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<bool, lowp>		lowp_bvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<bool,lowp>
lowp_bvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<bool,lowp>
lowp_bvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<bool,lowp>
lowp_bvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<bool,lowp>
lowp_ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, lowp>		lowp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,lowp>
lowp_dmat2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,lowp>
lowp_dmat2x2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,lowp>
lowp_dmat2x3	glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<double,lowp>
lowp_dmat2x4	glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<double,lowp>
lowp_dmat3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_dmat3x2	glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<double,lowp>
lowp_dmat3x3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,lowp>
lowp_dmat3x4	glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<double,lowp>
lowp_dmat4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,lowp>
lowp_dmat4x2	glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<double,lowp>
lowp_dmat4x3	glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<double,lowp>
lowp_dmat4x4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,lowp>
lowp_dquat	glm/fwd.hpp	/^	typedef tquat<double, lowp>		lowp_dquat;$/;"	t	namespace:glm	typeref:typename:tquat<double,lowp>
lowp_dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_dvec1	glm/gtc/vec1.hpp	/^	typedef lowp_dvec1_t			lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:lowp_dvec1_t
lowp_dvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<double, lowp>		lowp_dvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<double,lowp>
lowp_dvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<double, lowp>		lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<double,lowp>
lowp_dvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<double, lowp>		lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<double,lowp>
lowp_dvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<double, lowp>		lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<double,lowp>
lowp_f32	glm/fwd.hpp	/^	typedef float32 lowp_f32;$/;"	t	namespace:glm	typeref:typename:float32
lowp_f32mat2	glm/fwd.hpp	/^	typedef lowp_f32mat2x2 lowp_f32mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
lowp_f32mat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,lowp>
lowp_f32mat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,lowp>
lowp_f32mat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,lowp>
lowp_f32mat3	glm/fwd.hpp	/^	typedef lowp_f32mat3x3 lowp_f32mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
lowp_f32mat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,lowp>
lowp_f32mat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,lowp>
lowp_f32mat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,lowp>
lowp_f32mat4	glm/fwd.hpp	/^	typedef lowp_f32mat4x4 lowp_f32mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
lowp_f32mat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,lowp>
lowp_f32mat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,lowp>
lowp_f32mat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,lowp>
lowp_f32quat	glm/fwd.hpp	/^	typedef tquat<f32, lowp> lowp_f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,lowp>
lowp_f32vec1	glm/fwd.hpp	/^	typedef tvec1<f32, lowp> lowp_f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,lowp>
lowp_f32vec2	glm/fwd.hpp	/^	typedef tvec2<f32, lowp> lowp_f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,lowp>
lowp_f32vec3	glm/fwd.hpp	/^	typedef tvec3<f32, lowp> lowp_f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,lowp>
lowp_f32vec4	glm/fwd.hpp	/^	typedef tvec4<f32, lowp> lowp_f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,lowp>
lowp_f64	glm/fwd.hpp	/^	typedef float64 lowp_f64;$/;"	t	namespace:glm	typeref:typename:float64
lowp_f64mat2	glm/fwd.hpp	/^	typedef lowp_f64mat2x2 lowp_f64mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x2
lowp_f64mat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f64, lowp> lowp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,lowp>
lowp_f64mat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f64, lowp> lowp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,lowp>
lowp_f64mat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f64, lowp> lowp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,lowp>
lowp_f64mat3	glm/fwd.hpp	/^	typedef lowp_f64mat3x3 lowp_f64mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x3
lowp_f64mat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f64, lowp> lowp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,lowp>
lowp_f64mat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f64, lowp> lowp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,lowp>
lowp_f64mat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f64, lowp> lowp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,lowp>
lowp_f64mat4	glm/fwd.hpp	/^	typedef lowp_f64mat4x4 lowp_f64mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x4
lowp_f64mat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f64, lowp> lowp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,lowp>
lowp_f64mat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f64, lowp> lowp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,lowp>
lowp_f64mat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f64, lowp> lowp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,lowp>
lowp_f64quat	glm/fwd.hpp	/^	typedef tquat<f64, lowp> lowp_f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,lowp>
lowp_f64vec1	glm/fwd.hpp	/^	typedef tvec1<f64, lowp> lowp_f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,lowp>
lowp_f64vec2	glm/fwd.hpp	/^	typedef tvec2<f64, lowp> lowp_f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,lowp>
lowp_f64vec3	glm/fwd.hpp	/^	typedef tvec3<f64, lowp> lowp_f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,lowp>
lowp_f64vec4	glm/fwd.hpp	/^	typedef tvec4<f64, lowp> lowp_f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,lowp>
lowp_fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_float	glm/detail/type_float.hpp	/^	typedef lowp_float_t		lowp_float;$/;"	t	namespace:glm	typeref:typename:lowp_float_t
lowp_float32	glm/fwd.hpp	/^	typedef detail::float32 lowp_float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
lowp_float32_t	glm/fwd.hpp	/^	typedef detail::float32 lowp_float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
lowp_float64	glm/fwd.hpp	/^	typedef detail::float64 lowp_float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
lowp_float64_t	glm/fwd.hpp	/^	typedef detail::float64 lowp_float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
lowp_float_t	glm/detail/type_float.hpp	/^	typedef float				lowp_float_t;$/;"	t	namespace:glm	typeref:typename:float
lowp_fmat2	glm/fwd.hpp	/^	typedef lowp_fmat2x2 lowp_fmat2;$/;"	t	namespace:glm	typeref:typename:lowp_fmat2x2
lowp_fmat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,lowp>
lowp_fmat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,lowp>
lowp_fmat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,lowp>
lowp_fmat3	glm/fwd.hpp	/^	typedef lowp_fmat3x3 lowp_fmat3;$/;"	t	namespace:glm	typeref:typename:lowp_fmat3x3
lowp_fmat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,lowp>
lowp_fmat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,lowp>
lowp_fmat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,lowp>
lowp_fmat4	glm/fwd.hpp	/^	typedef lowp_fmat4x4 lowp_fmat4;$/;"	t	namespace:glm	typeref:typename:lowp_fmat4x4
lowp_fmat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,lowp>
lowp_fmat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,lowp>
lowp_fmat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,lowp>
lowp_fquat	glm/fwd.hpp	/^	typedef lowp_quat			lowp_fquat;$/;"	t	namespace:glm	typeref:typename:lowp_quat
lowp_fvec1	glm/fwd.hpp	/^	typedef tvec1<float, lowp> lowp_fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,lowp>
lowp_fvec2	glm/fwd.hpp	/^	typedef tvec2<float, lowp> lowp_fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,lowp>
lowp_fvec3	glm/fwd.hpp	/^	typedef tvec3<float, lowp> lowp_fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,lowp>
lowp_fvec4	glm/fwd.hpp	/^	typedef tvec4<float, lowp> lowp_fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,lowp>
lowp_i16	glm/fwd.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_i16vec1	glm/fwd.hpp	/^	typedef tvec1<i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,lowp>
lowp_i16vec2	glm/fwd.hpp	/^	typedef tvec2<i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,lowp>
lowp_i16vec3	glm/fwd.hpp	/^	typedef tvec3<i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,lowp>
lowp_i16vec4	glm/fwd.hpp	/^	typedef tvec4<i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,lowp>
lowp_i32	glm/fwd.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_i32vec1	glm/fwd.hpp	/^	typedef tvec1<i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,lowp>
lowp_i32vec2	glm/fwd.hpp	/^	typedef tvec2<i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,lowp>
lowp_i32vec3	glm/fwd.hpp	/^	typedef tvec3<i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,lowp>
lowp_i32vec4	glm/fwd.hpp	/^	typedef tvec4<i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,lowp>
lowp_i64	glm/fwd.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_i64vec1	glm/fwd.hpp	/^	typedef tvec1<i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,lowp>
lowp_i64vec2	glm/fwd.hpp	/^	typedef tvec2<i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,lowp>
lowp_i64vec3	glm/fwd.hpp	/^	typedef tvec3<i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,lowp>
lowp_i64vec4	glm/fwd.hpp	/^	typedef tvec4<i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,lowp>
lowp_i8	glm/fwd.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_i8vec1	glm/fwd.hpp	/^	typedef tvec1<i8, lowp> lowp_i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,lowp>
lowp_i8vec2	glm/fwd.hpp	/^	typedef tvec2<i8, lowp> lowp_i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,lowp>
lowp_i8vec3	glm/fwd.hpp	/^	typedef tvec3<i8, lowp> lowp_i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,lowp>
lowp_i8vec4	glm/fwd.hpp	/^	typedef tvec4<i8, lowp> lowp_i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,lowp>
lowp_imat2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,lowp>
lowp_imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,lowp>
lowp_imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, lowp>				lowp_imat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<int,lowp>
lowp_imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, lowp>				lowp_imat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<int,lowp>
lowp_imat3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,lowp>
lowp_imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, lowp>				lowp_imat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<int,lowp>
lowp_imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,lowp>
lowp_imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, lowp>				lowp_imat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<int,lowp>
lowp_imat4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,lowp>
lowp_imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, lowp>				lowp_imat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<int,lowp>
lowp_imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, lowp>				lowp_imat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<int,lowp>
lowp_imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,lowp>
lowp_int	glm/detail/type_int.hpp	/^	typedef detail::lowp_int_t				lowp_int;$/;"	t	namespace:glm	typeref:typename:detail::lowp_int_t
lowp_int16	glm/fwd.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16_t	glm/fwd.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int32	glm/fwd.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32_t	glm/fwd.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int64	glm/fwd.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64_t	glm/fwd.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int8	glm/fwd.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8_t	glm/fwd.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int_t	glm/detail/type_int.hpp	/^	typedef signed int						lowp_int_t;$/;"	t	namespace:glm::detail	typeref:typename:signed int
lowp_ivec1	glm/gtc/vec1.hpp	/^	typedef lowp_ivec1_t			lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:lowp_ivec1_t
lowp_ivec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<int, lowp>		lowp_ivec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<int,lowp>
lowp_ivec2	glm/detail/type_vec.hpp	/^	typedef tvec2<int, lowp>		lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:tvec2<int,lowp>
lowp_ivec3	glm/detail/type_vec.hpp	/^	typedef tvec3<int, lowp>		lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:tvec3<int,lowp>
lowp_ivec4	glm/detail/type_vec.hpp	/^	typedef tvec4<int, lowp>		lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:tvec4<int,lowp>
lowp_mat2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2	glm/mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2x2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2x2	glm/mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,lowp>
lowp_mat2x3	glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,lowp>
lowp_mat2x3	glm/mat2x3.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,lowp>
lowp_mat2x4	glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,lowp>
lowp_mat2x4	glm/mat2x4.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,lowp>
lowp_mat3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3	glm/mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3x2	glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,lowp>
lowp_mat3x2	glm/mat3x2.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,lowp>
lowp_mat3x3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3x3	glm/mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,lowp>
lowp_mat3x4	glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,lowp>
lowp_mat3x4	glm/mat3x4.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,lowp>
lowp_mat4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_mat4	glm/mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_mat4x2	glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,lowp>
lowp_mat4x2	glm/mat4x2.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,lowp>
lowp_mat4x3	glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,lowp>
lowp_mat4x3	glm/mat4x3.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,lowp>
lowp_mat4x4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_mat4x4	glm/mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,lowp>
lowp_quat	glm/fwd.hpp	/^	typedef tquat<float, lowp>		lowp_quat;$/;"	t	namespace:glm	typeref:typename:tquat<float,lowp>
lowp_u16	glm/fwd.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_u16vec1	glm/fwd.hpp	/^	typedef tvec1<u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,lowp>
lowp_u16vec2	glm/fwd.hpp	/^	typedef tvec2<u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,lowp>
lowp_u16vec3	glm/fwd.hpp	/^	typedef tvec3<u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,lowp>
lowp_u16vec4	glm/fwd.hpp	/^	typedef tvec4<u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,lowp>
lowp_u32	glm/fwd.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_u32vec1	glm/fwd.hpp	/^	typedef tvec1<u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,lowp>
lowp_u32vec2	glm/fwd.hpp	/^	typedef tvec2<u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,lowp>
lowp_u32vec3	glm/fwd.hpp	/^	typedef tvec3<u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,lowp>
lowp_u32vec4	glm/fwd.hpp	/^	typedef tvec4<u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,lowp>
lowp_u64	glm/fwd.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_u64vec1	glm/fwd.hpp	/^	typedef tvec1<u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,lowp>
lowp_u64vec2	glm/fwd.hpp	/^	typedef tvec2<u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,lowp>
lowp_u64vec3	glm/fwd.hpp	/^	typedef tvec3<u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,lowp>
lowp_u64vec4	glm/fwd.hpp	/^	typedef tvec4<u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,lowp>
lowp_u8	glm/fwd.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_u8vec1	glm/fwd.hpp	/^	typedef tvec1<u8, lowp> lowp_u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,lowp>
lowp_u8vec2	glm/fwd.hpp	/^	typedef tvec2<u8, lowp> lowp_u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,lowp>
lowp_u8vec3	glm/fwd.hpp	/^	typedef tvec3<u8, lowp> lowp_u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,lowp>
lowp_u8vec4	glm/fwd.hpp	/^	typedef tvec4<u8, lowp> lowp_u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,lowp>
lowp_uint	glm/detail/type_int.hpp	/^	typedef detail::lowp_uint_t				lowp_uint;$/;"	t	namespace:glm	typeref:typename:detail::lowp_uint_t
lowp_uint16	glm/fwd.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16_t	glm/fwd.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint32	glm/fwd.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32_t	glm/fwd.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint64	glm/fwd.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64_t	glm/fwd.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint8	glm/fwd.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8_t	glm/fwd.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint_t	glm/detail/type_int.hpp	/^	typedef unsigned int					lowp_uint_t;$/;"	t	namespace:glm::detail	typeref:typename:unsigned int
lowp_umat2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,lowp>
lowp_umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,lowp>
lowp_umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, lowp>				lowp_umat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<uint,lowp>
lowp_umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, lowp>				lowp_umat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<uint,lowp>
lowp_umat3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,lowp>
lowp_umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, lowp>				lowp_umat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<uint,lowp>
lowp_umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,lowp>
lowp_umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, lowp>				lowp_umat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<uint,lowp>
lowp_umat4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,lowp>
lowp_umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, lowp>				lowp_umat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<uint,lowp>
lowp_umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, lowp>				lowp_umat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<uint,lowp>
lowp_umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,lowp>
lowp_uvec1	glm/gtc/vec1.hpp	/^	typedef lowp_uvec1_t			lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:lowp_uvec1_t
lowp_uvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<uint, lowp>		lowp_uvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<uint,lowp>
lowp_uvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<uint,lowp>
lowp_uvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<uint,lowp>
lowp_uvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<uint,lowp>
lowp_vec1	glm/fwd.hpp	/^	typedef tvec1<float, lowp> lowp_vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,lowp>
lowp_vec1	glm/gtc/vec1.hpp	/^	typedef lowp_vec1_t				lowp_vec1;$/;"	t	namespace:glm	typeref:typename:lowp_vec1_t
lowp_vec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<float, lowp>		lowp_vec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<float,lowp>
lowp_vec2	glm/detail/type_vec.hpp	/^	typedef tvec2<float, lowp>		lowp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,lowp>
lowp_vec2	glm/fwd.hpp	/^	typedef tvec2<float, lowp> lowp_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,lowp>
lowp_vec3	glm/detail/type_vec.hpp	/^	typedef tvec3<float, lowp>		lowp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,lowp>
lowp_vec3	glm/fwd.hpp	/^	typedef tvec3<float, lowp> lowp_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,lowp>
lowp_vec4	glm/detail/type_vec.hpp	/^	typedef tvec4<float, lowp>		lowp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,lowp>
lowp_vec4	glm/fwd.hpp	/^	typedef tvec4<float, lowp> lowp_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,lowp>
lsw	glm/gtc/ulp.inl	/^		glm::detail::int32 lsw;$/;"	m	struct:__anon2dbcfbc3020a::__anon2dbcfbc30308	typeref:typename:glm::detail::int32	file:
luminosity	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER T luminosity(const tvec3<T, P>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lxNorm	glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lxNorm$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
main	Makefile	/^main:		main.cpp$/;"	t
main	glm/detail/dummy.cpp	/^int main()$/;"	f	typeref:typename:int
main	keytime.cpp	/^main( int argc, char *argv[ ] )$/;"	f	typeref:typename:int
main	main.cpp	/^main( int argc, char *argv[ ] )$/;"	f	typeref:typename:int
make_mat2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, defaultp> make_mat2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,defaultp>
make_mat2x2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, defaultp> make_mat2x2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,defaultp>
make_mat2x3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, defaultp> make_mat2x3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,defaultp>
make_mat2x4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, defaultp> make_mat2x4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,defaultp>
make_mat3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, defaultp> make_mat3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,defaultp>
make_mat3x2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, defaultp> make_mat3x2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,defaultp>
make_mat3x3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, defaultp> make_mat3x3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,defaultp>
make_mat3x4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, defaultp> make_mat3x4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,defaultp>
make_mat4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> make_mat4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
make_mat4x2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, defaultp> make_mat4x2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,defaultp>
make_mat4x3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, defaultp> make_mat4x3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,defaultp>
make_mat4x4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> make_mat4x4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
make_quat	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tquat<T, defaultp> make_quat(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,defaultp>
make_signed	glm/detail/type_int.hpp	/^		struct make_signed$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<char>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<int>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<long long>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<long>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<short>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<unsigned char>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<unsigned int>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<unsigned long long>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<unsigned long>$/;"	s	namespace:glm::detail
make_signed	glm/detail/type_int.hpp	/^		struct make_signed<unsigned short>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<char>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<int>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<long long>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<long>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<short>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned char>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned int>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned long long>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned long>$/;"	s	namespace:glm::detail
make_unsigned	glm/detail/type_int.hpp	/^		struct make_unsigned<unsigned short>$/;"	s	namespace:glm::detail
make_vec2	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> make_vec2(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
make_vec3	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> make_vec3(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
make_vec4	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, defaultp> make_vec4(T const * const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,defaultp>
mantissa	glm/detail/intrinsic_common.inl	/^			const unsigned int mantissa:23, exp:8, sign:1;$/;"	m	struct:glm::detail::ieee754_QNAN::i	typeref:typename:const unsigned int:23	file:
mask	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER T mask(T Bits)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
mask	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType mask(genIUType Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
mask	glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vecIUType<T, P> mask(vecIUType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecIUType<T,P>
mat2	glm/detail/type_mat.hpp	/^	typedef mat2x2					mat2;$/;"	t	namespace:glm	typeref:typename:mat2x2
mat2x2	glm/detail/type_mat.hpp	/^	typedef highp_mat2x2			mat2x2;$/;"	t	namespace:glm	typeref:typename:highp_mat2x2
mat2x2	glm/detail/type_mat.hpp	/^	typedef lowp_mat2x2			mat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_mat2x2
mat2x2	glm/detail/type_mat.hpp	/^	typedef mediump_mat2x2		mat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_mat2x2
mat2x3	glm/detail/type_mat.hpp	/^	typedef highp_mat2x3			mat2x3;$/;"	t	namespace:glm	typeref:typename:highp_mat2x3
mat2x3	glm/detail/type_mat.hpp	/^	typedef lowp_mat2x3			mat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_mat2x3
mat2x3	glm/detail/type_mat.hpp	/^	typedef mediump_mat2x3		mat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_mat2x3
mat2x4	glm/detail/type_mat.hpp	/^	typedef highp_mat2x4			mat2x4;$/;"	t	namespace:glm	typeref:typename:highp_mat2x4
mat2x4	glm/detail/type_mat.hpp	/^	typedef lowp_mat2x4			mat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_mat2x4
mat2x4	glm/detail/type_mat.hpp	/^	typedef mediump_mat2x4		mat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_mat2x4
mat2x4_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> mat2x4_cast(tdualquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
mat3	glm/detail/type_mat.hpp	/^	typedef mat3x3					mat3;$/;"	t	namespace:glm	typeref:typename:mat3x3
mat3_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> mat3_cast(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
mat3x2	glm/detail/type_mat.hpp	/^	typedef highp_mat3x2			mat3x2;$/;"	t	namespace:glm	typeref:typename:highp_mat3x2
mat3x2	glm/detail/type_mat.hpp	/^	typedef lowp_mat3x2			mat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_mat3x2
mat3x2	glm/detail/type_mat.hpp	/^	typedef mediump_mat3x2		mat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_mat3x2
mat3x3	glm/detail/type_mat.hpp	/^	typedef highp_mat3x3			mat3x3;$/;"	t	namespace:glm	typeref:typename:highp_mat3x3
mat3x3	glm/detail/type_mat.hpp	/^	typedef lowp_mat3x3			mat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_mat3x3
mat3x3	glm/detail/type_mat.hpp	/^	typedef mediump_mat3x3		mat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_mat3x3
mat3x4	glm/detail/type_mat.hpp	/^	typedef highp_mat3x4			mat3x4;$/;"	t	namespace:glm	typeref:typename:highp_mat3x4
mat3x4	glm/detail/type_mat.hpp	/^	typedef lowp_mat3x4			mat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_mat3x4
mat3x4	glm/detail/type_mat.hpp	/^	typedef mediump_mat3x4		mat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_mat3x4
mat3x4_cast	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> mat3x4_cast(tdualquat<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
mat4	glm/detail/type_mat.hpp	/^	typedef mat4x4					mat4;$/;"	t	namespace:glm	typeref:typename:mat4x4
mat4SIMD_cast	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD mat4SIMD_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
mat4_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> mat4_cast(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
mat4_cast	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER mat4 mat4_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat4
mat4_cast	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER mat4 mat4_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat4
mat4x2	glm/detail/type_mat.hpp	/^	typedef highp_mat4x2			mat4x2;$/;"	t	namespace:glm	typeref:typename:highp_mat4x2
mat4x2	glm/detail/type_mat.hpp	/^	typedef lowp_mat4x2			mat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_mat4x2
mat4x2	glm/detail/type_mat.hpp	/^	typedef mediump_mat4x2		mat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_mat4x2
mat4x3	glm/detail/type_mat.hpp	/^	typedef highp_mat4x3			mat4x3;$/;"	t	namespace:glm	typeref:typename:highp_mat4x3
mat4x3	glm/detail/type_mat.hpp	/^	typedef lowp_mat4x3			mat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_mat4x3
mat4x3	glm/detail/type_mat.hpp	/^	typedef mediump_mat4x3		mat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_mat4x3
mat4x4	glm/detail/type_mat.hpp	/^	typedef highp_mat4x4			mat4x4;$/;"	t	namespace:glm	typeref:typename:highp_mat4x4
mat4x4	glm/detail/type_mat.hpp	/^	typedef lowp_mat4x4			mat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_mat4x4
mat4x4	glm/detail/type_mat.hpp	/^	typedef mediump_mat4x4		mat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_mat4x4
material	glm/detail/dummy.cpp	/^struct material$/;"	s	file:
matrixCompMult	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER matType<T, P> matrixCompMult(matType<T, P> const & x, matType<T, P> const & /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER matType<T,P>
matrixCompMult	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD matrixCompMult$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
matrixCross3	glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> matrixCross3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
matrixCross4	glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> matrixCross4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
max	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType max(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
max	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> max(vecType<T, P> const & a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
max	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> max(vecType<T, P> const & a, vecType<T, P> const & b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
max	glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
max	glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T max($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
mediump	glm/detail/precision.hpp	/^		mediump,$/;"	e	enum:glm::precision
mediump_bvec1	glm/gtc/vec1.hpp	/^	typedef mediump_bvec1_t			mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:mediump_bvec1_t
mediump_bvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<bool, mediump>	mediump_bvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<bool,mediump>
mediump_bvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<bool,mediump>
mediump_bvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<bool,mediump>
mediump_bvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<bool,mediump>
mediump_ddualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, mediump>	mediump_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,mediump>
mediump_dmat2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,mediump>
mediump_dmat2x2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<double,mediump>
mediump_dmat2x3	glm/detail/type_mat.hpp	/^	typedef tmat2x3<double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<double,mediump>
mediump_dmat2x4	glm/detail/type_mat.hpp	/^	typedef tmat2x4<double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<double,mediump>
mediump_dmat3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,mediump>
mediump_dmat3x2	glm/detail/type_mat.hpp	/^	typedef tmat3x2<double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<double,mediump>
mediump_dmat3x3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<double,mediump>
mediump_dmat3x4	glm/detail/type_mat.hpp	/^	typedef tmat3x4<double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<double,mediump>
mediump_dmat4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,mediump>
mediump_dmat4x2	glm/detail/type_mat.hpp	/^	typedef tmat4x2<double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<double,mediump>
mediump_dmat4x3	glm/detail/type_mat.hpp	/^	typedef tmat4x3<double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<double,mediump>
mediump_dmat4x4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<double,mediump>
mediump_dquat	glm/fwd.hpp	/^	typedef tquat<double, mediump>	mediump_dquat;$/;"	t	namespace:glm	typeref:typename:tquat<double,mediump>
mediump_dualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_dvec1	glm/gtc/vec1.hpp	/^	typedef mediump_dvec1_t			mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:mediump_dvec1_t
mediump_dvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<double, mediump>	mediump_dvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<double,mediump>
mediump_dvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<double, mediump>	mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<double,mediump>
mediump_dvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<double, mediump>	mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<double,mediump>
mediump_dvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<double, mediump>	mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<double,mediump>
mediump_f32	glm/fwd.hpp	/^	typedef float32 mediump_f32;$/;"	t	namespace:glm	typeref:typename:float32
mediump_f32mat2	glm/fwd.hpp	/^	typedef mediump_f32mat2x2 mediump_f32mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
mediump_f32mat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,mediump>
mediump_f32mat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,mediump>
mediump_f32mat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,mediump>
mediump_f32mat3	glm/fwd.hpp	/^	typedef mediump_f32mat3x3 mediump_f32mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
mediump_f32mat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,mediump>
mediump_f32mat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,mediump>
mediump_f32mat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,mediump>
mediump_f32mat4	glm/fwd.hpp	/^	typedef mediump_f32mat4x4 mediump_f32mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
mediump_f32mat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,mediump>
mediump_f32mat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,mediump>
mediump_f32mat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,mediump>
mediump_f32quat	glm/fwd.hpp	/^	typedef tquat<f32, mediump> mediump_f32quat;$/;"	t	namespace:glm	typeref:typename:tquat<f32,mediump>
mediump_f32vec1	glm/fwd.hpp	/^	typedef tvec1<f32, mediump> mediump_f32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f32,mediump>
mediump_f32vec2	glm/fwd.hpp	/^	typedef tvec2<f32, mediump> mediump_f32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f32,mediump>
mediump_f32vec3	glm/fwd.hpp	/^	typedef tvec3<f32, mediump> mediump_f32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f32,mediump>
mediump_f32vec4	glm/fwd.hpp	/^	typedef tvec4<f32, mediump> mediump_f32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f32,mediump>
mediump_f64	glm/fwd.hpp	/^	typedef float64 mediump_f64;$/;"	t	namespace:glm	typeref:typename:float64
mediump_f64mat2	glm/fwd.hpp	/^	typedef mediump_f64mat2x2 mediump_f64mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x2
mediump_f64mat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f64, mediump> mediump_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f64,mediump>
mediump_f64mat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f64, mediump> mediump_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f64,mediump>
mediump_f64mat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f64, mediump> mediump_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f64,mediump>
mediump_f64mat3	glm/fwd.hpp	/^	typedef mediump_f64mat3x3 mediump_f64mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x3
mediump_f64mat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f64, mediump> mediump_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f64,mediump>
mediump_f64mat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f64, mediump> mediump_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f64,mediump>
mediump_f64mat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f64, mediump> mediump_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f64,mediump>
mediump_f64mat4	glm/fwd.hpp	/^	typedef mediump_f64mat4x4 mediump_f64mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x4
mediump_f64mat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f64, mediump> mediump_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f64,mediump>
mediump_f64mat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f64, mediump> mediump_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f64,mediump>
mediump_f64mat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f64, mediump> mediump_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f64,mediump>
mediump_f64quat	glm/fwd.hpp	/^	typedef tquat<f64, mediump> mediump_f64quat;$/;"	t	namespace:glm	typeref:typename:tquat<f64,mediump>
mediump_f64vec1	glm/fwd.hpp	/^	typedef tvec1<f64, mediump> mediump_f64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<f64,mediump>
mediump_f64vec2	glm/fwd.hpp	/^	typedef tvec2<f64, mediump> mediump_f64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<f64,mediump>
mediump_f64vec3	glm/fwd.hpp	/^	typedef tvec3<f64, mediump> mediump_f64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<f64,mediump>
mediump_f64vec4	glm/fwd.hpp	/^	typedef tvec4<f64, mediump> mediump_f64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<f64,mediump>
mediump_fdualquat	glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_float	glm/detail/type_float.hpp	/^	typedef mediump_float_t		mediump_float;$/;"	t	namespace:glm	typeref:typename:mediump_float_t
mediump_float32	glm/fwd.hpp	/^	typedef detail::float32 mediump_float32;$/;"	t	namespace:glm	typeref:typename:detail::float32
mediump_float32_t	glm/fwd.hpp	/^	typedef detail::float32 mediump_float32_t;$/;"	t	namespace:glm	typeref:typename:detail::float32
mediump_float64	glm/fwd.hpp	/^	typedef detail::float64 mediump_float64;$/;"	t	namespace:glm	typeref:typename:detail::float64
mediump_float64_t	glm/fwd.hpp	/^	typedef detail::float64 mediump_float64_t;$/;"	t	namespace:glm	typeref:typename:detail::float64
mediump_float_t	glm/detail/type_float.hpp	/^	typedef float				mediump_float_t;$/;"	t	namespace:glm	typeref:typename:float
mediump_fmat2	glm/fwd.hpp	/^	typedef mediump_fmat2x2 mediump_fmat2;$/;"	t	namespace:glm	typeref:typename:mediump_fmat2x2
mediump_fmat2x2	glm/fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_fmat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<f32,mediump>
mediump_fmat2x3	glm/fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_fmat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<f32,mediump>
mediump_fmat2x4	glm/fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_fmat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<f32,mediump>
mediump_fmat3	glm/fwd.hpp	/^	typedef mediump_fmat3x3 mediump_fmat3;$/;"	t	namespace:glm	typeref:typename:mediump_fmat3x3
mediump_fmat3x2	glm/fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_fmat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<f32,mediump>
mediump_fmat3x3	glm/fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_fmat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<f32,mediump>
mediump_fmat3x4	glm/fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_fmat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<f32,mediump>
mediump_fmat4	glm/fwd.hpp	/^	typedef mediump_fmat4x4 mediump_fmat4;$/;"	t	namespace:glm	typeref:typename:mediump_fmat4x4
mediump_fmat4x2	glm/fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_fmat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<f32,mediump>
mediump_fmat4x3	glm/fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_fmat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<f32,mediump>
mediump_fmat4x4	glm/fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_fmat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<f32,mediump>
mediump_fquat	glm/fwd.hpp	/^	typedef mediump_quat		mediump_fquat;$/;"	t	namespace:glm	typeref:typename:mediump_quat
mediump_fvec1	glm/fwd.hpp	/^	typedef tvec1<float, mediump> mediump_fvec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,mediump>
mediump_fvec2	glm/fwd.hpp	/^	typedef tvec2<float, mediump> mediump_fvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,mediump>
mediump_fvec3	glm/fwd.hpp	/^	typedef tvec3<float, mediump> mediump_fvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,mediump>
mediump_fvec4	glm/fwd.hpp	/^	typedef tvec4<float, mediump> mediump_fvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,mediump>
mediump_i16	glm/fwd.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_i16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_i16vec1	glm/fwd.hpp	/^	typedef tvec1<i16, mediump>		mediump_i16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i16,mediump>
mediump_i16vec2	glm/fwd.hpp	/^	typedef tvec2<i16, mediump>		mediump_i16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i16,mediump>
mediump_i16vec3	glm/fwd.hpp	/^	typedef tvec3<i16, mediump>		mediump_i16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i16,mediump>
mediump_i16vec4	glm/fwd.hpp	/^	typedef tvec4<i16, mediump>		mediump_i16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i16,mediump>
mediump_i32	glm/fwd.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_i32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_i32vec1	glm/fwd.hpp	/^	typedef tvec1<i32, mediump>		mediump_i32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i32,mediump>
mediump_i32vec2	glm/fwd.hpp	/^	typedef tvec2<i32, mediump>		mediump_i32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i32,mediump>
mediump_i32vec3	glm/fwd.hpp	/^	typedef tvec3<i32, mediump>		mediump_i32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i32,mediump>
mediump_i32vec4	glm/fwd.hpp	/^	typedef tvec4<i32, mediump>		mediump_i32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i32,mediump>
mediump_i64	glm/fwd.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_i64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_i64vec1	glm/fwd.hpp	/^	typedef tvec1<i64, mediump>		mediump_i64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i64,mediump>
mediump_i64vec2	glm/fwd.hpp	/^	typedef tvec2<i64, mediump>		mediump_i64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i64,mediump>
mediump_i64vec3	glm/fwd.hpp	/^	typedef tvec3<i64, mediump>		mediump_i64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i64,mediump>
mediump_i64vec4	glm/fwd.hpp	/^	typedef tvec4<i64, mediump>		mediump_i64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i64,mediump>
mediump_i8	glm/fwd.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_i8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_i8vec1	glm/fwd.hpp	/^	typedef tvec1<i8, mediump> mediump_i8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<i8,mediump>
mediump_i8vec2	glm/fwd.hpp	/^	typedef tvec2<i8, mediump> mediump_i8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<i8,mediump>
mediump_i8vec3	glm/fwd.hpp	/^	typedef tvec3<i8, mediump> mediump_i8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<i8,mediump>
mediump_i8vec4	glm/fwd.hpp	/^	typedef tvec4<i8, mediump> mediump_i8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<i8,mediump>
mediump_imat2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,mediump>
mediump_imat2x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<int,mediump>
mediump_imat2x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<int, mediump>			mediump_imat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<int,mediump>
mediump_imat2x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<int, mediump>			mediump_imat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<int,mediump>
mediump_imat3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,mediump>
mediump_imat3x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<int, mediump>			mediump_imat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<int,mediump>
mediump_imat3x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<int,mediump>
mediump_imat3x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<int, mediump>			mediump_imat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<int,mediump>
mediump_imat4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,mediump>
mediump_imat4x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<int, mediump>			mediump_imat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<int,mediump>
mediump_imat4x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<int, mediump>			mediump_imat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<int,mediump>
mediump_imat4x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<int,mediump>
mediump_int	glm/detail/type_int.hpp	/^	typedef detail::mediump_int_t			mediump_int;$/;"	t	namespace:glm	typeref:typename:detail::mediump_int_t
mediump_int16	glm/fwd.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16	glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16_t	glm/fwd.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16_t	glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int32	glm/fwd.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32	glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32_t	glm/fwd.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32_t	glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int64	glm/fwd.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64	glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64_t	glm/fwd.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64_t	glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int8	glm/fwd.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8	glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8_t	glm/fwd.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8_t	glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int_t	glm/detail/type_int.hpp	/^	typedef signed int						mediump_int_t;$/;"	t	namespace:glm::detail	typeref:typename:signed int
mediump_ivec1	glm/gtc/vec1.hpp	/^	typedef mediump_ivec1_t			mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:mediump_ivec1_t
mediump_ivec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<int, mediump>		mediump_ivec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<int,mediump>
mediump_ivec2	glm/detail/type_vec.hpp	/^	typedef tvec2<int, mediump>		mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:tvec2<int,mediump>
mediump_ivec3	glm/detail/type_vec.hpp	/^	typedef tvec3<int, mediump>		mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:tvec3<int,mediump>
mediump_ivec4	glm/detail/type_vec.hpp	/^	typedef tvec4<int, mediump>		mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:tvec4<int,mediump>
mediump_mat2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2	glm/mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2x2	glm/detail/type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2x2	glm/mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<float,mediump>
mediump_mat2x3	glm/detail/type_mat.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,mediump>
mediump_mat2x3	glm/mat2x3.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<float,mediump>
mediump_mat2x4	glm/detail/type_mat.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,mediump>
mediump_mat2x4	glm/mat2x4.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<float,mediump>
mediump_mat3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3	glm/mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3x2	glm/detail/type_mat.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,mediump>
mediump_mat3x2	glm/mat3x2.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<float,mediump>
mediump_mat3x3	glm/detail/type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3x3	glm/mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<float,mediump>
mediump_mat3x4	glm/detail/type_mat.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,mediump>
mediump_mat3x4	glm/mat3x4.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<float,mediump>
mediump_mat4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_mat4	glm/mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_mat4x2	glm/detail/type_mat.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,mediump>
mediump_mat4x2	glm/mat4x2.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<float,mediump>
mediump_mat4x3	glm/detail/type_mat.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,mediump>
mediump_mat4x3	glm/mat4x3.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<float,mediump>
mediump_mat4x4	glm/detail/type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_mat4x4	glm/mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<float,mediump>
mediump_quat	glm/fwd.hpp	/^	typedef tquat<float, mediump>	mediump_quat;$/;"	t	namespace:glm	typeref:typename:tquat<float,mediump>
mediump_u16	glm/fwd.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_u16vec1	glm/fwd.hpp	/^	typedef tvec1<u16, mediump>		mediump_u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,mediump>
mediump_u16vec2	glm/fwd.hpp	/^	typedef tvec2<u16, mediump>		mediump_u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,mediump>
mediump_u16vec3	glm/fwd.hpp	/^	typedef tvec3<u16, mediump>		mediump_u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,mediump>
mediump_u16vec4	glm/fwd.hpp	/^	typedef tvec4<u16, mediump>		mediump_u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,mediump>
mediump_u32	glm/fwd.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_u32vec1	glm/fwd.hpp	/^	typedef tvec1<u32, mediump>		mediump_u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,mediump>
mediump_u32vec2	glm/fwd.hpp	/^	typedef tvec2<u32, mediump>		mediump_u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,mediump>
mediump_u32vec3	glm/fwd.hpp	/^	typedef tvec3<u32, mediump>		mediump_u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,mediump>
mediump_u32vec4	glm/fwd.hpp	/^	typedef tvec4<u32, mediump>		mediump_u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,mediump>
mediump_u64	glm/fwd.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_u64vec1	glm/fwd.hpp	/^	typedef tvec1<u64, mediump>		mediump_u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,mediump>
mediump_u64vec2	glm/fwd.hpp	/^	typedef tvec2<u64, mediump>		mediump_u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,mediump>
mediump_u64vec3	glm/fwd.hpp	/^	typedef tvec3<u64, mediump>		mediump_u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,mediump>
mediump_u64vec4	glm/fwd.hpp	/^	typedef tvec4<u64, mediump>		mediump_u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,mediump>
mediump_u8	glm/fwd.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_u8vec1	glm/fwd.hpp	/^	typedef tvec1<u8, mediump> mediump_u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,mediump>
mediump_u8vec2	glm/fwd.hpp	/^	typedef tvec2<u8, mediump> mediump_u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,mediump>
mediump_u8vec3	glm/fwd.hpp	/^	typedef tvec3<u8, mediump> mediump_u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,mediump>
mediump_u8vec4	glm/fwd.hpp	/^	typedef tvec4<u8, mediump> mediump_u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,mediump>
mediump_uint	glm/detail/type_int.hpp	/^	typedef detail::mediump_uint_t			mediump_uint;$/;"	t	namespace:glm	typeref:typename:detail::mediump_uint_t
mediump_uint16	glm/fwd.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16_t	glm/fwd.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint32	glm/fwd.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32_t	glm/fwd.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint64	glm/fwd.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64_t	glm/fwd.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint8	glm/fwd.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8_t	glm/fwd.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint_t	glm/detail/type_int.hpp	/^	typedef unsigned int					mediump_uint_t;$/;"	t	namespace:glm::detail	typeref:typename:unsigned int
mediump_umat2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,mediump>
mediump_umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2x2;$/;"	t	namespace:glm	typeref:typename:tmat2x2<uint,mediump>
mediump_umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x3<uint, mediump>			mediump_umat2x3;$/;"	t	namespace:glm	typeref:typename:tmat2x3<uint,mediump>
mediump_umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat2x4<uint, mediump>			mediump_umat2x4;$/;"	t	namespace:glm	typeref:typename:tmat2x4<uint,mediump>
mediump_umat3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,mediump>
mediump_umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x2<uint, mediump>			mediump_umat3x2;$/;"	t	namespace:glm	typeref:typename:tmat3x2<uint,mediump>
mediump_umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3x3;$/;"	t	namespace:glm	typeref:typename:tmat3x3<uint,mediump>
mediump_umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat3x4<uint, mediump>			mediump_umat3x4;$/;"	t	namespace:glm	typeref:typename:tmat3x4<uint,mediump>
mediump_umat4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,mediump>
mediump_umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x2<uint, mediump>			mediump_umat4x2;$/;"	t	namespace:glm	typeref:typename:tmat4x2<uint,mediump>
mediump_umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x3<uint, mediump>			mediump_umat4x3;$/;"	t	namespace:glm	typeref:typename:tmat4x3<uint,mediump>
mediump_umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4x4;$/;"	t	namespace:glm	typeref:typename:tmat4x4<uint,mediump>
mediump_uvec1	glm/gtc/vec1.hpp	/^	typedef mediump_uvec1_t			mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:mediump_uvec1_t
mediump_uvec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<uint, mediump>	mediump_uvec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<uint,mediump>
mediump_uvec2	glm/detail/type_vec.hpp	/^	typedef tvec2<uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:tvec2<uint,mediump>
mediump_uvec3	glm/detail/type_vec.hpp	/^	typedef tvec3<uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:tvec3<uint,mediump>
mediump_uvec4	glm/detail/type_vec.hpp	/^	typedef tvec4<uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:tvec4<uint,mediump>
mediump_vec1	glm/fwd.hpp	/^	typedef tvec1<float, mediump> mediump_vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<float,mediump>
mediump_vec1	glm/gtc/vec1.hpp	/^	typedef mediump_vec1_t			mediump_vec1;$/;"	t	namespace:glm	typeref:typename:mediump_vec1_t
mediump_vec1_t	glm/detail/type_vec.hpp	/^	typedef tvec1<float, mediump>	mediump_vec1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<float,mediump>
mediump_vec2	glm/detail/type_vec.hpp	/^	typedef tvec2<float, mediump>	mediump_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,mediump>
mediump_vec2	glm/fwd.hpp	/^	typedef tvec2<float, mediump> mediump_vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<float,mediump>
mediump_vec3	glm/detail/type_vec.hpp	/^	typedef tvec3<float, mediump>	mediump_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,mediump>
mediump_vec3	glm/fwd.hpp	/^	typedef tvec3<float, mediump> mediump_vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<float,mediump>
mediump_vec4	glm/detail/type_vec.hpp	/^	typedef tvec4<float, mediump>	mediump_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,mediump>
mediump_vec4	glm/fwd.hpp	/^	typedef tvec4<float, mediump> mediump_vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<float,mediump>
min	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType min(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
min	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> min(vecType<T, P> const & a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
min	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> min(vecType<T, P> const & a, vecType<T, P> const & b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
min	glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
min	glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	glm/gtx/extented_min_max.inl	/^	GLM_FUNC_QUALIFIER T min($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
minus_one	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED minus_one = _mm_set_ps1(-1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
mirrorRepeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mirrorRepeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
mirrorRepeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
mirrorRepeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> mirrorRepeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
mix	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genTypeT mix(genTypeT x, genTypeT y, genTypeU a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genTypeT
mix	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mix(vecType<T, P> const & x, vecType<T, P> const & y, U a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mix	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mix(vecType<T, P> const & x, vecType<T, P> const & y, vecType</;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mix	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> mix(tquat<T, P> const & x, tquat<T, P> const & y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
mix	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD mix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
mix	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD mix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
mixedProduct	glm/gtx/mixed_product.inl	/^	GLM_FUNC_QUALIFIER T mixedProduct$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
mod	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType mod(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mod	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mod(vecType<T, P> const & x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mod	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> mod(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
mod	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int mod(int x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
mod	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint mod(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
mod	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD mod$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
mod289	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T mod289(T const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType modf(genType x, genType & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> modf(tvec1<T, P> const & x, tvec1<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> modf(tvec2<T, P> const & x, tvec2<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> modf(tvec3<T, P> const & x, tvec3<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
modf	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> modf(tvec4<T, P> const & x, tvec4<T, P> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
msw	glm/gtc/ulp.inl	/^		glm::detail::int32 msw;$/;"	m	struct:__anon2dbcfbc3020a::__anon2dbcfbc30308	typeref:typename:glm::detail::int32	file:
n	loadobjfile.cpp	/^	int v, n, t;$/;"	m	struct:face	typeref:typename:int	file:
name	glslprogram.cpp	/^	GLenum name;$/;"	m	struct:GLshadertype	typeref:typename:GLenum	file:
newline	glm/gtx/io.hpp	/^			char_type  newline;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
next_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER T next_float(T const & x, uint const & ulps)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
next_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double next_float(double const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
next_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float next_float(float const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
next_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> next_float(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
next_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> next_float(vecType<T, P> const & x, vecType<uint, P> const & u/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
nextafter	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double nextafter(double x, double y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER double
nextafterf	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float nextafterf(float x, float y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
nice	glm/detail/type_gentype.hpp	/^		nice,$/;"	e	enum:glm::profile
niceLength	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER float niceLength$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
niceLength4	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD niceLength4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
niceSqrt	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD niceSqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
nlz	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int nlz(unsigned int x) $/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
noise1	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise1	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise1	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise1	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER T noise1(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
noise2	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> noise2(tvec2<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
noise2	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> noise2(tvec3<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
noise2	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> noise2(tvec4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
noise2	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, defaultp> noise2(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,defaultp>
noise3	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> noise3(tvec2<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
noise3	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> noise3(tvec3<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
noise3	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> noise3(tvec4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
noise3	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> noise3(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
noise4	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> noise4(tvec2<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
noise4	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> noise4(tvec3<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
noise4	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> noise4(tvec4<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
noise4	glm/detail/func_noise.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, defaultp> noise4(T const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,defaultp>
normal	glm/detail/dummy.cpp	/^	glm::vec3 normal;$/;"	m	struct:intersection	typeref:typename:glm::vec3	file:
normalize	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType normalize(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
normalize	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> normalize(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
normalize	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> normalize(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
normalize	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> normalize(tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
normalize	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD normalize$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
normalize	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD normalize$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
normalizeDot	glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T normalizeDot(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
normalizeDotA	glm/detail/dummy.cpp	/^T normalizeDotA(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	typeref:typename:T
normalizeDotB	glm/detail/dummy.cpp	/^T normalizeDotB(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	typeref:typename:T
normalizeDotC	glm/detail/dummy.cpp	/^typename vecType::value_type normalizeDotC(vecType const & a, vecType const & b)$/;"	f	typeref:typename:vecType::value_type
notEqual	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> notEqual(vecType<T, P> const & x, vecType<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
notEqual	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<bool, P> notEqual(tquat<T, P> const & x, tquat<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<bool,P>
notEqual	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool notEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
not_	glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER vecType<bool, P> not_(vecType<bool, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<bool,P>
not_	glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool not_$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
null	glm/detail/type_gentype.hpp	/^		enum ctor{null};$/;"	e	enum:glm::detail::genType::ctor
number_of_elements_	glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(genType const & m){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
number_of_elements_	glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(tvec2<T, P> const & v){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
number_of_elements_	glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(tvec3<T, P> const & v){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
number_of_elements_	glm/gtx/range.hpp	/^	detail::component_count_t number_of_elements_(tvec4<T, P> const & v){$/;"	f	namespace:glm::detail	typeref:typename:detail::component_count_t
nx	loadobjfile.cpp	/^	float nx, ny, nz;$/;"	m	struct:Normal	typeref:typename:float	file:
ny	loadobjfile.cpp	/^	float nx, ny, nz;$/;"	m	struct:Normal	typeref:typename:float	file:
nz	loadobjfile.cpp	/^	float nx, ny, nz;$/;"	m	struct:Normal	typeref:typename:float	file:
one	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED one = _mm_set_ps1(1.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
one	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
one_over_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
one_over_root_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one_over_root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
one_over_two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType one_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ones32	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int ones32(unsigned int x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
op	glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator *=
op	glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator +=
op	glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator -=
op	glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator /=
op	glm/detail/_swizzle.hpp	/^			struct op { $/;"	s	function:glm::detail::_swizzle_base2::operator =
operator !=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tquat<T, P> const & q1, tquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator !=	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tdualquat<T, P> const & q1, tdualquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator %	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator%(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator %	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator%(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator %	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator%(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator%(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator%(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(T s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator%(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator %=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator%=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator %=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator %=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator%=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator %=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator %=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator%=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator %=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator%=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator %=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator %=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator%=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator %=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator%=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator %=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator%=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator %=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator%=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator &	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator&(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator &	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator&(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator &	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator&(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator&(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator&(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(T s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator&(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator &=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator&=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator &=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator &=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator&=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator &=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator &=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator&=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator &=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator&=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator &=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator &=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator&=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator &=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator&=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator &=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator&=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator &=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator&=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ()	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER V operator ()()  const { return V(this->elem(E0), this->elem(E1)); }$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER V
operator ()	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER V operator ()()  const { return V(this->elem(E0), this->elem(E1), this->ele/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER V
operator () 	glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e *= t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator *=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e += t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator +=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e -= t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator -=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e = t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator =::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	glm/detail/_swizzle.hpp	/^				GLM_FUNC_QUALIFIER void operator() (value_type& e, value_type& t) { e \/= t; } $/;"	f	struct:glm::detail::_swizzle_base2::operator /=::op	typeref:typename:GLM_FUNC_QUALIFIER void
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat2x2<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat2x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat2x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type
operator *	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::row_type
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(T const & s, tmat2x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat2x3<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat2x3<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat2x3<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::col_type
operator *	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::row_type
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(T const & s, tmat2x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat2x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat2x4<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat2x4<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat2x4<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::col_type operator*(tmat2x4<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::col_type
operator *	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::row_type operator*(typename tmat2x4<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::row_type
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat3x2<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(T const & s, tmat3x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat3x2<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat3x2<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::col_type operator*(tmat3x2<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::col_type
operator *	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::row_type operator*(typename tmat3x2<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::row_type
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat3x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat3x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat3x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type operator*(tmat3x3<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type
operator *	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::row_type operator*(typename tmat3x3<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::row_type
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat3x4<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(T const & s, tmat3x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat3x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat3x4<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat3x4<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::col_type
operator *	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::row_type
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator*(tmat4x2<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator*(tmat4x2<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(T const & s, tmat4x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator*(tmat4x2<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::col_type operator*(tmat4x2<T, P> const & m, typename/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::col_type
operator *	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::row_type operator*(typename tmat4x2<T, P>::col_type /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::row_type
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator*(tmat4x3<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator*(tmat4x3<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(T const & s, tmat4x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator*(tmat4x3<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::col_type
operator *	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::row_type
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator*(tmat4x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator*(tmat4x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(T const & s, tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat4x4<T, P> const & m, T const  & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator*(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type
operator *	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::row_type
operator *	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator*(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator *	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator*(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator *	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator*(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec2<T, P> const & v1, T const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator*(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator*(T const & s, tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator *	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator*(tquat<T, P> const & q,	tquat<T, P> const & p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator *	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator*(tquat<T, P> const & q, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator *	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tquat<T, P> const & q,	tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v, tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tquat<T, P> const & q,	tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v, tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator*(T const & s, tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator*(tdualquat<T, P> const & p, tdualquat<T, P> const &/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator*(tdualquat<T, P> const & q, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tdualquat<T, P> const & q, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator*(tvec3<T, P> const & v,	tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tdualquat<T, P> const & q, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator*(tvec4<T, P> const & v,	tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator *	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator*$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator *	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator*$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator* (float s, fquatSIMD const & q)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator *	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator* (fquatSIMD const & q, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator *	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator* (fquatSIMD const & q1, fquatSIMD const & q2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator *	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fquatSIMD const & q, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fvec4SIMD const & v, fquatSIMD const & q)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator* (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator *=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator *= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator *=	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator*= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator *=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator*=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator *=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator*=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator *=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator*=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator *=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator*=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator *=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator*=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator *=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator*=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator *=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator*=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator *=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator*=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator *=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator*=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator *=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator*=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator *=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator*=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator *=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator*=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator *=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator*=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator *=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator *=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator*=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator *=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator *=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator*=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator *=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator*=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator *=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator *=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator*=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator *=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator*=(U s)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator *=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator*=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator *=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator*=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator *=	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator*=(U s)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator *=	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator*=(tquat<U, P> const & r)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator *=	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator*=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator *=	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator*= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator *=	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD& fquatSIMD::operator*=(float const & s)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD &
operator *=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator*=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator *=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator*=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator +	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator+(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator +	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator+(tmat2x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator +	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator+(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator +	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator+(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator +	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator+(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator +	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator+(tmat2x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator +	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator+(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator +	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator+(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator +	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator+(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator +	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator+(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator +	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator+(tmat3x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator +	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator+(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator +	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator+(tmat3x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator +	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator+(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator +	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator+(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator +	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator+(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator +	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator+(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator +	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator+(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator +	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator+(T const & s, tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator +	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator+(tmat4x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator +	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator+(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator +	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator+(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator +	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator+(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator +	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator+(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator+(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator+(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator+(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator+(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator +	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator+(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator +	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator+(tquat<T, P> const & q,	tquat<T, P> const & p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator +	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator+(tdualquat<T, P> const & q, tdualquat<T, P> const &/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator +	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator+$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator +	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator+ (fquatSIMD const & q1, fquatSIMD const & q2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator +	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator+ (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator +	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator+ (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator +	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator+ (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator ++	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator++ ()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator ++	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> tmat2x2<T, P>::operator++(int)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator ++	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator++()$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator ++	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator++()$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator ++	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> tmat2x3<T, P>::operator++(int)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator ++	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> tmat2x4<T, P>::operator++(int)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator ++	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator++()$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator ++	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> tmat3x2<T, P>::operator++(int)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator ++	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator++()$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator ++	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator++()$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator ++	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> tmat3x3<T, P>::operator++(int)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator ++	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> tmat3x4<T, P>::operator++(int)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator ++	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator++()$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator ++	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator++()$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator ++	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> tmat4x2<T, P>::operator++(int)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator ++	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator++()$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator ++	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> const operator++(tmat4x3<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> const
operator ++	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> tmat4x3<T, P>::operator++(int)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator ++	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator++()$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator ++	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> const operator++(tmat4x4<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> const
operator ++	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> tmat4x4<T, P>::operator++(int)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator ++	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator++()$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator ++	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator++(tvec1<T, P> const & v, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ++	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> tvec1<T, P>::operator++(int)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ++	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator++()$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ++	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> tvec2<T, P>::operator++(int)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ++	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator++()$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ++	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> tvec3<T, P>::operator++(int)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ++	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator++()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ++	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> tvec4<T, P>::operator++(int)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ++	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator++ ()$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator ++	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD const operator++$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD const
operator ++	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator++ (fvec4SIMD const & v, int)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator ++	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator++()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator +=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator += (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator +=	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator+= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator +=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator+=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator +=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator+=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator +=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator+=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator +=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator+=(tmat2x3<U, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator +=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator+=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator +=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator+=(tmat2x4<U, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator +=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator+=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator +=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator+=(tmat3x2<U, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator +=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator+=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator +=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator+=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator +=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator+=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator +=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator+=(tmat3x4<U, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator +=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator+=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator +=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator+=(tmat4x2<U, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator +=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator+=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator +=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator+=(tmat4x3<U, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator +=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator+=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator +=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator+=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator +=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator+=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator +=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator +=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator+=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator +=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator +=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator+=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator +=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator+=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator +=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator +=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator+=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator +=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator+=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator +=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator+=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator +=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator+=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator +=	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp> & tvec4<float, lowp>::operator+=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,lowp> &
operator +=	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp> & tvec4<float, lowp>::operator+=(tvec1<U, lowp> const & v/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,lowp> &
operator +=	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump> & tvec4<float, mediump>::operator+=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,mediump> &
operator +=	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump> & tvec4<float, mediump>::operator+=(tvec1<U, mediump> /;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<float,mediump> &
operator +=	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator+=(tquat<U, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator +=	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator+= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator +=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator+=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator +=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator+=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> const operator-(tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> const
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator-(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator-(tmat2x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator -	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator-(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator -	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> const operator-(tmat2x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> const
operator -	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator-(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator -	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator-(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator -	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> const operator-(tmat2x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> const
operator -	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator-(tmat2x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator -	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator-(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator -	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> const operator-(tmat3x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> const
operator -	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator-(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator -	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator-(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> const operator-(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> const
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator-(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator-(tmat3x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator -	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator-(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator -	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> const operator-(tmat3x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> const
operator -	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator-(tmat3x4<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator -	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator-(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator -	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> const operator-(tmat4x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> const
operator -	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator-(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator -	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator-(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator -	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> const operator-(tmat4x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> const
operator -	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator-(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator -	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator-(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> const operator-(tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> const
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator-(T const & s, tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator-(tmat4x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator -	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator-(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator-(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator-(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator-(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator-(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator -	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator-(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator -	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator-(tdualquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator -	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD const operator-$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD const
operator -	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator-$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator -	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator- (fquatSIMD const & q)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator -	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator -	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator -	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator -	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator- (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator --	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator-- ()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator --	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> tmat2x2<T, P>::operator--(int)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator --	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator--()$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator --	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator--()$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator --	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> tmat2x3<T, P>::operator--(int)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator --	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> tmat2x4<T, P>::operator--(int)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator --	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator--()$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator --	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> tmat3x2<T, P>::operator--(int)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator --	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator--()$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator --	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator--()$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator --	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> tmat3x3<T, P>::operator--(int)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator --	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> tmat3x4<T, P>::operator--(int)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator --	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator--()$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator --	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator--()$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator --	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> tmat4x2<T, P>::operator--(int)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator --	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator--()$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator --	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> const operator--(tmat4x3<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> const
operator --	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> tmat4x3<T, P>::operator--(int)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator --	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator--()$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator --	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> const operator--(tmat4x4<T, P> const & m, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> const
operator --	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> tmat4x4<T, P>::operator--(int)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator --	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator--()$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator --	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator--(tvec1<T, P> const & v, int)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator --	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> tvec1<T, P>::operator--(int)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator --	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator--()$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator --	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> tvec2<T, P>::operator--(int)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator --	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator--()$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator --	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> tvec3<T, P>::operator--(int)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator --	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator--()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator --	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> tvec4<T, P>::operator--(int)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator --	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator-- ()$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator --	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD const operator--$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD const
operator --	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator-- (fvec4SIMD const & v, int)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator --	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator--()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator -=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator -= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator -=	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator-= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator -=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator-=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator -=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator-=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator -=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator-=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator -=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator-=(tmat2x3<U, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator -=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator-=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator -=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator-=(tmat2x4<U, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator -=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator-=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator -=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator-=(tmat3x2<U, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator -=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator-=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator -=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator-=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator -=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator-=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator -=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator-=(tmat3x4<U, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator -=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator-=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator -=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator-=(tmat4x2<U, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator -=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator-=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator -=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator-=(tmat4x3<U, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator -=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator-=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator -=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator-=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator -=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator-=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator -=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator -=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator-=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator -=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator -=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator-=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator -=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator-=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator -=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator -=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator-=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator -=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator-=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator -=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator-=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator -=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator-=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator -=	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator-= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator -=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator-=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator -=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator-=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator\/(T const & s, tmat2x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator\/(tmat2x2<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> operator\/(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type operator\/(tmat2x2<T, P> const & m, typenam/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type
operator /	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::row_type operator\/(typename tmat2x2<T, P>::col_type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::row_type
operator /	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator\/(T const & s,	tmat2x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator /	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> operator\/(tmat2x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P>
operator /	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator\/(T s, tmat2x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator /	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> operator\/(tmat2x4<T, P> const & m, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P>
operator /	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator\/(T const & s, tmat3x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator /	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> operator\/(tmat3x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator\/(T const & s, tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator\/(tmat3x3<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> operator\/(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type operator\/(tmat3x3<T, P> const & m, typenam/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type
operator /	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::row_type operator\/(typename tmat3x3<T, P>::col_type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::row_type
operator /	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator\/(T const & s, tmat3x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator /	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> operator\/(tmat3x4<T, P> const & m,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P>
operator /	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator\/(T const & s, tmat4x2<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator /	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> operator\/(tmat4x2<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P>
operator /	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator\/(T const & s, tmat4x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator /	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> operator\/(tmat4x3<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator\/(T const & s,	tmat4x4<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator\/(tmat4x4<T, P> const & m, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> operator\/(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type operator\/(tmat4x4<T, P> const & m, typenam/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type
operator /	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::row_type operator\/(typename tmat4x4<T, P>::col_type/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::row_type
operator /	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator\/(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator /	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator\/(tvec1<T, P> const & v,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator /	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator\/(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator\/(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator\/(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator\/(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator\/(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator /	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator\/(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator /	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> operator\/(tquat<T, P> const & q, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
operator /	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> operator\/(tdualquat<T, P> const & q,	T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P>
operator /	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD operator\/$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD
operator /	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD operator\/ (fquatSIMD const & q, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD
operator /	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/ (float s, fvec4SIMD const & v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/ (fvec4SIMD const & v, float s)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD operator\/ (fvec4SIMD const & v1, fvec4SIMD const & v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
operator /=	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator \/= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator /=	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator\/= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator /=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator /=	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator\/=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator /=	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P> & tmat2x3<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator /=	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P> & tmat2x4<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator /=	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P> & tmat3x2<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator /=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator /=	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator\/=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator /=	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P> & tmat3x4<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator /=	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P> & tmat4x2<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator /=	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P> & tmat4x3<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator /=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator\/=(U s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator /=	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> & tmat4x4<T, P>::operator\/=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator /=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator\/=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator /=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator /=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator\/=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator /=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator /=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator\/=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator /=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator\/=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator /=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator /=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator\/=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator /=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator\/=(U s)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator /=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator\/=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator /=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator\/=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator /=	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator\/=(U s)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator /=	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator\/=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator /=	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD & fmat4x4SIMD::operator\/= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator /=	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD& fquatSIMD::operator\/=(float const & s)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD &
operator /=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator\/=(float const & s)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator /=	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator\/=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator <<	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator<<(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator <<	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator<<(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator <<	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator<<(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator<<(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator<<(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator<<(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, o/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, p/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, w/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> & operator<<(std::basic_ostream<CTy,CTr>& os, tm/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, tma/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, tqu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, tve/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	glm/gtx/io.inl	/^	std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, delimeter<CTy> const/;"	f	namespace:glm::io	typeref:typename:std::basic_ostream<CTy,CTr> &
operator <<=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator<<=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator <<=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator <<=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator<<=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator <<=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator <<=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator<<=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator <<=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator<<=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator <<=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator <<=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator<<=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator <<=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator<<=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator <<=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator<<=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator <<=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator<<=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator =	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (Stub const &) { return *this; }$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const ValueType& t)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const VecType& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::class_type& base<vT, cT, rT, pT>::operator= $/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::class_type &
operator =	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator=(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator =	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>& tmat2x2<T, P>::operator=(tmat2x2<U, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P> &
operator =	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator=(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator =	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>& tmat2x3<T, P>::operator=(tmat2x3<U, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER tmat2x3<T,P> &
operator =	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator=(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator =	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>& tmat2x4<T, P>::operator=(tmat2x4<U, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER tmat2x4<T,P> &
operator =	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator=(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator =	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>& tmat3x2<T, P>::operator=(tmat3x2<U, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER tmat3x2<T,P> &
operator =	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator=(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator =	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> & tmat3x3<T, P>::operator=(tmat3x3<U, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P> &
operator =	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator=(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator =	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>& tmat3x4<T, P>::operator=(tmat3x4<U, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER tmat3x4<T,P> &
operator =	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>& tmat4x2<T, P>::operator=(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator =	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>& tmat4x2<T, P>::operator=(tmat4x2<U, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER tmat4x2<T,P> &
operator =	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>& tmat4x3<T, P>::operator=(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator =	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>& tmat4x3<T, P>::operator=(tmat4x3<U, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER tmat4x3<T,P> &
operator =	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator=(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator =	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>& tmat4x4<T, P>::operator=(tmat4x4<U, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P> &
operator =	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator=(tvec1<T, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator =	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator =	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator=(tvec2<T, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator =	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator =	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>& tvec3<T, P>::operator=(tvec3<T, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator =	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>& tvec3<T, P>::operator=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator =	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator=(tvec4<T, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator =	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator =	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator=(tquat<T, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator =	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> & tquat<T, P>::operator=(tquat<U, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P> &
operator =	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator=(tdualquat<T, P> const & q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator =	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P> & tdualquat<T, P>::operator=(tdualquat<U, P> const & q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,P> &
operator =	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fmat4x4SIMD& fmat4x4SIMD::operator= $/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fmat4x4SIMD &
operator =	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER fquatSIMD& fquatSIMD::operator=(fquatSIMD const & q)$/;"	f	class:glm::detail::fquatSIMD	typeref:typename:GLM_FUNC_QUALIFIER fquatSIMD &
operator =	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::operator=(fvec4SIMD const & v)$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator ==	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat2x2<T, P> const & m1, tmat2x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat2x3<T, P> const & m1, tmat2x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat2x4<T, P> const & m1, tmat2x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat3x2<T, P> const & m1, tmat3x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat3x3<T, P> const & m1, tmat3x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat3x4<T, P> const & m1, tmat3x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat4x2<T, P> const & m1, tmat4x2<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat4x3<T, P> const & m1, tmat4x3<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tmat4x4<T, P> const & m1, tmat4x4<T, P> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tquat<T, P> const & q1, tquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator ==	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tdualquat<T, P> const & q1, tdualquat<T, P> const & q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator >>	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator>>(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator >>	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator>>(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator >>	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator>>(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator>>(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator>>(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec4<T, P> const & v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator>>(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator >>=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator>>=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator >>=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator >>=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator>>=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator >>=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator >>=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator>>=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator >>=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator>>=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator >>=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator >>=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator>>=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator >>=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator>>=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator >>=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator>>=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator >>=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator>>=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator VecType	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER operator VecType () const { return (*this)(); }$/;"	f	struct:glm::detail::_swizzle	typeref:typename:GLM_FUNC_QUALIFIER
operator []	glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type & tmat2x2<T, P>::operator[](typename tmat2/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type &
operator []	glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x2<T, P>::col_type const & tmat2x2<T, P>::operator[](typename/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x2<T,P>::col_type const &
operator []	glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::col_type & tmat2x3<T, P>::operator[](typename tmat2/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::col_type &
operator []	glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x3<T, P>::col_type const & tmat2x3<T, P>::operator[](typename/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x3<T,P>::col_type const &
operator []	glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::col_type & tmat2x4<T, P>::operator[](typename tmat2/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::col_type &
operator []	glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat2x4<T, P>::col_type const & tmat2x4<T, P>::operator[](typename/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat2x4<T,P>::col_type const &
operator []	glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::col_type & tmat3x2<T, P>::operator[](typename tmat3/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::col_type &
operator []	glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x2<T, P>::col_type const & tmat3x2<T, P>::operator[](typename/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x2<T,P>::col_type const &
operator []	glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type & tmat3x3<T, P>::operator[](typename tmat3/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type &
operator []	glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x3<T, P>::col_type const & tmat3x3<T, P>::operator[](typename/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x3<T,P>::col_type const &
operator []	glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::col_type & tmat3x4<T, P>::operator[](typename tmat3/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::col_type &
operator []	glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat3x4<T, P>::col_type const & tmat3x4<T, P>::operator[](typename/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat3x4<T,P>::col_type const &
operator []	glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::col_type & tmat4x2<T, P>::operator[](typename tmat4/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::col_type &
operator []	glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x2<T, P>::col_type const & tmat4x2<T, P>::operator[](typename/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x2<T,P>::col_type const &
operator []	glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::col_type & tmat4x3<T, P>::operator[](typename tmat4/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::col_type &
operator []	glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x3<T, P>::col_type const & tmat4x3<T, P>::operator[](typename/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x3<T,P>::col_type const &
operator []	glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type & tmat4x4<T, P>::operator[](typename tmat4/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type &
operator []	glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER typename tmat4x4<T, P>::col_type const & tmat4x4<T, P>::operator[](typename/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER typename tmat4x4<T,P>::col_type const &
operator []	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T & tvec1<T, P>::operator[](typename tvec1<T, P>::length_type i)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T & tvec1<T, P>::operator[](typename tvec1<T, P>::size_type i)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T const & tvec1<T, P>::operator[](typename tvec1<T, P>::length_type i) cons/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER T const & tvec1<T, P>::operator[](typename tvec1<T, P>::size_type i) const$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER T & tvec2<T, P>::operator[](length_t i)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER T const & tvec2<T, P>::operator[](length_t i) const$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T & tvec3<T, P>::operator[](typename tvec3<T, P>::length_type i)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T & tvec3<T, P>::operator[](typename tvec3<T, P>::size_type i)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T const & tvec3<T, P>::operator[](typename tvec3<T, P>::length_type i) cons/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER T const & tvec3<T, P>::operator[](typename tvec3<T, P>::size_type i) const$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T & tvec4<T, P>::operator[](typename tvec4<T, P>::length_type i)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T & tvec4<T, P>::operator[](typename tvec4<T, P>::size_type i)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T const & tvec4<T, P>::operator[](typename tvec4<T, P>::length_type i) cons/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER T const & tvec4<T, P>::operator[](typename tvec4<T, P>::size_type i) const$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T & tquat<T, P>::operator[](typename tquat<T, P>::length_type i)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T & tquat<T, P>::operator[](typename tquat<T, P>::size_type i)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T const & tquat<T, P>::operator[](typename tquat<T, P>::length_type i) cons/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER T const & tquat<T, P>::operator[](typename tquat<T, P>::size_type i) const$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER T const &
operator []	glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER typename tdualquat<T, P>::part_type & tdualquat<T, P>::operator[](typename /;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,P>::part_type &
operator []	glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER typename tdualquat<T, P>::part_type const & tdualquat<T, P>::operator[](typ/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,P>::part_type const &
operator [] 	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER value_type  operator[]  (size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER value_type
operator [] 	glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER value_type& operator[]  (size_t i)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER value_type &
operator [] 	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::col_type const & base<vT, cT, rT, pT>::operator[]$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::col_type const &
operator [] 	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::col_type& base<vT, cT, rT, pT>::operator[]$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::col_type &
operator [] 	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD & fmat4x4SIMD::operator[]$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
operator [] 	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD const & fmat4x4SIMD::operator[]$/;"	f	class:glm::detail::fmat4x4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD const &
operator ^	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator^(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ^	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator^(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ^	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator^(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator^(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator^(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(T scalar, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator^(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator ^=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator^=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator ^=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator ^=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator^=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ^=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ^=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator^=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator ^=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator^=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ^=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ^=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator^=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator ^=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator^=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ^=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator^=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ^=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator^=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator tmat3x3<T,P>	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::operator tmat3x3<T, P>()$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
operator tmat4x4<T,P>	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::operator tmat4x4<T, P>()$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
operator |	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator|(T const & s, tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator |	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator|(tvec1<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator |	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator|(tvec1<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(T const & s, tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec1<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec2<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec2<T, P> const & v1, tvec1<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator|(tvec2<T, P> const & v1, tvec2<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(T const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec1<T, P> const & s, tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec3<T, P> const & v, T const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec3<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator|(tvec3<T, P> const & v1, tvec3<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(T s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec1<T, P> const & s, tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec4<T, P> const & v, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec4<T, P> const & v, tvec1<T, P> const & s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator|(tvec4<T, P> const & v1, tvec4<T, P> const & v2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
operator |=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator|=(U const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator |=	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> & tvec1<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P> &
operator |=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator|=(U s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator |=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator |=	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> & tvec2<T, P>::operator|=(tvec2<U, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P> &
operator |=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator|=(U s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator |=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator |=	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> & tvec3<T, P>::operator|=(tvec3<U, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P> &
operator |=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator|=(U scalar)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator |=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator|=(tvec1<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator |=	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> & tvec4<T, P>::operator|=(tvec4<U, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P> &
operator ~	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P> operator~(tvec1<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec1<T,P>
operator ~	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> operator~(tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
operator ~	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> operator~(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
operator ~	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> operator~(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
order	glm/gtx/io.hpp	/^			order_type order;$/;"	m	class:glm::io::format_punct	typeref:typename:order_type
order	glm/gtx/io.hpp	/^		struct order$/;"	s	namespace:glm::io
order	glm/gtx/io.inl	/^	order::order(order_type a)$/;"	f	class:glm::io::order	typeref:typename:GLM_FUNC_QUALIFIER
order_type	glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	g	namespace:glm::io
orientate2	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, defaultp> orientate2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,defaultp>
orientate3	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
orientate3	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, defaultp> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,defaultp>
orientate4	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> orientate4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
orientation	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> orientation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
orientedAngle	glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T orientedAngle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
ortho	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> ortho$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
orthonormalize	glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> orthonormalize(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
orthonormalize	glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> orthonormalize(tvec3<T, P> const & x, tvec3<T, P> const & y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
outerProduct	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<T, P, vecTypeA, vecTypeB>::type outerPro/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<T,P,vecTypeA,vecTypeB>::type
outerProduct	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD outerProduct$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	glm/detail/type_mat.hpp	/^	struct outerProduct_trait{};$/;"	s	namespace:glm::detail
overflow	glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float overflow()$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
p	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0408	typeref:typename:T
p	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon0c12e1fe070a	typeref:typename:T
p	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
p	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon0c24fa7f070a	typeref:typename:T
p	loadobjfile.cpp	/^	float s, t, p;$/;"	m	struct:TextureCoord	typeref:typename:float	file:
pack	glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::i10i10i10i2	typeref:typename:uint32	file:
pack	glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::u10u10u10u2	typeref:typename:uint32	file:
packDouble2x32	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER double packDouble2x32(uvec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
packF2x11_1x10	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packF2x11_1x10(vec3 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packHalf1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packHalf1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packHalf2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packHalf2x16(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packHalf4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packHalf4x16(glm::vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packI3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packI3x10_1x2(ivec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packSnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packSnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packSnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm2x16(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packSnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm2x8(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packSnorm3x10_1x2(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packSnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packSnorm4x16(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packSnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm4x8(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packU3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packU3x10_1x2(uvec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm1x16(float s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm2x16(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packUnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm2x8(vec2 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packUnorm3x10_1x2(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUnorm4x16(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm4x8(vec4 const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packed10ToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed10ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed10bitToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed10bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
packed11ToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed11ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed11bitToFloat	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed11bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
param_type	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & param_type;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> const &
part_type	glm/gtx/dual_quaternion.hpp	/^		typedef glm::tquat<T, P> part_type;$/;"	t	struct:glm::tdualquat	typeref:typename:glm::tquat<T,P>
parts	glm/gtc/ulp.inl	/^	} parts;$/;"	m	union:__anon2dbcfbc3020a	typeref:struct:__anon2dbcfbc3020a::__anon2dbcfbc30308	file:
pd	glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	m	union:_mm_castpd_ps::__anon704219bd010a	typeref:typename:__m128d
pd	glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	m	union:_mm_castps_pd::__anon704219bd020a	typeref:typename:__m128d
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec2<T, P> const & Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec2<T, P> const & Position, tvec2<T, P> const & rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec3<T, P> const & Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec3<T, P> const & Position, tvec3<T, P> const & rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec4<T, P> const & Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(tvec4<T, P> const & Position, tvec4<T, P> const & rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T permute(T const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> permute(tvec2<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> permute(tvec3<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
permute	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> permute(tvec4<T, P> const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
perp	glm/gtx/perpendicular.inl	/^	GLM_FUNC_QUALIFIER vecType perp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType
perspective	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> perspective$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
perspectiveFov	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> perspectiveFov$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
pi	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED pi = _mm_set_ps1(3.1415926535897932384626433832795f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
pi	glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	m	union:_mm_castsi128_ps::__anon704219bd040a	typeref:typename:__m128i
pi	glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	m	union:_mm_castps_si128::__anon704219bd030a	typeref:typename:__m128i
pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pi_over_hundred_eighty	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED pi_over_hundred_eighty = _mm_set_ps1(0.01745329251994329576923/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
pickMatrix	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> pickMatrix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
pitch	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T pitch(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
pointer	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> * pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> *
pointer_const	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> * const pointer_const;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> * const
polar	glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> polar$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
position	glm/detail/dummy.cpp	/^	glm::vec4 position; \/\/ Ppli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
position	glm/detail/dummy.cpp	/^	glm::vec4 position;$/;"	m	struct:intersection	typeref:typename:glm::vec4	file:
pow	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> pow(vecType<T, P> const & base, vecType<T, P> const & exponent/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
pow	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int pow(int x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
pow	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint pow(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
pow	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> pow$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
pow2	glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow2(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow3	glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow3(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow4	glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow4(genType const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoAbove(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> powerOfTwoAbove(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
powerOfTwoBelow	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoBelow(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoBelow	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> powerOfTwoBelow(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
powerOfTwoNearest	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoNearest(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoNearest	glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> powerOfTwoNearest(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
precision	glm/detail/precision.hpp	/^	enum precision$/;"	g	namespace:glm
precision	glm/gtx/io.hpp	/^			unsigned   precision;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
precision	glm/gtx/io.hpp	/^		struct precision$/;"	s	namespace:glm::io
precision	glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER precision::precision(unsigned a)$/;"	f	class:glm::io::precision	typeref:typename:GLM_FUNC_QUALIFIER
precision_	glm/gtx/io.hpp	/^			streamsize_type precision_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
prefix	glm/gtx/string_cast.inl	/^	struct prefix<bool>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<double>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<float>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int16_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int32_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int64_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<int8_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint16_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint32_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint64_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix<uint8_t>$/;"	s	namespace:glm::detail	file:
prefix	glm/gtx/string_cast.inl	/^	struct prefix{};$/;"	s	namespace:glm::detail	file:
prev_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER T prev_float(T const & x, uint const & ulps)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
prev_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double prev_float(double const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
prev_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float prev_float(float const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
prev_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> prev_float(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
prev_float	glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> prev_float(vecType<T, P> const & x, vecType<uint, P> const & u/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
profile	glm/detail/type_gentype.hpp	/^	enum profile$/;"	g	namespace:glm
proj	glm/gtx/projection.inl	/^	GLM_FUNC_QUALIFIER vecType proj(vecType const & x, vecType const & Normal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType
proj2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> proj2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
proj3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> proj3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
project	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> project$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
ps	glm/detail/setup.hpp	/^		inline __m128 _mm_castpd_ps(__m128d PD) { union { __m128 ps; __m128d pd; } c; c.pd = PD; retur/;"	m	union:_mm_castpd_ps::__anon704219bd010a	typeref:typename:__m128
ps	glm/detail/setup.hpp	/^		inline __m128 _mm_castsi128_ps(__m128i PI) { union { __m128 ps; __m128i pi; } c; c.pi = PI; re/;"	m	union:_mm_castsi128_ps::__anon704219bd040a	typeref:typename:__m128
ps	glm/detail/setup.hpp	/^		inline __m128d _mm_castps_pd(__m128 PS) { union { __m128 ps; __m128d pd; } c; c.ps = PS; retur/;"	m	union:_mm_castps_pd::__anon704219bd020a	typeref:typename:__m128
ps	glm/detail/setup.hpp	/^		inline __m128i _mm_castps_si128(__m128 PS) { union { __m128 ps; __m128i pi; } c; c.ps = PS; re/;"	m	union:_mm_castps_si128::__anon704219bd030a	typeref:typename:__m128
ptrdiff_t	glew.h	/^typedef _W64 int ptrdiff_t;$/;"	t	typeref:typename:_W64 int
ptrdiff_t	glew.h	/^typedef __int64 ptrdiff_t;$/;"	t	typeref:typename:__int64
q	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
q	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon0c24fa7f080a	typeref:typename:T
quadraticAttenuation	glm/detail/dummy.cpp	/^	float quadraticAttenuation;\/\/ K2$/;"	m	struct:light	typeref:typename:float	file:
quarter_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType quarter_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quat	glm/fwd.hpp	/^	typedef highp_quat			quat;$/;"	t	namespace:glm	typeref:typename:highp_quat
quat	glm/fwd.hpp	/^	typedef lowp_quat			quat;$/;"	t	namespace:glm	typeref:typename:lowp_quat
quat	glm/fwd.hpp	/^	typedef mediump_quat		quat;$/;"	t	namespace:glm	typeref:typename:mediump_quat
quatSIMD_cast	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD quatSIMD_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
quatSIMD_cast_impl	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD quatSIMD_cast_impl(const T m0[], const T m1[], const T m2[]/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
quat_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> quat_cast(tmat3x3<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
quat_cast	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> quat_cast(tmat4x4<T, P> const & m4)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
quat_cast	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER quat quat_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER quat
qword	glm/gtx/raw_data.hpp	/^	typedef detail::uint64		qword;$/;"	t	namespace:glm	typeref:typename:detail::uint64
r	bmptotexture.cpp	/^			unsigned char r, g, b, a;$/;"	m	struct:BmpToTexture::rgba32	typeref:typename:unsigned char	file:
r	glm/detail/type_vec1.hpp	/^				T r;$/;"	m	union:glm::tvec1::__anon0beeb0fc010a	typeref:typename:T
r	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon0beeb0fc020a	typeref:typename:T
r	glm/detail/type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon0c00c97d010a::__anon0c00c97d0308	typeref:typename:T
r	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon0c00c97d050a	typeref:typename:T
r	glm/detail/type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0308	typeref:typename:T
r	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon0c12e1fe050a	typeref:typename:T
r	glm/detail/type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0308	typeref:typename:T
r	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon0c24fa7f050a	typeref:typename:T
radialGradient	glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T radialGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
radians	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType radians(genType degrees)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
radians	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> radians(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
real	glm/gtx/dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:glm::tquat<T,P>
reference	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> & reference;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE> &
reflect	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType reflect(genType const & I, genType const & N)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
reflect	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD reflect$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
reflect2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> reflect2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
reflect3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> reflect3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
refract	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType refract(genType const & I, genType const & N, genType const & eta)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
refract	glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> refract(vecType<T, P> const & I, vecType<T, P> const & N, T et/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
refract	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD refract$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
repeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER genType repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
repeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
repeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
repeat	glm/gtx/wrap.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> repeat$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
return_type_scalar_multiplication	glm/gtx/scalar_multiplication.hpp	/^	using return_type_scalar_multiplication = typename std::enable_if<$/;"	t	namespace:glm	typeref:typename:std::enable_if<!std::is_same<T,float>::value && std::is_arithmetic<T>::value,Vec>::type
rgb2YCoCg	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rgb2YCoCg$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rgb2YCoCgR	glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rgb2YCoCgR$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rgbColor	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rgbColor(const tvec3<T, P>& hsvColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rgba32	bmptotexture.cpp	/^		struct rgba32$/;"	s	function:BmpToTexture	file:
rightHanded	glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool rightHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
roll	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T roll(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
root_five	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_five()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_half_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_ln_four	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_ln_four()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_three	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_three()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_two	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
root_two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType root_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
rotate	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotate	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> rotate(tquat<T, P> const & q, T const & angle, tvec3<T, P> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
rotate	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> rotate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
rotate	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotate	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotate	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
rotate	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotate	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotate	glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotateNormalizedAxis	glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotateNormalizedAxis	glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
rotateX	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotateX	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotateY	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotateY	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotateZ	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
rotateZ	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
rotate_slow	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rotate_slow$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
rotation	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> rotation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
round	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType round(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
round	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> round(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
round	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD round$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
roundEven	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType roundEven(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundEven	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> roundEven(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
roundMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType roundMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundMultiple	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> roundMultiple(vecType<T, P> const & Source, vecType<T, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
roundPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genIUType roundPowerOfTwo(genIUType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
roundPowerOfTwo	glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> roundPowerOfTwo(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
row	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
row	glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::row_type row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::row_type
rowMajor2	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> rowMajor2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
rowMajor2	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P> rowMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat2x2<T,P>
rowMajor3	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> rowMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
rowMajor4	glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> rowMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
row_major	glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
row_size	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::size_type base<vT, cT, rT, pT>::row_size()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::size_type
row_type	glm/detail/type_mat2x2.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tvec2<T,P>
row_type	glm/detail/type_mat2x3.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tvec2<T,P>
row_type	glm/detail/type_mat2x4.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tvec2<T,P>
row_type	glm/detail/type_mat3x2.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tvec3<T,P>
row_type	glm/detail/type_mat3x3.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tvec3<T,P>
row_type	glm/detail/type_mat3x4.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tvec3<T,P>
row_type	glm/detail/type_mat4x2.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tvec4<T,P>
row_type	glm/detail/type_mat4x3.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tvec4<T,P>
row_type	glm/detail/type_mat4x4.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tvec4<T,P>
row_type	glm/gtx/simd_mat4.hpp	/^		typedef fvec4SIMD row_type;$/;"	t	namespace:glm::detail	typeref:typename:fvec4SIMD
s	glm/detail/type_vec1.hpp	/^				T s;$/;"	m	union:glm::tvec1::__anon0beeb0fc010a	typeref:typename:T
s	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon0beeb0fc020a	typeref:typename:T
s	glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon0c00c97d010a::__anon0c00c97d0408	typeref:typename:T
s	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon0c00c97d050a	typeref:typename:T
s	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0408	typeref:typename:T
s	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon0c12e1fe050a	typeref:typename:T
s	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
s	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon0c24fa7f050a	typeref:typename:T
s	loadobjfile.cpp	/^	float s, t, p;$/;"	m	struct:TextureCoord	typeref:typename:float	file:
saturate	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T saturate(T x){return clamp(x, T(0), T(1/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
saturate	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> saturate(const tvec2<T, P>& x/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
saturate	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> saturate(const tvec3<T, P>& x/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
saturate	glm/gtx/compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> saturate(const tvec4<T, P>& x/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
saturation	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> saturation(T const s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
saturation	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> saturation(const T s, const tvec3<T, P>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
saturation	glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P> saturation(const T s, const tvec4<T, P>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
save	Makefile	/^save:$/;"	t
scale	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scale$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
scale	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> scale($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
scale	glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scale($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
scaleBias	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scaleBias($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
scale_slow	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> scale_slow$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
sec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sec(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sec	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sec(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sech(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sech	glm/gtc/reciprocal.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sech(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
separator	glm/gtx/io.hpp	/^			char_type  separator;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
shearX	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearX($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearX2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearX2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearX3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> shearX3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
shearY	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearY($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearY2D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> shearY2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
shearY3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> shearY3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
shearZ3D	glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> shearZ3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
shininess	glm/detail/dummy.cpp	/^	float shininess; \/\/ Srm$/;"	m	struct:material	typeref:typename:float	file:
shortMix	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> shortMix$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
shuffle_mask	glm/gtx/simd_vec4.inl	/^struct shuffle_mask$/;"	s	namespace:glm::detail	file:
sign	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genFIType sign(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genFIType
sign	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sign(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sign	glm/detail/intrinsic_common.inl	/^			const unsigned int mantissa:23, exp:8, sign:1;$/;"	m	struct:glm::detail::ieee754_QNAN::i	typeref:typename:const unsigned int:1	file:
sign	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD sign$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
sign16	glm/gtc/bitfield.inl	/^		union sign16$/;"	u	function:glm::bitfieldInterleave	file:
sign32	glm/gtc/bitfield.inl	/^		union sign32$/;"	u	function:glm::bitfieldInterleave	file:
sign64	glm/gtc/bitfield.inl	/^		union sign64$/;"	u	function:glm::bitfieldInterleave	file:
sign8	glm/gtc/bitfield.inl	/^		union sign8$/;"	u	function:glm::bitfieldInterleave	file:
simd	glm/detail/type_gentype.hpp	/^		simd$/;"	e	enum:glm::profile
simd	glm/detail/type_vec4.hpp	/^		struct simd<double>$/;"	s	namespace:glm::detail
simd	glm/detail/type_vec4.hpp	/^		struct simd<float>$/;"	s	namespace:glm::detail
simd	glm/detail/type_vec4.hpp	/^		struct simd<int64>$/;"	s	namespace:glm::detail
simd	glm/detail/type_vec4.hpp	/^		struct simd<int>$/;"	s	namespace:glm::detail
simd	glm/detail/type_vec4.hpp	/^		struct simd<uint64>$/;"	s	namespace:glm::detail
simd	glm/detail/type_vec4.hpp	/^		struct simd<unsigned int>$/;"	s	namespace:glm::detail
simd	glm/detail/type_vec4.hpp	/^	struct simd$/;"	s	namespace:glm::detail
simdMat4	glm/gtx/simd_mat4.hpp	/^	typedef detail::fmat4x4SIMD simdMat4;$/;"	t	namespace:glm	typeref:typename:detail::fmat4x4SIMD
simdQuat	glm/gtx/simd_quat.hpp	/^	typedef glm::detail::fquatSIMD simdQuat;$/;"	t	namespace:glm	typeref:typename:glm::detail::fquatSIMD
simdVec4	glm/gtx/simd_vec4.hpp	/^	typedef glm::detail::fvec4SIMD simdVec4;$/;"	t	namespace:glm	typeref:typename:glm::detail::fvec4SIMD
simplex	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(glm::tvec2<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(tvec3<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(tvec4<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
sin	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sin(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sinh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sinh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sint	glm/gtx/integer.hpp	/^	typedef signed int					sint;$/;"	t	namespace:glm	typeref:typename:signed int
size	glm/detail/type_mat2x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T, P>::size_type tmat2x2<T, P>::size() const$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x2<T,P>::size_type
size	glm/detail/type_mat2x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T, P>::size_type tmat2x3<T, P>::size() const$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x3<T,P>::size_type
size	glm/detail/type_mat2x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T, P>::size_type tmat2x4<T, P>::size() const$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat2x4<T,P>::size_type
size	glm/detail/type_mat3x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T, P>::size_type tmat3x2<T, P>::size() const$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x2<T,P>::size_type
size	glm/detail/type_mat3x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T, P>::size_type tmat3x3<T, P>::size() const$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x3<T,P>::size_type
size	glm/detail/type_mat3x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T, P>::size_type tmat3x4<T, P>::size() const$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat3x4<T,P>::size_type
size	glm/detail/type_mat4x2.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T, P>::size_type tmat4x2<T, P>::size() const$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x2<T,P>::size_type
size	glm/detail/type_mat4x3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T, P>::size_type tmat4x3<T, P>::size() const$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x3<T,P>::size_type
size	glm/detail/type_mat4x4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T, P>::size_type tmat4x4<T, P>::size() const$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tmat4x4<T,P>::size_type
size	glm/detail/type_vec1.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T, P>::size_type tvec1<T, P>::size() const$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec1<T,P>::size_type
size	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR size_t tvec2<T, P>::size() const$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR size_t
size	glm/detail/type_vec3.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T, P>::size_type tvec3<T, P>::size() const$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec3<T,P>::size_type
size	glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T, P>::size_type tvec4<T, P>::size() const$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tvec4<T,P>::size_type
size	glm/gtc/quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T, P>::size_type tquat<T, P>::size() const$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tquat<T,P>::size_type
size	glm/gtx/dual_quaternion.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tdualquat<T, P>::size_type tdualquat<T, P>::size() c/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename tdualquat<T,P>::size_type
size1	glm/gtx/std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1;$/;"	t	namespace:glm	typeref:typename:tvec1<std::size_t,defaultp>
size1_t	glm/gtx/std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1_t;$/;"	t	namespace:glm	typeref:typename:tvec1<std::size_t,defaultp>
size2	glm/gtx/std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2;$/;"	t	namespace:glm	typeref:typename:tvec2<std::size_t,defaultp>
size2_t	glm/gtx/std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2_t;$/;"	t	namespace:glm	typeref:typename:tvec2<std::size_t,defaultp>
size3	glm/gtx/std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3;$/;"	t	namespace:glm	typeref:typename:tvec3<std::size_t,defaultp>
size3_t	glm/gtx/std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3_t;$/;"	t	namespace:glm	typeref:typename:tvec3<std::size_t,defaultp>
size4	glm/gtx/std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4;$/;"	t	namespace:glm	typeref:typename:tvec4<std::size_t,defaultp>
size4_t	glm/gtx/std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4_t;$/;"	t	namespace:glm	typeref:typename:tvec4<std::size_t,defaultp>
sizeType	glm/detail/type_gentype.hpp	/^	typedef std::size_t sizeType;$/;"	t	namespace:glm	typeref:typename:std::size_t
size_type	glm/detail/type_gentype.hpp	/^		typedef sizeType size_type;$/;"	t	struct:glm::detail::genType	typeref:typename:sizeType
size_type	glm/detail/type_mat2x2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:size_t
size_type	glm/detail/type_mat2x3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:size_t
size_type	glm/detail/type_mat2x4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:size_t
size_type	glm/detail/type_mat3x2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:size_t
size_type	glm/detail/type_mat3x3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:size_t
size_type	glm/detail/type_mat3x4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:size_t
size_type	glm/detail/type_mat4x2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:size_t
size_type	glm/detail/type_mat4x3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:size_t
size_type	glm/detail/type_mat4x4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:size_t
size_type	glm/detail/type_vec1.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec1	typeref:typename:size_t
size_type	glm/detail/type_vec2.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec2	typeref:typename:size_t
size_type	glm/detail/type_vec3.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec3	typeref:typename:size_t
size_type	glm/detail/type_vec4.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tvec4	typeref:typename:size_t
size_type	glm/gtc/quaternion.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tquat	typeref:typename:size_t
size_type	glm/gtx/dual_quaternion.hpp	/^			typedef size_t size_type;$/;"	t	struct:glm::tdualquat	typeref:typename:size_t
size_type	glm/gtx/simd_mat4.hpp	/^		typedef std::size_t size_type;$/;"	t	namespace:glm::detail	typeref:typename:std::size_t
size_type	glm/gtx/simd_quat.hpp	/^		typedef std::size_t size_type;$/;"	t	namespace:glm::detail	typeref:typename:std::size_t
size_type	glm/gtx/simd_vec4.hpp	/^		typedef std::size_t size_type;$/;"	t	namespace:glm::detail	typeref:typename:std::size_t
slerp	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> slerp(tquat<T, P> const & x,	tquat<T, P> const & y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
slerp	glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> slerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
slerp	glm/gtx/simd_quat.inl	/^GLM_FUNC_QUALIFIER detail::fquatSIMD slerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fquatSIMD
smoothstep	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType smoothstep(genType edge0, genType edge1, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
smoothstep	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> smoothstep(T edge0, T edge1, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
smoothstep	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> smoothstep(vecType<T, P> const & edge0, vecType<T, P> const & /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
smoothstep	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD smoothstep$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
space	glm/gtx/io.hpp	/^			char_type  space;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
specular	glm/detail/dummy.cpp	/^	glm::vec4 specular; \/\/ Scli$/;"	m	struct:light	typeref:typename:glm::vec4	file:
specular	glm/detail/dummy.cpp	/^	glm::vec4 specular; \/\/ Scm$/;"	m	struct:material	typeref:typename:glm::vec4	file:
sphericalRand	glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, defaultp> sphericalRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,defaultp>
spotCosCutoff	glm/detail/dummy.cpp	/^	float spotCosCutoff; \/\/ Derived: cos(Crli)$/;"	m	struct:light	typeref:typename:float	file:
spotCutoff	glm/detail/dummy.cpp	/^	float spotCutoff; \/\/ Crli$/;"	m	struct:light	typeref:typename:float	file:
spotDirection	glm/detail/dummy.cpp	/^	glm::vec3 spotDirection; \/\/ Sdli$/;"	m	struct:light	typeref:typename:glm::vec3	file:
spotExponent	glm/detail/dummy.cpp	/^	float spotExponent; \/\/ Srli$/;"	m	struct:light	typeref:typename:float	file:
sqrt	glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> sqrt(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
sqrt	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int sqrt(int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
sqrt	glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint sqrt(uint x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
sqrt	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD sqrt(detail::fvec4SIMD const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
squad	glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P> squad$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tquat<T,P>
sse_abs_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_abs_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_add_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_add_ps(__m128 const in1[4], __m128 const in2[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_ceil_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_ceil_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_clp_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_clp_ps(__m128 v, __m128 minVal, __m128 maxVal)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_comp_mul_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER matType sse_comp_mul_ps$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER matType
sse_det_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_det_ps$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_detd_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_detd_ps$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_dot_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_dot_ps(__m128 v1, __m128 v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_dot_ss	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_dot_ss(__m128 v1, __m128 v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_dst_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_dst_ps(__m128 p0, __m128 p1)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_ffd_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_ffd_ps(__m128 N, __m128 I, __m128 Nref)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_flr_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_flr_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_frc_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_frc_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_inverse_fast_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_inverse_fast_ps(__m128 const in[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_inverse_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_inverse_ps(__m128 const in[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_len_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_len_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mix_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mix_ps(__m128 v1, __m128 v2, __m128 a)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mod_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mod_ps(__m128 x, __m128 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mul_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mul_ps(__m128 const m[4], __m128 v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mul_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_mul_ps(__m128 v, __m128 const m[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_mul_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_mul_ps(__m128 const in1[4], __m128 const in2[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_nrm_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_nrm_ps(__m128 v)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_outer_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_outer_ps(__m128 const & c, __m128 const & r, __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_rde_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rde_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_rfa_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rfa_ps(__m128 I, __m128 N, __m128 eta)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_rfe_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rfe_ps(__m128 I, __m128 N)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_rnd_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_rnd_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_sgn_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_sgn_ps(__m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_slow_det_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER __m128 sse_slow_det_ps(__m128 const in[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_sqrt_wip_ss	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_sqrt_wip_ss(__m128 const & x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_ssp_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_ssp_ps(__m128 edge0, __m128 edge1, __m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_stp_ps	glm/detail/intrinsic_common.inl	/^GLM_FUNC_QUALIFIER __m128 sse_stp_ps(__m128 edge, __m128 x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
sse_sub_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_sub_ps(__m128 const in1[4], __m128 const in2[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_transpose_ps	glm/detail/intrinsic_matrix.inl	/^GLM_FUNC_QUALIFIER void sse_transpose_ps(__m128 const in[4], __m128 out[4])$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER void
sse_xpd_ps	glm/detail/intrinsic_geometric.inl	/^GLM_FUNC_QUALIFIER __m128 sse_xpd_ps(__m128 v1, __m128 v2)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER __m128
state_	glm/gtx/io.hpp	/^			state_type&     state_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:state_type &
state_saver	glm/gtx/io.hpp	/^		typedef basic_state_saver<char>     state_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<char>
state_type	glm/gtx/io.hpp	/^			typedef ::std::basic_ios<CTy,CTr>      state_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::basic_ios<CTy,CTr>
step	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType step(genType edge, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
step	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> step(T edge, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
step	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> step(vecType<T, P> const & edge, vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
step	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD step$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
streamsize_type	glm/gtx/io.hpp	/^			typedef ::std::streamsize              streamsize_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::streamsize
swizzle	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD fvec4SIMD::swizzle() const$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD
swizzle	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER fvec4SIMD& fvec4SIMD::swizzle()$/;"	f	class:glm::detail::fvec4SIMD	typeref:typename:GLM_FUNC_QUALIFIER fvec4SIMD &
t	glm/detail/type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon0c00c97d010a::__anon0c00c97d0408	typeref:typename:T
t	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon0c00c97d060a	typeref:typename:T
t	glm/detail/type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0408	typeref:typename:T
t	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon0c12e1fe060a	typeref:typename:T
t	glm/detail/type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0408	typeref:typename:T
t	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon0c24fa7f060a	typeref:typename:T
t	loadobjfile.cpp	/^	float s, t, p;$/;"	m	struct:TextureCoord	typeref:typename:float	file:
t	loadobjfile.cpp	/^	int v, n, t;$/;"	m	struct:face	typeref:typename:int	file:
tan	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> tan(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
tanh	glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> tanh(vecType<T, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T taylorInvSqrt(T const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> taylorInvSqrt(tvec2<T, P> const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec2<T,P>
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> taylorInvSqrt(tvec3<T, P> const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
taylorInvSqrt	glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> taylorInvSqrt(tvec4<T, P> const & r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER tvec4<T,P>
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	glm/detail/glm.cpp	/^template struct tdualquat<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	glm/gtx/dual_quaternion.hpp	/^	struct tdualquat$/;"	s	namespace:glm
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat()$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(ctor)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tdualquat<T, P> const & d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tdualquat<T, Q> const & d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tdualquat<U, Q> const & q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tmat2x4<T, P> const & m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tmat3x4<T, P> const & m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tquat<T, P> const & q, tvec3<T, P> const& p)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tquat<T, P> const & r)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
tdualquat	glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, P>::tdualquat(tquat<T, P> const & r, tquat<T, P> const & d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER
third	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType third()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
three	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED three = _mm_set_ps1(3.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
three_over_two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType three_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
time	keytime.h	/^	float time;$/;"	m	struct:TimeValue	typeref:typename:float
tmat2x2	glm/detail/glm.cpp	/^template struct tmat2x2<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x2	glm/detail/glm.cpp	/^template struct tmat2x2<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x2	glm/detail/glm.cpp	/^template struct tmat2x2<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x2	glm/detail/glm.cpp	/^template struct tmat2x2<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x2	glm/detail/glm.cpp	/^template struct tmat2x2<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x2	glm/detail/glm.cpp	/^template struct tmat2x2<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x2	glm/detail/type_mat2x2.hpp	/^	struct tmat2x2$/;"	s	namespace:glm
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2()$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(T const & s)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(col_type const & v0, col_type const & v1)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(ctor)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x2<T, Q> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x2<U, Q> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x2	glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER tmat2x2<T, P>::tmat2x2(tvec2<V1, P> const & v1, tvec2<V2, P> const & v2)$/;"	f	class:glm::tmat2x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/glm.cpp	/^template struct tmat2x3<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x3	glm/detail/glm.cpp	/^template struct tmat2x3<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x3	glm/detail/glm.cpp	/^template struct tmat2x3<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x3	glm/detail/glm.cpp	/^template struct tmat2x3<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x3	glm/detail/glm.cpp	/^template struct tmat2x3<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x3	glm/detail/glm.cpp	/^template struct tmat2x3<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x3	glm/detail/type_mat2x3.hpp	/^	struct tmat2x3$/;"	s	namespace:glm
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3()$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(T const & s)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(col_type const & v0, col_type const & v1)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(ctor)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x3<T, Q> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x3<U, Q> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x3	glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER tmat2x3<T, P>::tmat2x3(tvec3<V1, P> const & v1, tvec3<V2, P> const & v2)$/;"	f	class:glm::tmat2x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/glm.cpp	/^template struct tmat2x4<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x4	glm/detail/glm.cpp	/^template struct tmat2x4<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x4	glm/detail/glm.cpp	/^template struct tmat2x4<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x4	glm/detail/glm.cpp	/^template struct tmat2x4<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x4	glm/detail/glm.cpp	/^template struct tmat2x4<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x4	glm/detail/glm.cpp	/^template struct tmat2x4<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat2x4	glm/detail/type_mat2x4.hpp	/^	struct tmat2x4$/;"	s	namespace:glm
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4()$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(T const & s)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(col_type const & v0, col_type const & v1)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(ctor)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x4<T, Q> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat2x4<U, Q> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat2x4	glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER tmat2x4<T, P>::tmat2x4(tvec4<V1, P> const & v1, tvec4<V2, P> const & v2)$/;"	f	class:glm::tmat2x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/glm.cpp	/^template struct tmat3x2<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x2	glm/detail/glm.cpp	/^template struct tmat3x2<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x2	glm/detail/glm.cpp	/^template struct tmat3x2<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x2	glm/detail/glm.cpp	/^template struct tmat3x2<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x2	glm/detail/glm.cpp	/^template struct tmat3x2<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x2	glm/detail/glm.cpp	/^template struct tmat3x2<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x2	glm/detail/type_mat3x2.hpp	/^	struct tmat3x2$/;"	s	namespace:glm
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2()$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(T const & s)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(ctor)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x2<T, Q> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x2<U, Q> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x2	glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER tmat3x2<T, P>::tmat3x2(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat3x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/glm.cpp	/^template struct tmat3x3<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x3	glm/detail/glm.cpp	/^template struct tmat3x3<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x3	glm/detail/glm.cpp	/^template struct tmat3x3<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x3	glm/detail/glm.cpp	/^template struct tmat3x3<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x3	glm/detail/glm.cpp	/^template struct tmat3x3<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x3	glm/detail/glm.cpp	/^template struct tmat3x3<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x3	glm/detail/type_mat3x3.hpp	/^	struct tmat3x3$/;"	s	namespace:glm
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3()$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(T const & s)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(ctor)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x3<T, Q> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x3<U, Q> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x3	glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P>::tmat3x3(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat3x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/glm.cpp	/^template struct tmat3x4<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x4	glm/detail/glm.cpp	/^template struct tmat3x4<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x4	glm/detail/glm.cpp	/^template struct tmat3x4<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x4	glm/detail/glm.cpp	/^template struct tmat3x4<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x4	glm/detail/glm.cpp	/^template struct tmat3x4<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x4	glm/detail/glm.cpp	/^template struct tmat3x4<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat3x4	glm/detail/type_mat3x4.hpp	/^	struct tmat3x4$/;"	s	namespace:glm
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4()$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(T const & s)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(ctor)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x4<T, Q> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat3x4<U, Q> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat3x4	glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER tmat3x4<T, P>::tmat3x4(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat3x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/glm.cpp	/^template struct tmat4x2<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x2	glm/detail/glm.cpp	/^template struct tmat4x2<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x2	glm/detail/glm.cpp	/^template struct tmat4x2<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x2	glm/detail/glm.cpp	/^template struct tmat4x2<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x2	glm/detail/glm.cpp	/^template struct tmat4x2<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x2	glm/detail/glm.cpp	/^template struct tmat4x2<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x2	glm/detail/type_mat4x2.hpp	/^	struct tmat4x2$/;"	s	namespace:glm
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2()$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(T const & s)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(ctor)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x2<T, Q> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x2<U, Q> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x2	glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER tmat4x2<T, P>::tmat4x2(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x2	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/glm.cpp	/^template struct tmat4x3<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x3	glm/detail/glm.cpp	/^template struct tmat4x3<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x3	glm/detail/glm.cpp	/^template struct tmat4x3<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x3	glm/detail/glm.cpp	/^template struct tmat4x3<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x3	glm/detail/glm.cpp	/^template struct tmat4x3<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x3	glm/detail/glm.cpp	/^template struct tmat4x3<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x3	glm/detail/type_mat4x3.hpp	/^	struct tmat4x3$/;"	s	namespace:glm
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3()$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(T const & s)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(ctor)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x3<T, Q> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x3<U, Q> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x3	glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER tmat4x3<T, P>::tmat4x3(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x3	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/glm.cpp	/^template struct tmat4x4<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x4	glm/detail/glm.cpp	/^template struct tmat4x4<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x4	glm/detail/glm.cpp	/^template struct tmat4x4<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x4	glm/detail/glm.cpp	/^template struct tmat4x4<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x4	glm/detail/glm.cpp	/^template struct tmat4x4<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x4	glm/detail/glm.cpp	/^template struct tmat4x4<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tmat4x4	glm/detail/type_mat4x4.hpp	/^	struct tmat4x4$/;"	s	namespace:glm
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4()$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(T const & s)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(ctor)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat2x2<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat2x3<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat2x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat3x2<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat3x3<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat3x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x2<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x3<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x4<T, P> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
tmat4x4	glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P>::tmat4x4(tmat4x4<T, Q> const & m)$/;"	f	class:glm::tmat4x4	typeref:typename:GLM_FUNC_QUALIFIER
toFloat16	glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER hdata toFloat16(float const & f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER hdata
toFloat32	glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float toFloat32(hdata value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
toMat3	glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tmat3x3<T, P> toMat3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL tmat3x3<T,P>
toMat4	glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tmat4x4<T, P> toMat4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL tmat4x4<T,P>
toQuat	glm/gtx/quaternion.hpp	/^	GLM_FUNC_DECL tquat<T, P> toQuat($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL tquat<T,P>
to_string	glm/gtx/string_cast.inl	/^GLM_FUNC_DECL std::string to_string(matType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL std::string
tquat	glm/detail/glm.cpp	/^template struct tquat<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tquat	glm/detail/glm.cpp	/^template struct tquat<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tquat	glm/detail/glm.cpp	/^template struct tquat<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tquat	glm/detail/glm.cpp	/^template struct tquat<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tquat	glm/detail/glm.cpp	/^template struct tquat<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tquat	glm/detail/glm.cpp	/^template struct tquat<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tquat	glm/gtc/quaternion.hpp	/^	struct tquat$/;"	s	namespace:glm
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat()$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(T const & s, tvec3<T, P> const & v)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(T const & w, T const & x, T const & y, T const & z)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(ctor)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tmat3x3<T, P> const & m)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tmat4x4<T, P> const & m)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tquat<T, P> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tquat<T, Q> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tquat<U, Q> const & q)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tvec3<T, P> const & eulerAngle)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
tquat	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER tquat<T, P>::tquat(tvec3<T, P> const & u, tvec3<T, P> const & v)$/;"	f	class:glm::tquat	typeref:typename:GLM_FUNC_QUALIFIER
translate	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> translate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
translate	glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER tmat3x3<T, P> translate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat3x3<T,P>
translate	glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, P> translate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,P>
transpose	glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename matType<T, P>::transpose_type transpose(matType<T, P> const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename matType<T,P>::transpose_type
transpose	glm/gtx/simd_mat4.inl	/^GLM_FUNC_QUALIFIER detail::fmat4x4SIMD transpose(detail::fmat4x4SIMD const & m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fmat4x4SIMD
transpose_type	glm/detail/type_mat2x2.hpp	/^		typedef tmat2x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tmat2x2<T,P>
transpose_type	glm/detail/type_mat2x3.hpp	/^		typedef tmat3x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tmat3x2<T,P>
transpose_type	glm/detail/type_mat2x4.hpp	/^		typedef tmat4x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tmat4x2<T,P>
transpose_type	glm/detail/type_mat3x2.hpp	/^		typedef tmat2x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tmat2x3<T,P>
transpose_type	glm/detail/type_mat3x3.hpp	/^		typedef tmat3x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tmat3x3<T,P>
transpose_type	glm/detail/type_mat3x4.hpp	/^		typedef tmat4x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tmat4x3<T,P>
transpose_type	glm/detail/type_mat4x2.hpp	/^		typedef tmat2x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tmat2x4<T,P>
transpose_type	glm/detail/type_mat4x3.hpp	/^		typedef tmat3x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tmat3x4<T,P>
transpose_type	glm/detail/type_mat4x4.hpp	/^		typedef tmat4x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tmat4x4<T,P>
transpose_type	glm/gtx/simd_mat4.hpp	/^		typedef fmat4x4SIMD transpose_type;$/;"	t	namespace:glm::detail	typeref:typename:fmat4x4SIMD
triangleNormal	glm/gtx/normal.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> triangleNormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
trunc	glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType trunc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
trunc	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> trunc(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
trunc	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER detail::fvec4SIMD trunc$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER detail::fvec4SIMD
tvec1	glm/detail/glm.cpp	/^template struct tvec1<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/glm.cpp	/^template struct tvec1<uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec1	glm/detail/type_vec1.hpp	/^			GLM_FUNC_DECL tvec1(detail::_swizzle<1, T, P, tvec1<T, P>, E0, -1,-2,-3> const & that)$/;"	f	struct:glm::tvec1	typeref:typename:GLM_FUNC_DECL
tvec1	glm/detail/type_vec1.hpp	/^	struct tvec1$/;"	s	namespace:glm
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER  tvec1<T, P>::tvec1(T const & s)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1()$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(ctor)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec1<T, P> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec1<T, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec1<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec2<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec3<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec1	glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER tvec1<T, P>::tvec1(tvec4<U, Q> const & v)$/;"	f	class:glm::tvec1	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/glm.cpp	/^template struct tvec2<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/glm.cpp	/^template struct tvec2<uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec2	glm/detail/type_vec2.hpp	/^			GLM_FUNC_DECL tvec2(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1,-1,-2> const & that)$/;"	f	struct:glm::tvec2	typeref:typename:GLM_FUNC_DECL
tvec2	glm/detail/type_vec2.hpp	/^	struct tvec2$/;"	s	namespace:glm
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2()$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(A const & a, B const & b)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(T const & s)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(T const & s1, T const & s2)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(ctor)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec1<A, P> const & a, tvec1<B, P> const & b)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec2<T, P> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec2<T, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec2<U, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec3<U, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec2	glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER tvec2<T, P>::tvec2(tvec4<U, Q> const & v)$/;"	f	class:glm::tvec2	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/glm.cpp	/^template struct tvec3<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/glm.cpp	/^template struct tvec3<uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec3	glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(T const & s, detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const/;"	f	struct:glm::tvec3	typeref:typename:GLM_FUNC_DECL
tvec3	glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const & v, T const/;"	f	struct:glm::tvec3	typeref:typename:GLM_FUNC_DECL
tvec3	glm/detail/type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<3, T, P, tvec3<T, P>, E0, E1, E2, -1> const & that)$/;"	f	struct:glm::tvec3	typeref:typename:GLM_FUNC_DECL
tvec3	glm/detail/type_vec3.hpp	/^	struct tvec3$/;"	s	namespace:glm
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3()$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(A const & a, B const & b, C const & c) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(A const & a, tvec2<B, Q> const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(T const & a, T const & b, T const & c)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(T const & s)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(ctor)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec1<A, P> const & a, tvec1<B, P> const & b, tvec1<C, P>/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec1<A, Q> const & a, tvec2<B, Q> const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec2<A, Q> const & a, B const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec2<A, Q> const & a, tvec1<B, Q> const & b) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec3<T, P> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec3<T, Q> const & v)$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec3<U, Q> const & v) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec3	glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P>::tvec3(tvec4<U, Q> const & v) :$/;"	f	class:glm::tvec3	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/glm.cpp	/^template struct tvec4<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/glm.cpp	/^template struct tvec4<uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tvec4	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, T const & y, detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, /;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<3, T, P, tvec3<T, P>, E0, E1, E2, -1> const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const & v, T const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, tvec2<T, P>, E0, E1, -1, -2> const & v, detail:/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<3, T, P, tvec3<T, P>, E0, E1, E2, -1> const & v, T const/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	glm/detail/type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<4, T, P, tvec4<T, P>, E0, E1, E2, E3> const & that)$/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
tvec4	glm/detail/type_vec4.hpp	/^	struct tvec4$/;"	s	namespace:glm
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A a, B b, C c, D d) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A a, tvec3<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A s1, B s2, tvec2<C, Q> const & v) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(A s1, tvec2<B, Q> const & v, C s2) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(T a, T b, T c, T d)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(T s)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(ctor)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, P> const & a, tvec1<B, P> const & b, tvec1<C, P>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, Q> const & a, tvec1<B, Q> const & b, tvec2<C, Q>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, Q> const & a, tvec2<B, Q> const & b, tvec1<C, Q>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec1<A, Q> const & a, tvec3<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec2<A, Q> const & a, B b, C c) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec2<A, Q> const & a, tvec1<B, Q> const & b, tvec1<C, Q>/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec2<A, Q> const & a, tvec2<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec3<A, Q> const & a, B b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec3<A, Q> const & a, tvec1<B, Q> const & b) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec4<T, P> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec4<T, Q> const & v)$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER tvec4<T, P>::tvec4(tvec4<U, Q> const & v) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp>::tvec4()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp>::tvec4(float a, float b, float c, float d) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, lowp>::tvec4(float s) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump>::tvec4()$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump>::tvec4(float a, float b, float c, float d) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvec4	glm/detail/type_vec4_sse2.inl	/^	GLM_FUNC_QUALIFIER tvec4<float, mediump>::tvec4(float s) :$/;"	f	class:glm::tvec4	typeref:typename:GLM_FUNC_QUALIFIER
tvs	keytime.h	/^	std::vector<struct TimeValue *> tvs;$/;"	m	class:Keytimes	typeref:typename:std::vector<struct TimeValue * >
tweakedInfinitePerspective	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> tweakedInfinitePerspective$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
two	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED two = _mm_set_ps1(2.0f);$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
two_over_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
two_over_root_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_over_root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
two_pi	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
two_thirds	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType two_thirds()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
type	glm/detail/func_matrix.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat2x2<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat2x3<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat2x4<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat3x2<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat3x3<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat3x4<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat4x2<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat4x3<T,P>
type	glm/detail/func_matrix.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:tmat4x4<T,P>
type	glm/detail/type_gentype.hpp	/^		typedef TYPE<VALTYPE> type;$/;"	t	struct:glm::detail::genType	typeref:typename:TYPE<VALTYPE>
type	glm/detail/type_int.hpp	/^			typedef char type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:char
type	glm/detail/type_int.hpp	/^			typedef int type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:int
type	glm/detail/type_int.hpp	/^			typedef long long type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:long long
type	glm/detail/type_int.hpp	/^			typedef long type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:long
type	glm/detail/type_int.hpp	/^			typedef short type;$/;"	t	struct:glm::detail::make_signed	typeref:typename:short
type	glm/detail/type_int.hpp	/^			typedef unsigned char type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned char
type	glm/detail/type_int.hpp	/^			typedef unsigned int type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned int
type	glm/detail/type_int.hpp	/^			typedef unsigned long long type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned long long
type	glm/detail/type_int.hpp	/^			typedef unsigned long type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned long
type	glm/detail/type_int.hpp	/^			typedef unsigned short type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned short
type	glm/detail/type_mat2x2.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::tmat2x2	typeref:typename:tmat2x2<T,P>
type	glm/detail/type_mat2x3.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::tmat2x3	typeref:typename:tmat2x3<T,P>
type	glm/detail/type_mat2x4.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::tmat2x4	typeref:typename:tmat2x4<T,P>
type	glm/detail/type_mat3x2.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::tmat3x2	typeref:typename:tmat3x2<T,P>
type	glm/detail/type_mat3x3.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::tmat3x3	typeref:typename:tmat3x3<T,P>
type	glm/detail/type_mat3x4.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::tmat3x4	typeref:typename:tmat3x4<T,P>
type	glm/detail/type_mat4x2.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::tmat4x2	typeref:typename:tmat4x2<T,P>
type	glm/detail/type_mat4x3.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::tmat4x3	typeref:typename:tmat4x3<T,P>
type	glm/detail/type_mat4x4.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::tmat4x4	typeref:typename:tmat4x4<T,P>
type	glm/detail/type_vec1.hpp	/^		typedef tvec1<T, P> type;$/;"	t	struct:glm::tvec1	typeref:typename:tvec1<T,P>
type	glm/detail/type_vec2.hpp	/^		typedef tvec2<T, P> type;$/;"	t	struct:glm::tvec2	typeref:typename:tvec2<T,P>
type	glm/detail/type_vec3.hpp	/^		typedef tvec3<T, P> type;$/;"	t	struct:glm::tvec3	typeref:typename:tvec3<T,P>
type	glm/detail/type_vec4.hpp	/^			typedef __m128 type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m128
type	glm/detail/type_vec4.hpp	/^			typedef __m128i type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m128i
type	glm/detail/type_vec4.hpp	/^			typedef __m256d type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m256d
type	glm/detail/type_vec4.hpp	/^			typedef __m256i type;$/;"	t	struct:glm::detail::simd	typeref:typename:__m256i
type	glm/detail/type_vec4.hpp	/^		typedef T type[4];$/;"	t	struct:glm::detail::simd	typeref:typename:T[4]
type	glm/detail/type_vec4.hpp	/^		typedef tvec4<T, P> type;$/;"	t	struct:glm::tvec4	typeref:typename:tvec4<T,P>
type	glm/gtc/quaternion.hpp	/^		typedef tquat<T, P> type;$/;"	t	struct:glm::tquat	typeref:typename:tquat<T,P>
type	glm/gtx/simd_mat4.hpp	/^		typedef fmat4x4SIMD type;$/;"	t	namespace:glm::detail	typeref:typename:fmat4x4SIMD
type	glm/gtx/simd_quat.hpp	/^		typedef fquatSIMD type;$/;"	t	namespace:glm::detail	typeref:typename:fquatSIMD
type	glm/gtx/simd_vec4.hpp	/^		typedef fvec4SIMD type;$/;"	t	namespace:glm::detail	typeref:typename:fvec4SIMD
u	glm/gtc/bitfield.inl	/^			uint16 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint16	file:
u	glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint32	file:
u	glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:uint32	file:
u	glm/gtc/bitfield.inl	/^			uint64 u;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:uint64	file:
u	glm/gtc/bitfield.inl	/^			uint8 u;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:uint8	file:
u10u10u10u2	glm/gtc/packing.inl	/^	union u10u10u10u2$/;"	u	namespace:glm::detail	file:
u16	glm/fwd.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
u16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
u16vec1	glm/fwd.hpp	/^	typedef highp_u16vec1			u16vec1;$/;"	t	namespace:glm	typeref:typename:highp_u16vec1
u16vec1	glm/fwd.hpp	/^	typedef lowp_u16vec1			u16vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec1
u16vec1	glm/fwd.hpp	/^	typedef mediump_u16vec1			u16vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec1
u16vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<u16, defaultp> u16vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u16,defaultp>
u16vec1	glm/gtx/number_precision.hpp	/^	typedef u16			u16vec1;    \/\/!< \\brief 16bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u16
u16vec2	glm/fwd.hpp	/^	typedef highp_u16vec2			u16vec2;$/;"	t	namespace:glm	typeref:typename:highp_u16vec2
u16vec2	glm/fwd.hpp	/^	typedef lowp_u16vec2			u16vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec2
u16vec2	glm/fwd.hpp	/^	typedef mediump_u16vec2			u16vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec2
u16vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<u16, defaultp> u16vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u16,defaultp>
u16vec3	glm/fwd.hpp	/^	typedef highp_u16vec3			u16vec3;$/;"	t	namespace:glm	typeref:typename:highp_u16vec3
u16vec3	glm/fwd.hpp	/^	typedef lowp_u16vec3			u16vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec3
u16vec3	glm/fwd.hpp	/^	typedef mediump_u16vec3			u16vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec3
u16vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<u16, defaultp> u16vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u16,defaultp>
u16vec4	glm/fwd.hpp	/^	typedef highp_u16vec4			u16vec4;$/;"	t	namespace:glm	typeref:typename:highp_u16vec4
u16vec4	glm/fwd.hpp	/^	typedef lowp_u16vec4			u16vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u16vec4
u16vec4	glm/fwd.hpp	/^	typedef mediump_u16vec4			u16vec4;$/;"	t	namespace:glm	typeref:typename:mediump_u16vec4
u16vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<u16, defaultp> u16vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u16,defaultp>
u32	glm/fwd.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
u32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
u32vec1	glm/fwd.hpp	/^	typedef highp_u32vec1			u32vec1;$/;"	t	namespace:glm	typeref:typename:highp_u32vec1
u32vec1	glm/fwd.hpp	/^	typedef lowp_u32vec1			u32vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec1
u32vec1	glm/fwd.hpp	/^	typedef mediump_u32vec1			u32vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec1
u32vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<u32, defaultp> u32vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u32,defaultp>
u32vec1	glm/gtx/number_precision.hpp	/^	typedef u32			u32vec1;    \/\/!< \\brief 32bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u32
u32vec2	glm/fwd.hpp	/^	typedef highp_u32vec2			u32vec2;$/;"	t	namespace:glm	typeref:typename:highp_u32vec2
u32vec2	glm/fwd.hpp	/^	typedef lowp_u32vec2			u32vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec2
u32vec2	glm/fwd.hpp	/^	typedef mediump_u32vec2			u32vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec2
u32vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<u32, defaultp> u32vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u32,defaultp>
u32vec3	glm/fwd.hpp	/^	typedef highp_u32vec3			u32vec3;$/;"	t	namespace:glm	typeref:typename:highp_u32vec3
u32vec3	glm/fwd.hpp	/^	typedef lowp_u32vec3			u32vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec3
u32vec3	glm/fwd.hpp	/^	typedef mediump_u32vec3			u32vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec3
u32vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<u32, defaultp> u32vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u32,defaultp>
u32vec4	glm/fwd.hpp	/^	typedef highp_u32vec4			u32vec4;$/;"	t	namespace:glm	typeref:typename:highp_u32vec4
u32vec4	glm/fwd.hpp	/^	typedef lowp_u32vec4			u32vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u32vec4
u32vec4	glm/fwd.hpp	/^	typedef mediump_u32vec4			u32vec4;$/;"	t	namespace:glm	typeref:typename:mediump_u32vec4
u32vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<u32, defaultp> u32vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u32,defaultp>
u64	glm/fwd.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
u64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
u64vec1	glm/fwd.hpp	/^	typedef highp_u64vec1			u64vec1;$/;"	t	namespace:glm	typeref:typename:highp_u64vec1
u64vec1	glm/fwd.hpp	/^	typedef lowp_u64vec1			u64vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec1
u64vec1	glm/fwd.hpp	/^	typedef mediump_u64vec1			u64vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec1
u64vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<u64, defaultp> u64vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u64,defaultp>
u64vec1	glm/gtx/number_precision.hpp	/^	typedef u64			u64vec1;    \/\/!< \\brief 64bit unsigned integer scalar. (from GLM_GTX_number_pr/;"	t	namespace:glm::gtx	typeref:typename:u64
u64vec2	glm/fwd.hpp	/^	typedef highp_u64vec2			u64vec2;$/;"	t	namespace:glm	typeref:typename:highp_u64vec2
u64vec2	glm/fwd.hpp	/^	typedef lowp_u64vec2			u64vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec2
u64vec2	glm/fwd.hpp	/^	typedef mediump_u64vec2			u64vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec2
u64vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<u64, defaultp> u64vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u64,defaultp>
u64vec3	glm/fwd.hpp	/^	typedef highp_u64vec3			u64vec3;$/;"	t	namespace:glm	typeref:typename:highp_u64vec3
u64vec3	glm/fwd.hpp	/^	typedef lowp_u64vec3			u64vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec3
u64vec3	glm/fwd.hpp	/^	typedef mediump_u64vec3			u64vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec3
u64vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<u64, defaultp> u64vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u64,defaultp>
u64vec4	glm/fwd.hpp	/^	typedef highp_u64vec4			u64vec4;$/;"	t	namespace:glm	typeref:typename:highp_u64vec4
u64vec4	glm/fwd.hpp	/^	typedef lowp_u64vec4			u64vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u64vec4
u64vec4	glm/fwd.hpp	/^	typedef mediump_u64vec4			u64vec4;$/;"	t	namespace:glm	typeref:typename:mediump_u64vec4
u64vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<u64, defaultp> u64vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u64,defaultp>
u8	glm/fwd.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
u8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
u8vec1	glm/fwd.hpp	/^	typedef highp_u8vec1			u8vec1;$/;"	t	namespace:glm	typeref:typename:highp_u8vec1
u8vec1	glm/fwd.hpp	/^	typedef lowp_u8vec1				u8vec1;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec1
u8vec1	glm/fwd.hpp	/^	typedef mediump_u8vec1			u8vec1;$/;"	t	namespace:glm	typeref:typename:mediump_u8vec1
u8vec1	glm/gtc/type_precision.hpp	/^	typedef tvec1<u8, defaultp> u8vec1;$/;"	t	namespace:glm	typeref:typename:tvec1<u8,defaultp>
u8vec1	glm/gtx/number_precision.hpp	/^	typedef u8			u8vec1;		\/\/!< \\brief 8bit unsigned integer scalar. (from GLM_GTX_number_precisi/;"	t	namespace:glm::gtx	typeref:typename:u8
u8vec2	glm/fwd.hpp	/^	typedef highp_u8vec2			u8vec2;$/;"	t	namespace:glm	typeref:typename:highp_u8vec2
u8vec2	glm/fwd.hpp	/^	typedef lowp_u8vec2				u8vec2;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec2
u8vec2	glm/fwd.hpp	/^	typedef mediump_u8vec2			u8vec2;$/;"	t	namespace:glm	typeref:typename:mediump_u8vec2
u8vec2	glm/gtc/type_precision.hpp	/^	typedef tvec2<u8, defaultp> u8vec2;$/;"	t	namespace:glm	typeref:typename:tvec2<u8,defaultp>
u8vec3	glm/fwd.hpp	/^	typedef highp_u8vec3			u8vec3;$/;"	t	namespace:glm	typeref:typename:highp_u8vec3
u8vec3	glm/fwd.hpp	/^	typedef lowp_u8vec3				u8vec3;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec3
u8vec3	glm/fwd.hpp	/^	typedef mediump_u8vec3			u8vec3;$/;"	t	namespace:glm	typeref:typename:mediump_u8vec3
u8vec3	glm/gtc/type_precision.hpp	/^	typedef tvec3<u8, defaultp> u8vec3;$/;"	t	namespace:glm	typeref:typename:tvec3<u8,defaultp>
u8vec4	glm/fwd.hpp	/^	typedef highp_u8vec4			u8vec4;$/;"	t	namespace:glm	typeref:typename:highp_u8vec4
u8vec4	glm/fwd.hpp	/^	typedef lowp_u8vec4				u8vec4;$/;"	t	namespace:glm	typeref:typename:lowp_u8vec4
u8vec4	glm/fwd.hpp	/^	typedef mediump_u8vec4			u8vec4;	$/;"	t	namespace:glm	typeref:typename:mediump_u8vec4
u8vec4	glm/gtc/type_precision.hpp	/^	typedef tvec4<u8, defaultp> u8vec4;$/;"	t	namespace:glm	typeref:typename:tvec4<u8,defaultp>
uaddCarry	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint uaddCarry(uint const & x, uint const & y, uint & Carry)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
uaddCarry	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> uaddCarry(vecType<uint, P> const & x, vecType<uint, P> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
uif32	glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32() :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(float f) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(uint32 i) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	glm/detail/type_half.inl	/^	union uif32$/;"	u	namespace:glm::detail	file:
uint	glm/detail/type_int.hpp	/^	typedef unsigned int				uint;$/;"	t	namespace:glm	typeref:typename:unsigned int
uint16	glm/detail/type_int.hpp	/^		typedef std::uint16_t				uint16;$/;"	t	namespace:glm::detail	typeref:typename:std::uint16_t
uint16	glm/detail/type_int.hpp	/^	typedef detail::uint16					uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16	glm/fwd.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16_t	glm/fwd.hpp	/^	typedef detail::uint16 uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint16 uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint32	glm/detail/type_int.hpp	/^		typedef std::uint32_t				uint32;$/;"	t	namespace:glm::detail	typeref:typename:std::uint32_t
uint32	glm/detail/type_int.hpp	/^	typedef detail::uint32					uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32	glm/fwd.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32_t	glm/fwd.hpp	/^	typedef detail::uint32 uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint32 uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint64	glm/detail/type_int.hpp	/^		typedef std::uint64_t				uint64;$/;"	t	namespace:glm::detail	typeref:typename:std::uint64_t
uint64	glm/detail/type_int.hpp	/^	typedef detail::uint64					uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64	glm/fwd.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64_t	glm/fwd.hpp	/^	typedef detail::uint64 uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint64 uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint8	glm/detail/type_int.hpp	/^		typedef std::uint8_t				uint8;$/;"	t	namespace:glm::detail	typeref:typename:std::uint8_t
uint8	glm/detail/type_int.hpp	/^	typedef detail::uint8					uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8	glm/fwd.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8_t	glm/fwd.hpp	/^	typedef detail::uint8 uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8_t	glm/gtc/type_precision.hpp	/^	typedef detail::uint8 uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uintBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float uintBitsToFloat(uint const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
uintBitsToFloat	glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vecType<float, P> uintBitsToFloat(vecType<uint, P> const & v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<float,P>
uint_t	glm/detail/type_int.hpp	/^	typedef highp_uint					uint_t;$/;"	t	namespace:glm	typeref:typename:highp_uint
uint_t	glm/detail/type_int.hpp	/^	typedef lowp_uint					uint_t;$/;"	t	namespace:glm	typeref:typename:lowp_uint
uint_t	glm/detail/type_int.hpp	/^	typedef mediump_uint				uint_t;$/;"	t	namespace:glm	typeref:typename:mediump_uint
umat2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2								umat2;$/;"	t	namespace:glm	typeref:typename:highp_umat2
umat2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2								umat2;$/;"	t	namespace:glm	typeref:typename:lowp_umat2
umat2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2							umat2;$/;"	t	namespace:glm	typeref:typename:mediump_umat2
umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:highp_umat2x2
umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x2
umat2x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x2							umat2x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x2
umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:highp_umat2x3
umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x3
umat2x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x3							umat2x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x3
umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:highp_umat2x4
umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat2x4
umat2x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat2x4							umat2x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat2x4
umat3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3								umat3;$/;"	t	namespace:glm	typeref:typename:highp_umat3
umat3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3								umat3;$/;"	t	namespace:glm	typeref:typename:lowp_umat3
umat3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3							umat3;$/;"	t	namespace:glm	typeref:typename:mediump_umat3
umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:highp_umat3x2
umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x2
umat3x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x2							umat3x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x2
umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:highp_umat3x3
umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x3
umat3x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x3							umat3x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x3
umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:highp_umat3x4
umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat3x4
umat3x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat3x4							umat3x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat3x4
umat4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4								umat4;$/;"	t	namespace:glm	typeref:typename:highp_umat4
umat4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4								umat4;$/;"	t	namespace:glm	typeref:typename:lowp_umat4
umat4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4							umat4;$/;"	t	namespace:glm	typeref:typename:mediump_umat4
umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:highp_umat4x2
umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x2
umat4x2	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x2							umat4x2;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x2
umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:highp_umat4x3
umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x3
umat4x3	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x3							umat4x3;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x3
umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef highp_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:highp_umat4x4
umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef lowp_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:lowp_umat4x4
umat4x4	glm/gtc/matrix_integer.hpp	/^	typedef mediump_umat4x4							umat4x4;$/;"	t	namespace:glm	typeref:typename:mediump_umat4x4
umulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(uint const & x, uint const & y, uint & msb, uint & lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
umulExtended	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(vecType<uint, P> const & x, vecType<uint, P> const & y, ve/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
unProject	glm/gtc/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER tvec3<T, P> unProject$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tvec3<T,P>
unformatted	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr>& unformatted(std::basic_ios<CTy,CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
uninitialize	glm/detail/setup.hpp	/^	enum ctor{uninitialize};$/;"	e	enum:glm::ctor
unpackDouble2x32	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uvec2 unpackDouble2x32(double v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec2
unpackF2x11_1x10	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackF2x11_1x10(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackHalf1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackHalf1x16(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackHalf2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackHalf2x16(uint v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackHalf4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackHalf4x16(uint64 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackI3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER ivec4 unpackI3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER ivec4
unpackSnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackSnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackU3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uvec4 unpackU3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec4
unpackUnorm1x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm1x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm2x16	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm2x8	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm3x10_1x2	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x16	glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x8	glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
usubBorrow	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint usubBorrow(uint const & x, uint const & y, uint & Borrow)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
usubBorrow	glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vecType<uint, P> usubBorrow(vecType<uint, P> const & x, vecType<uint, P> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<uint,P>
uvec1	glm/gtc/vec1.hpp	/^	typedef highp_uvec1			uvec1;$/;"	t	namespace:glm	typeref:typename:highp_uvec1
uvec1	glm/gtc/vec1.hpp	/^	typedef lowp_uvec1			uvec1;$/;"	t	namespace:glm	typeref:typename:lowp_uvec1
uvec1	glm/gtc/vec1.hpp	/^	typedef mediump_uvec1		uvec1;$/;"	t	namespace:glm	typeref:typename:mediump_uvec1
uvec2	glm/detail/type_vec.hpp	/^	typedef highp_uvec2			uvec2;$/;"	t	namespace:glm	typeref:typename:highp_uvec2
uvec2	glm/detail/type_vec.hpp	/^	typedef lowp_uvec2			uvec2;$/;"	t	namespace:glm	typeref:typename:lowp_uvec2
uvec2	glm/detail/type_vec.hpp	/^	typedef mediump_uvec2		uvec2;$/;"	t	namespace:glm	typeref:typename:mediump_uvec2
uvec3	glm/detail/type_vec.hpp	/^	typedef highp_uvec3			uvec3;$/;"	t	namespace:glm	typeref:typename:highp_uvec3
uvec3	glm/detail/type_vec.hpp	/^	typedef lowp_uvec3			uvec3;$/;"	t	namespace:glm	typeref:typename:lowp_uvec3
uvec3	glm/detail/type_vec.hpp	/^	typedef mediump_uvec3		uvec3;$/;"	t	namespace:glm	typeref:typename:mediump_uvec3
uvec4	glm/detail/type_vec.hpp	/^	typedef highp_uvec4			uvec4;$/;"	t	namespace:glm	typeref:typename:highp_uvec4
uvec4	glm/detail/type_vec.hpp	/^	typedef lowp_uvec4			uvec4;$/;"	t	namespace:glm	typeref:typename:lowp_uvec4
uvec4	glm/detail/type_vec.hpp	/^	typedef mediump_uvec4		uvec4;$/;"	t	namespace:glm	typeref:typename:mediump_uvec4
v	loadobjfile.cpp	/^	int v, n, t;$/;"	m	struct:face	typeref:typename:int	file:
v3Scale	glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER void v3Scale(tvec3<T, P> & v, T desiredLength)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
value	glm/detail/type_mat2x2.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x2	typeref:typename:col_type[2]
value	glm/detail/type_mat2x3.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x3	typeref:typename:col_type[2]
value	glm/detail/type_mat2x4.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x4	typeref:typename:col_type[2]
value	glm/detail/type_mat3x2.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x2	typeref:typename:col_type[3]
value	glm/detail/type_mat3x3.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x3	typeref:typename:col_type[3]
value	glm/detail/type_mat3x4.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x4	typeref:typename:col_type[3]
value	glm/detail/type_mat4x2.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x2	typeref:typename:col_type[4]
value	glm/detail/type_mat4x3.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x3	typeref:typename:col_type[4]
value	glm/detail/type_mat4x4.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x4	typeref:typename:col_type[4]
value	glm/gtc/ulp.inl	/^	double value;$/;"	m	union:__anon2dbcfbc3020a	typeref:typename:double	file:
value	glm/gtc/ulp.inl	/^	float value;$/;"	m	union:__anon2dbcfbc3010a	typeref:typename:float	file:
value	glm/gtx/io.hpp	/^			CTy value[3];$/;"	m	struct:glm::io::delimeter	typeref:typename:CTy[3]
value	glm/gtx/io.hpp	/^			order_type value;$/;"	m	struct:glm::io::order	typeref:typename:order_type
value	glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::precision	typeref:typename:unsigned
value	glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::width	typeref:typename:unsigned
value	glm/gtx/simd_vec4.inl	/^	enum{value = Value};$/;"	e	enum:glm::detail::shuffle_mask::__anona9631fc50103	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%d";};$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%f";};$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%lld";};$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "b";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "d";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i16";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i64";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i8";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u16";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u64";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u8";};$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	keytime.h	/^	float value;$/;"	m	struct:TimeValue	typeref:typename:float
value_address	glm/detail/type_gentype.hpp	/^		value_const_pointer value_address() const{return value_pointer(this);}$/;"	f	struct:glm::detail::genType	typeref:typename:value_const_pointer
value_address	glm/detail/type_gentype.hpp	/^		value_pointer value_address(){return value_pointer(this);}$/;"	f	struct:glm::detail::genType	typeref:typename:value_pointer
value_const_pointer	glm/detail/type_gentype.hpp	/^		typedef VALTYPE const * value_const_pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE const *
value_pointer	glm/detail/type_gentype.hpp	/^		typedef VALTYPE * value_pointer;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T * value_ptr$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T * value_ptr(tmat4x3<T, P> & mat)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const * value_ptr$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_reference	glm/detail/type_gentype.hpp	/^		typedef VALTYPE & value_reference;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE &
value_size	glm/detail/type_gentype.inl	/^typename base<vT, cT, rT, pT>::size_type base<vT, cT, rT, pT>::value_size()$/;"	f	class:glm::detail::base	typeref:typename:base<vT,cT,rT,pT>::size_type
value_type	glm/detail/_swizzle.hpp	/^		typedef T       value_type;$/;"	t	struct:glm::detail::_swizzle_base0	typeref:typename:T
value_type	glm/detail/_swizzle.hpp	/^		typedef ValueType       value_type;$/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:ValueType
value_type	glm/detail/_swizzle.hpp	/^		typedef ValueType value_type;$/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:ValueType
value_type	glm/detail/type_gentype.hpp	/^		typedef VALTYPE value_type;$/;"	t	struct:glm::detail::genType	typeref:typename:VALTYPE
value_type	glm/detail/type_mat2x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x2	typeref:typename:T
value_type	glm/detail/type_mat2x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x3	typeref:typename:T
value_type	glm/detail/type_mat2x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x4	typeref:typename:T
value_type	glm/detail/type_mat3x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x2	typeref:typename:T
value_type	glm/detail/type_mat3x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x3	typeref:typename:T
value_type	glm/detail/type_mat3x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x4	typeref:typename:T
value_type	glm/detail/type_mat4x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x2	typeref:typename:T
value_type	glm/detail/type_mat4x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x3	typeref:typename:T
value_type	glm/detail/type_mat4x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x4	typeref:typename:T
value_type	glm/detail/type_vec1.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec1	typeref:typename:T
value_type	glm/detail/type_vec2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec2	typeref:typename:T
value_type	glm/detail/type_vec3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec3	typeref:typename:T
value_type	glm/detail/type_vec4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec4	typeref:typename:T
value_type	glm/gtc/quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tquat	typeref:typename:T
value_type	glm/gtx/dual_quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tdualquat	typeref:typename:T
value_type	glm/gtx/simd_mat4.hpp	/^		typedef float value_type;$/;"	t	namespace:glm::detail	typeref:typename:float
value_type	glm/gtx/simd_quat.hpp	/^		typedef __m128 value_type;$/;"	t	namespace:glm::detail	typeref:typename:__m128
value_type	glm/gtx/simd_vec4.hpp	/^		typedef __m128 value_type;$/;"	t	namespace:glm::detail	typeref:typename:__m128
vec1	glm/gtc/vec1.hpp	/^	typedef highp_vec1				vec1;$/;"	t	namespace:glm	typeref:typename:highp_vec1
vec1	glm/gtc/vec1.hpp	/^	typedef lowp_vec1				vec1;$/;"	t	namespace:glm	typeref:typename:lowp_vec1
vec1	glm/gtc/vec1.hpp	/^	typedef mediump_vec1			vec1;$/;"	t	namespace:glm	typeref:typename:mediump_vec1
vec2	glm/detail/type_vec.hpp	/^	typedef highp_vec2			vec2;$/;"	t	namespace:glm	typeref:typename:highp_vec2
vec2	glm/detail/type_vec.hpp	/^	typedef lowp_vec2			vec2;$/;"	t	namespace:glm	typeref:typename:lowp_vec2
vec2	glm/detail/type_vec.hpp	/^	typedef mediump_vec2		vec2;$/;"	t	namespace:glm	typeref:typename:mediump_vec2
vec3	glm/detail/type_vec.hpp	/^	typedef highp_vec3			vec3;$/;"	t	namespace:glm	typeref:typename:highp_vec3
vec3	glm/detail/type_vec.hpp	/^	typedef lowp_vec3			vec3;$/;"	t	namespace:glm	typeref:typename:lowp_vec3
vec3	glm/detail/type_vec.hpp	/^	typedef mediump_vec3		vec3;$/;"	t	namespace:glm	typeref:typename:mediump_vec3
vec4	glm/detail/type_vec.hpp	/^	typedef highp_vec4			vec4;$/;"	t	namespace:glm	typeref:typename:highp_vec4
vec4	glm/detail/type_vec.hpp	/^	typedef lowp_vec4			vec4;$/;"	t	namespace:glm	typeref:typename:lowp_vec4
vec4	glm/detail/type_vec.hpp	/^	typedef mediump_vec4		vec4;$/;"	t	namespace:glm	typeref:typename:mediump_vec4
vec4_cast	glm/gtx/simd_vec4.inl	/^GLM_FUNC_QUALIFIER vec4 vec4_cast$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
vec_type	glm/detail/_swizzle.hpp	/^		typedef VecType         vec_type;        $/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:VecType
vec_type	glm/detail/_swizzle.hpp	/^		typedef VecType vec_type;$/;"	t	struct:glm::detail::_swizzle_base2	typeref:typename:VecType
w	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
w	glm/detail/type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon0c24fa7f080a	typeref:typename:T
w	glm/gtc/packing.inl	/^			int w : 2;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0208	typeref:typename:int:2	file:
w	glm/gtc/packing.inl	/^			uint w : 2;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0108	typeref:typename:uint:2	file:
w	glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
w	glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anondb998e73010a::__anondb998e730208	typeref:typename:float
w	glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anona9631bca010a::__anona9631bca0208	typeref:typename:float
wchar_t	glew.h	/^typedef unsigned short wchar_t;$/;"	t	typeref:typename:unsigned short
wformat_saver	glm/gtx/io.hpp	/^		typedef basic_format_saver<wchar_t> wformat_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<wchar_t>
width	glm/gtx/io.hpp	/^			unsigned   width;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
width	glm/gtx/io.hpp	/^		struct width$/;"	s	namespace:glm::io
width	glm/gtx/io.inl	/^	\/* explicit *\/ GLM_FUNC_QUALIFIER width::width(unsigned a)$/;"	f	class:glm::io::width	typeref:typename:GLM_FUNC_QUALIFIER
width_	glm/gtx/io.hpp	/^			streamsize_type width_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
word	glm/gtc/ulp.inl	/^	unsigned int word;$/;"	m	union:__anon2dbcfbc3010a	typeref:typename:unsigned int	file:
word	glm/gtx/raw_data.hpp	/^	typedef detail::uint16		word;$/;"	t	namespace:glm	typeref:typename:detail::uint16
wrapAngle	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T wrapAngle(T angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
wrapAngle	glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vecType<T, P> wrapAngle(vecType<T, P> const & x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vecType<T,P>
wstate_saver	glm/gtx/io.hpp	/^		typedef basic_state_saver<wchar_t> wstate_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<wchar_t>
x	glm/detail/type_vec1.hpp	/^				T x;$/;"	m	union:glm::tvec1::__anon0beeb0fc010a	typeref:typename:T
x	glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon0beeb0fc020a	typeref:typename:T
x	glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon0c00c97d010a::__anon0c00c97d0208	typeref:typename:T
x	glm/detail/type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon0c00c97d050a	typeref:typename:T
x	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0208	typeref:typename:T
x	glm/detail/type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon0c12e1fe050a	typeref:typename:T
x	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
x	glm/detail/type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon0c24fa7f050a	typeref:typename:T
x	glm/gtc/packing.inl	/^			int x : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0208	typeref:typename:int:10	file:
x	glm/gtc/packing.inl	/^			uint x : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0108	typeref:typename:uint:10	file:
x	glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
x	glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anondb998e73010a::__anondb998e730208	typeref:typename:float
x	glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anona9631bca010a::__anona9631bca0208	typeref:typename:float
x	loadobjfile.cpp	/^	float x, y, z;$/;"	m	struct:Vertex	typeref:typename:float	file:
xorder	main.cpp	/^static int xorder[ ] = { 1, 2, -3, 4 };$/;"	v	typeref:typename:int[]	file:
xpos	keytime.cpp	/^	Keytimes xpos;$/;"	v	typeref:typename:Keytimes
xx	main.cpp	/^static float xx[ ] = { 0.f, 1.f, 0.f, 1.f };$/;"	v	typeref:typename:float[]	file:
xy	main.cpp	/^static float xy[ ] = { -.5f, .5f, .5f, -.5f };$/;"	v	typeref:typename:float[]	file:
y	glm/detail/type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon0c00c97d010a::__anon0c00c97d0208	typeref:typename:T
y	glm/detail/type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon0c00c97d060a	typeref:typename:T
y	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0208	typeref:typename:T
y	glm/detail/type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon0c12e1fe060a	typeref:typename:T
y	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
y	glm/detail/type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon0c24fa7f060a	typeref:typename:T
y	glm/gtc/packing.inl	/^			int y : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0208	typeref:typename:int:10	file:
y	glm/gtc/packing.inl	/^			uint y : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0108	typeref:typename:uint:10	file:
y	glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
y	glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anondb998e73010a::__anondb998e730208	typeref:typename:float
y	glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anona9631bca010a::__anona9631bca0208	typeref:typename:float
y	loadobjfile.cpp	/^	float x, y, z;$/;"	m	struct:Vertex	typeref:typename:float	file:
yaw	glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T yaw(tquat<T, P> const & q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
yawPitchRoll	glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER tmat4x4<T, defaultp> yawPitchRoll$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tmat4x4<T,defaultp>
yorder	main.cpp	/^static int yorder[ ] = { 1, 2, 3, -2, 4 };$/;"	v	typeref:typename:int[]	file:
yx	main.cpp	/^static float yx[ ] = { 0.f, 0.f, -.5f, .5f };$/;"	v	typeref:typename:float[]	file:
yy	main.cpp	/^static float yy[ ] = { 0.f, .6f, 1.f, 1.f };$/;"	v	typeref:typename:float[]	file:
z	glm/detail/type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon0c12e1fe010a::__anon0c12e1fe0208	typeref:typename:T
z	glm/detail/type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon0c12e1fe070a	typeref:typename:T
z	glm/detail/type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon0c24fa7f010a::__anon0c24fa7f0208	typeref:typename:T
z	glm/detail/type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon0c24fa7f070a	typeref:typename:T
z	glm/gtc/packing.inl	/^			int z : 10;$/;"	m	struct:glm::detail::i10i10i10i2::__anon1165e74f0208	typeref:typename:int:10	file:
z	glm/gtc/packing.inl	/^			uint z : 10;$/;"	m	struct:glm::detail::u10u10u10u2::__anon1165e74f0108	typeref:typename:uint:10	file:
z	glm/gtc/quaternion.hpp	/^		T x, y, z, w;$/;"	m	struct:glm::tquat	typeref:typename:T
z	glm/gtx/simd_quat.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anondb998e73010a::__anondb998e730208	typeref:typename:float
z	glm/gtx/simd_vec4.hpp	/^			struct {float x, y, z, w;};$/;"	m	struct:glm::detail::__anona9631bca010a::__anona9631bca0208	typeref:typename:float
z	loadobjfile.cpp	/^	float x, y, z;$/;"	m	struct:Vertex	typeref:typename:float	file:
zero	glm/detail/intrinsic_common.inl	/^	static const __m128 GLM_VAR_USED zero = _mm_setzero_ps();$/;"	v	namespace:glm::detail	typeref:typename:const __m128 GLM_VAR_USED	file:
zero	glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER genType zero()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
zorder	main.cpp	/^static int zorder[ ] = { 1, 2, 3, 4, -5, 6 };$/;"	v	typeref:typename:int[]	file:
zx	main.cpp	/^static float zx[ ] = { 1.f, 0.f, 1.f, 0.f, .25f, .75f };$/;"	v	typeref:typename:float[]	file:
zy	main.cpp	/^static float zy[ ] = { .5f, .5f, -.5f, -.5f, 0.f, 0.f };$/;"	v	typeref:typename:float[]	file:
~Keytimes	keytime.cpp	/^Keytimes::~Keytimes( )$/;"	f	class:Keytimes
~basic_format_saver	glm/gtx/io.inl	/^	basic_format_saver<CTy,CTr>::~basic_format_saver()$/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
~basic_state_saver	glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_state_saver<CTy,CTr>::~basic_state_saver()$/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
~tvec4	glm/detail/type_vec4.hpp	/^		GLM_FUNC_DECL ~tvec4(){}$/;"	f	struct:glm::tvec4	typeref:typename:GLM_FUNC_DECL
